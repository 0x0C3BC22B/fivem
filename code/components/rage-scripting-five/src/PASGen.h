void PointerArgumentSafety_Impl()
{
	// PLAYER/0x0032A6DBA562C518
	static auto nh_0x0032A6DBA562C518 = rage::scrEngine::GetNativeHandler(0x0032A6DBA562C518);
	rage::scrEngine::RegisterNativeHandler(0x0032A6DBA562C518, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0032A6DBA562C518(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x006E4B040ED37EC3
	static auto nh_0x006E4B040ED37EC3 = rage::scrEngine::GetNativeHandler(0x006E4B040ED37EC3);
	rage::scrEngine::RegisterNativeHandler(0x006E4B040ED37EC3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x006E4B040ED37EC3(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x0077F15613D36993
	static auto nh_0x0077F15613D36993 = rage::scrEngine::GetNativeHandler(0x0077F15613D36993);
	rage::scrEngine::RegisterNativeHandler(0x0077F15613D36993, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0077F15613D36993(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x011883F41211432A
	static auto nh_0x011883F41211432A = rage::scrEngine::GetNativeHandler(0x011883F41211432A);
	rage::scrEngine::RegisterNativeHandler(0x011883F41211432A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x011883F41211432A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x0150B6FF25A9E2E5
	static auto nh_0x0150B6FF25A9E2E5 = rage::scrEngine::GetNativeHandler(0x0150B6FF25A9E2E5);
	rage::scrEngine::RegisterNativeHandler(0x0150B6FF25A9E2E5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0150B6FF25A9E2E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x015B03EE1C43E6EC
	static auto nh_0x015B03EE1C43E6EC = rage::scrEngine::GetNativeHandler(0x015B03EE1C43E6EC);
	rage::scrEngine::RegisterNativeHandler(0x015B03EE1C43E6EC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x015B03EE1C43E6EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x0205F5365292D2EB
	static auto nh_0x0205F5365292D2EB = rage::scrEngine::GetNativeHandler(0x0205F5365292D2EB);
	rage::scrEngine::RegisterNativeHandler(0x0205F5365292D2EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0205F5365292D2EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x0218BA067D249DEA
	static auto nh_0x0218BA067D249DEA = rage::scrEngine::GetNativeHandler(0x0218BA067D249DEA);
	rage::scrEngine::RegisterNativeHandler(0x0218BA067D249DEA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0218BA067D249DEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x0225778816FDC28C
	static auto nh_0x0225778816FDC28C = rage::scrEngine::GetNativeHandler(0x0225778816FDC28C);
	rage::scrEngine::RegisterNativeHandler(0x0225778816FDC28C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0225778816FDC28C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x02369D5C8A51FDCF
	static auto nh_0x02369D5C8A51FDCF = rage::scrEngine::GetNativeHandler(0x02369D5C8A51FDCF);
	rage::scrEngine::RegisterNativeHandler(0x02369D5C8A51FDCF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02369D5C8A51FDCF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x023ACAB2DC9DC4A4 (result cleaner only)
	AddResultCleaner(0x023ACAB2DC9DC4A4, ResultCleaner<int>);

	// AUDIO/0x02E93C796ABD3A97
	static auto nh_0x02E93C796ABD3A97 = rage::scrEngine::GetNativeHandler(0x02E93C796ABD3A97);
	rage::scrEngine::RegisterNativeHandler(0x02E93C796ABD3A97, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02E93C796ABD3A97(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x03300B57FCAC6DDB
	static auto nh_0x03300B57FCAC6DDB = rage::scrEngine::GetNativeHandler(0x03300B57FCAC6DDB);
	rage::scrEngine::RegisterNativeHandler(0x03300B57FCAC6DDB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03300B57FCAC6DDB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x0395CB47B022E62C
	static auto nh_0x0395CB47B022E62C = rage::scrEngine::GetNativeHandler(0x0395CB47B022E62C);
	rage::scrEngine::RegisterNativeHandler(0x0395CB47B022E62C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0395CB47B022E62C(cxt);
	});
	        
	AddResultCleaner(0x0395CB47B022E62C, ResultCleaner<bool>);

	// STATS/0x03C2EEBB04B3FB72
	static auto nh_0x03C2EEBB04B3FB72 = rage::scrEngine::GetNativeHandler(0x03C2EEBB04B3FB72);
	rage::scrEngine::RegisterNativeHandler(0x03C2EEBB04B3FB72, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x03C2EEBB04B3FB72(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x03EA03AF85A85CB7
	static auto nh_0x03EA03AF85A85CB7 = rage::scrEngine::GetNativeHandler(0x03EA03AF85A85CB7);
	rage::scrEngine::RegisterNativeHandler(0x03EA03AF85A85CB7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x03EA03AF85A85CB7(cxt);
	});
	        
	AddResultCleaner(0x03EA03AF85A85CB7, ResultCleaner<bool>);

	// STREAMING/0x03F1A106BDA7DD3E
	static auto nh_0x03F1A106BDA7DD3E = rage::scrEngine::GetNativeHandler(0x03F1A106BDA7DD3E);
	rage::scrEngine::RegisterNativeHandler(0x03F1A106BDA7DD3E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03F1A106BDA7DD3E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x0419B167EE128F33
	static auto nh_0x0419B167EE128F33 = rage::scrEngine::GetNativeHandler(0x0419B167EE128F33);
	rage::scrEngine::RegisterNativeHandler(0x0419B167EE128F33, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0419B167EE128F33(cxt);
	});
	        
	AddResultCleaner(0x0419B167EE128F33, ResultCleaner<int>);

	// NETWORK/0x041C7F2A6C9894E6
	static auto nh_0x041C7F2A6C9894E6 = rage::scrEngine::GetNativeHandler(0x041C7F2A6C9894E6);
	rage::scrEngine::RegisterNativeHandler(0x041C7F2A6C9894E6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x041C7F2A6C9894E6(cxt);
	});
	        
	AddResultCleaner(0x041C7F2A6C9894E6, ResultCleaner<int>);

	// HUD/0x04655F9D075D0AE5
	static auto nh_0x04655F9D075D0AE5 = rage::scrEngine::GetNativeHandler(0x04655F9D075D0AE5);
	rage::scrEngine::RegisterNativeHandler(0x04655F9D075D0AE5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x04655F9D075D0AE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x04918A41BC9B8157
	static auto nh_0x04918A41BC9B8157 = rage::scrEngine::GetNativeHandler(0x04918A41BC9B8157);
	rage::scrEngine::RegisterNativeHandler(0x04918A41BC9B8157, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x04918A41BC9B8157(cxt);
	});
	        
	AddResultCleaner(0x04918A41BC9B8157, ResultCleaner<int>);

	// VEHICLE/0x0581730AB9380412
	static auto nh_0x0581730AB9380412 = rage::scrEngine::GetNativeHandler(0x0581730AB9380412);
	rage::scrEngine::RegisterNativeHandler(0x0581730AB9380412, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x0581730AB9380412(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x0596843B34B95CE5
	static auto nh_0x0596843B34B95CE5 = rage::scrEngine::GetNativeHandler(0x0596843B34B95CE5);
	rage::scrEngine::RegisterNativeHandler(0x0596843B34B95CE5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0596843B34B95CE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x06087579E7AA85A9
	static auto nh_0x06087579E7AA85A9 = rage::scrEngine::GetNativeHandler(0x06087579E7AA85A9);
	rage::scrEngine::RegisterNativeHandler(0x06087579E7AA85A9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x06087579E7AA85A9(cxt);
	});
	        
	AddResultCleaner(0x06087579E7AA85A9, ResultCleaner<bool>);

	// PED/0x061CB768363D6424
	static auto nh_0x061CB768363D6424 = rage::scrEngine::GetNativeHandler(0x061CB768363D6424);
	rage::scrEngine::RegisterNativeHandler(0x061CB768363D6424, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x061CB768363D6424(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x063AE2B2CC273588
	static auto nh_0x063AE2B2CC273588 = rage::scrEngine::GetNativeHandler(0x063AE2B2CC273588);
	rage::scrEngine::RegisterNativeHandler(0x063AE2B2CC273588, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x063AE2B2CC273588(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x06462A961E94B67C
	static auto nh_0x06462A961E94B67C = rage::scrEngine::GetNativeHandler(0x06462A961E94B67C);
	rage::scrEngine::RegisterNativeHandler(0x06462A961E94B67C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06462A961E94B67C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x065D03A9D6B2C6B5
	static auto nh_0x065D03A9D6B2C6B5 = rage::scrEngine::GetNativeHandler(0x065D03A9D6B2C6B5);
	rage::scrEngine::RegisterNativeHandler(0x065D03A9D6B2C6B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x065D03A9D6B2C6B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x06EAF70AE066441E
	static auto nh_0x06EAF70AE066441E = rage::scrEngine::GetNativeHandler(0x06EAF70AE066441E);
	rage::scrEngine::RegisterNativeHandler(0x06EAF70AE066441E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x06EAF70AE066441E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x06EE9048FD080382
	static auto nh_0x06EE9048FD080382 = rage::scrEngine::GetNativeHandler(0x06EE9048FD080382);
	rage::scrEngine::RegisterNativeHandler(0x06EE9048FD080382, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06EE9048FD080382(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x07DBD622D9533857
	static auto nh_0x07DBD622D9533857 = rage::scrEngine::GetNativeHandler(0x07DBD622D9533857);
	rage::scrEngine::RegisterNativeHandler(0x07DBD622D9533857, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x07DBD622D9533857(cxt);
	});
	        
	AddResultCleaner(0x07DBD622D9533857, ResultCleaner<int>);

	// NETWORK/0x07EAB372C8841D99
	static auto nh_0x07EAB372C8841D99 = rage::scrEngine::GetNativeHandler(0x07EAB372C8841D99);
	rage::scrEngine::RegisterNativeHandler(0x07EAB372C8841D99, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x07EAB372C8841D99(cxt);
	});
	        
	AddResultCleaner(0x07EAB372C8841D99, ResultCleaner<int>);

	// STREAMING/0x0811381EF5062FEC
	static auto nh_0x0811381EF5062FEC = rage::scrEngine::GetNativeHandler(0x0811381EF5062FEC);
	rage::scrEngine::RegisterNativeHandler(0x0811381EF5062FEC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0811381EF5062FEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x08E8EEADFD0DC4A0 (result cleaner only)
	AddResultCleaner(0x08E8EEADFD0DC4A0, ResultCleaner<bool>);

	// STATS/0x0A9C7F36E5D7B683
	static auto nh_0x0A9C7F36E5D7B683 = rage::scrEngine::GetNativeHandler(0x0A9C7F36E5D7B683);
	rage::scrEngine::RegisterNativeHandler(0x0A9C7F36E5D7B683, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0A9C7F36E5D7B683(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x0AA27680A0BD43FA
	static auto nh_0x0AA27680A0BD43FA = rage::scrEngine::GetNativeHandler(0x0AA27680A0BD43FA);
	rage::scrEngine::RegisterNativeHandler(0x0AA27680A0BD43FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AA27680A0BD43FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x0AE73D8DF3A762B2
	static auto nh_0x0AE73D8DF3A762B2 = rage::scrEngine::GetNativeHandler(0x0AE73D8DF3A762B2);
	rage::scrEngine::RegisterNativeHandler(0x0AE73D8DF3A762B2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AE73D8DF3A762B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x0B3E35AC043707D9
	static auto nh_0x0B3E35AC043707D9 = rage::scrEngine::GetNativeHandler(0x0B3E35AC043707D9);
	rage::scrEngine::RegisterNativeHandler(0x0B3E35AC043707D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0B3E35AC043707D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// BRAIN/0x0B40ED49D7D6FF84
	static auto nh_0x0B40ED49D7D6FF84 = rage::scrEngine::GetNativeHandler(0x0B40ED49D7D6FF84);
	rage::scrEngine::RegisterNativeHandler(0x0B40ED49D7D6FF84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0B40ED49D7D6FF84(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x0B565B0AAE56A0E8
	static auto nh_0x0B565B0AAE56A0E8 = rage::scrEngine::GetNativeHandler(0x0B565B0AAE56A0E8);
	rage::scrEngine::RegisterNativeHandler(0x0B565B0AAE56A0E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x0B565B0AAE56A0E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x0B8B7F74BF061C6D (result cleaner only)
	AddResultCleaner(0x0B8B7F74BF061C6D, ResultCleaner<int>);

	// HUD/0x0C698D8F099174C7
	static auto nh_0x0C698D8F099174C7 = rage::scrEngine::GetNativeHandler(0x0C698D8F099174C7);
	rage::scrEngine::RegisterNativeHandler(0x0C698D8F099174C7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0C698D8F099174C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x0CF54F20DE43879C
	static auto nh_0x0CF54F20DE43879C = rage::scrEngine::GetNativeHandler(0x0CF54F20DE43879C);
	rage::scrEngine::RegisterNativeHandler(0x0CF54F20DE43879C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0CF54F20DE43879C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x0CF6CC51AA18F0F8
	static auto nh_0x0CF6CC51AA18F0F8 = rage::scrEngine::GetNativeHandler(0x0CF6CC51AA18F0F8);
	rage::scrEngine::RegisterNativeHandler(0x0CF6CC51AA18F0F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x0CF6CC51AA18F0F8(cxt);
	});
	        
	AddResultCleaner(0x0CF6CC51AA18F0F8, ResultCleaner<int>);

	// STATS/0x0D01D20616FC73FB
	static auto nh_0x0D01D20616FC73FB = rage::scrEngine::GetNativeHandler(0x0D01D20616FC73FB);
	rage::scrEngine::RegisterNativeHandler(0x0D01D20616FC73FB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0D01D20616FC73FB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x0D30EB83668E63C5
	static auto nh_0x0D30EB83668E63C5 = rage::scrEngine::GetNativeHandler(0x0D30EB83668E63C5);
	rage::scrEngine::RegisterNativeHandler(0x0D30EB83668E63C5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0D30EB83668E63C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x0D77A82DC2D0DA59
	static auto nh_0x0D77A82DC2D0DA59 = rage::scrEngine::GetNativeHandler(0x0D77A82DC2D0DA59);
	rage::scrEngine::RegisterNativeHandler(0x0D77A82DC2D0DA59, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0D77A82DC2D0DA59(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x0DD362F14F18942A
	static auto nh_0x0DD362F14F18942A = rage::scrEngine::GetNativeHandler(0x0DD362F14F18942A);
	rage::scrEngine::RegisterNativeHandler(0x0DD362F14F18942A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x0DD362F14F18942A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x0E4299C549F0D1F1
	static auto nh_0x0E4299C549F0D1F1 = rage::scrEngine::GetNativeHandler(0x0E4299C549F0D1F1);
	rage::scrEngine::RegisterNativeHandler(0x0E4299C549F0D1F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E4299C549F0D1F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x0EDE326D47CD0F3E (result cleaner only)
	AddResultCleaner(0x0EDE326D47CD0F3E, ResultCleaner<bool>);

	// NETWORK/0x0F1A4B45B7693B95
	static auto nh_0x0F1A4B45B7693B95 = rage::scrEngine::GetNativeHandler(0x0F1A4B45B7693B95);
	rage::scrEngine::RegisterNativeHandler(0x0F1A4B45B7693B95, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0F1A4B45B7693B95(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x0F62619393661D6E
	static auto nh_0x0F62619393661D6E = rage::scrEngine::GetNativeHandler(0x0F62619393661D6E);
	rage::scrEngine::RegisterNativeHandler(0x0F62619393661D6E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x0F62619393661D6E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/0x0F6F1EBBC4E1D5E6
	static auto nh_0x0F6F1EBBC4E1D5E6 = rage::scrEngine::GetNativeHandler(0x0F6F1EBBC4E1D5E6);
	rage::scrEngine::RegisterNativeHandler(0x0F6F1EBBC4E1D5E6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0F6F1EBBC4E1D5E6(cxt);
	});
	        
	AddResultCleaner(0x0F6F1EBBC4E1D5E6, ResultCleaner<bool>);

	// TASK/0x0FFB3C758E8C07B9 (result cleaner only)
	AddResultCleaner(0x0FFB3C758E8C07B9, ResultCleaner<int>);

	// VEHICLE/0x107A473D7A6647A9
	static auto nh_0x107A473D7A6647A9 = rage::scrEngine::GetNativeHandler(0x107A473D7A6647A9);
	rage::scrEngine::RegisterNativeHandler(0x107A473D7A6647A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x107A473D7A6647A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x108BE26959A9D9BB
	static auto nh_0x108BE26959A9D9BB = rage::scrEngine::GetNativeHandler(0x108BE26959A9D9BB);
	rage::scrEngine::RegisterNativeHandler(0x108BE26959A9D9BB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x108BE26959A9D9BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x110F526AB784111F
	static auto nh_0x110F526AB784111F = rage::scrEngine::GetNativeHandler(0x110F526AB784111F);
	rage::scrEngine::RegisterNativeHandler(0x110F526AB784111F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x110F526AB784111F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x112209CE0290C03A
	static auto nh_0x112209CE0290C03A = rage::scrEngine::GetNativeHandler(0x112209CE0290C03A);
	rage::scrEngine::RegisterNativeHandler(0x112209CE0290C03A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x112209CE0290C03A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x1153FA02A659051C
	static auto nh_0x1153FA02A659051C = rage::scrEngine::GetNativeHandler(0x1153FA02A659051C);
	rage::scrEngine::RegisterNativeHandler(0x1153FA02A659051C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1153FA02A659051C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x11579D940949C49E
	static auto nh_0x11579D940949C49E = rage::scrEngine::GetNativeHandler(0x11579D940949C49E);
	rage::scrEngine::RegisterNativeHandler(0x11579D940949C49E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x11579D940949C49E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x116FB94DC4B79F17
	static auto nh_0x116FB94DC4B79F17 = rage::scrEngine::GetNativeHandler(0x116FB94DC4B79F17);
	rage::scrEngine::RegisterNativeHandler(0x116FB94DC4B79F17, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x116FB94DC4B79F17(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x1171A97A3D3981B6
	static auto nh_0x1171A97A3D3981B6 = rage::scrEngine::GetNativeHandler(0x1171A97A3D3981B6);
	rage::scrEngine::RegisterNativeHandler(0x1171A97A3D3981B6, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x1171A97A3D3981B6(cxt);
	});
	        
	AddResultCleaner(0x1171A97A3D3981B6, ResultCleaner<bool>);

	// MISC/0x1178E104409FE58C
	static auto nh_0x1178E104409FE58C = rage::scrEngine::GetNativeHandler(0x1178E104409FE58C);
	rage::scrEngine::RegisterNativeHandler(0x1178E104409FE58C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1178E104409FE58C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x1185A8087587322C
	static auto nh_0x1185A8087587322C = rage::scrEngine::GetNativeHandler(0x1185A8087587322C);
	rage::scrEngine::RegisterNativeHandler(0x1185A8087587322C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1185A8087587322C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x1216E0BFA72CC703
	static auto nh_0x1216E0BFA72CC703 = rage::scrEngine::GetNativeHandler(0x1216E0BFA72CC703);
	rage::scrEngine::RegisterNativeHandler(0x1216E0BFA72CC703, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1216E0BFA72CC703(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x12DED8CA53D47EA5
	static auto nh_0x12DED8CA53D47EA5 = rage::scrEngine::GetNativeHandler(0x12DED8CA53D47EA5);
	rage::scrEngine::RegisterNativeHandler(0x12DED8CA53D47EA5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x12DED8CA53D47EA5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x1312DDD8385AEE4E
	static auto nh_0x1312DDD8385AEE4E = rage::scrEngine::GetNativeHandler(0x1312DDD8385AEE4E);
	rage::scrEngine::RegisterNativeHandler(0x1312DDD8385AEE4E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1312DDD8385AEE4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x1398582B7F72B3ED
	static auto nh_0x1398582B7F72B3ED = rage::scrEngine::GetNativeHandler(0x1398582B7F72B3ED);
	rage::scrEngine::RegisterNativeHandler(0x1398582B7F72B3ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1398582B7F72B3ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x13B350B8AD0EEE10
	static auto nh_0x13B350B8AD0EEE10 = rage::scrEngine::GetNativeHandler(0x13B350B8AD0EEE10);
	rage::scrEngine::RegisterNativeHandler(0x13B350B8AD0EEE10, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x13B350B8AD0EEE10(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x13F1FCB111B820B0
	static auto nh_0x13F1FCB111B820B0 = rage::scrEngine::GetNativeHandler(0x13F1FCB111B820B0);
	rage::scrEngine::RegisterNativeHandler(0x13F1FCB111B820B0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x13F1FCB111B820B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x140E6A44870A11CE
	static auto nh_0x140E6A44870A11CE = rage::scrEngine::GetNativeHandler(0x140E6A44870A11CE);
	rage::scrEngine::RegisterNativeHandler(0x140E6A44870A11CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x140E6A44870A11CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x144DA052257AE7D8
	static auto nh_0x144DA052257AE7D8 = rage::scrEngine::GetNativeHandler(0x144DA052257AE7D8);
	rage::scrEngine::RegisterNativeHandler(0x144DA052257AE7D8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x144DA052257AE7D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x14922ED3E38761F0 (result cleaner only)
	AddResultCleaner(0x14922ED3E38761F0, ResultCleaner<bool>);

	// PAD/0x14D29BB12D47F68C
	static auto nh_0x14D29BB12D47F68C = rage::scrEngine::GetNativeHandler(0x14D29BB12D47F68C);
	rage::scrEngine::RegisterNativeHandler(0x14D29BB12D47F68C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x14D29BB12D47F68C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x14E0B2D1AD1044E0
	static auto nh_0x14E0B2D1AD1044E0 = rage::scrEngine::GetNativeHandler(0x14E0B2D1AD1044E0);
	rage::scrEngine::RegisterNativeHandler(0x14E0B2D1AD1044E0, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x14E0B2D1AD1044E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x14EDA9EE27BD1626
	static auto nh_0x14EDA9EE27BD1626 = rage::scrEngine::GetNativeHandler(0x14EDA9EE27BD1626);
	rage::scrEngine::RegisterNativeHandler(0x14EDA9EE27BD1626, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x14EDA9EE27BD1626(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x14FC5833464340A8
	static auto nh_0x14FC5833464340A8 = rage::scrEngine::GetNativeHandler(0x14FC5833464340A8);
	rage::scrEngine::RegisterNativeHandler(0x14FC5833464340A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14FC5833464340A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x155467ACA0F55705 (result cleaner only)
	AddResultCleaner(0x155467ACA0F55705, ResultCleaner<int>);

	// AUDIO/0x159B7318403A1CD8
	static auto nh_0x159B7318403A1CD8 = rage::scrEngine::GetNativeHandler(0x159B7318403A1CD8);
	rage::scrEngine::RegisterNativeHandler(0x159B7318403A1CD8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x159B7318403A1CD8(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x1612C45F9E3E0D44
	static auto nh_0x1612C45F9E3E0D44 = rage::scrEngine::GetNativeHandler(0x1612C45F9E3E0D44);
	rage::scrEngine::RegisterNativeHandler(0x1612C45F9E3E0D44, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1612C45F9E3E0D44(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x162C23CA83ED0A62
	static auto nh_0x162C23CA83ED0A62 = rage::scrEngine::GetNativeHandler(0x162C23CA83ED0A62);
	rage::scrEngine::RegisterNativeHandler(0x162C23CA83ED0A62, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x162C23CA83ED0A62(cxt);
	});
	        
	AddResultCleaner(0x162C23CA83ED0A62, ResultCleaner<bool>);

	// STATS/0x164C5FF663790845
	static auto nh_0x164C5FF663790845 = rage::scrEngine::GetNativeHandler(0x164C5FF663790845);
	rage::scrEngine::RegisterNativeHandler(0x164C5FF663790845, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x164C5FF663790845(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x16DA8172459434AA (result cleaner only)
	AddResultCleaner(0x16DA8172459434AA, ResultCleaner<int>);

	// NETSHOPPING/0x170910093218C8B9
	static auto nh_0x170910093218C8B9 = rage::scrEngine::GetNativeHandler(0x170910093218C8B9);
	rage::scrEngine::RegisterNativeHandler(0x170910093218C8B9, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x170910093218C8B9(cxt);
	});
	        
	AddResultCleaner(0x170910093218C8B9, ResultCleaner<bool>);

	// NETWORK/0x17C9E241111A674D
	static auto nh_0x17C9E241111A674D = rage::scrEngine::GetNativeHandler(0x17C9E241111A674D);
	rage::scrEngine::RegisterNativeHandler(0x17C9E241111A674D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x17C9E241111A674D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x17FCA7199A530203
	static auto nh_0x17FCA7199A530203 = rage::scrEngine::GetNativeHandler(0x17FCA7199A530203);
	rage::scrEngine::RegisterNativeHandler(0x17FCA7199A530203, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17FCA7199A530203(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x182F266C2D9E2BEB
	static auto nh_0x182F266C2D9E2BEB = rage::scrEngine::GetNativeHandler(0x182F266C2D9E2BEB);
	rage::scrEngine::RegisterNativeHandler(0x182F266C2D9E2BEB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x182F266C2D9E2BEB(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x19853B5B17D77BCA
	static auto nh_0x19853B5B17D77BCA = rage::scrEngine::GetNativeHandler(0x19853B5B17D77BCA);
	rage::scrEngine::RegisterNativeHandler(0x19853B5B17D77BCA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x19853B5B17D77BCA(cxt);
	});
	        
	AddResultCleaner(0x19853B5B17D77BCA, ResultCleaner<bool>);

	// AUDIO/0x19AF7ED9B9D23058
	static auto nh_0x19AF7ED9B9D23058 = rage::scrEngine::GetNativeHandler(0x19AF7ED9B9D23058);
	rage::scrEngine::RegisterNativeHandler(0x19AF7ED9B9D23058, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19AF7ED9B9D23058(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x19BFED045C647C49 (result cleaner only)
	AddResultCleaner(0x19BFED045C647C49, ResultCleaner<bool>);

	// ENTITY/0x1A092BB0C3808B96
	static auto nh_0x1A092BB0C3808B96 = rage::scrEngine::GetNativeHandler(0x1A092BB0C3808B96);
	rage::scrEngine::RegisterNativeHandler(0x1A092BB0C3808B96, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A092BB0C3808B96(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x1A330D297AAC6BC1
	static auto nh_0x1A330D297AAC6BC1 = rage::scrEngine::GetNativeHandler(0x1A330D297AAC6BC1);
	rage::scrEngine::RegisterNativeHandler(0x1A330D297AAC6BC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A330D297AAC6BC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x1A6CBB06E2D0D79D
	static auto nh_0x1A6CBB06E2D0D79D = rage::scrEngine::GetNativeHandler(0x1A6CBB06E2D0D79D);
	rage::scrEngine::RegisterNativeHandler(0x1A6CBB06E2D0D79D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1A6CBB06E2D0D79D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x1A7CE7CD3E653485
	static auto nh_0x1A7CE7CD3E653485 = rage::scrEngine::GetNativeHandler(0x1A7CE7CD3E653485);
	rage::scrEngine::RegisterNativeHandler(0x1A7CE7CD3E653485, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A7CE7CD3E653485(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x1A8EA222F9C67DBB
	static auto nh_0x1A8EA222F9C67DBB = rage::scrEngine::GetNativeHandler(0x1A8EA222F9C67DBB);
	rage::scrEngine::RegisterNativeHandler(0x1A8EA222F9C67DBB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A8EA222F9C67DBB(cxt);
	});
	        
	AddResultCleaner(0x1A8EA222F9C67DBB, ResultCleaner<int>);

	// GRAPHICS/0x1BBC135A4D25EDDE
	static auto nh_0x1BBC135A4D25EDDE = rage::scrEngine::GetNativeHandler(0x1BBC135A4D25EDDE);
	rage::scrEngine::RegisterNativeHandler(0x1BBC135A4D25EDDE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1BBC135A4D25EDDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x1C57C94A6446492A
	static auto nh_0x1C57C94A6446492A = rage::scrEngine::GetNativeHandler(0x1C57C94A6446492A);
	rage::scrEngine::RegisterNativeHandler(0x1C57C94A6446492A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1C57C94A6446492A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x1CBA05AE7BD7EE05
	static auto nh_0x1CBA05AE7BD7EE05 = rage::scrEngine::GetNativeHandler(0x1CBA05AE7BD7EE05);
	rage::scrEngine::RegisterNativeHandler(0x1CBA05AE7BD7EE05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CBA05AE7BD7EE05(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x1D12A56FC95BE92E (result cleaner only)
	AddResultCleaner(0x1D12A56FC95BE92E, ResultCleaner<bool>);

	// NETWORK/0x1D4DC17C38FEAFF0 (result cleaner only)
	AddResultCleaner(0x1D4DC17C38FEAFF0, ResultCleaner<bool>);

	// NETWORK/0x1D610EB0FEA716D9 (result cleaner only)
	AddResultCleaner(0x1D610EB0FEA716D9, ResultCleaner<bool>);

	// MONEY/0x1DC9B749E7AE282B
	static auto nh_0x1DC9B749E7AE282B = rage::scrEngine::GetNativeHandler(0x1DC9B749E7AE282B);
	rage::scrEngine::RegisterNativeHandler(0x1DC9B749E7AE282B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x1DC9B749E7AE282B(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x1E3F1B1B891A2AAA
	static auto nh_0x1E3F1B1B891A2AAA = rage::scrEngine::GetNativeHandler(0x1E3F1B1B891A2AAA);
	rage::scrEngine::RegisterNativeHandler(0x1E3F1B1B891A2AAA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1E3F1B1B891A2AAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x1E77FA7A62EE6C4C
	static auto nh_0x1E77FA7A62EE6C4C = rage::scrEngine::GetNativeHandler(0x1E77FA7A62EE6C4C);
	rage::scrEngine::RegisterNativeHandler(0x1E77FA7A62EE6C4C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1E77FA7A62EE6C4C(cxt);
	});
	        
	AddResultCleaner(0x1E77FA7A62EE6C4C, ResultCleaner<int>);

	// STREAMING/0x1E9057A74FD73E23
	static auto nh_0x1E9057A74FD73E23 = rage::scrEngine::GetNativeHandler(0x1E9057A74FD73E23);
	rage::scrEngine::RegisterNativeHandler(0x1E9057A74FD73E23, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E9057A74FD73E23(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x1F2300CB7FA7B7F6 (result cleaner only)
	AddResultCleaner(0x1F2300CB7FA7B7F6, ResultCleaner<int>);

	// TASK/0x1F351CF1C6475734
	static auto nh_0x1F351CF1C6475734 = rage::scrEngine::GetNativeHandler(0x1F351CF1C6475734);
	rage::scrEngine::RegisterNativeHandler(0x1F351CF1C6475734, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x1F351CF1C6475734(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x1F7BC3539F9E0224
	static auto nh_0x1F7BC3539F9E0224 = rage::scrEngine::GetNativeHandler(0x1F7BC3539F9E0224);
	rage::scrEngine::RegisterNativeHandler(0x1F7BC3539F9E0224, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F7BC3539F9E0224(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x1F8E00FB18239600
	static auto nh_0x1F8E00FB18239600 = rage::scrEngine::GetNativeHandler(0x1F8E00FB18239600);
	rage::scrEngine::RegisterNativeHandler(0x1F8E00FB18239600, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1F8E00FB18239600(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x2016C603D6B8987C
	static auto nh_0x2016C603D6B8987C = rage::scrEngine::GetNativeHandler(0x2016C603D6B8987C);
	rage::scrEngine::RegisterNativeHandler(0x2016C603D6B8987C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2016C603D6B8987C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x202A5ED9CE01D6E7
	static auto nh_0x202A5ED9CE01D6E7 = rage::scrEngine::GetNativeHandler(0x202A5ED9CE01D6E7);
	rage::scrEngine::RegisterNativeHandler(0x202A5ED9CE01D6E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x202A5ED9CE01D6E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x20746F7B1032A3C7
	static auto nh_0x20746F7B1032A3C7 = rage::scrEngine::GetNativeHandler(0x20746F7B1032A3C7);
	rage::scrEngine::RegisterNativeHandler(0x20746F7B1032A3C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x20746F7B1032A3C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x208784099002BC30
	static auto nh_0x208784099002BC30 = rage::scrEngine::GetNativeHandler(0x208784099002BC30);
	rage::scrEngine::RegisterNativeHandler(0x208784099002BC30, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x208784099002BC30(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x20C6C7E4EB082A7F
	static auto nh_0x20C6C7E4EB082A7F = rage::scrEngine::GetNativeHandler(0x20C6C7E4EB082A7F);
	rage::scrEngine::RegisterNativeHandler(0x20C6C7E4EB082A7F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x20C6C7E4EB082A7F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x2107A3773771186D (result cleaner only)
	AddResultCleaner(0x2107A3773771186D, ResultCleaner<bool>);

	// HUD/0x211C4EF450086857
	static auto nh_0x211C4EF450086857 = rage::scrEngine::GetNativeHandler(0x211C4EF450086857);
	rage::scrEngine::RegisterNativeHandler(0x211C4EF450086857, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x211C4EF450086857(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x214CD562A939246A (result cleaner only)
	AddResultCleaner(0x214CD562A939246A, ResultCleaner<bool>);

	// SOCIALCLUB/0x225798743970412B
	static auto nh_0x225798743970412B = rage::scrEngine::GetNativeHandler(0x225798743970412B);
	rage::scrEngine::RegisterNativeHandler(0x225798743970412B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x225798743970412B(cxt);
	});
	        
	AddResultCleaner(0x225798743970412B, ResultCleaner<bool>);

	// MONEY/0x226C284C830D0CA8
	static auto nh_0x226C284C830D0CA8 = rage::scrEngine::GetNativeHandler(0x226C284C830D0CA8);
	rage::scrEngine::RegisterNativeHandler(0x226C284C830D0CA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x226C284C830D0CA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/0x22E21FBCFC88C149
	static auto nh_0x22E21FBCFC88C149 = rage::scrEngine::GetNativeHandler(0x22E21FBCFC88C149);
	rage::scrEngine::RegisterNativeHandler(0x22E21FBCFC88C149, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x22E21FBCFC88C149(cxt);
	});
	        
	AddResultCleaner(0x22E21FBCFC88C149, ResultCleaner<int>);

	// NETWORK/0x2302C0264EA58D31
	static auto nh_0x2302C0264EA58D31 = rage::scrEngine::GetNativeHandler(0x2302C0264EA58D31);
	rage::scrEngine::RegisterNativeHandler(0x2302C0264EA58D31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2302C0264EA58D31(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x2310A8F9421EBF43
	static auto nh_0x2310A8F9421EBF43 = rage::scrEngine::GetNativeHandler(0x2310A8F9421EBF43);
	rage::scrEngine::RegisterNativeHandler(0x2310A8F9421EBF43, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2310A8F9421EBF43(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x2311DD7159F00582
	static auto nh_0x2311DD7159F00582 = rage::scrEngine::GetNativeHandler(0x2311DD7159F00582);
	rage::scrEngine::RegisterNativeHandler(0x2311DD7159F00582, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2311DD7159F00582(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x23227DF0B2115469
	static auto nh_0x23227DF0B2115469 = rage::scrEngine::GetNativeHandler(0x23227DF0B2115469);
	rage::scrEngine::RegisterNativeHandler(0x23227DF0B2115469, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23227DF0B2115469(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x237440E46D918649
	static auto nh_0x237440E46D918649 = rage::scrEngine::GetNativeHandler(0x237440E46D918649);
	rage::scrEngine::RegisterNativeHandler(0x237440E46D918649, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x237440E46D918649(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x2382AB11450AE7BA
	static auto nh_0x2382AB11450AE7BA = rage::scrEngine::GetNativeHandler(0x2382AB11450AE7BA);
	rage::scrEngine::RegisterNativeHandler(0x2382AB11450AE7BA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2382AB11450AE7BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/0x23F09EADC01449D6 (result cleaner only)
	AddResultCleaner(0x23F09EADC01449D6, ResultCleaner<bool>);

	// DLC/0x241FCA5B1AA14F75 (result cleaner only)
	AddResultCleaner(0x241FCA5B1AA14F75, ResultCleaner<bool>);

	// HUD/0x243296A510B562B6
	static auto nh_0x243296A510B562B6 = rage::scrEngine::GetNativeHandler(0x243296A510B562B6);
	rage::scrEngine::RegisterNativeHandler(0x243296A510B562B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x243296A510B562B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x247ACBC4ABBC9D1C
	static auto nh_0x247ACBC4ABBC9D1C = rage::scrEngine::GetNativeHandler(0x247ACBC4ABBC9D1C);
	rage::scrEngine::RegisterNativeHandler(0x247ACBC4ABBC9D1C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x247ACBC4ABBC9D1C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x24A49BEAF468DC90
	static auto nh_0x24A49BEAF468DC90 = rage::scrEngine::GetNativeHandler(0x24A49BEAF468DC90);
	rage::scrEngine::RegisterNativeHandler(0x24A49BEAF468DC90, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x24A49BEAF468DC90(cxt);
	});
	        
	AddResultCleaner(0x24A49BEAF468DC90, ResultCleaner<bool>);

	// WEAPON/0x24C024BA8379A70A
	static auto nh_0x24C024BA8379A70A = rage::scrEngine::GetNativeHandler(0x24C024BA8379A70A);
	rage::scrEngine::RegisterNativeHandler(0x24C024BA8379A70A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x24C024BA8379A70A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x24E4E51FC16305F9 (result cleaner only)
	AddResultCleaner(0x24E4E51FC16305F9, ResultCleaner<int>);

	// PED/0x25361A96E0F7E419
	static auto nh_0x25361A96E0F7E419 = rage::scrEngine::GetNativeHandler(0x25361A96E0F7E419);
	rage::scrEngine::RegisterNativeHandler(0x25361A96E0F7E419, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x25361A96E0F7E419(cxt);
	});
	        
	AddResultCleaner(0x25361A96E0F7E419, ResultCleaner<int>);

	// OBJECT/0x2542269291C6AC84
	static auto nh_0x2542269291C6AC84 = rage::scrEngine::GetNativeHandler(0x2542269291C6AC84);
	rage::scrEngine::RegisterNativeHandler(0x2542269291C6AC84, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2542269291C6AC84(cxt);
	});
	        
	AddResultCleaner(0x2542269291C6AC84, ResultCleaner<int>);

	// NETWORK/0x2555CF7DA5473794
	static auto nh_0x2555CF7DA5473794 = rage::scrEngine::GetNativeHandler(0x2555CF7DA5473794);
	rage::scrEngine::RegisterNativeHandler(0x2555CF7DA5473794, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2555CF7DA5473794(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x2570E26BE63964E3 (result cleaner only)
	AddResultCleaner(0x2570E26BE63964E3, ResultCleaner<bool>);

	// GRAPHICS/0x259BA6D4E6F808F1
	static auto nh_0x259BA6D4E6F808F1 = rage::scrEngine::GetNativeHandler(0x259BA6D4E6F808F1);
	rage::scrEngine::RegisterNativeHandler(0x259BA6D4E6F808F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x259BA6D4E6F808F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/0x25AAA32BDC98F2A3 (result cleaner only)
	AddResultCleaner(0x25AAA32BDC98F2A3, ResultCleaner<int>);

	// NETWORK/0x25D990F8E0E3F13C
	static auto nh_0x25D990F8E0E3F13C = rage::scrEngine::GetNativeHandler(0x25D990F8E0E3F13C);
	rage::scrEngine::RegisterNativeHandler(0x25D990F8E0E3F13C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25D990F8E0E3F13C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x25FC3E33A31AD0C9
	static auto nh_0x25FC3E33A31AD0C9 = rage::scrEngine::GetNativeHandler(0x25FC3E33A31AD0C9);
	rage::scrEngine::RegisterNativeHandler(0x25FC3E33A31AD0C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25FC3E33A31AD0C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x261E97AD7BCF3D40
	static auto nh_0x261E97AD7BCF3D40 = rage::scrEngine::GetNativeHandler(0x261E97AD7BCF3D40);
	rage::scrEngine::RegisterNativeHandler(0x261E97AD7BCF3D40, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x261E97AD7BCF3D40(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x265559DA40B3F327
	static auto nh_0x265559DA40B3F327 = rage::scrEngine::GetNativeHandler(0x265559DA40B3F327);
	rage::scrEngine::RegisterNativeHandler(0x265559DA40B3F327, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x265559DA40B3F327(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x265635150FB0D82E
	static auto nh_0x265635150FB0D82E = rage::scrEngine::GetNativeHandler(0x265635150FB0D82E);
	rage::scrEngine::RegisterNativeHandler(0x265635150FB0D82E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x265635150FB0D82E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x26D7399B9587FE89
	static auto nh_0x26D7399B9587FE89 = rage::scrEngine::GetNativeHandler(0x26D7399B9587FE89);
	rage::scrEngine::RegisterNativeHandler(0x26D7399B9587FE89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26D7399B9587FE89(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x26F07DD83A5F7F98 (result cleaner only)
	AddResultCleaner(0x26F07DD83A5F7F98, ResultCleaner<int>);

	// CAM/0x271017B9BA825366
	static auto nh_0x271017B9BA825366 = rage::scrEngine::GetNativeHandler(0x271017B9BA825366);
	rage::scrEngine::RegisterNativeHandler(0x271017B9BA825366, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x271017B9BA825366(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x271401846BD26E92
	static auto nh_0x271401846BD26E92 = rage::scrEngine::GetNativeHandler(0x271401846BD26E92);
	rage::scrEngine::RegisterNativeHandler(0x271401846BD26E92, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x271401846BD26E92(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x2735233A786B1BEF
	static auto nh_0x2735233A786B1BEF = rage::scrEngine::GetNativeHandler(0x2735233A786B1BEF);
	rage::scrEngine::RegisterNativeHandler(0x2735233A786B1BEF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2735233A786B1BEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x2790F4B17D098E26
	static auto nh_0x2790F4B17D098E26 = rage::scrEngine::GetNativeHandler(0x2790F4B17D098E26);
	rage::scrEngine::RegisterNativeHandler(0x2790F4B17D098E26, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2790F4B17D098E26(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x27AA1C973CACFE63
	static auto nh_0x27AA1C973CACFE63 = rage::scrEngine::GetNativeHandler(0x27AA1C973CACFE63);
	rage::scrEngine::RegisterNativeHandler(0x27AA1C973CACFE63, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x27AA1C973CACFE63(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x27CFB1B1E078CB2D
	static auto nh_0x27CFB1B1E078CB2D = rage::scrEngine::GetNativeHandler(0x27CFB1B1E078CB2D);
	rage::scrEngine::RegisterNativeHandler(0x27CFB1B1E078CB2D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x27CFB1B1E078CB2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x27F248C3FEBFAAD3
	static auto nh_0x27F248C3FEBFAAD3 = rage::scrEngine::GetNativeHandler(0x27F248C3FEBFAAD3);
	rage::scrEngine::RegisterNativeHandler(0x27F248C3FEBFAAD3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x27F248C3FEBFAAD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x27FEB5254759CDE3
	static auto nh_0x27FEB5254759CDE3 = rage::scrEngine::GetNativeHandler(0x27FEB5254759CDE3);
	rage::scrEngine::RegisterNativeHandler(0x27FEB5254759CDE3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x27FEB5254759CDE3(cxt);
	});
	        
	AddResultCleaner(0x27FEB5254759CDE3, ResultCleaner<bool>);

	// STATS/0x2818FF6638CB09DE
	static auto nh_0x2818FF6638CB09DE = rage::scrEngine::GetNativeHandler(0x2818FF6638CB09DE);
	rage::scrEngine::RegisterNativeHandler(0x2818FF6638CB09DE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2818FF6638CB09DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x282B6739644F4347
	static auto nh_0x282B6739644F4347 = rage::scrEngine::GetNativeHandler(0x282B6739644F4347);
	rage::scrEngine::RegisterNativeHandler(0x282B6739644F4347, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x282B6739644F4347(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x283B6062A2C01E9B
	static auto nh_0x283B6062A2C01E9B = rage::scrEngine::GetNativeHandler(0x283B6062A2C01E9B);
	rage::scrEngine::RegisterNativeHandler(0x283B6062A2C01E9B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x283B6062A2C01E9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x288DF530C92DAD6F
	static auto nh_0x288DF530C92DAD6F = rage::scrEngine::GetNativeHandler(0x288DF530C92DAD6F);
	rage::scrEngine::RegisterNativeHandler(0x288DF530C92DAD6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x288DF530C92DAD6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x28B022A17B068A3A
	static auto nh_0x28B022A17B068A3A = rage::scrEngine::GetNativeHandler(0x28B022A17B068A3A);
	rage::scrEngine::RegisterNativeHandler(0x28B022A17B068A3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x28B022A17B068A3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x28ECB8AC2F607DB2
	static auto nh_0x28ECB8AC2F607DB2 = rage::scrEngine::GetNativeHandler(0x28ECB8AC2F607DB2);
	rage::scrEngine::RegisterNativeHandler(0x28ECB8AC2F607DB2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x28ECB8AC2F607DB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x293220DA1B46CEBC
	static auto nh_0x293220DA1B46CEBC = rage::scrEngine::GetNativeHandler(0x293220DA1B46CEBC);
	rage::scrEngine::RegisterNativeHandler(0x293220DA1B46CEBC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x293220DA1B46CEBC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0x29682E2CCF21E9B5
	static auto nh_0x29682E2CCF21E9B5 = rage::scrEngine::GetNativeHandler(0x29682E2CCF21E9B5);
	rage::scrEngine::RegisterNativeHandler(0x29682E2CCF21E9B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0x29682E2CCF21E9B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x2A251AA48B2B46DB
	static auto nh_0x2A251AA48B2B46DB = rage::scrEngine::GetNativeHandler(0x2A251AA48B2B46DB);
	rage::scrEngine::RegisterNativeHandler(0x2A251AA48B2B46DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A251AA48B2B46DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x2A7CEC72C3443BCC
	static auto nh_0x2A7CEC72C3443BCC = rage::scrEngine::GetNativeHandler(0x2A7CEC72C3443BCC);
	rage::scrEngine::RegisterNativeHandler(0x2A7CEC72C3443BCC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2A7CEC72C3443BCC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x2A93C46AAB1EACC9
	static auto nh_0x2A93C46AAB1EACC9 = rage::scrEngine::GetNativeHandler(0x2A93C46AAB1EACC9);
	rage::scrEngine::RegisterNativeHandler(0x2A93C46AAB1EACC9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2A93C46AAB1EACC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x2ACABED337622DF2
	static auto nh_0x2ACABED337622DF2 = rage::scrEngine::GetNativeHandler(0x2ACABED337622DF2);
	rage::scrEngine::RegisterNativeHandler(0x2ACABED337622DF2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2ACABED337622DF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x2AFC2D19B50797F2
	static auto nh_0x2AFC2D19B50797F2 = rage::scrEngine::GetNativeHandler(0x2AFC2D19B50797F2);
	rage::scrEngine::RegisterNativeHandler(0x2AFC2D19B50797F2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2AFC2D19B50797F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2B1C623823DB0D9D
	static auto nh_0x2B1C623823DB0D9D = rage::scrEngine::GetNativeHandler(0x2B1C623823DB0D9D);
	rage::scrEngine::RegisterNativeHandler(0x2B1C623823DB0D9D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x2B1C623823DB0D9D(cxt);
	});
	        
	AddResultCleaner(0x2B1C623823DB0D9D, ResultCleaner<int>);

	// GRAPHICS/0x2B40A97646381508
	static auto nh_0x2B40A97646381508 = rage::scrEngine::GetNativeHandler(0x2B40A97646381508);
	rage::scrEngine::RegisterNativeHandler(0x2B40A97646381508, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2B40A97646381508(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2B51EDBEFC301339
	static auto nh_0x2B51EDBEFC301339 = rage::scrEngine::GetNativeHandler(0x2B51EDBEFC301339);
	rage::scrEngine::RegisterNativeHandler(0x2B51EDBEFC301339, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2B51EDBEFC301339(cxt);
	});
	        
	AddResultCleaner(0x2B51EDBEFC301339, ResultCleaner<bool>);

	// PED/0x2B694AFCF64E6994
	static auto nh_0x2B694AFCF64E6994 = rage::scrEngine::GetNativeHandler(0x2B694AFCF64E6994);
	rage::scrEngine::RegisterNativeHandler(0x2B694AFCF64E6994, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B694AFCF64E6994(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2BF66D2E7414F686 (result cleaner only)
	AddResultCleaner(0x2BF66D2E7414F686, ResultCleaner<int>);

	// HUD/0x2C173AE2BDB9385E (result cleaner only)
	AddResultCleaner(0x2C173AE2BDB9385E, ResultCleaner<int>);

	// GRAPHICS/0x2C42340F916C5930
	static auto nh_0x2C42340F916C5930 = rage::scrEngine::GetNativeHandler(0x2C42340F916C5930);
	rage::scrEngine::RegisterNativeHandler(0x2C42340F916C5930, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2C42340F916C5930(cxt);
	});
	        
	AddResultCleaner(0x2C42340F916C5930, ResultCleaner<int>);

	// VEHICLE/0x2C4A1590ABF43E8B
	static auto nh_0x2C4A1590ABF43E8B = rage::scrEngine::GetNativeHandler(0x2C4A1590ABF43E8B);
	rage::scrEngine::RegisterNativeHandler(0x2C4A1590ABF43E8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C4A1590ABF43E8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x2C9F302398E13141
	static auto nh_0x2C9F302398E13141 = rage::scrEngine::GetNativeHandler(0x2C9F302398E13141);
	rage::scrEngine::RegisterNativeHandler(0x2C9F302398E13141, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2C9F302398E13141(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x2CD90358F67D0AA8
	static auto nh_0x2CD90358F67D0AA8 = rage::scrEngine::GetNativeHandler(0x2CD90358F67D0AA8);
	rage::scrEngine::RegisterNativeHandler(0x2CD90358F67D0AA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2CD90358F67D0AA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2CE9D95E4051AECD
	static auto nh_0x2CE9D95E4051AECD = rage::scrEngine::GetNativeHandler(0x2CE9D95E4051AECD);
	rage::scrEngine::RegisterNativeHandler(0x2CE9D95E4051AECD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2CE9D95E4051AECD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x2D3B147AFAD49DE0
	static auto nh_0x2D3B147AFAD49DE0 = rage::scrEngine::GetNativeHandler(0x2D3B147AFAD49DE0);
	rage::scrEngine::RegisterNativeHandler(0x2D3B147AFAD49DE0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2D3B147AFAD49DE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2D5DC831176D0114
	static auto nh_0x2D5DC831176D0114 = rage::scrEngine::GetNativeHandler(0x2D5DC831176D0114);
	rage::scrEngine::RegisterNativeHandler(0x2D5DC831176D0114, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2D5DC831176D0114(cxt);
	});
	        
	AddResultCleaner(0x2D5DC831176D0114, ResultCleaner<bool>);

	// STATS/0x2D7A9B577E72385E
	static auto nh_0x2D7A9B577E72385E = rage::scrEngine::GetNativeHandler(0x2D7A9B577E72385E);
	rage::scrEngine::RegisterNativeHandler(0x2D7A9B577E72385E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2D7A9B577E72385E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x2D874D4AE612A65F (result cleaner only)
	AddResultCleaner(0x2D874D4AE612A65F, ResultCleaner<int>);

	// NETWORK/0x2DA41ED6E1FCD7A5
	static auto nh_0x2DA41ED6E1FCD7A5 = rage::scrEngine::GetNativeHandler(0x2DA41ED6E1FCD7A5);
	rage::scrEngine::RegisterNativeHandler(0x2DA41ED6E1FCD7A5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2DA41ED6E1FCD7A5(cxt);
	});
	        
	AddResultCleaner(0x2DA41ED6E1FCD7A5, ResultCleaner<int>);

	// AUDIO/0x2DD39BF3E2F9C47F (result cleaner only)
	AddResultCleaner(0x2DD39BF3E2F9C47F, ResultCleaner<int>);

	// PED/0x2DFC81C9B9608549
	static auto nh_0x2DFC81C9B9608549 = rage::scrEngine::GetNativeHandler(0x2DFC81C9B9608549);
	rage::scrEngine::RegisterNativeHandler(0x2DFC81C9B9608549, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2DFC81C9B9608549(cxt);
	});
	        
	AddResultCleaner(0x2DFC81C9B9608549, ResultCleaner<bool>);

	// STATS/0x2E0259BABC27A327
	static auto nh_0x2E0259BABC27A327 = rage::scrEngine::GetNativeHandler(0x2E0259BABC27A327);
	rage::scrEngine::RegisterNativeHandler(0x2E0259BABC27A327, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2E0259BABC27A327(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x2E0BF682CC778D49
	static auto nh_0x2E0BF682CC778D49 = rage::scrEngine::GetNativeHandler(0x2E0BF682CC778D49);
	rage::scrEngine::RegisterNativeHandler(0x2E0BF682CC778D49, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2E0BF682CC778D49(cxt);
	});
	        
	AddResultCleaner(0x2E0BF682CC778D49, ResultCleaner<bool>);

	// HUD/0x2E22FEFA0100275E (result cleaner only)
	AddResultCleaner(0x2E22FEFA0100275E, ResultCleaner<bool>);

	// NETWORK/0x2E4C123D1C8A710E
	static auto nh_0x2E4C123D1C8A710E = rage::scrEngine::GetNativeHandler(0x2E4C123D1C8A710E);
	rage::scrEngine::RegisterNativeHandler(0x2E4C123D1C8A710E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x2E4C123D1C8A710E(cxt);
	});
	        
	AddResultCleaner(0x2E4C123D1C8A710E, ResultCleaner<int>);

	// HUD/0x2F057596F2BD0061 (result cleaner only)
	AddResultCleaner(0x2F057596F2BD0061, ResultCleaner<bool>);

	// PED/0x2F074C904D85129E
	static auto nh_0x2F074C904D85129E = rage::scrEngine::GetNativeHandler(0x2F074C904D85129E);
	rage::scrEngine::RegisterNativeHandler(0x2F074C904D85129E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F074C904D85129E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x2F137B508DE238F2
	static auto nh_0x2F137B508DE238F2 = rage::scrEngine::GetNativeHandler(0x2F137B508DE238F2);
	rage::scrEngine::RegisterNativeHandler(0x2F137B508DE238F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F137B508DE238F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x2F3C3D9F50681DE4
	static auto nh_0x2F3C3D9F50681DE4 = rage::scrEngine::GetNativeHandler(0x2F3C3D9F50681DE4);
	rage::scrEngine::RegisterNativeHandler(0x2F3C3D9F50681DE4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2F3C3D9F50681DE4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x2F41A3BAE005E5FA
	static auto nh_0x2F41A3BAE005E5FA = rage::scrEngine::GetNativeHandler(0x2F41A3BAE005E5FA);
	rage::scrEngine::RegisterNativeHandler(0x2F41A3BAE005E5FA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2F41A3BAE005E5FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x2F7CEB6520288061
	static auto nh_0x2F7CEB6520288061 = rage::scrEngine::GetNativeHandler(0x2F7CEB6520288061);
	rage::scrEngine::RegisterNativeHandler(0x2F7CEB6520288061, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F7CEB6520288061(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x2F7F2B26DD3F18EE
	static auto nh_0x2F7F2B26DD3F18EE = rage::scrEngine::GetNativeHandler(0x2F7F2B26DD3F18EE);
	rage::scrEngine::RegisterNativeHandler(0x2F7F2B26DD3F18EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F7F2B26DD3F18EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x2FA2494B47FDD009
	static auto nh_0x2FA2494B47FDD009 = rage::scrEngine::GetNativeHandler(0x2FA2494B47FDD009);
	rage::scrEngine::RegisterNativeHandler(0x2FA2494B47FDD009, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2FA2494B47FDD009(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x2FA3173480008493
	static auto nh_0x2FA3173480008493 = rage::scrEngine::GetNativeHandler(0x2FA3173480008493);
	rage::scrEngine::RegisterNativeHandler(0x2FA3173480008493, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2FA3173480008493(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x2FAB6614CE22E196
	static auto nh_0x2FAB6614CE22E196 = rage::scrEngine::GetNativeHandler(0x2FAB6614CE22E196);
	rage::scrEngine::RegisterNativeHandler(0x2FAB6614CE22E196, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2FAB6614CE22E196(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x2FCB133CA50A49EB
	static auto nh_0x2FCB133CA50A49EB = rage::scrEngine::GetNativeHandler(0x2FCB133CA50A49EB);
	rage::scrEngine::RegisterNativeHandler(0x2FCB133CA50A49EB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2FCB133CA50A49EB(cxt);
	});
	        
	AddResultCleaner(0x2FCB133CA50A49EB, ResultCleaner<int>);

	// SOCIALCLUB/0x3001BEF2FECA3680 (result cleaner only)
	AddResultCleaner(0x3001BEF2FECA3680, ResultCleaner<bool>);

	// GRAPHICS/0x30432A0118736E00 (result cleaner only)
	AddResultCleaner(0x30432A0118736E00, ResultCleaner<int>);

	// CAM/0x3044240D2E0FA842 (result cleaner only)
	AddResultCleaner(0x3044240D2E0FA842, ResultCleaner<bool>);

	// MISC/0x31125FD509D9043F
	static auto nh_0x31125FD509D9043F = rage::scrEngine::GetNativeHandler(0x31125FD509D9043F);
	rage::scrEngine::RegisterNativeHandler(0x31125FD509D9043F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x31125FD509D9043F(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x31574B1B41268673
	static auto nh_0x31574B1B41268673 = rage::scrEngine::GetNativeHandler(0x31574B1B41268673);
	rage::scrEngine::RegisterNativeHandler(0x31574B1B41268673, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x31574B1B41268673(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x316DB59CD14C1774
	static auto nh_0x316DB59CD14C1774 = rage::scrEngine::GetNativeHandler(0x316DB59CD14C1774);
	rage::scrEngine::RegisterNativeHandler(0x316DB59CD14C1774, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x316DB59CD14C1774(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x31BA138F6304FB9F
	static auto nh_0x31BA138F6304FB9F = rage::scrEngine::GetNativeHandler(0x31BA138F6304FB9F);
	rage::scrEngine::RegisterNativeHandler(0x31BA138F6304FB9F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x31BA138F6304FB9F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x31E90B8873A4CD3B
	static auto nh_0x31E90B8873A4CD3B = rage::scrEngine::GetNativeHandler(0x31E90B8873A4CD3B);
	rage::scrEngine::RegisterNativeHandler(0x31E90B8873A4CD3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31E90B8873A4CD3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x31F924B53EADDF65
	static auto nh_0x31F924B53EADDF65 = rage::scrEngine::GetNativeHandler(0x31F924B53EADDF65);
	rage::scrEngine::RegisterNativeHandler(0x31F924B53EADDF65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31F924B53EADDF65(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x324C5AA411DA7737
	static auto nh_0x324C5AA411DA7737 = rage::scrEngine::GetNativeHandler(0x324C5AA411DA7737);
	rage::scrEngine::RegisterNativeHandler(0x324C5AA411DA7737, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x324C5AA411DA7737(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x32CAC93C9DE73D32 (result cleaner only)
	AddResultCleaner(0x32CAC93C9DE73D32, ResultCleaner<int>);

	// NETWORK/0x32EBD154CB6B8B99
	static auto nh_0x32EBD154CB6B8B99 = rage::scrEngine::GetNativeHandler(0x32EBD154CB6B8B99);
	rage::scrEngine::RegisterNativeHandler(0x32EBD154CB6B8B99, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x32EBD154CB6B8B99(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x32F34FF7F617643B
	static auto nh_0x32F34FF7F617643B = rage::scrEngine::GetNativeHandler(0x32F34FF7F617643B);
	rage::scrEngine::RegisterNativeHandler(0x32F34FF7F617643B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x32F34FF7F617643B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x336B3D200AB007CB
	static auto nh_0x336B3D200AB007CB = rage::scrEngine::GetNativeHandler(0x336B3D200AB007CB);
	rage::scrEngine::RegisterNativeHandler(0x336B3D200AB007CB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x336B3D200AB007CB(cxt);
	});
	        
	AddResultCleaner(0x336B3D200AB007CB, ResultCleaner<int>);

	// RECORDING/0x33D47E85B476ABCD (result cleaner only)
	AddResultCleaner(0x33D47E85B476ABCD, ResultCleaner<bool>);

	// STATS/0x33D72899E24C3365
	static auto nh_0x33D72899E24C3365 = rage::scrEngine::GetNativeHandler(0x33D72899E24C3365);
	rage::scrEngine::RegisterNativeHandler(0x33D72899E24C3365, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x33D72899E24C3365(cxt);
	});
	        
	AddResultCleaner(0x33D72899E24C3365, ResultCleaner<int>);

	// SOCIALCLUB/0x33DF47CC0642061B (result cleaner only)
	AddResultCleaner(0x33DF47CC0642061B, ResultCleaner<bool>);

	// VEHICLE/0x3441CAD2F2231923
	static auto nh_0x3441CAD2F2231923 = rage::scrEngine::GetNativeHandler(0x3441CAD2F2231923);
	rage::scrEngine::RegisterNativeHandler(0x3441CAD2F2231923, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3441CAD2F2231923(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x346EF3ECAAAB149E
	static auto nh_0x346EF3ECAAAB149E = rage::scrEngine::GetNativeHandler(0x346EF3ECAAAB149E);
	rage::scrEngine::RegisterNativeHandler(0x346EF3ECAAAB149E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x346EF3ECAAAB149E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x34770B9CE0E03B91
	static auto nh_0x34770B9CE0E03B91 = rage::scrEngine::GetNativeHandler(0x34770B9CE0E03B91);
	rage::scrEngine::RegisterNativeHandler(0x34770B9CE0E03B91, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x34770B9CE0E03B91(cxt);
	});
	        
	AddResultCleaner(0x34770B9CE0E03B91, ResultCleaner<bool>);

	// ENTITY/0x352E2B5CF420BF3B
	static auto nh_0x352E2B5CF420BF3B = rage::scrEngine::GetNativeHandler(0x352E2B5CF420BF3B);
	rage::scrEngine::RegisterNativeHandler(0x352E2B5CF420BF3B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x352E2B5CF420BF3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x357B152EF96C30B6 (result cleaner only)
	AddResultCleaner(0x357B152EF96C30B6, ResultCleaner<int>);

	// HUD/0x35A3CD97B2C0A6D2
	static auto nh_0x35A3CD97B2C0A6D2 = rage::scrEngine::GetNativeHandler(0x35A3CD97B2C0A6D2);
	rage::scrEngine::RegisterNativeHandler(0x35A3CD97B2C0A6D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35A3CD97B2C0A6D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x35BB21DE06784373
	static auto nh_0x35BB21DE06784373 = rage::scrEngine::GetNativeHandler(0x35BB21DE06784373);
	rage::scrEngine::RegisterNativeHandler(0x35BB21DE06784373, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x35BB21DE06784373(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x35E0654F4BAD7971
	static auto nh_0x35E0654F4BAD7971 = rage::scrEngine::GetNativeHandler(0x35E0654F4BAD7971);
	rage::scrEngine::RegisterNativeHandler(0x35E0654F4BAD7971, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35E0654F4BAD7971(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x36391F397731595D
	static auto nh_0x36391F397731595D = rage::scrEngine::GetNativeHandler(0x36391F397731595D);
	rage::scrEngine::RegisterNativeHandler(0x36391F397731595D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x36391F397731595D(cxt);
	});
	        
	AddResultCleaner(0x36391F397731595D, ResultCleaner<int>);

	// NETWORK/0x367EF5E2F439B4C6
	static auto nh_0x367EF5E2F439B4C6 = rage::scrEngine::GetNativeHandler(0x367EF5E2F439B4C6);
	rage::scrEngine::RegisterNativeHandler(0x367EF5E2F439B4C6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x367EF5E2F439B4C6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0x36CCB9BE67B970FD
	static auto nh_0x36CCB9BE67B970FD = rage::scrEngine::GetNativeHandler(0x36CCB9BE67B970FD);
	rage::scrEngine::RegisterNativeHandler(0x36CCB9BE67B970FD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36CCB9BE67B970FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x36DE109527A2C0C4
	static auto nh_0x36DE109527A2C0C4 = rage::scrEngine::GetNativeHandler(0x36DE109527A2C0C4);
	rage::scrEngine::RegisterNativeHandler(0x36DE109527A2C0C4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36DE109527A2C0C4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x36F1B38855F2A8DF
	static auto nh_0x36F1B38855F2A8DF = rage::scrEngine::GetNativeHandler(0x36F1B38855F2A8DF);
	rage::scrEngine::RegisterNativeHandler(0x36F1B38855F2A8DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36F1B38855F2A8DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x36F32DE87082343E
	static auto nh_0x36F32DE87082343E = rage::scrEngine::GetNativeHandler(0x36F32DE87082343E);
	rage::scrEngine::RegisterNativeHandler(0x36F32DE87082343E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x36F32DE87082343E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x36F6626459D91457
	static auto nh_0x36F6626459D91457 = rage::scrEngine::GetNativeHandler(0x36F6626459D91457);
	rage::scrEngine::RegisterNativeHandler(0x36F6626459D91457, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36F6626459D91457(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x37D5F739FD494675
	static auto nh_0x37D5F739FD494675 = rage::scrEngine::GetNativeHandler(0x37D5F739FD494675);
	rage::scrEngine::RegisterNativeHandler(0x37D5F739FD494675, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x37D5F739FD494675(cxt);
	});
	        
	AddResultCleaner(0x37D5F739FD494675, ResultCleaner<int>);

	// CAM/0x380B4968D1E09E55
	static auto nh_0x380B4968D1E09E55 = rage::scrEngine::GetNativeHandler(0x380B4968D1E09E55);
	rage::scrEngine::RegisterNativeHandler(0x380B4968D1E09E55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x380B4968D1E09E55(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x38491439B6BA7F7D
	static auto nh_0x38491439B6BA7F7D = rage::scrEngine::GetNativeHandler(0x38491439B6BA7F7D);
	rage::scrEngine::RegisterNativeHandler(0x38491439B6BA7F7D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x38491439B6BA7F7D(cxt);
	});
	        
	AddResultCleaner(0x38491439B6BA7F7D, ResultCleaner<float>);

	// NETWORK/0x3855FB5EB2C5E8B2
	static auto nh_0x3855FB5EB2C5E8B2 = rage::scrEngine::GetNativeHandler(0x3855FB5EB2C5E8B2);
	rage::scrEngine::RegisterNativeHandler(0x3855FB5EB2C5E8B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3855FB5EB2C5E8B2(cxt);
	});
	        
	AddResultCleaner(0x3855FB5EB2C5E8B2, ResultCleaner<int>);

	// NETWORK/0x38B7C51AB1EDC7D8
	static auto nh_0x38B7C51AB1EDC7D8 = rage::scrEngine::GetNativeHandler(0x38B7C51AB1EDC7D8);
	rage::scrEngine::RegisterNativeHandler(0x38B7C51AB1EDC7D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x38B7C51AB1EDC7D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x38BAAA5DD4C9D19F
	static auto nh_0x38BAAA5DD4C9D19F = rage::scrEngine::GetNativeHandler(0x38BAAA5DD4C9D19F);
	rage::scrEngine::RegisterNativeHandler(0x38BAAA5DD4C9D19F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x38BAAA5DD4C9D19F(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x38C1CB1CB119A016
	static auto nh_0x38C1CB1CB119A016 = rage::scrEngine::GetNativeHandler(0x38C1CB1CB119A016);
	rage::scrEngine::RegisterNativeHandler(0x38C1CB1CB119A016, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x38C1CB1CB119A016(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x393BD2275CEB7793 (result cleaner only)
	AddResultCleaner(0x393BD2275CEB7793, ResultCleaner<int>);

	// MISC/0x39455BF4F4F55186
	static auto nh_0x39455BF4F4F55186 = rage::scrEngine::GetNativeHandler(0x39455BF4F4F55186);
	rage::scrEngine::RegisterNativeHandler(0x39455BF4F4F55186, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		nh_0x39455BF4F4F55186(cxt);
	});
	        
	AddResultCleaner(0x39455BF4F4F55186, ResultCleaner<int>);

	// OBJECT/0x394CD08E31313C28
	static auto nh_0x394CD08E31313C28 = rage::scrEngine::GetNativeHandler(0x394CD08E31313C28);
	rage::scrEngine::RegisterNativeHandler(0x394CD08E31313C28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x394CD08E31313C28(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x397BAA01068BAA96 (result cleaner only)
	AddResultCleaner(0x397BAA01068BAA96, ResultCleaner<int>);

	// NETWORK/0x39917E1B4CB0F911
	static auto nh_0x39917E1B4CB0F911 = rage::scrEngine::GetNativeHandler(0x39917E1B4CB0F911);
	rage::scrEngine::RegisterNativeHandler(0x39917E1B4CB0F911, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x39917E1B4CB0F911(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x39A5FB7EAF150840
	static auto nh_0x39A5FB7EAF150840 = rage::scrEngine::GetNativeHandler(0x39A5FB7EAF150840);
	rage::scrEngine::RegisterNativeHandler(0x39A5FB7EAF150840, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x39A5FB7EAF150840(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x3B2FD68DB5F8331C
	static auto nh_0x3B2FD68DB5F8331C = rage::scrEngine::GetNativeHandler(0x3B2FD68DB5F8331C);
	rage::scrEngine::RegisterNativeHandler(0x3B2FD68DB5F8331C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B2FD68DB5F8331C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x3B458DDB57038F08
	static auto nh_0x3B458DDB57038F08 = rage::scrEngine::GetNativeHandler(0x3B458DDB57038F08);
	rage::scrEngine::RegisterNativeHandler(0x3B458DDB57038F08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B458DDB57038F08(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x3BD770D281982DB5
	static auto nh_0x3BD770D281982DB5 = rage::scrEngine::GetNativeHandler(0x3BD770D281982DB5);
	rage::scrEngine::RegisterNativeHandler(0x3BD770D281982DB5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3BD770D281982DB5(cxt);
	});
	        
	AddResultCleaner(0x3BD770D281982DB5, ResultCleaner<int>);

	// NETWORK/0x3C5C1E2C2FF814B1
	static auto nh_0x3C5C1E2C2FF814B1 = rage::scrEngine::GetNativeHandler(0x3C5C1E2C2FF814B1);
	rage::scrEngine::RegisterNativeHandler(0x3C5C1E2C2FF814B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C5C1E2C2FF814B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x3C788E7F6438754D
	static auto nh_0x3C788E7F6438754D = rage::scrEngine::GetNativeHandler(0x3C788E7F6438754D);
	rage::scrEngine::RegisterNativeHandler(0x3C788E7F6438754D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C788E7F6438754D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x3DE3AA516FB126A4
	static auto nh_0x3DE3AA516FB126A4 = rage::scrEngine::GetNativeHandler(0x3DE3AA516FB126A4);
	rage::scrEngine::RegisterNativeHandler(0x3DE3AA516FB126A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3DE3AA516FB126A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0x3E38E28A1D80DDF6 (result cleaner only)
	AddResultCleaner(0x3E38E28A1D80DDF6, ResultCleaner<bool>);

	// PED/0x3E9679C1DFCF422C
	static auto nh_0x3E9679C1DFCF422C = rage::scrEngine::GetNativeHandler(0x3E9679C1DFCF422C);
	rage::scrEngine::RegisterNativeHandler(0x3E9679C1DFCF422C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3E9679C1DFCF422C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x3EBEAC6C3F81F6BD
	static auto nh_0x3EBEAC6C3F81F6BD = rage::scrEngine::GetNativeHandler(0x3EBEAC6C3F81F6BD);
	rage::scrEngine::RegisterNativeHandler(0x3EBEAC6C3F81F6BD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3EBEAC6C3F81F6BD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x3FA36981311FA4FF
	static auto nh_0x3FA36981311FA4FF = rage::scrEngine::GetNativeHandler(0x3FA36981311FA4FF);
	rage::scrEngine::RegisterNativeHandler(0x3FA36981311FA4FF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3FA36981311FA4FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x3FC795691834481D
	static auto nh_0x3FC795691834481D = rage::scrEngine::GetNativeHandler(0x3FC795691834481D);
	rage::scrEngine::RegisterNativeHandler(0x3FC795691834481D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3FC795691834481D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x4008EDF7D6E48175
	static auto nh_0x4008EDF7D6E48175 = rage::scrEngine::GetNativeHandler(0x4008EDF7D6E48175);
	rage::scrEngine::RegisterNativeHandler(0x4008EDF7D6E48175, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4008EDF7D6E48175(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x405DC2AEF6AF95B9
	static auto nh_0x405DC2AEF6AF95B9 = rage::scrEngine::GetNativeHandler(0x405DC2AEF6AF95B9);
	rage::scrEngine::RegisterNativeHandler(0x405DC2AEF6AF95B9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x405DC2AEF6AF95B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x407DC5E97DB1A4D3
	static auto nh_0x407DC5E97DB1A4D3 = rage::scrEngine::GetNativeHandler(0x407DC5E97DB1A4D3);
	rage::scrEngine::RegisterNativeHandler(0x407DC5E97DB1A4D3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x407DC5E97DB1A4D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x4128464231E3CA0B
	static auto nh_0x4128464231E3CA0B = rage::scrEngine::GetNativeHandler(0x4128464231E3CA0B);
	rage::scrEngine::RegisterNativeHandler(0x4128464231E3CA0B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x4128464231E3CA0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x41290B40FA63E6DA
	static auto nh_0x41290B40FA63E6DA = rage::scrEngine::GetNativeHandler(0x41290B40FA63E6DA);
	rage::scrEngine::RegisterNativeHandler(0x41290B40FA63E6DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x41290B40FA63E6DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x412F1364FA066CFB
	static auto nh_0x412F1364FA066CFB = rage::scrEngine::GetNativeHandler(0x412F1364FA066CFB);
	rage::scrEngine::RegisterNativeHandler(0x412F1364FA066CFB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x412F1364FA066CFB(cxt);
	});
	        
	AddResultCleaner(0x412F1364FA066CFB, ResultCleaner<int>);

	// HUD/0x41350B4FC28E3941
	static auto nh_0x41350B4FC28E3941 = rage::scrEngine::GetNativeHandler(0x41350B4FC28E3941);
	rage::scrEngine::RegisterNativeHandler(0x41350B4FC28E3941, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x41350B4FC28E3941(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x419615486BBF1956
	static auto nh_0x419615486BBF1956 = rage::scrEngine::GetNativeHandler(0x419615486BBF1956);
	rage::scrEngine::RegisterNativeHandler(0x419615486BBF1956, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x419615486BBF1956(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x4237E822315D8BA9 (result cleaner only)
	AddResultCleaner(0x4237E822315D8BA9, ResultCleaner<bool>);

	// PED/0x425AECF167663F48
	static auto nh_0x425AECF167663F48 = rage::scrEngine::GetNativeHandler(0x425AECF167663F48);
	rage::scrEngine::RegisterNativeHandler(0x425AECF167663F48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x425AECF167663F48(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x4282E08174868BE3 (result cleaner only)
	AddResultCleaner(0x4282E08174868BE3, ResultCleaner<int>);

	// VEHICLE/0x428AD3E26C8D9EB0
	static auto nh_0x428AD3E26C8D9EB0 = rage::scrEngine::GetNativeHandler(0x428AD3E26C8D9EB0);
	rage::scrEngine::RegisterNativeHandler(0x428AD3E26C8D9EB0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x428AD3E26C8D9EB0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x430A7631A84C9BE7
	static auto nh_0x430A7631A84C9BE7 = rage::scrEngine::GetNativeHandler(0x430A7631A84C9BE7);
	rage::scrEngine::RegisterNativeHandler(0x430A7631A84C9BE7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x430A7631A84C9BE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x4348BFDA56023A2F
	static auto nh_0x4348BFDA56023A2F = rage::scrEngine::GetNativeHandler(0x4348BFDA56023A2F);
	rage::scrEngine::RegisterNativeHandler(0x4348BFDA56023A2F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4348BFDA56023A2F(cxt);
	});
	        
	AddResultCleaner(0x4348BFDA56023A2F, ResultCleaner<int>);

	// AUDIO/0x43FA0DFC5DF87815
	static auto nh_0x43FA0DFC5DF87815 = rage::scrEngine::GetNativeHandler(0x43FA0DFC5DF87815);
	rage::scrEngine::RegisterNativeHandler(0x43FA0DFC5DF87815, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43FA0DFC5DF87815(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x43FA7CBE20DAB219
	static auto nh_0x43FA7CBE20DAB219 = rage::scrEngine::GetNativeHandler(0x43FA7CBE20DAB219);
	rage::scrEngine::RegisterNativeHandler(0x43FA7CBE20DAB219, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x43FA7CBE20DAB219(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x4419966C9936071A
	static auto nh_0x4419966C9936071A = rage::scrEngine::GetNativeHandler(0x4419966C9936071A);
	rage::scrEngine::RegisterNativeHandler(0x4419966C9936071A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4419966C9936071A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x444C4525ECE0A4B9
	static auto nh_0x444C4525ECE0A4B9 = rage::scrEngine::GetNativeHandler(0x444C4525ECE0A4B9);
	rage::scrEngine::RegisterNativeHandler(0x444C4525ECE0A4B9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x444C4525ECE0A4B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x44919CC079BB60BF
	static auto nh_0x44919CC079BB60BF = rage::scrEngine::GetNativeHandler(0x44919CC079BB60BF);
	rage::scrEngine::RegisterNativeHandler(0x44919CC079BB60BF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x44919CC079BB60BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x44ACA259D67651DB
	static auto nh_0x44ACA259D67651DB = rage::scrEngine::GetNativeHandler(0x44ACA259D67651DB);
	rage::scrEngine::RegisterNativeHandler(0x44ACA259D67651DB, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x44ACA259D67651DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x450819D8CF90C416 (result cleaner only)
	AddResultCleaner(0x450819D8CF90C416, ResultCleaner<bool>);

	// NETWORK/0x45E816772E93A9DB (result cleaner only)
	AddResultCleaner(0x45E816772E93A9DB, ResultCleaner<int>);

	// PLAYER/0x4669B3ED80F24B4E
	static auto nh_0x4669B3ED80F24B4E = rage::scrEngine::GetNativeHandler(0x4669B3ED80F24B4E);
	rage::scrEngine::RegisterNativeHandler(0x4669B3ED80F24B4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4669B3ED80F24B4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x469F2ECDEC046337
	static auto nh_0x469F2ECDEC046337 = rage::scrEngine::GetNativeHandler(0x469F2ECDEC046337);
	rage::scrEngine::RegisterNativeHandler(0x469F2ECDEC046337, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x469F2ECDEC046337(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x46B05BCAE43856B0 (result cleaner only)
	AddResultCleaner(0x46B05BCAE43856B0, ResultCleaner<bool>);

	// GRAPHICS/0x46D1A61A21F566FC
	static auto nh_0x46D1A61A21F566FC = rage::scrEngine::GetNativeHandler(0x46D1A61A21F566FC);
	rage::scrEngine::RegisterNativeHandler(0x46D1A61A21F566FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46D1A61A21F566FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x46F3ADD1E2D5BAF2
	static auto nh_0x46F3ADD1E2D5BAF2 = rage::scrEngine::GetNativeHandler(0x46F3ADD1E2D5BAF2);
	rage::scrEngine::RegisterNativeHandler(0x46F3ADD1E2D5BAF2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x46F3ADD1E2D5BAF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x472397322E92A856
	static auto nh_0x472397322E92A856 = rage::scrEngine::GetNativeHandler(0x472397322E92A856);
	rage::scrEngine::RegisterNativeHandler(0x472397322E92A856, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x472397322E92A856(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x4737980E8A283806
	static auto nh_0x4737980E8A283806 = rage::scrEngine::GetNativeHandler(0x4737980E8A283806);
	rage::scrEngine::RegisterNativeHandler(0x4737980E8A283806, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4737980E8A283806(cxt);
	});
	        
	AddResultCleaner(0x4737980E8A283806, ResultCleaner<bool>);

	// NETWORK/0x4811BBAC21C5FCD5
	static auto nh_0x4811BBAC21C5FCD5 = rage::scrEngine::GetNativeHandler(0x4811BBAC21C5FCD5);
	rage::scrEngine::RegisterNativeHandler(0x4811BBAC21C5FCD5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4811BBAC21C5FCD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x483ACA1176CA93F1
	static auto nh_0x483ACA1176CA93F1 = rage::scrEngine::GetNativeHandler(0x483ACA1176CA93F1);
	rage::scrEngine::RegisterNativeHandler(0x483ACA1176CA93F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x483ACA1176CA93F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x48621C9FCA3EBD28
	static auto nh_0x48621C9FCA3EBD28 = rage::scrEngine::GetNativeHandler(0x48621C9FCA3EBD28);
	rage::scrEngine::RegisterNativeHandler(0x48621C9FCA3EBD28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48621C9FCA3EBD28(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x487912FD248EFDDF
	static auto nh_0x487912FD248EFDDF = rage::scrEngine::GetNativeHandler(0x487912FD248EFDDF);
	rage::scrEngine::RegisterNativeHandler(0x487912FD248EFDDF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x487912FD248EFDDF(cxt);
	});
	        
	AddResultCleaner(0x487912FD248EFDDF, ResultCleaner<bool>);

	// CAM/0x4879E4FE39074CDF (result cleaner only)
	AddResultCleaner(0x4879E4FE39074CDF, ResultCleaner<bool>);

	// MISC/0x48F069265A0E4BEC
	static auto nh_0x48F069265A0E4BEC = rage::scrEngine::GetNativeHandler(0x48F069265A0E4BEC);
	rage::scrEngine::RegisterNativeHandler(0x48F069265A0E4BEC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x48F069265A0E4BEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x490861B88F4FD846
	static auto nh_0x490861B88F4FD846 = rage::scrEngine::GetNativeHandler(0x490861B88F4FD846);
	rage::scrEngine::RegisterNativeHandler(0x490861B88F4FD846, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x490861B88F4FD846(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x49E50BDB8BA4DAB2
	static auto nh_0x49E50BDB8BA4DAB2 = rage::scrEngine::GetNativeHandler(0x49E50BDB8BA4DAB2);
	rage::scrEngine::RegisterNativeHandler(0x49E50BDB8BA4DAB2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x49E50BDB8BA4DAB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x4A7D6E727F941747
	static auto nh_0x4A7D6E727F941747 = rage::scrEngine::GetNativeHandler(0x4A7D6E727F941747);
	rage::scrEngine::RegisterNativeHandler(0x4A7D6E727F941747, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4A7D6E727F941747(cxt);
	});
	        
	AddResultCleaner(0x4A7D6E727F941747, ResultCleaner<int>);

	// NETWORK/0x4A9FDE3A5A6D0437
	static auto nh_0x4A9FDE3A5A6D0437 = rage::scrEngine::GetNativeHandler(0x4A9FDE3A5A6D0437);
	rage::scrEngine::RegisterNativeHandler(0x4A9FDE3A5A6D0437, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A9FDE3A5A6D0437(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x4AD280EB48B2D8E6
	static auto nh_0x4AD280EB48B2D8E6 = rage::scrEngine::GetNativeHandler(0x4AD280EB48B2D8E6);
	rage::scrEngine::RegisterNativeHandler(0x4AD280EB48B2D8E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AD280EB48B2D8E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x4AD490AE1536933B
	static auto nh_0x4AD490AE1536933B = rage::scrEngine::GetNativeHandler(0x4AD490AE1536933B);
	rage::scrEngine::RegisterNativeHandler(0x4AD490AE1536933B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4AD490AE1536933B(cxt);
	});
	        
	AddResultCleaner(0x4AD490AE1536933B, ResultCleaner<int>);

	// GRAPHICS/0x4AF92ACD3141D96C
	static auto nh_0x4AF92ACD3141D96C = rage::scrEngine::GetNativeHandler(0x4AF92ACD3141D96C);
	rage::scrEngine::RegisterNativeHandler(0x4AF92ACD3141D96C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AF92ACD3141D96C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x4AFF7E02E485E92B
	static auto nh_0x4AFF7E02E485E92B = rage::scrEngine::GetNativeHandler(0x4AFF7E02E485E92B);
	rage::scrEngine::RegisterNativeHandler(0x4AFF7E02E485E92B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AFF7E02E485E92B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x4B5B620C9B59ED34
	static auto nh_0x4B5B620C9B59ED34 = rage::scrEngine::GetNativeHandler(0x4B5B620C9B59ED34);
	rage::scrEngine::RegisterNativeHandler(0x4B5B620C9B59ED34, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4B5B620C9B59ED34(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x4C134B4DF76025D0
	static auto nh_0x4C134B4DF76025D0 = rage::scrEngine::GetNativeHandler(0x4C134B4DF76025D0);
	rage::scrEngine::RegisterNativeHandler(0x4C134B4DF76025D0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4C134B4DF76025D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x4C2330E61D3DEB56 (result cleaner only)
	AddResultCleaner(0x4C2330E61D3DEB56, ResultCleaner<int>);

	// NETWORK/0x4C2A9FDC22377075
	static auto nh_0x4C2A9FDC22377075 = rage::scrEngine::GetNativeHandler(0x4C2A9FDC22377075);
	rage::scrEngine::RegisterNativeHandler(0x4C2A9FDC22377075, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4C2A9FDC22377075(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x4C3B75694F7E0D9C
	static auto nh_0x4C3B75694F7E0D9C = rage::scrEngine::GetNativeHandler(0x4C3B75694F7E0D9C);
	rage::scrEngine::RegisterNativeHandler(0x4C3B75694F7E0D9C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x4C3B75694F7E0D9C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x4C89FE2BDEB3F169 (result cleaner only)
	AddResultCleaner(0x4C89FE2BDEB3F169, ResultCleaner<int>);

	// NETWORK/0x4C9034162368E206 (result cleaner only)
	AddResultCleaner(0x4C9034162368E206, ResultCleaner<int>);

	// CUTSCENE/0x4CEBC1ED31E8925E
	static auto nh_0x4CEBC1ED31E8925E = rage::scrEngine::GetNativeHandler(0x4CEBC1ED31E8925E);
	rage::scrEngine::RegisterNativeHandler(0x4CEBC1ED31E8925E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4CEBC1ED31E8925E(cxt);
	});
	        
	AddResultCleaner(0x4CEBC1ED31E8925E, ResultCleaner<bool>);

	// NETWORK/0x4D02279C83BE69FE (result cleaner only)
	AddResultCleaner(0x4D02279C83BE69FE, ResultCleaner<int>);

	// BRAIN/0x4D953DF78EBF8158
	static auto nh_0x4D953DF78EBF8158 = rage::scrEngine::GetNativeHandler(0x4D953DF78EBF8158);
	rage::scrEngine::RegisterNativeHandler(0x4D953DF78EBF8158, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4D953DF78EBF8158(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x4D9D109F63FEE1D4
	static auto nh_0x4D9D109F63FEE1D4 = rage::scrEngine::GetNativeHandler(0x4D9D109F63FEE1D4);
	rage::scrEngine::RegisterNativeHandler(0x4D9D109F63FEE1D4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4D9D109F63FEE1D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x4DC416F246A41FC8
	static auto nh_0x4DC416F246A41FC8 = rage::scrEngine::GetNativeHandler(0x4DC416F246A41FC8);
	rage::scrEngine::RegisterNativeHandler(0x4DC416F246A41FC8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x4DC416F246A41FC8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x4DF7CFFF471A7FB1
	static auto nh_0x4DF7CFFF471A7FB1 = rage::scrEngine::GetNativeHandler(0x4DF7CFFF471A7FB1);
	rage::scrEngine::RegisterNativeHandler(0x4DF7CFFF471A7FB1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4DF7CFFF471A7FB1(cxt);
	});
	        
	AddResultCleaner(0x4DF7CFFF471A7FB1, ResultCleaner<bool>);

	// STREAMING/0x4E52E752C76E7E7A
	static auto nh_0x4E52E752C76E7E7A = rage::scrEngine::GetNativeHandler(0x4E52E752C76E7E7A);
	rage::scrEngine::RegisterNativeHandler(0x4E52E752C76E7E7A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4E52E752C76E7E7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x4ED9C8D6DA297639 (result cleaner only)
	AddResultCleaner(0x4ED9C8D6DA297639, ResultCleaner<int>);

	// CUTSCENE/0x4FCD976DA686580C
	static auto nh_0x4FCD976DA686580C = rage::scrEngine::GetNativeHandler(0x4FCD976DA686580C);
	rage::scrEngine::RegisterNativeHandler(0x4FCD976DA686580C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4FCD976DA686580C(cxt);
	});
	        
	AddResultCleaner(0x4FCD976DA686580C, ResultCleaner<int>);

	// STATS/0x4FCDBD3F0A813C25
	static auto nh_0x4FCDBD3F0A813C25 = rage::scrEngine::GetNativeHandler(0x4FCDBD3F0A813C25);
	rage::scrEngine::RegisterNativeHandler(0x4FCDBD3F0A813C25, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4FCDBD3F0A813C25(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/0x50276EF8172F5F12
	static auto nh_0x50276EF8172F5F12 = rage::scrEngine::GetNativeHandler(0x50276EF8172F5F12);
	rage::scrEngine::RegisterNativeHandler(0x50276EF8172F5F12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50276EF8172F5F12(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x5068F488DDB54DD8 (result cleaner only)
	AddResultCleaner(0x5068F488DDB54DD8, ResultCleaner<int>);

	// SOCIALCLUB/0x50A8A36201DBF83E (result cleaner only)
	AddResultCleaner(0x50A8A36201DBF83E, ResultCleaner<bool>);

	// PED/0x511F1A683387C7E2 (result cleaner only)
	AddResultCleaner(0x511F1A683387C7E2, ResultCleaner<int>);

	// VEHICLE/0x51DB102F4A3BA5E0
	static auto nh_0x51DB102F4A3BA5E0 = rage::scrEngine::GetNativeHandler(0x51DB102F4A3BA5E0);
	rage::scrEngine::RegisterNativeHandler(0x51DB102F4A3BA5E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x51DB102F4A3BA5E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x51F30DB60626A20E
	static auto nh_0x51F30DB60626A20E = rage::scrEngine::GetNativeHandler(0x51F30DB60626A20E);
	rage::scrEngine::RegisterNativeHandler(0x51F30DB60626A20E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x51F30DB60626A20E(cxt);
	});
	        
	AddResultCleaner(0x51F30DB60626A20E, ResultCleaner<bool>);

	// NETWORK/0x5324A0E3E4CE3570
	static auto nh_0x5324A0E3E4CE3570 = rage::scrEngine::GetNativeHandler(0x5324A0E3E4CE3570);
	rage::scrEngine::RegisterNativeHandler(0x5324A0E3E4CE3570, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x5324A0E3E4CE3570(cxt);
	});
	        
	AddResultCleaner(0x5324A0E3E4CE3570, ResultCleaner<bool>);

	// NETWORK/0x53C10C8BD774F2C9 (result cleaner only)
	AddResultCleaner(0x53C10C8BD774F2C9, ResultCleaner<int>);

	// STATS/0x53C31853EC9531FF
	static auto nh_0x53C31853EC9531FF = rage::scrEngine::GetNativeHandler(0x53C31853EC9531FF);
	rage::scrEngine::RegisterNativeHandler(0x53C31853EC9531FF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x53C31853EC9531FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x53CAE13E9B426993
	static auto nh_0x53CAE13E9B426993 = rage::scrEngine::GetNativeHandler(0x53CAE13E9B426993);
	rage::scrEngine::RegisterNativeHandler(0x53CAE13E9B426993, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x53CAE13E9B426993(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0x53DDC75BC3AC0A90
	static auto nh_0x53DDC75BC3AC0A90 = rage::scrEngine::GetNativeHandler(0x53DDC75BC3AC0A90);
	rage::scrEngine::RegisterNativeHandler(0x53DDC75BC3AC0A90, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x53DDC75BC3AC0A90(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x5407B7288D0478B7
	static auto nh_0x5407B7288D0478B7 = rage::scrEngine::GetNativeHandler(0x5407B7288D0478B7);
	rage::scrEngine::RegisterNativeHandler(0x5407B7288D0478B7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5407B7288D0478B7(cxt);
	});
	        
	AddResultCleaner(0x5407B7288D0478B7, ResultCleaner<int>);

	// WATER/0x547237AA71AB44DE
	static auto nh_0x547237AA71AB44DE = rage::scrEngine::GetNativeHandler(0x547237AA71AB44DE);
	rage::scrEngine::RegisterNativeHandler(0x547237AA71AB44DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x547237AA71AB44DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x54E22EA2C1956A8D
	static auto nh_0x54E22EA2C1956A8D = rage::scrEngine::GetNativeHandler(0x54E22EA2C1956A8D);
	rage::scrEngine::RegisterNativeHandler(0x54E22EA2C1956A8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x54E22EA2C1956A8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x54F157E0336A3822
	static auto nh_0x54F157E0336A3822 = rage::scrEngine::GetNativeHandler(0x54F157E0336A3822);
	rage::scrEngine::RegisterNativeHandler(0x54F157E0336A3822, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x54F157E0336A3822(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x5501B7A5CDB79D37
	static auto nh_0x5501B7A5CDB79D37 = rage::scrEngine::GetNativeHandler(0x5501B7A5CDB79D37);
	rage::scrEngine::RegisterNativeHandler(0x5501B7A5CDB79D37, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5501B7A5CDB79D37(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x55384438FC55AD8E
	static auto nh_0x55384438FC55AD8E = rage::scrEngine::GetNativeHandler(0x55384438FC55AD8E);
	rage::scrEngine::RegisterNativeHandler(0x55384438FC55AD8E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55384438FC55AD8E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x5539C3EBF104A53A
	static auto nh_0x5539C3EBF104A53A = rage::scrEngine::GetNativeHandler(0x5539C3EBF104A53A);
	rage::scrEngine::RegisterNativeHandler(0x5539C3EBF104A53A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5539C3EBF104A53A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x5574637681911FDA
	static auto nh_0x5574637681911FDA = rage::scrEngine::GetNativeHandler(0x5574637681911FDA);
	rage::scrEngine::RegisterNativeHandler(0x5574637681911FDA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x5574637681911FDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x559EBF901A8C68E0
	static auto nh_0x559EBF901A8C68E0 = rage::scrEngine::GetNativeHandler(0x559EBF901A8C68E0);
	rage::scrEngine::RegisterNativeHandler(0x559EBF901A8C68E0, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* gamerHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x559EBF901A8C68E0(cxt);
	});
	        
	AddResultCleaner(0x559EBF901A8C68E0, ResultCleaner<bool>);

	// MONEY/0x55A1E095DB052FA5
	static auto nh_0x55A1E095DB052FA5 = rage::scrEngine::GetNativeHandler(0x55A1E095DB052FA5);
	rage::scrEngine::RegisterNativeHandler(0x55A1E095DB052FA5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x55A1E095DB052FA5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x55A8BECAF28A4EB7 (result cleaner only)
	AddResultCleaner(0x55A8BECAF28A4EB7, ResultCleaner<int>);

	// AUDIO/0x55ECF4D13D9903B0
	static auto nh_0x55ECF4D13D9903B0 = rage::scrEngine::GetNativeHandler(0x55ECF4D13D9903B0);
	rage::scrEngine::RegisterNativeHandler(0x55ECF4D13D9903B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x55ECF4D13D9903B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x55F5A5F07134DE60
	static auto nh_0x55F5A5F07134DE60 = rage::scrEngine::GetNativeHandler(0x55F5A5F07134DE60);
	rage::scrEngine::RegisterNativeHandler(0x55F5A5F07134DE60, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55F5A5F07134DE60(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x55FCC0C390620314
	static auto nh_0x55FCC0C390620314 = rage::scrEngine::GetNativeHandler(0x55FCC0C390620314);
	rage::scrEngine::RegisterNativeHandler(0x55FCC0C390620314, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55FCC0C390620314(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x560B423D73015E77
	static auto nh_0x560B423D73015E77 = rage::scrEngine::GetNativeHandler(0x560B423D73015E77);
	rage::scrEngine::RegisterNativeHandler(0x560B423D73015E77, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x560B423D73015E77(cxt);
	});
	        
	AddResultCleaner(0x560B423D73015E77, ResultCleaner<int>);

	// STATS/0x5688585E6D563CD8
	static auto nh_0x5688585E6D563CD8 = rage::scrEngine::GetNativeHandler(0x5688585E6D563CD8);
	rage::scrEngine::RegisterNativeHandler(0x5688585E6D563CD8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5688585E6D563CD8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x56EB5E94318D3FB6
	static auto nh_0x56EB5E94318D3FB6 = rage::scrEngine::GetNativeHandler(0x56EB5E94318D3FB6);
	rage::scrEngine::RegisterNativeHandler(0x56EB5E94318D3FB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x56EB5E94318D3FB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x577599CCED639CA2
	static auto nh_0x577599CCED639CA2 = rage::scrEngine::GetNativeHandler(0x577599CCED639CA2);
	rage::scrEngine::RegisterNativeHandler(0x577599CCED639CA2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x577599CCED639CA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x57D760D55F54E071
	static auto nh_0x57D760D55F54E071 = rage::scrEngine::GetNativeHandler(0x57D760D55F54E071);
	rage::scrEngine::RegisterNativeHandler(0x57D760D55F54E071, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x57D760D55F54E071(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x583DF8E3D4AFBD98 (result cleaner only)
	AddResultCleaner(0x583DF8E3D4AFBD98, ResultCleaner<int>);

	// VEHICLE/0x5845066D8A1EA7F7
	static auto nh_0x5845066D8A1EA7F7 = rage::scrEngine::GetNativeHandler(0x5845066D8A1EA7F7);
	rage::scrEngine::RegisterNativeHandler(0x5845066D8A1EA7F7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x5845066D8A1EA7F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x584770794D758C18
	static auto nh_0x584770794D758C18 = rage::scrEngine::GetNativeHandler(0x584770794D758C18);
	rage::scrEngine::RegisterNativeHandler(0x584770794D758C18, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x584770794D758C18(cxt);
	});
	        
	AddResultCleaner(0x584770794D758C18, ResultCleaner<bool>);

	// AUDIO/0x58BB377BEC7CD5F4
	static auto nh_0x58BB377BEC7CD5F4 = rage::scrEngine::GetNativeHandler(0x58BB377BEC7CD5F4);
	rage::scrEngine::RegisterNativeHandler(0x58BB377BEC7CD5F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58BB377BEC7CD5F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x59328EB08C5CEB2B (result cleaner only)
	AddResultCleaner(0x59328EB08C5CEB2B, ResultCleaner<bool>);

	// HUD/0x593FEAE1F73392D4 (result cleaner only)
	AddResultCleaner(0x593FEAE1F73392D4, ResultCleaner<int>);

	// CAM/0x59424BD75174C9B1
	static auto nh_0x59424BD75174C9B1 = rage::scrEngine::GetNativeHandler(0x59424BD75174C9B1);
	rage::scrEngine::RegisterNativeHandler(0x59424BD75174C9B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x59424BD75174C9B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x59C3757B3B7408E8
	static auto nh_0x59C3757B3B7408E8 = rage::scrEngine::GetNativeHandler(0x59C3757B3B7408E8);
	rage::scrEngine::RegisterNativeHandler(0x59C3757B3B7408E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x59C3757B3B7408E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x59D421683D31835A
	static auto nh_0x59D421683D31835A = rage::scrEngine::GetNativeHandler(0x59D421683D31835A);
	rage::scrEngine::RegisterNativeHandler(0x59D421683D31835A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x59D421683D31835A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x5A34CD9C3C5BEC44
	static auto nh_0x5A34CD9C3C5BEC44 = rage::scrEngine::GetNativeHandler(0x5A34CD9C3C5BEC44);
	rage::scrEngine::RegisterNativeHandler(0x5A34CD9C3C5BEC44, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5A34CD9C3C5BEC44(cxt);
	});
	        
	AddResultCleaner(0x5A34CD9C3C5BEC44, ResultCleaner<bool>);

	// CAM/0x5A43C76F7FC7BA5F
	static auto nh_0x5A43C76F7FC7BA5F = rage::scrEngine::GetNativeHandler(0x5A43C76F7FC7BA5F);
	rage::scrEngine::RegisterNativeHandler(0x5A43C76F7FC7BA5F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5A43C76F7FC7BA5F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x5A556B229A169402 (result cleaner only)
	AddResultCleaner(0x5A556B229A169402, ResultCleaner<bool>);

	// PED/0x5A7F62FDA59759BD
	static auto nh_0x5A7F62FDA59759BD = rage::scrEngine::GetNativeHandler(0x5A7F62FDA59759BD);
	rage::scrEngine::RegisterNativeHandler(0x5A7F62FDA59759BD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5A7F62FDA59759BD(cxt);
		NullifyVoid(cxt);
	});
	        
	// REPLAY/0x5AD3932DAEB1E5D3
	static auto nh_0x5AD3932DAEB1E5D3 = rage::scrEngine::GetNativeHandler(0x5AD3932DAEB1E5D3);
	rage::scrEngine::RegisterNativeHandler(0x5AD3932DAEB1E5D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AD3932DAEB1E5D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x5B0316762AFD4A64 (result cleaner only)
	AddResultCleaner(0x5B0316762AFD4A64, ResultCleaner<int>);

	// MISC/0x5B1F2E327B6B6FE1 (result cleaner only)
	AddResultCleaner(0x5B1F2E327B6B6FE1, ResultCleaner<int>);

	// PED/0x5B6010B3CBC29095
	static auto nh_0x5B6010B3CBC29095 = rage::scrEngine::GetNativeHandler(0x5B6010B3CBC29095);
	rage::scrEngine::RegisterNativeHandler(0x5B6010B3CBC29095, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5B6010B3CBC29095(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/0x5B73C77D9EB66E24
	static auto nh_0x5B73C77D9EB66E24 = rage::scrEngine::GetNativeHandler(0x5B73C77D9EB66E24);
	rage::scrEngine::RegisterNativeHandler(0x5B73C77D9EB66E24, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B73C77D9EB66E24(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x5B9853296731E88D
	static auto nh_0x5B9853296731E88D = rage::scrEngine::GetNativeHandler(0x5B9853296731E88D);
	rage::scrEngine::RegisterNativeHandler(0x5B9853296731E88D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x5B9853296731E88D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x5BA68A0840D546AC
	static auto nh_0x5BA68A0840D546AC = rage::scrEngine::GetNativeHandler(0x5BA68A0840D546AC);
	rage::scrEngine::RegisterNativeHandler(0x5BA68A0840D546AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5BA68A0840D546AC(cxt);
	});
	        
	AddResultCleaner(0x5BA68A0840D546AC, ResultCleaner<int>);

	// VEHICLE/0x5BBCF35BF6E456F7
	static auto nh_0x5BBCF35BF6E456F7 = rage::scrEngine::GetNativeHandler(0x5BBCF35BF6E456F7);
	rage::scrEngine::RegisterNativeHandler(0x5BBCF35BF6E456F7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5BBCF35BF6E456F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x5BD5F255321C4AAF
	static auto nh_0x5BD5F255321C4AAF = rage::scrEngine::GetNativeHandler(0x5BD5F255321C4AAF);
	rage::scrEngine::RegisterNativeHandler(0x5BD5F255321C4AAF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5BD5F255321C4AAF(cxt);
	});
	        
	AddResultCleaner(0x5BD5F255321C4AAF, ResultCleaner<int>);

	// STATS/0x5BF29846C6527C54
	static auto nh_0x5BF29846C6527C54 = rage::scrEngine::GetNativeHandler(0x5BF29846C6527C54);
	rage::scrEngine::RegisterNativeHandler(0x5BF29846C6527C54, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x5BF29846C6527C54(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x5C3B791D580E0BC2
	static auto nh_0x5C3B791D580E0BC2 = rage::scrEngine::GetNativeHandler(0x5C3B791D580E0BC2);
	rage::scrEngine::RegisterNativeHandler(0x5C3B791D580E0BC2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C3B791D580E0BC2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x5C41E6BABC9E2112
	static auto nh_0x5C41E6BABC9E2112 = rage::scrEngine::GetNativeHandler(0x5C41E6BABC9E2112);
	rage::scrEngine::RegisterNativeHandler(0x5C41E6BABC9E2112, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5C41E6BABC9E2112(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x5C48A1D6E3B33179 (result cleaner only)
	AddResultCleaner(0x5C48A1D6E3B33179, ResultCleaner<bool>);

	// NETWORK/0x5C497525F803486B
	static auto nh_0x5C497525F803486B = rage::scrEngine::GetNativeHandler(0x5C497525F803486B);
	rage::scrEngine::RegisterNativeHandler(0x5C497525F803486B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C497525F803486B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x5CDAED54B34B0ED0
	static auto nh_0x5CDAED54B34B0ED0 = rage::scrEngine::GetNativeHandler(0x5CDAED54B34B0ED0);
	rage::scrEngine::RegisterNativeHandler(0x5CDAED54B34B0ED0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5CDAED54B34B0ED0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x5D96CFB59DA076A0
	static auto nh_0x5D96CFB59DA076A0 = rage::scrEngine::GetNativeHandler(0x5D96CFB59DA076A0);
	rage::scrEngine::RegisterNativeHandler(0x5D96CFB59DA076A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D96CFB59DA076A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x5DBF05DB5926D089
	static auto nh_0x5DBF05DB5926D089 = rage::scrEngine::GetNativeHandler(0x5DBF05DB5926D089);
	rage::scrEngine::RegisterNativeHandler(0x5DBF05DB5926D089, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5DBF05DB5926D089(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x5DEBD9C4DC995692
	static auto nh_0x5DEBD9C4DC995692 = rage::scrEngine::GetNativeHandler(0x5DEBD9C4DC995692);
	rage::scrEngine::RegisterNativeHandler(0x5DEBD9C4DC995692, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5DEBD9C4DC995692(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x5E3AA4CA2B6FB0EE
	static auto nh_0x5E3AA4CA2B6FB0EE = rage::scrEngine::GetNativeHandler(0x5E3AA4CA2B6FB0EE);
	rage::scrEngine::RegisterNativeHandler(0x5E3AA4CA2B6FB0EE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5E3AA4CA2B6FB0EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x5E569EC46EC21CAE
	static auto nh_0x5E569EC46EC21CAE = rage::scrEngine::GetNativeHandler(0x5E569EC46EC21CAE);
	rage::scrEngine::RegisterNativeHandler(0x5E569EC46EC21CAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E569EC46EC21CAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x5EAD2BF6484852E4 (result cleaner only)
	AddResultCleaner(0x5EAD2BF6484852E4, ResultCleaner<bool>);

	// NETWORK/0x5ECD378EE64450AB
	static auto nh_0x5ECD378EE64450AB = rage::scrEngine::GetNativeHandler(0x5ECD378EE64450AB);
	rage::scrEngine::RegisterNativeHandler(0x5ECD378EE64450AB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5ECD378EE64450AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x5EDEF0CF8C1DAB3C (result cleaner only)
	AddResultCleaner(0x5EDEF0CF8C1DAB3C, ResultCleaner<bool>);

	// VEHICLE/0x5EE5632F47AE9695
	static auto nh_0x5EE5632F47AE9695 = rage::scrEngine::GetNativeHandler(0x5EE5632F47AE9695);
	rage::scrEngine::RegisterNativeHandler(0x5EE5632F47AE9695, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5EE5632F47AE9695(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x5F456788B05FAEAC
	static auto nh_0x5F456788B05FAEAC = rage::scrEngine::GetNativeHandler(0x5F456788B05FAEAC);
	rage::scrEngine::RegisterNativeHandler(0x5F456788B05FAEAC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x5F456788B05FAEAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x5F6DF3D92271E8A1
	static auto nh_0x5F6DF3D92271E8A1 = rage::scrEngine::GetNativeHandler(0x5F6DF3D92271E8A1);
	rage::scrEngine::RegisterNativeHandler(0x5F6DF3D92271E8A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F6DF3D92271E8A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x5FC472C501CCADB3 (result cleaner only)
	AddResultCleaner(0x5FC472C501CCADB3, ResultCleaner<bool>);

	// STATS/0x5FF2C33B13A02A11
	static auto nh_0x5FF2C33B13A02A11 = rage::scrEngine::GetNativeHandler(0x5FF2C33B13A02A11);
	rage::scrEngine::RegisterNativeHandler(0x5FF2C33B13A02A11, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5FF2C33B13A02A11(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x600F8CB31C7AAB6E
	static auto nh_0x600F8CB31C7AAB6E = rage::scrEngine::GetNativeHandler(0x600F8CB31C7AAB6E);
	rage::scrEngine::RegisterNativeHandler(0x600F8CB31C7AAB6E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x600F8CB31C7AAB6E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x60EDD13EB3AC1FF3 (result cleaner only)
	AddResultCleaner(0x60EDD13EB3AC1FF3, ResultCleaner<bool>);

	// STATS/0x60EEDC12AF66E846
	static auto nh_0x60EEDC12AF66E846 = rage::scrEngine::GetNativeHandler(0x60EEDC12AF66E846);
	rage::scrEngine::RegisterNativeHandler(0x60EEDC12AF66E846, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x60EEDC12AF66E846(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0x6100B3CEFD43452E
	static auto nh_0x6100B3CEFD43452E = rage::scrEngine::GetNativeHandler(0x6100B3CEFD43452E);
	rage::scrEngine::RegisterNativeHandler(0x6100B3CEFD43452E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6100B3CEFD43452E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x613F125BA3BD2EB9 (result cleaner only)
	AddResultCleaner(0x613F125BA3BD2EB9, ResultCleaner<bool>);

	// GRAPHICS/0x615D3925E87A3B26
	static auto nh_0x615D3925E87A3B26 = rage::scrEngine::GetNativeHandler(0x615D3925E87A3B26);
	rage::scrEngine::RegisterNativeHandler(0x615D3925E87A3B26, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x615D3925E87A3B26(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x617F49C2668E6155 (result cleaner only)
	AddResultCleaner(0x617F49C2668E6155, ResultCleaner<int>);

	// GRAPHICS/0x61F95E5BB3E0A8C6
	static auto nh_0x61F95E5BB3E0A8C6 = rage::scrEngine::GetNativeHandler(0x61F95E5BB3E0A8C6);
	rage::scrEngine::RegisterNativeHandler(0x61F95E5BB3E0A8C6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x61F95E5BB3E0A8C6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x62374889A4D59F72
	static auto nh_0x62374889A4D59F72 = rage::scrEngine::GetNativeHandler(0x62374889A4D59F72);
	rage::scrEngine::RegisterNativeHandler(0x62374889A4D59F72, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x62374889A4D59F72(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x62454A641B41F3C5
	static auto nh_0x62454A641B41F3C5 = rage::scrEngine::GetNativeHandler(0x62454A641B41F3C5);
	rage::scrEngine::RegisterNativeHandler(0x62454A641B41F3C5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x62454A641B41F3C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x629526ABA383BCAA
	static auto nh_0x629526ABA383BCAA = rage::scrEngine::GetNativeHandler(0x629526ABA383BCAA);
	rage::scrEngine::RegisterNativeHandler(0x629526ABA383BCAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x629526ABA383BCAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x62E849B7EB28E770
	static auto nh_0x62E849B7EB28E770 = rage::scrEngine::GetNativeHandler(0x62E849B7EB28E770);
	rage::scrEngine::RegisterNativeHandler(0x62E849B7EB28E770, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x62E849B7EB28E770(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x62ECFCFDEE7885D6
	static auto nh_0x62ECFCFDEE7885D6 = rage::scrEngine::GetNativeHandler(0x62ECFCFDEE7885D6);
	rage::scrEngine::RegisterNativeHandler(0x62ECFCFDEE7885D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x62ECFCFDEE7885D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x63B406D7884BFA95 (result cleaner only)
	AddResultCleaner(0x63B406D7884BFA95, ResultCleaner<int>);

	// STREAMING/0x63EB2B972A218CAC
	static auto nh_0x63EB2B972A218CAC = rage::scrEngine::GetNativeHandler(0x63EB2B972A218CAC);
	rage::scrEngine::RegisterNativeHandler(0x63EB2B972A218CAC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63EB2B972A218CAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x63ECF581BC70E363
	static auto nh_0x63ECF581BC70E363 = rage::scrEngine::GetNativeHandler(0x63ECF581BC70E363);
	rage::scrEngine::RegisterNativeHandler(0x63ECF581BC70E363, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x63ECF581BC70E363(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x641F272B52E2F0F8
	static auto nh_0x641F272B52E2F0F8 = rage::scrEngine::GetNativeHandler(0x641F272B52E2F0F8);
	rage::scrEngine::RegisterNativeHandler(0x641F272B52E2F0F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x641F272B52E2F0F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6483C25849031C4F
	static auto nh_0x6483C25849031C4F = rage::scrEngine::GetNativeHandler(0x6483C25849031C4F);
	rage::scrEngine::RegisterNativeHandler(0x6483C25849031C4F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x6483C25849031C4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x649C97D52332341A
	static auto nh_0x649C97D52332341A = rage::scrEngine::GetNativeHandler(0x649C97D52332341A);
	rage::scrEngine::RegisterNativeHandler(0x649C97D52332341A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x649C97D52332341A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x64E5C4CC82847B73 (result cleaner only)
	AddResultCleaner(0x64E5C4CC82847B73, ResultCleaner<bool>);

	// VEHICLE/0x6501129C9E0FFA05
	static auto nh_0x6501129C9E0FFA05 = rage::scrEngine::GetNativeHandler(0x6501129C9E0FFA05);
	rage::scrEngine::RegisterNativeHandler(0x6501129C9E0FFA05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6501129C9E0FFA05(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x65482BFD0923C8A1
	static auto nh_0x65482BFD0923C8A1 = rage::scrEngine::GetNativeHandler(0x65482BFD0923C8A1);
	rage::scrEngine::RegisterNativeHandler(0x65482BFD0923C8A1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x65482BFD0923C8A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6551B1F7F6CD46EA
	static auto nh_0x6551B1F7F6CD46EA = rage::scrEngine::GetNativeHandler(0x6551B1F7F6CD46EA);
	rage::scrEngine::RegisterNativeHandler(0x6551B1F7F6CD46EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6551B1F7F6CD46EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x659F9D71F52843F8
	static auto nh_0x659F9D71F52843F8 = rage::scrEngine::GetNativeHandler(0x659F9D71F52843F8);
	rage::scrEngine::RegisterNativeHandler(0x659F9D71F52843F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x659F9D71F52843F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x65B080555EA48149
	static auto nh_0x65B080555EA48149 = rage::scrEngine::GetNativeHandler(0x65B080555EA48149);
	rage::scrEngine::RegisterNativeHandler(0x65B080555EA48149, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x65B080555EA48149(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x65D2EBB47E1CEC21
	static auto nh_0x65D2EBB47E1CEC21 = rage::scrEngine::GetNativeHandler(0x65D2EBB47E1CEC21);
	rage::scrEngine::RegisterNativeHandler(0x65D2EBB47E1CEC21, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x65D2EBB47E1CEC21(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x66972397E0757E7A
	static auto nh_0x66972397E0757E7A = rage::scrEngine::GetNativeHandler(0x66972397E0757E7A);
	rage::scrEngine::RegisterNativeHandler(0x66972397E0757E7A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x66972397E0757E7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x66A49D021870FE88
	static auto nh_0x66A49D021870FE88 = rage::scrEngine::GetNativeHandler(0x66A49D021870FE88);
	rage::scrEngine::RegisterNativeHandler(0x66A49D021870FE88, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66A49D021870FE88(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x66E3AAFACE2D1EB8
	static auto nh_0x66E3AAFACE2D1EB8 = rage::scrEngine::GetNativeHandler(0x66E3AAFACE2D1EB8);
	rage::scrEngine::RegisterNativeHandler(0x66E3AAFACE2D1EB8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x66E3AAFACE2D1EB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x66E7CB63C97B7D20 (result cleaner only)
	AddResultCleaner(0x66E7CB63C97B7D20, ResultCleaner<int>);

	// SOCIALCLUB/0x675721C9F644D161
	static auto nh_0x675721C9F644D161 = rage::scrEngine::GetNativeHandler(0x675721C9F644D161);
	rage::scrEngine::RegisterNativeHandler(0x675721C9F644D161, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x675721C9F644D161(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x675D19C6067CAE08
	static auto nh_0x675D19C6067CAE08 = rage::scrEngine::GetNativeHandler(0x675D19C6067CAE08);
	rage::scrEngine::RegisterNativeHandler(0x675D19C6067CAE08, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x675D19C6067CAE08(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x678F86D8FC040BDB
	static auto nh_0x678F86D8FC040BDB = rage::scrEngine::GetNativeHandler(0x678F86D8FC040BDB);
	rage::scrEngine::RegisterNativeHandler(0x678F86D8FC040BDB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x678F86D8FC040BDB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x67FC09BC554A75E5 (result cleaner only)
	AddResultCleaner(0x67FC09BC554A75E5, ResultCleaner<int>);

	// NETWORK/0x68103E2247887242
	static auto nh_0x68103E2247887242 = rage::scrEngine::GetNativeHandler(0x68103E2247887242);
	rage::scrEngine::RegisterNativeHandler(0x68103E2247887242, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x68103E2247887242(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x68B562E124CC0AEF
	static auto nh_0x68B562E124CC0AEF = rage::scrEngine::GetNativeHandler(0x68B562E124CC0AEF);
	rage::scrEngine::RegisterNativeHandler(0x68B562E124CC0AEF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x68B562E124CC0AEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x690A61A6D13583F6 (result cleaner only)
	AddResultCleaner(0x690A61A6D13583F6, ResultCleaner<bool>);

	// SAVEMIGRATION/0x690B76BD2763E068 (result cleaner only)
	AddResultCleaner(0x690B76BD2763E068, ResultCleaner<int>);

	// NETWORK/0x692D58DF40657E8C
	static auto nh_0x692D58DF40657E8C = rage::scrEngine::GetNativeHandler(0x692D58DF40657E8C);
	rage::scrEngine::RegisterNativeHandler(0x692D58DF40657E8C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x692D58DF40657E8C(cxt);
	});
	        
	AddResultCleaner(0x692D58DF40657E8C, ResultCleaner<bool>);

	// MISC/0x693478ACBD7F18E7
	static auto nh_0x693478ACBD7F18E7 = rage::scrEngine::GetNativeHandler(0x693478ACBD7F18E7);
	rage::scrEngine::RegisterNativeHandler(0x693478ACBD7F18E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x693478ACBD7F18E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x694E00132F2823ED
	static auto nh_0x694E00132F2823ED = rage::scrEngine::GetNativeHandler(0x694E00132F2823ED);
	rage::scrEngine::RegisterNativeHandler(0x694E00132F2823ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x694E00132F2823ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x699E4A5C8C893A18
	static auto nh_0x699E4A5C8C893A18 = rage::scrEngine::GetNativeHandler(0x699E4A5C8C893A18);
	rage::scrEngine::RegisterNativeHandler(0x699E4A5C8C893A18, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x699E4A5C8C893A18(cxt);
	});
	        
	AddResultCleaner(0x699E4A5C8C893A18, ResultCleaner<bool>);

	// MONEY/0x69EF772B192614C1
	static auto nh_0x69EF772B192614C1 = rage::scrEngine::GetNativeHandler(0x69EF772B192614C1);
	rage::scrEngine::RegisterNativeHandler(0x69EF772B192614C1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x69EF772B192614C1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x6A51F78772175A51
	static auto nh_0x6A51F78772175A51 = rage::scrEngine::GetNativeHandler(0x6A51F78772175A51);
	rage::scrEngine::RegisterNativeHandler(0x6A51F78772175A51, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A51F78772175A51(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x6A5D89D7769A40D8
	static auto nh_0x6A5D89D7769A40D8 = rage::scrEngine::GetNativeHandler(0x6A5D89D7769A40D8);
	rage::scrEngine::RegisterNativeHandler(0x6A5D89D7769A40D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A5D89D7769A40D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6A60E43998228229
	static auto nh_0x6A60E43998228229 = rage::scrEngine::GetNativeHandler(0x6A60E43998228229);
	rage::scrEngine::RegisterNativeHandler(0x6A60E43998228229, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6A60E43998228229(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6A7F19756F1A9016 (result cleaner only)
	AddResultCleaner(0x6A7F19756F1A9016, ResultCleaner<bool>);

	// VEHICLE/0x6A973569BA094650
	static auto nh_0x6A973569BA094650 = rage::scrEngine::GetNativeHandler(0x6A973569BA094650);
	rage::scrEngine::RegisterNativeHandler(0x6A973569BA094650, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6A973569BA094650(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/0x6AD0BD5E087866CB
	static auto nh_0x6AD0BD5E087866CB = rage::scrEngine::GetNativeHandler(0x6AD0BD5E087866CB);
	rage::scrEngine::RegisterNativeHandler(0x6AD0BD5E087866CB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6AD0BD5E087866CB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x6B7E4FB50D5F3D65
	static auto nh_0x6B7E4FB50D5F3D65 = rage::scrEngine::GetNativeHandler(0x6B7E4FB50D5F3D65);
	rage::scrEngine::RegisterNativeHandler(0x6B7E4FB50D5F3D65, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x6B7E4FB50D5F3D65(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6BC0ACD0673ACEBE
	static auto nh_0x6BC0ACD0673ACEBE = rage::scrEngine::GetNativeHandler(0x6BC0ACD0673ACEBE);
	rage::scrEngine::RegisterNativeHandler(0x6BC0ACD0673ACEBE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6BC0ACD0673ACEBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6BCCF9948492FD85
	static auto nh_0x6BCCF9948492FD85 = rage::scrEngine::GetNativeHandler(0x6BCCF9948492FD85);
	rage::scrEngine::RegisterNativeHandler(0x6BCCF9948492FD85, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x6BCCF9948492FD85(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x6BFB12CE158E3DD4
	static auto nh_0x6BFB12CE158E3DD4 = rage::scrEngine::GetNativeHandler(0x6BFB12CE158E3DD4);
	rage::scrEngine::RegisterNativeHandler(0x6BFB12CE158E3DD4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6BFB12CE158E3DD4(cxt);
	});
	        
	AddResultCleaner(0x6BFB12CE158E3DD4, ResultCleaner<bool>);

	// NETWORK/0x6BFF5F84102DF80A
	static auto nh_0x6BFF5F84102DF80A = rage::scrEngine::GetNativeHandler(0x6BFF5F84102DF80A);
	rage::scrEngine::RegisterNativeHandler(0x6BFF5F84102DF80A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6BFF5F84102DF80A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/0x6CD79468A1E595C6 (result cleaner only)
	AddResultCleaner(0x6CD79468A1E595C6, ResultCleaner<bool>);

	// NETWORK/0x6CE50E47F5543D0C
	static auto nh_0x6CE50E47F5543D0C = rage::scrEngine::GetNativeHandler(0x6CE50E47F5543D0C);
	rage::scrEngine::RegisterNativeHandler(0x6CE50E47F5543D0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6CE50E47F5543D0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/0x6CEBE002E58DEE97 (result cleaner only)
	AddResultCleaner(0x6CEBE002E58DEE97, ResultCleaner<int>);

	// BRAIN/0x6D6840CEE8845831
	static auto nh_0x6D6840CEE8845831 = rage::scrEngine::GetNativeHandler(0x6D6840CEE8845831);
	rage::scrEngine::RegisterNativeHandler(0x6D6840CEE8845831, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6D6840CEE8845831(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6DEE77AFF8C21BD1
	static auto nh_0x6DEE77AFF8C21BD1 = rage::scrEngine::GetNativeHandler(0x6DEE77AFF8C21BD1);
	rage::scrEngine::RegisterNativeHandler(0x6DEE77AFF8C21BD1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6DEE77AFF8C21BD1(cxt);
	});
	        
	AddResultCleaner(0x6DEE77AFF8C21BD1, ResultCleaner<bool>);

	// STATS/0x6E0A5253375C4584 (result cleaner only)
	AddResultCleaner(0x6E0A5253375C4584, ResultCleaner<int>);

	// PLAYER/0x6E4361FF3E8CD7CA
	static auto nh_0x6E4361FF3E8CD7CA = rage::scrEngine::GetNativeHandler(0x6E4361FF3E8CD7CA);
	rage::scrEngine::RegisterNativeHandler(0x6E4361FF3E8CD7CA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6E4361FF3E8CD7CA(cxt);
	});
	        
	AddResultCleaner(0x6E4361FF3E8CD7CA, ResultCleaner<int>);

	// BRAIN/0x6E91B04E08773030
	static auto nh_0x6E91B04E08773030 = rage::scrEngine::GetNativeHandler(0x6E91B04E08773030);
	rage::scrEngine::RegisterNativeHandler(0x6E91B04E08773030, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6E91B04E08773030(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x6EAAEFC76ACC311F
	static auto nh_0x6EAAEFC76ACC311F = rage::scrEngine::GetNativeHandler(0x6EAAEFC76ACC311F);
	rage::scrEngine::RegisterNativeHandler(0x6EAAEFC76ACC311F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6EAAEFC76ACC311F(cxt);
	});
	        
	AddResultCleaner(0x6EAAEFC76ACC311F, ResultCleaner<int>);

	// VEHICLE/0x6EBFB22D646FFC18
	static auto nh_0x6EBFB22D646FFC18 = rage::scrEngine::GetNativeHandler(0x6EBFB22D646FFC18);
	rage::scrEngine::RegisterNativeHandler(0x6EBFB22D646FFC18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6EBFB22D646FFC18(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x6F2135B6129620C1
	static auto nh_0x6F2135B6129620C1 = rage::scrEngine::GetNativeHandler(0x6F2135B6129620C1);
	rage::scrEngine::RegisterNativeHandler(0x6F2135B6129620C1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F2135B6129620C1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x6F361B8889A792A3
	static auto nh_0x6F361B8889A792A3 = rage::scrEngine::GetNativeHandler(0x6F361B8889A792A3);
	rage::scrEngine::RegisterNativeHandler(0x6F361B8889A792A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F361B8889A792A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x6FB7BB3607D27FA2 (result cleaner only)
	AddResultCleaner(0x6FB7BB3607D27FA2, ResultCleaner<int>);

	// MONEY/0x6FCF8DDEA146C45B
	static auto nh_0x6FCF8DDEA146C45B = rage::scrEngine::GetNativeHandler(0x6FCF8DDEA146C45B);
	rage::scrEngine::RegisterNativeHandler(0x6FCF8DDEA146C45B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6FCF8DDEA146C45B(cxt);
	});
	        
	AddResultCleaner(0x6FCF8DDEA146C45B, ResultCleaner<bool>);

	// MONEY/0x6FD97159FE3C971A
	static auto nh_0x6FD97159FE3C971A = rage::scrEngine::GetNativeHandler(0x6FD97159FE3C971A);
	rage::scrEngine::RegisterNativeHandler(0x6FD97159FE3C971A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x6FD97159FE3C971A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x6FD992C4A1C1B986
	static auto nh_0x6FD992C4A1C1B986 = rage::scrEngine::GetNativeHandler(0x6FD992C4A1C1B986);
	rage::scrEngine::RegisterNativeHandler(0x6FD992C4A1C1B986, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6FD992C4A1C1B986(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x6FDDF453C0C756EC (result cleaner only)
	AddResultCleaner(0x6FDDF453C0C756EC, ResultCleaner<bool>);

	// OBJECT/0x701FDA1E82076BA4
	static auto nh_0x701FDA1E82076BA4 = rage::scrEngine::GetNativeHandler(0x701FDA1E82076BA4);
	rage::scrEngine::RegisterNativeHandler(0x701FDA1E82076BA4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x701FDA1E82076BA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x702BC4D605522539
	static auto nh_0x702BC4D605522539 = rage::scrEngine::GetNativeHandler(0x702BC4D605522539);
	rage::scrEngine::RegisterNativeHandler(0x702BC4D605522539, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x702BC4D605522539(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x7033EEFD9B28088E
	static auto nh_0x7033EEFD9B28088E = rage::scrEngine::GetNativeHandler(0x7033EEFD9B28088E);
	rage::scrEngine::RegisterNativeHandler(0x7033EEFD9B28088E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7033EEFD9B28088E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x703CC7F60CBB2B57
	static auto nh_0x703CC7F60CBB2B57 = rage::scrEngine::GetNativeHandler(0x703CC7F60CBB2B57);
	rage::scrEngine::RegisterNativeHandler(0x703CC7F60CBB2B57, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x703CC7F60CBB2B57(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x705A276EBFF3133D (result cleaner only)
	AddResultCleaner(0x705A276EBFF3133D, ResultCleaner<bool>);

	// PLAYER/0x70A382ADEC069DD3
	static auto nh_0x70A382ADEC069DD3 = rage::scrEngine::GetNativeHandler(0x70A382ADEC069DD3);
	rage::scrEngine::RegisterNativeHandler(0x70A382ADEC069DD3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70A382ADEC069DD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x710BCDA8071EDED1 (result cleaner only)
	AddResultCleaner(0x710BCDA8071EDED1, ResultCleaner<bool>);

	// PED/0x711794453CFD692B
	static auto nh_0x711794453CFD692B = rage::scrEngine::GetNativeHandler(0x711794453CFD692B);
	rage::scrEngine::RegisterNativeHandler(0x711794453CFD692B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x711794453CFD692B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x7148E0F43D11F0D9
	static auto nh_0x7148E0F43D11F0D9 = rage::scrEngine::GetNativeHandler(0x7148E0F43D11F0D9);
	rage::scrEngine::RegisterNativeHandler(0x7148E0F43D11F0D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7148E0F43D11F0D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x71B008056E5692D6
	static auto nh_0x71B008056E5692D6 = rage::scrEngine::GetNativeHandler(0x71B008056E5692D6);
	rage::scrEngine::RegisterNativeHandler(0x71B008056E5692D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x71B008056E5692D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x71E7B2E657449AAD (result cleaner only)
	AddResultCleaner(0x71E7B2E657449AAD, ResultCleaner<int>);

	// STATS/0x723C1CE13FBFDB67
	static auto nh_0x723C1CE13FBFDB67 = rage::scrEngine::GetNativeHandler(0x723C1CE13FBFDB67);
	rage::scrEngine::RegisterNativeHandler(0x723C1CE13FBFDB67, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x723C1CE13FBFDB67(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x7241CCB7D020DB69
	static auto nh_0x7241CCB7D020DB69 = rage::scrEngine::GetNativeHandler(0x7241CCB7D020DB69);
	rage::scrEngine::RegisterNativeHandler(0x7241CCB7D020DB69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7241CCB7D020DB69(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x725012A415DBA050
	static auto nh_0x725012A415DBA050 = rage::scrEngine::GetNativeHandler(0x725012A415DBA050);
	rage::scrEngine::RegisterNativeHandler(0x725012A415DBA050, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x725012A415DBA050(cxt);
	});
	        
	AddResultCleaner(0x725012A415DBA050, ResultCleaner<int>);

	// CAM/0x7295C203DD659DFE
	static auto nh_0x7295C203DD659DFE = rage::scrEngine::GetNativeHandler(0x7295C203DD659DFE);
	rage::scrEngine::RegisterNativeHandler(0x7295C203DD659DFE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7295C203DD659DFE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x72BECCF4B829522E
	static auto nh_0x72BECCF4B829522E = rage::scrEngine::GetNativeHandler(0x72BECCF4B829522E);
	rage::scrEngine::RegisterNativeHandler(0x72BECCF4B829522E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x72BECCF4B829522E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x72EB7BA9B69BF6AB (result cleaner only)
	AddResultCleaner(0x72EB7BA9B69BF6AB, ResultCleaner<bool>);

	// STATS/0x73001E34F85137F8
	static auto nh_0x73001E34F85137F8 = rage::scrEngine::GetNativeHandler(0x73001E34F85137F8);
	rage::scrEngine::RegisterNativeHandler(0x73001E34F85137F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x73001E34F85137F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x733C87D4CE22BEA2
	static auto nh_0x733C87D4CE22BEA2 = rage::scrEngine::GetNativeHandler(0x733C87D4CE22BEA2);
	rage::scrEngine::RegisterNativeHandler(0x733C87D4CE22BEA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x733C87D4CE22BEA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x734E1714D077DA9A
	static auto nh_0x734E1714D077DA9A = rage::scrEngine::GetNativeHandler(0x734E1714D077DA9A);
	rage::scrEngine::RegisterNativeHandler(0x734E1714D077DA9A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x734E1714D077DA9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x73561D4425A021A2
	static auto nh_0x73561D4425A021A2 = rage::scrEngine::GetNativeHandler(0x73561D4425A021A2);
	rage::scrEngine::RegisterNativeHandler(0x73561D4425A021A2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x73561D4425A021A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x737E398138550FFF
	static auto nh_0x737E398138550FFF = rage::scrEngine::GetNativeHandler(0x737E398138550FFF);
	rage::scrEngine::RegisterNativeHandler(0x737E398138550FFF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x737E398138550FFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x741A3D8380319A81
	static auto nh_0x741A3D8380319A81 = rage::scrEngine::GetNativeHandler(0x741A3D8380319A81);
	rage::scrEngine::RegisterNativeHandler(0x741A3D8380319A81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x741A3D8380319A81(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x742B58F723233ED9
	static auto nh_0x742B58F723233ED9 = rage::scrEngine::GetNativeHandler(0x742B58F723233ED9);
	rage::scrEngine::RegisterNativeHandler(0x742B58F723233ED9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x742B58F723233ED9(cxt);
	});
	        
	AddResultCleaner(0x742B58F723233ED9, ResultCleaner<int>);

	// NETSHOPPING/0x74A0FD0688F1EE45 (result cleaner only)
	AddResultCleaner(0x74A0FD0688F1EE45, ResultCleaner<int>);

	// NETWORK/0x74FB3E29E6D10FA9 (result cleaner only)
	AddResultCleaner(0x74FB3E29E6D10FA9, ResultCleaner<int>);

	// NETWORK/0x754615490A029508 (result cleaner only)
	AddResultCleaner(0x754615490A029508, ResultCleaner<int>);

	// GRAPHICS/0x759650634F07B6B4 (result cleaner only)
	AddResultCleaner(0x759650634F07B6B4, ResultCleaner<bool>);

	// PED/0x75BA1CB3B7D40CAF
	static auto nh_0x75BA1CB3B7D40CAF = rage::scrEngine::GetNativeHandler(0x75BA1CB3B7D40CAF);
	rage::scrEngine::RegisterNativeHandler(0x75BA1CB3B7D40CAF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75BA1CB3B7D40CAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/0x760910B49D2B98EA
	static auto nh_0x760910B49D2B98EA = rage::scrEngine::GetNativeHandler(0x760910B49D2B98EA);
	rage::scrEngine::RegisterNativeHandler(0x760910B49D2B98EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x760910B49D2B98EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x762DB2D380B48D04
	static auto nh_0x762DB2D380B48D04 = rage::scrEngine::GetNativeHandler(0x762DB2D380B48D04);
	rage::scrEngine::RegisterNativeHandler(0x762DB2D380B48D04, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x762DB2D380B48D04(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x76B3F29D3F967692
	static auto nh_0x76B3F29D3F967692 = rage::scrEngine::GetNativeHandler(0x76B3F29D3F967692);
	rage::scrEngine::RegisterNativeHandler(0x76B3F29D3F967692, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x76B3F29D3F967692(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x76D26A22750E849E
	static auto nh_0x76D26A22750E849E = rage::scrEngine::GetNativeHandler(0x76D26A22750E849E);
	rage::scrEngine::RegisterNativeHandler(0x76D26A22750E849E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x76D26A22750E849E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x77FADDCBE3499DF7
	static auto nh_0x77FADDCBE3499DF7 = rage::scrEngine::GetNativeHandler(0x77FADDCBE3499DF7);
	rage::scrEngine::RegisterNativeHandler(0x77FADDCBE3499DF7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x77FADDCBE3499DF7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x7808619F31FF22DB (result cleaner only)
	AddResultCleaner(0x7808619F31FF22DB, ResultCleaner<int>);

	// OBJECT/0x7813E8B8C4AE4799
	static auto nh_0x7813E8B8C4AE4799 = rage::scrEngine::GetNativeHandler(0x7813E8B8C4AE4799);
	rage::scrEngine::RegisterNativeHandler(0x7813E8B8C4AE4799, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7813E8B8C4AE4799(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x78321BEA235FD8CD
	static auto nh_0x78321BEA235FD8CD = rage::scrEngine::GetNativeHandler(0x78321BEA235FD8CD);
	rage::scrEngine::RegisterNativeHandler(0x78321BEA235FD8CD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x78321BEA235FD8CD(cxt);
	});
	        
	AddResultCleaner(0x78321BEA235FD8CD, ResultCleaner<bool>);

	// VEHICLE/0x78CEEE41F49F421F
	static auto nh_0x78CEEE41F49F421F = rage::scrEngine::GetNativeHandler(0x78CEEE41F49F421F);
	rage::scrEngine::RegisterNativeHandler(0x78CEEE41F49F421F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x78CEEE41F49F421F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0x78E8E3A640178255
	static auto nh_0x78E8E3A640178255 = rage::scrEngine::GetNativeHandler(0x78E8E3A640178255);
	rage::scrEngine::RegisterNativeHandler(0x78E8E3A640178255, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78E8E3A640178255(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x793FF272D5B365F4 (result cleaner only)
	AddResultCleaner(0x793FF272D5B365F4, ResultCleaner<int>);

	// VEHICLE/0x796A877E459B99EA
	static auto nh_0x796A877E459B99EA = rage::scrEngine::GetNativeHandler(0x796A877E459B99EA);
	rage::scrEngine::RegisterNativeHandler(0x796A877E459B99EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x796A877E459B99EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x79D310A861697CC9
	static auto nh_0x79D310A861697CC9 = rage::scrEngine::GetNativeHandler(0x79D310A861697CC9);
	rage::scrEngine::RegisterNativeHandler(0x79D310A861697CC9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x79D310A861697CC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x79EDAC677CA62F81 (result cleaner only)
	AddResultCleaner(0x79EDAC677CA62F81, ResultCleaner<bool>);

	// GRAPHICS/0x7A42B2E236E71415
	static auto nh_0x7A42B2E236E71415 = rage::scrEngine::GetNativeHandler(0x7A42B2E236E71415);
	rage::scrEngine::RegisterNativeHandler(0x7A42B2E236E71415, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A42B2E236E71415(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x7AC24EAB6D74118D (result cleaner only)
	AddResultCleaner(0x7AC24EAB6D74118D, ResultCleaner<bool>);

	// STATS/0x7B18DA61F6BAE9D5
	static auto nh_0x7B18DA61F6BAE9D5 = rage::scrEngine::GetNativeHandler(0x7B18DA61F6BAE9D5);
	rage::scrEngine::RegisterNativeHandler(0x7B18DA61F6BAE9D5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7B18DA61F6BAE9D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x7B8A361C1813FBEF
	static auto nh_0x7B8A361C1813FBEF = rage::scrEngine::GetNativeHandler(0x7B8A361C1813FBEF);
	rage::scrEngine::RegisterNativeHandler(0x7B8A361C1813FBEF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7B8A361C1813FBEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x7BAE68775557AE0B
	static auto nh_0x7BAE68775557AE0B = rage::scrEngine::GetNativeHandler(0x7BAE68775557AE0B);
	rage::scrEngine::RegisterNativeHandler(0x7BAE68775557AE0B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x7BAE68775557AE0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x7BBE7FF626A591FE
	static auto nh_0x7BBE7FF626A591FE = rage::scrEngine::GetNativeHandler(0x7BBE7FF626A591FE);
	rage::scrEngine::RegisterNativeHandler(0x7BBE7FF626A591FE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7BBE7FF626A591FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x7C226D5346D4D10A
	static auto nh_0x7C226D5346D4D10A = rage::scrEngine::GetNativeHandler(0x7C226D5346D4D10A);
	rage::scrEngine::RegisterNativeHandler(0x7C226D5346D4D10A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7C226D5346D4D10A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x7C4FCCD2E4DEB394 (result cleaner only)
	AddResultCleaner(0x7C4FCCD2E4DEB394, ResultCleaner<bool>);

	// STATS/0x7D36291161859389
	static auto nh_0x7D36291161859389 = rage::scrEngine::GetNativeHandler(0x7D36291161859389);
	rage::scrEngine::RegisterNativeHandler(0x7D36291161859389, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7D36291161859389(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x7D395EA61622E116
	static auto nh_0x7D395EA61622E116 = rage::scrEngine::GetNativeHandler(0x7D395EA61622E116);
	rage::scrEngine::RegisterNativeHandler(0x7D395EA61622E116, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7D395EA61622E116(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x7D6F9A3EF26136A0
	static auto nh_0x7D6F9A3EF26136A0 = rage::scrEngine::GetNativeHandler(0x7D6F9A3EF26136A0);
	rage::scrEngine::RegisterNativeHandler(0x7D6F9A3EF26136A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7D6F9A3EF26136A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x7D8BA05688AD64C7
	static auto nh_0x7D8BA05688AD64C7 = rage::scrEngine::GetNativeHandler(0x7D8BA05688AD64C7);
	rage::scrEngine::RegisterNativeHandler(0x7D8BA05688AD64C7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7D8BA05688AD64C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x7DB18CA8CAD5B098 (result cleaner only)
	AddResultCleaner(0x7DB18CA8CAD5B098, ResultCleaner<int>);

	// NETWORK/0x7DB53B37A2F211A0 (result cleaner only)
	AddResultCleaner(0x7DB53B37A2F211A0, ResultCleaner<int>);

	// PLAYER/0x7E07C78925D5FD96
	static auto nh_0x7E07C78925D5FD96 = rage::scrEngine::GetNativeHandler(0x7E07C78925D5FD96);
	rage::scrEngine::RegisterNativeHandler(0x7E07C78925D5FD96, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7E07C78925D5FD96(cxt);
	});
	        
	AddResultCleaner(0x7E07C78925D5FD96, ResultCleaner<int>);

	// REPLAY/0x7E2BD3EF6C205F09
	static auto nh_0x7E2BD3EF6C205F09 = rage::scrEngine::GetNativeHandler(0x7E2BD3EF6C205F09);
	rage::scrEngine::RegisterNativeHandler(0x7E2BD3EF6C205F09, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7E2BD3EF6C205F09(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x7E6946F68A38B74F
	static auto nh_0x7E6946F68A38B74F = rage::scrEngine::GetNativeHandler(0x7E6946F68A38B74F);
	rage::scrEngine::RegisterNativeHandler(0x7E6946F68A38B74F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7E6946F68A38B74F(cxt);
	});
	        
	AddResultCleaner(0x7E6946F68A38B74F, ResultCleaner<bool>);

	// MISC/0x7EC6F9A478A6A512
	static auto nh_0x7EC6F9A478A6A512 = rage::scrEngine::GetNativeHandler(0x7EC6F9A478A6A512);
	rage::scrEngine::RegisterNativeHandler(0x7EC6F9A478A6A512, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7EC6F9A478A6A512(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x7ECDF98587E92DEC
	static auto nh_0x7ECDF98587E92DEC = rage::scrEngine::GetNativeHandler(0x7ECDF98587E92DEC);
	rage::scrEngine::RegisterNativeHandler(0x7ECDF98587E92DEC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7ECDF98587E92DEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x7EEC2A316C250073
	static auto nh_0x7EEC2A316C250073 = rage::scrEngine::GetNativeHandler(0x7EEC2A316C250073);
	rage::scrEngine::RegisterNativeHandler(0x7EEC2A316C250073, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7EEC2A316C250073(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x7EF7649B64D7FF10 (result cleaner only)
	AddResultCleaner(0x7EF7649B64D7FF10, ResultCleaner<bool>);

	// STATS/0x7F2C4CDF2E82DF4C
	static auto nh_0x7F2C4CDF2E82DF4C = rage::scrEngine::GetNativeHandler(0x7F2C4CDF2E82DF4C);
	rage::scrEngine::RegisterNativeHandler(0x7F2C4CDF2E82DF4C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7F2C4CDF2E82DF4C(cxt);
	});
	        
	AddResultCleaner(0x7F2C4CDF2E82DF4C, ResultCleaner<bool>);

	// MISC/0x7F8F6405F4777AF6 (result cleaner only)
	AddResultCleaner(0x7F8F6405F4777AF6, ResultCleaner<float>);

	// CUTSCENE/0x7F96F23FA9B73327
	static auto nh_0x7F96F23FA9B73327 = rage::scrEngine::GetNativeHandler(0x7F96F23FA9B73327);
	rage::scrEngine::RegisterNativeHandler(0x7F96F23FA9B73327, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F96F23FA9B73327(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x7FA5D82B8F58EC06 (result cleaner only)
	AddResultCleaner(0x7FA5D82B8F58EC06, ResultCleaner<bool>);

	// NETWORK/0x7FCC39C46C3C03BD (result cleaner only)
	AddResultCleaner(0x7FCC39C46C3C03BD, ResultCleaner<bool>);

	// SOCIALCLUB/0x7FFCBFEE44ECFABF (result cleaner only)
	AddResultCleaner(0x7FFCBFEE44ECFABF, ResultCleaner<int>);

	// PED/0x80054D7FCC70EEC6
	static auto nh_0x80054D7FCC70EEC6 = rage::scrEngine::GetNativeHandler(0x80054D7FCC70EEC6);
	rage::scrEngine::RegisterNativeHandler(0x80054D7FCC70EEC6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80054D7FCC70EEC6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x801879A9B4F4B2FB (result cleaner only)
	AddResultCleaner(0x801879A9B4F4B2FB, ResultCleaner<bool>);

	// VEHICLE/0x80E3357FDEF45C21
	static auto nh_0x80E3357FDEF45C21 = rage::scrEngine::GetNativeHandler(0x80E3357FDEF45C21);
	rage::scrEngine::RegisterNativeHandler(0x80E3357FDEF45C21, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80E3357FDEF45C21(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x810B5FCC52EC7FF0
	static auto nh_0x810B5FCC52EC7FF0 = rage::scrEngine::GetNativeHandler(0x810B5FCC52EC7FF0);
	rage::scrEngine::RegisterNativeHandler(0x810B5FCC52EC7FF0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x810B5FCC52EC7FF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x814AF7DCAACC597B
	static auto nh_0x814AF7DCAACC597B = rage::scrEngine::GetNativeHandler(0x814AF7DCAACC597B);
	rage::scrEngine::RegisterNativeHandler(0x814AF7DCAACC597B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x814AF7DCAACC597B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x817B86108EB94E51
	static auto nh_0x817B86108EB94E51 = rage::scrEngine::GetNativeHandler(0x817B86108EB94E51);
	rage::scrEngine::RegisterNativeHandler(0x817B86108EB94E51, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		NullifyAny(cxt->GetArgument<void*>(5)); // Any* p5
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		NullifyAny(cxt->GetArgument<void*>(6)); // Any* p6
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		NullifyAny(cxt->GetArgument<void*>(7)); // Any* p7
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		NullifyAny(cxt->GetArgument<void*>(8)); // Any* p8
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x817B86108EB94E51(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0x81CBAE94390F9F89
	static auto nh_0x81CBAE94390F9F89 = rage::scrEngine::GetNativeHandler(0x81CBAE94390F9F89);
	rage::scrEngine::RegisterNativeHandler(0x81CBAE94390F9F89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81CBAE94390F9F89(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x820E9892A77E97CD
	static auto nh_0x820E9892A77E97CD = rage::scrEngine::GetNativeHandler(0x820E9892A77E97CD);
	rage::scrEngine::RegisterNativeHandler(0x820E9892A77E97CD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x820E9892A77E97CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x8235F1BEAD557629
	static auto nh_0x8235F1BEAD557629 = rage::scrEngine::GetNativeHandler(0x8235F1BEAD557629);
	rage::scrEngine::RegisterNativeHandler(0x8235F1BEAD557629, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8235F1BEAD557629(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x823EC8E82BA45986
	static auto nh_0x823EC8E82BA45986 = rage::scrEngine::GetNativeHandler(0x823EC8E82BA45986);
	rage::scrEngine::RegisterNativeHandler(0x823EC8E82BA45986, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x823EC8E82BA45986(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x8269816F6CFD40F8
	static auto nh_0x8269816F6CFD40F8 = rage::scrEngine::GetNativeHandler(0x8269816F6CFD40F8);
	rage::scrEngine::RegisterNativeHandler(0x8269816F6CFD40F8, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8269816F6CFD40F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x826D1EE4D1CAFC78
	static auto nh_0x826D1EE4D1CAFC78 = rage::scrEngine::GetNativeHandler(0x826D1EE4D1CAFC78);
	rage::scrEngine::RegisterNativeHandler(0x826D1EE4D1CAFC78, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x826D1EE4D1CAFC78(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/0x829CD22E043A2577 (result cleaner only)
	AddResultCleaner(0x829CD22E043A2577, ResultCleaner<int>);

	// GRAPHICS/0x82ACC484FFA3B05F
	static auto nh_0x82ACC484FFA3B05F = rage::scrEngine::GetNativeHandler(0x82ACC484FFA3B05F);
	rage::scrEngine::RegisterNativeHandler(0x82ACC484FFA3B05F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x82ACC484FFA3B05F(cxt);
	});
	        
	AddResultCleaner(0x82ACC484FFA3B05F, ResultCleaner<int>);

	// VEHICLE/0x82E0AC411E41A5B4
	static auto nh_0x82E0AC411E41A5B4 = rage::scrEngine::GetNativeHandler(0x82E0AC411E41A5B4);
	rage::scrEngine::RegisterNativeHandler(0x82E0AC411E41A5B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x82E0AC411E41A5B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0x82EBB79E258FA2B7
	static auto nh_0x82EBB79E258FA2B7 = rage::scrEngine::GetNativeHandler(0x82EBB79E258FA2B7);
	rage::scrEngine::RegisterNativeHandler(0x82EBB79E258FA2B7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x82EBB79E258FA2B7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x830C3A44EB3F2CF9
	static auto nh_0x830C3A44EB3F2CF9 = rage::scrEngine::GetNativeHandler(0x830C3A44EB3F2CF9);
	rage::scrEngine::RegisterNativeHandler(0x830C3A44EB3F2CF9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x830C3A44EB3F2CF9(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x834344A414C7C85D
	static auto nh_0x834344A414C7C85D = rage::scrEngine::GetNativeHandler(0x834344A414C7C85D);
	rage::scrEngine::RegisterNativeHandler(0x834344A414C7C85D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x834344A414C7C85D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x83660B734994124D
	static auto nh_0x83660B734994124D = rage::scrEngine::GetNativeHandler(0x83660B734994124D);
	rage::scrEngine::RegisterNativeHandler(0x83660B734994124D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x83660B734994124D(cxt);
	});
	        
	AddResultCleaner(0x83660B734994124D, ResultCleaner<int>);

	// SCRIPT/0x836B62713E0534CA (result cleaner only)
	AddResultCleaner(0x836B62713E0534CA, ResultCleaner<bool>);

	// NETWORK/0x83FE8D7229593017
	static auto nh_0x83FE8D7229593017 = rage::scrEngine::GetNativeHandler(0x83FE8D7229593017);
	rage::scrEngine::RegisterNativeHandler(0x83FE8D7229593017, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x83FE8D7229593017(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x8410C5E0CD847B9D
	static auto nh_0x8410C5E0CD847B9D = rage::scrEngine::GetNativeHandler(0x8410C5E0CD847B9D);
	rage::scrEngine::RegisterNativeHandler(0x8410C5E0CD847B9D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8410C5E0CD847B9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0x8423541E8B3A1589
	static auto nh_0x8423541E8B3A1589 = rage::scrEngine::GetNativeHandler(0x8423541E8B3A1589);
	rage::scrEngine::RegisterNativeHandler(0x8423541E8B3A1589, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8423541E8B3A1589(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x84A810B375E69C0E (result cleaner only)
	AddResultCleaner(0x84A810B375E69C0E, ResultCleaner<int>);

	// SAVEMIGRATION/0x84B418E93894AC1C (result cleaner only)
	AddResultCleaner(0x84B418E93894AC1C, ResultCleaner<int>);

	// PHYSICS/0x84DE3B5FB3E666F0
	static auto nh_0x84DE3B5FB3E666F0 = rage::scrEngine::GetNativeHandler(0x84DE3B5FB3E666F0);
	rage::scrEngine::RegisterNativeHandler(0x84DE3B5FB3E666F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x84DE3B5FB3E666F0(cxt);
	});
	        
	AddResultCleaner(0x84DE3B5FB3E666F0, ResultCleaner<bool>);

	// STATS/0x84DFC579C2FC214C
	static auto nh_0x84DFC579C2FC214C = rage::scrEngine::GetNativeHandler(0x84DFC579C2FC214C);
	rage::scrEngine::RegisterNativeHandler(0x84DFC579C2FC214C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x84DFC579C2FC214C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x851CD923176EBA7C
	static auto nh_0x851CD923176EBA7C = rage::scrEngine::GetNativeHandler(0x851CD923176EBA7C);
	rage::scrEngine::RegisterNativeHandler(0x851CD923176EBA7C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x851CD923176EBA7C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x8533CAFDE1F0F336
	static auto nh_0x8533CAFDE1F0F336 = rage::scrEngine::GetNativeHandler(0x8533CAFDE1F0F336);
	rage::scrEngine::RegisterNativeHandler(0x8533CAFDE1F0F336, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8533CAFDE1F0F336(cxt);
	});
	        
	AddResultCleaner(0x8533CAFDE1F0F336, ResultCleaner<int>);

	// OBJECT/0x858EC9FD25DE04AA
	static auto nh_0x858EC9FD25DE04AA = rage::scrEngine::GetNativeHandler(0x858EC9FD25DE04AA);
	rage::scrEngine::RegisterNativeHandler(0x858EC9FD25DE04AA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x858EC9FD25DE04AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0x85F6C9ABA1DE2BCF (result cleaner only)
	AddResultCleaner(0x85F6C9ABA1DE2BCF, ResultCleaner<int>);

	// TASK/0x8634CEF2522D987B
	static auto nh_0x8634CEF2522D987B = rage::scrEngine::GetNativeHandler(0x8634CEF2522D987B);
	rage::scrEngine::RegisterNativeHandler(0x8634CEF2522D987B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8634CEF2522D987B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x8664170EF165C4A6
	static auto nh_0x8664170EF165C4A6 = rage::scrEngine::GetNativeHandler(0x8664170EF165C4A6);
	rage::scrEngine::RegisterNativeHandler(0x8664170EF165C4A6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8664170EF165C4A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x870289A558348378
	static auto nh_0x870289A558348378 = rage::scrEngine::GetNativeHandler(0x870289A558348378);
	rage::scrEngine::RegisterNativeHandler(0x870289A558348378, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x870289A558348378(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x870B8B7A766615C8
	static auto nh_0x870B8B7A766615C8 = rage::scrEngine::GetNativeHandler(0x870B8B7A766615C8);
	rage::scrEngine::RegisterNativeHandler(0x870B8B7A766615C8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x870B8B7A766615C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x87DDEB611B329A9C
	static auto nh_0x87DDEB611B329A9C = rage::scrEngine::GetNativeHandler(0x87DDEB611B329A9C);
	rage::scrEngine::RegisterNativeHandler(0x87DDEB611B329A9C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x87DDEB611B329A9C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x88087EE1F28024AE
	static auto nh_0x88087EE1F28024AE = rage::scrEngine::GetNativeHandler(0x88087EE1F28024AE);
	rage::scrEngine::RegisterNativeHandler(0x88087EE1F28024AE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x88087EE1F28024AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x8821196D91FA2DE5
	static auto nh_0x8821196D91FA2DE5 = rage::scrEngine::GetNativeHandler(0x8821196D91FA2DE5);
	rage::scrEngine::RegisterNativeHandler(0x8821196D91FA2DE5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8821196D91FA2DE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x88578F6EC36B4A3A
	static auto nh_0x88578F6EC36B4A3A = rage::scrEngine::GetNativeHandler(0x88578F6EC36B4A3A);
	rage::scrEngine::RegisterNativeHandler(0x88578F6EC36B4A3A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x88578F6EC36B4A3A(cxt);
	});
	        
	AddResultCleaner(0x88578F6EC36B4A3A, ResultCleaner<int>);

	// VEHICLE/0x887FA38787DE8C72
	static auto nh_0x887FA38787DE8C72 = rage::scrEngine::GetNativeHandler(0x887FA38787DE8C72);
	rage::scrEngine::RegisterNativeHandler(0x887FA38787DE8C72, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x887FA38787DE8C72(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x8881C98A31117998
	static auto nh_0x8881C98A31117998 = rage::scrEngine::GetNativeHandler(0x8881C98A31117998);
	rage::scrEngine::RegisterNativeHandler(0x8881C98A31117998, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8881C98A31117998(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x88B588B41FF7868E (result cleaner only)
	AddResultCleaner(0x88B588B41FF7868E, ResultCleaner<int>);

	// VEHICLE/0x88BC673CA9E0AE99
	static auto nh_0x88BC673CA9E0AE99 = rage::scrEngine::GetNativeHandler(0x88BC673CA9E0AE99);
	rage::scrEngine::RegisterNativeHandler(0x88BC673CA9E0AE99, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88BC673CA9E0AE99(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x8951EB9C6906D3C8
	static auto nh_0x8951EB9C6906D3C8 = rage::scrEngine::GetNativeHandler(0x8951EB9C6906D3C8);
	rage::scrEngine::RegisterNativeHandler(0x8951EB9C6906D3C8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8951EB9C6906D3C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x8989CBD7B4E82534
	static auto nh_0x8989CBD7B4E82534 = rage::scrEngine::GetNativeHandler(0x8989CBD7B4E82534);
	rage::scrEngine::RegisterNativeHandler(0x8989CBD7B4E82534, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x8989CBD7B4E82534(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x8A4416C0DB05FA66
	static auto nh_0x8A4416C0DB05FA66 = rage::scrEngine::GetNativeHandler(0x8A4416C0DB05FA66);
	rage::scrEngine::RegisterNativeHandler(0x8A4416C0DB05FA66, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* newsStoryData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8A4416C0DB05FA66(cxt);
	});
	        
	AddResultCleaner(0x8A4416C0DB05FA66, ResultCleaner<bool>);

	// NETWORK/0x8B0C2964BA471961 (result cleaner only)
	AddResultCleaner(0x8B0C2964BA471961, ResultCleaner<int>);

	// NETWORK/0x8B4FFC790CA131EF
	static auto nh_0x8B4FFC790CA131EF = rage::scrEngine::GetNativeHandler(0x8B4FFC790CA131EF);
	rage::scrEngine::RegisterNativeHandler(0x8B4FFC790CA131EF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8B4FFC790CA131EF(cxt);
	});
	        
	AddResultCleaner(0x8B4FFC790CA131EF, ResultCleaner<int>);

	// STATS/0x8B9CDBD6C566C38C (result cleaner only)
	AddResultCleaner(0x8B9CDBD6C566C38C, ResultCleaner<int>);

	// AUDIO/0x8BF907833BE275DE
	static auto nh_0x8BF907833BE275DE = rage::scrEngine::GetNativeHandler(0x8BF907833BE275DE);
	rage::scrEngine::RegisterNativeHandler(0x8BF907833BE275DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8BF907833BE275DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x8C8D2739BA44AF0F
	static auto nh_0x8C8D2739BA44AF0F = rage::scrEngine::GetNativeHandler(0x8C8D2739BA44AF0F);
	rage::scrEngine::RegisterNativeHandler(0x8C8D2739BA44AF0F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8C8D2739BA44AF0F(cxt);
	});
	        
	AddResultCleaner(0x8C8D2739BA44AF0F, ResultCleaner<bool>);

	// STATS/0x8C9D11605E59D955
	static auto nh_0x8C9D11605E59D955 = rage::scrEngine::GetNativeHandler(0x8C9D11605E59D955);
	rage::scrEngine::RegisterNativeHandler(0x8C9D11605E59D955, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8C9D11605E59D955(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x8CAAB2BD3EA58BD4
	static auto nh_0x8CAAB2BD3EA58BD4 = rage::scrEngine::GetNativeHandler(0x8CAAB2BD3EA58BD4);
	rage::scrEngine::RegisterNativeHandler(0x8CAAB2BD3EA58BD4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8CAAB2BD3EA58BD4(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x8CC469AB4D349B7C
	static auto nh_0x8CC469AB4D349B7C = rage::scrEngine::GetNativeHandler(0x8CC469AB4D349B7C);
	rage::scrEngine::RegisterNativeHandler(0x8CC469AB4D349B7C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8CC469AB4D349B7C(cxt);
	});
	        
	AddResultCleaner(0x8CC469AB4D349B7C, ResultCleaner<bool>);

	// GRAPHICS/0x8CDE909A0370BB3A
	static auto nh_0x8CDE909A0370BB3A = rage::scrEngine::GetNativeHandler(0x8CDE909A0370BB3A);
	rage::scrEngine::RegisterNativeHandler(0x8CDE909A0370BB3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8CDE909A0370BB3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x8CFF648FBD7330F1
	static auto nh_0x8CFF648FBD7330F1 = rage::scrEngine::GetNativeHandler(0x8CFF648FBD7330F1);
	rage::scrEngine::RegisterNativeHandler(0x8CFF648FBD7330F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8CFF648FBD7330F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x8D74E26F54B4E5C3
	static auto nh_0x8D74E26F54B4E5C3 = rage::scrEngine::GetNativeHandler(0x8D74E26F54B4E5C3);
	rage::scrEngine::RegisterNativeHandler(0x8D74E26F54B4E5C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8D74E26F54B4E5C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x8D768602ADEF2245
	static auto nh_0x8D768602ADEF2245 = rage::scrEngine::GetNativeHandler(0x8D768602ADEF2245);
	rage::scrEngine::RegisterNativeHandler(0x8D768602ADEF2245, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8D768602ADEF2245(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x8D8ADB562F09A245
	static auto nh_0x8D8ADB562F09A245 = rage::scrEngine::GetNativeHandler(0x8D8ADB562F09A245);
	rage::scrEngine::RegisterNativeHandler(0x8D8ADB562F09A245, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8D8ADB562F09A245(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0x8D9DF6ECA8768583
	static auto nh_0x8D9DF6ECA8768583 = rage::scrEngine::GetNativeHandler(0x8D9DF6ECA8768583);
	rage::scrEngine::RegisterNativeHandler(0x8D9DF6ECA8768583, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8D9DF6ECA8768583(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0x8DCA505A5C196F05
	static auto nh_0x8DCA505A5C196F05 = rage::scrEngine::GetNativeHandler(0x8DCA505A5C196F05);
	rage::scrEngine::RegisterNativeHandler(0x8DCA505A5C196F05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8DCA505A5C196F05(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x8E243837643D9583
	static auto nh_0x8E243837643D9583 = rage::scrEngine::GetNativeHandler(0x8E243837643D9583);
	rage::scrEngine::RegisterNativeHandler(0x8E243837643D9583, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8E243837643D9583(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x8EC74CEB042E7CFF
	static auto nh_0x8EC74CEB042E7CFF = rage::scrEngine::GetNativeHandler(0x8EC74CEB042E7CFF);
	rage::scrEngine::RegisterNativeHandler(0x8EC74CEB042E7CFF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8EC74CEB042E7CFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x8EF52ACAECC51D9C
	static auto nh_0x8EF52ACAECC51D9C = rage::scrEngine::GetNativeHandler(0x8EF52ACAECC51D9C);
	rage::scrEngine::RegisterNativeHandler(0x8EF52ACAECC51D9C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8EF52ACAECC51D9C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x8F08017F9D7C47BD
	static auto nh_0x8F08017F9D7C47BD = rage::scrEngine::GetNativeHandler(0x8F08017F9D7C47BD);
	rage::scrEngine::RegisterNativeHandler(0x8F08017F9D7C47BD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8F08017F9D7C47BD(cxt);
	});
	        
	AddResultCleaner(0x8F08017F9D7C47BD, ResultCleaner<bool>);

	// VEHICLE/0x8F0D5BA1C2CC91D7
	static auto nh_0x8F0D5BA1C2CC91D7 = rage::scrEngine::GetNativeHandler(0x8F0D5BA1C2CC91D7);
	rage::scrEngine::RegisterNativeHandler(0x8F0D5BA1C2CC91D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F0D5BA1C2CC91D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x906CA41A4B74ECA4 (result cleaner only)
	AddResultCleaner(0x906CA41A4B74ECA4, ResultCleaner<int>);

	// GRAPHICS/0x908311265D42A820
	static auto nh_0x908311265D42A820 = rage::scrEngine::GetNativeHandler(0x908311265D42A820);
	rage::scrEngine::RegisterNativeHandler(0x908311265D42A820, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x908311265D42A820(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x9097EB6D4BB9A12A
	static auto nh_0x9097EB6D4BB9A12A = rage::scrEngine::GetNativeHandler(0x9097EB6D4BB9A12A);
	rage::scrEngine::RegisterNativeHandler(0x9097EB6D4BB9A12A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9097EB6D4BB9A12A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x90CD7C6871FBF1B4
	static auto nh_0x90CD7C6871FBF1B4 = rage::scrEngine::GetNativeHandler(0x90CD7C6871FBF1B4);
	rage::scrEngine::RegisterNativeHandler(0x90CD7C6871FBF1B4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x90CD7C6871FBF1B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x916CA67D26FD1E37
	static auto nh_0x916CA67D26FD1E37 = rage::scrEngine::GetNativeHandler(0x916CA67D26FD1E37);
	rage::scrEngine::RegisterNativeHandler(0x916CA67D26FD1E37, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x916CA67D26FD1E37(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x91EF6EE6419E5B97
	static auto nh_0x91EF6EE6419E5B97 = rage::scrEngine::GetNativeHandler(0x91EF6EE6419E5B97);
	rage::scrEngine::RegisterNativeHandler(0x91EF6EE6419E5B97, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x91EF6EE6419E5B97(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x9237E334F6E43156
	static auto nh_0x9237E334F6E43156 = rage::scrEngine::GetNativeHandler(0x9237E334F6E43156);
	rage::scrEngine::RegisterNativeHandler(0x9237E334F6E43156, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9237E334F6E43156(cxt);
	});
	        
	AddResultCleaner(0x9237E334F6E43156, ResultCleaner<int>);

	// SOCIALCLUB/0x92DA6E70EF249BD1
	static auto nh_0x92DA6E70EF249BD1 = rage::scrEngine::GetNativeHandler(0x92DA6E70EF249BD1);
	rage::scrEngine::RegisterNativeHandler(0x92DA6E70EF249BD1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x92DA6E70EF249BD1(cxt);
	});
	        
	AddResultCleaner(0x92DA6E70EF249BD1, ResultCleaner<bool>);

	// STATS/0x92FC0EEDFAC04A14
	static auto nh_0x92FC0EEDFAC04A14 = rage::scrEngine::GetNativeHandler(0x92FC0EEDFAC04A14);
	rage::scrEngine::RegisterNativeHandler(0x92FC0EEDFAC04A14, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x92FC0EEDFAC04A14(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x930F504203F561C9
	static auto nh_0x930F504203F561C9 = rage::scrEngine::GetNativeHandler(0x930F504203F561C9);
	rage::scrEngine::RegisterNativeHandler(0x930F504203F561C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x930F504203F561C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x933BBEEB8C61B5F4 (result cleaner only)
	AddResultCleaner(0x933BBEEB8C61B5F4, ResultCleaner<bool>);

	// NETWORK/0x94538037EE44F5CF
	static auto nh_0x94538037EE44F5CF = rage::scrEngine::GetNativeHandler(0x94538037EE44F5CF);
	rage::scrEngine::RegisterNativeHandler(0x94538037EE44F5CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x94538037EE44F5CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x9465E683B12D3F6B
	static auto nh_0x9465E683B12D3F6B = rage::scrEngine::GetNativeHandler(0x9465E683B12D3F6B);
	rage::scrEngine::RegisterNativeHandler(0x9465E683B12D3F6B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9465E683B12D3F6B(cxt);
		NullifyVoid(cxt);
	});
	        
	// DLC/0x9489659372A81585 (result cleaner only)
	AddResultCleaner(0x9489659372A81585, ResultCleaner<bool>);

	// GRAPHICS/0x949F397A288B28B3
	static auto nh_0x949F397A288B28B3 = rage::scrEngine::GetNativeHandler(0x949F397A288B28B3);
	rage::scrEngine::RegisterNativeHandler(0x949F397A288B28B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x949F397A288B28B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0x95A7DABDDBB78AE7
	static auto nh_0x95A7DABDDBB78AE7 = rage::scrEngine::GetNativeHandler(0x95A7DABDDBB78AE7);
	rage::scrEngine::RegisterNativeHandler(0x95A7DABDDBB78AE7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x95A7DABDDBB78AE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x95BAF97C82464629
	static auto nh_0x95BAF97C82464629 = rage::scrEngine::GetNativeHandler(0x95BAF97C82464629);
	rage::scrEngine::RegisterNativeHandler(0x95BAF97C82464629, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x95BAF97C82464629(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x9640E30A7F395E4B
	static auto nh_0x9640E30A7F395E4B = rage::scrEngine::GetNativeHandler(0x9640E30A7F395E4B);
	rage::scrEngine::RegisterNativeHandler(0x9640E30A7F395E4B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x9640E30A7F395E4B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x9641588DAB93B4B5
	static auto nh_0x9641588DAB93B4B5 = rage::scrEngine::GetNativeHandler(0x9641588DAB93B4B5);
	rage::scrEngine::RegisterNativeHandler(0x9641588DAB93B4B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9641588DAB93B4B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/0x96E2929292A4DB77 (result cleaner only)
	AddResultCleaner(0x96E2929292A4DB77, ResultCleaner<int>);

	// STATS/0x96E6D5150DBF1C09
	static auto nh_0x96E6D5150DBF1C09 = rage::scrEngine::GetNativeHandler(0x96E6D5150DBF1C09);
	rage::scrEngine::RegisterNativeHandler(0x96E6D5150DBF1C09, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x96E6D5150DBF1C09(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x973D76AA760A6CB6
	static auto nh_0x973D76AA760A6CB6 = rage::scrEngine::GetNativeHandler(0x973D76AA760A6CB6);
	rage::scrEngine::RegisterNativeHandler(0x973D76AA760A6CB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x973D76AA760A6CB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/0x977CA98939E82E4B
	static auto nh_0x977CA98939E82E4B = rage::scrEngine::GetNativeHandler(0x977CA98939E82E4B);
	rage::scrEngine::RegisterNativeHandler(0x977CA98939E82E4B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x977CA98939E82E4B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x97841634EF7DF1D6
	static auto nh_0x97841634EF7DF1D6 = rage::scrEngine::GetNativeHandler(0x97841634EF7DF1D6);
	rage::scrEngine::RegisterNativeHandler(0x97841634EF7DF1D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97841634EF7DF1D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0x97E7E2C04245115B
	static auto nh_0x97E7E2C04245115B = rage::scrEngine::GetNativeHandler(0x97E7E2C04245115B);
	rage::scrEngine::RegisterNativeHandler(0x97E7E2C04245115B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x97E7E2C04245115B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x97FFB4ADEED08066
	static auto nh_0x97FFB4ADEED08066 = rage::scrEngine::GetNativeHandler(0x97FFB4ADEED08066);
	rage::scrEngine::RegisterNativeHandler(0x97FFB4ADEED08066, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x97FFB4ADEED08066(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x9849DE24FCF23CCC
	static auto nh_0x9849DE24FCF23CCC = rage::scrEngine::GetNativeHandler(0x9849DE24FCF23CCC);
	rage::scrEngine::RegisterNativeHandler(0x9849DE24FCF23CCC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9849DE24FCF23CCC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x98C3CF913D895111
	static auto nh_0x98C3CF913D895111 = rage::scrEngine::GetNativeHandler(0x98C3CF913D895111);
	rage::scrEngine::RegisterNativeHandler(0x98C3CF913D895111, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x98C3CF913D895111(cxt);
	});
	        
	AddResultCleaner(0x98C3CF913D895111, ResultCleaner<char*>);

	// GRAPHICS/0x98D18905BF723B99 (result cleaner only)
	AddResultCleaner(0x98D18905BF723B99, ResultCleaner<int>);

	// STATS/0x98E2BC1CA26287C3
	static auto nh_0x98E2BC1CA26287C3 = rage::scrEngine::GetNativeHandler(0x98E2BC1CA26287C3);
	rage::scrEngine::RegisterNativeHandler(0x98E2BC1CA26287C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x98E2BC1CA26287C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x98EDF76A7271E4F2
	static auto nh_0x98EDF76A7271E4F2 = rage::scrEngine::GetNativeHandler(0x98EDF76A7271E4F2);
	rage::scrEngine::RegisterNativeHandler(0x98EDF76A7271E4F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x98EDF76A7271E4F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x9911F4A24485F653
	static auto nh_0x9911F4A24485F653 = rage::scrEngine::GetNativeHandler(0x9911F4A24485F653);
	rage::scrEngine::RegisterNativeHandler(0x9911F4A24485F653, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9911F4A24485F653(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x998E18CEB44487FC
	static auto nh_0x998E18CEB44487FC = rage::scrEngine::GetNativeHandler(0x998E18CEB44487FC);
	rage::scrEngine::RegisterNativeHandler(0x998E18CEB44487FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x998E18CEB44487FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x99A05839C46CE316
	static auto nh_0x99A05839C46CE316 = rage::scrEngine::GetNativeHandler(0x99A05839C46CE316);
	rage::scrEngine::RegisterNativeHandler(0x99A05839C46CE316, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x99A05839C46CE316(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x99CAD8E7AFDB60FA
	static auto nh_0x99CAD8E7AFDB60FA = rage::scrEngine::GetNativeHandler(0x99CAD8E7AFDB60FA);
	rage::scrEngine::RegisterNativeHandler(0x99CAD8E7AFDB60FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x99CAD8E7AFDB60FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x9A62EC95AE10E011 (result cleaner only)
	AddResultCleaner(0x9A62EC95AE10E011, ResultCleaner<int>);

	// PED/0x9A77DFD295E29B09
	static auto nh_0x9A77DFD295E29B09 = rage::scrEngine::GetNativeHandler(0x9A77DFD295E29B09);
	rage::scrEngine::RegisterNativeHandler(0x9A77DFD295E29B09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A77DFD295E29B09(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x9AC92EED5E4793AB
	static auto nh_0x9AC92EED5E4793AB = rage::scrEngine::GetNativeHandler(0x9AC92EED5E4793AB);
	rage::scrEngine::RegisterNativeHandler(0x9AC92EED5E4793AB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AC92EED5E4793AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0x9B079E5221D984D3
	static auto nh_0x9B079E5221D984D3 = rage::scrEngine::GetNativeHandler(0x9B079E5221D984D3);
	rage::scrEngine::RegisterNativeHandler(0x9B079E5221D984D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B079E5221D984D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x9B4BD21D69B1E609
	static auto nh_0x9B4BD21D69B1E609 = rage::scrEngine::GetNativeHandler(0x9B4BD21D69B1E609);
	rage::scrEngine::RegisterNativeHandler(0x9B4BD21D69B1E609, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B4BD21D69B1E609(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0x9B5016A6433A68C5 (result cleaner only)
	AddResultCleaner(0x9B5016A6433A68C5, ResultCleaner<int>);

	// AUDIO/0x9BD7BD55E4533183
	static auto nh_0x9BD7BD55E4533183 = rage::scrEngine::GetNativeHandler(0x9BD7BD55E4533183);
	rage::scrEngine::RegisterNativeHandler(0x9BD7BD55E4533183, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x9BD7BD55E4533183(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x9BDDC73CC6A115D4
	static auto nh_0x9BDDC73CC6A115D4 = rage::scrEngine::GetNativeHandler(0x9BDDC73CC6A115D4);
	rage::scrEngine::RegisterNativeHandler(0x9BDDC73CC6A115D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BDDC73CC6A115D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x9BECD4B9FEF3F8A6
	static auto nh_0x9BECD4B9FEF3F8A6 = rage::scrEngine::GetNativeHandler(0x9BECD4B9FEF3F8A6);
	rage::scrEngine::RegisterNativeHandler(0x9BECD4B9FEF3F8A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BECD4B9FEF3F8A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x9C6A6C19B6C0C496
	static auto nh_0x9C6A6C19B6C0C496 = rage::scrEngine::GetNativeHandler(0x9C6A6C19B6C0C496);
	rage::scrEngine::RegisterNativeHandler(0x9C6A6C19B6C0C496, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9C6A6C19B6C0C496(cxt);
	});
	        
	AddResultCleaner(0x9C6A6C19B6C0C496, ResultCleaner<bool>);

	// TASK/0x9D252648778160DF
	static auto nh_0x9D252648778160DF = rage::scrEngine::GetNativeHandler(0x9D252648778160DF);
	rage::scrEngine::RegisterNativeHandler(0x9D252648778160DF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9D252648778160DF(cxt);
	});
	        
	AddResultCleaner(0x9D252648778160DF, ResultCleaner<int>);

	// VEHICLE/0x9D30687C57BAA0BB
	static auto nh_0x9D30687C57BAA0BB = rage::scrEngine::GetNativeHandler(0x9D30687C57BAA0BB);
	rage::scrEngine::RegisterNativeHandler(0x9D30687C57BAA0BB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9D30687C57BAA0BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0x9D3AF56E94C9AE98
	static auto nh_0x9D3AF56E94C9AE98 = rage::scrEngine::GetNativeHandler(0x9D3AF56E94C9AE98);
	rage::scrEngine::RegisterNativeHandler(0x9D3AF56E94C9AE98, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D3AF56E94C9AE98(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x9D724B400A7E8FFC
	static auto nh_0x9D724B400A7E8FFC = rage::scrEngine::GetNativeHandler(0x9D724B400A7E8FFC);
	rage::scrEngine::RegisterNativeHandler(0x9D724B400A7E8FFC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9D724B400A7E8FFC(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x9D7AFCBF21C51712
	static auto nh_0x9D7AFCBF21C51712 = rage::scrEngine::GetNativeHandler(0x9D7AFCBF21C51712);
	rage::scrEngine::RegisterNativeHandler(0x9D7AFCBF21C51712, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D7AFCBF21C51712(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0x9DE5D2F723575ED0 (result cleaner only)
	AddResultCleaner(0x9DE5D2F723575ED0, ResultCleaner<bool>);

	// CAM/0x9DFE13ECDC1EC196
	static auto nh_0x9DFE13ECDC1EC196 = rage::scrEngine::GetNativeHandler(0x9DFE13ECDC1EC196);
	rage::scrEngine::RegisterNativeHandler(0x9DFE13ECDC1EC196, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9DFE13ECDC1EC196(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0x9E30E91FB03A2CAF
	static auto nh_0x9E30E91FB03A2CAF = rage::scrEngine::GetNativeHandler(0x9E30E91FB03A2CAF);
	rage::scrEngine::RegisterNativeHandler(0x9E30E91FB03A2CAF, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9E30E91FB03A2CAF(cxt);
	});
	        
	AddResultCleaner(0x9E30E91FB03A2CAF, ResultCleaner<bool>);

	// INTERIOR/0x9E6542F0CE8E70A3
	static auto nh_0x9E6542F0CE8E70A3 = rage::scrEngine::GetNativeHandler(0x9E6542F0CE8E70A3);
	rage::scrEngine::RegisterNativeHandler(0x9E6542F0CE8E70A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9E6542F0CE8E70A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0x9EBD751E5787BAF2
	static auto nh_0x9EBD751E5787BAF2 = rage::scrEngine::GetNativeHandler(0x9EBD751E5787BAF2);
	rage::scrEngine::RegisterNativeHandler(0x9EBD751E5787BAF2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9EBD751E5787BAF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0x9EC8858184CD253A (result cleaner only)
	AddResultCleaner(0x9EC8858184CD253A, ResultCleaner<int>);

	// PLAYER/0x9EDD76E87D5D51BA
	static auto nh_0x9EDD76E87D5D51BA = rage::scrEngine::GetNativeHandler(0x9EDD76E87D5D51BA);
	rage::scrEngine::RegisterNativeHandler(0x9EDD76E87D5D51BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9EDD76E87D5D51BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0x9F260BFB59ADBCA3
	static auto nh_0x9F260BFB59ADBCA3 = rage::scrEngine::GetNativeHandler(0x9F260BFB59ADBCA3);
	rage::scrEngine::RegisterNativeHandler(0x9F260BFB59ADBCA3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F260BFB59ADBCA3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0x9F3F689B814F2599
	static auto nh_0x9F3F689B814F2599 = rage::scrEngine::GetNativeHandler(0x9F3F689B814F2599);
	rage::scrEngine::RegisterNativeHandler(0x9F3F689B814F2599, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F3F689B814F2599(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0x9F97DA93681F87EA
	static auto nh_0x9F97DA93681F87EA = rage::scrEngine::GetNativeHandler(0x9F97DA93681F87EA);
	rage::scrEngine::RegisterNativeHandler(0x9F97DA93681F87EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F97DA93681F87EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0x9FCB3CBFB3EAD69A
	static auto nh_0x9FCB3CBFB3EAD69A = rage::scrEngine::GetNativeHandler(0x9FCB3CBFB3EAD69A);
	rage::scrEngine::RegisterNativeHandler(0x9FCB3CBFB3EAD69A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9FCB3CBFB3EAD69A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0x9FEDF86898F100E9 (result cleaner only)
	AddResultCleaner(0x9FEDF86898F100E9, ResultCleaner<int>);

	// VEHICLE/0xA01BC64DD4BFBBAC (result cleaner only)
	AddResultCleaner(0xA01BC64DD4BFBBAC, ResultCleaner<int>);

	// OBJECT/0xA08FE5E49BDC39DD
	static auto nh_0xA08FE5E49BDC39DD = rage::scrEngine::GetNativeHandler(0xA08FE5E49BDC39DD);
	rage::scrEngine::RegisterNativeHandler(0xA08FE5E49BDC39DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA08FE5E49BDC39DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xA0AD167E4B39D9A2
	static auto nh_0xA0AD167E4B39D9A2 = rage::scrEngine::GetNativeHandler(0xA0AD167E4B39D9A2);
	rage::scrEngine::RegisterNativeHandler(0xA0AD167E4B39D9A2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0xA0AD167E4B39D9A2(cxt);
	});
	        
	AddResultCleaner(0xA0AD167E4B39D9A2, ResultCleaner<int>);

	// PAD/0xA0CEFCEA390AAB9B
	static auto nh_0xA0CEFCEA390AAB9B = rage::scrEngine::GetNativeHandler(0xA0CEFCEA390AAB9B);
	rage::scrEngine::RegisterNativeHandler(0xA0CEFCEA390AAB9B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA0CEFCEA390AAB9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xA0F93D5465B3094D
	static auto nh_0xA0F93D5465B3094D = rage::scrEngine::GetNativeHandler(0xA0F93D5465B3094D);
	rage::scrEngine::RegisterNativeHandler(0xA0F93D5465B3094D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA0F93D5465B3094D(cxt);
	});
	        
	AddResultCleaner(0xA0F93D5465B3094D, ResultCleaner<bool>);

	// NETWORK/0xA0FA4EC6A05DA44E (result cleaner only)
	AddResultCleaner(0xA0FA4EC6A05DA44E, ResultCleaner<int>);

	// CUTSCENE/0xA0FE76168A189DDB (result cleaner only)
	AddResultCleaner(0xA0FE76168A189DDB, ResultCleaner<int>);

	// NETWORK/0xA12D3A5A3753CC23 (result cleaner only)
	AddResultCleaner(0xA12D3A5A3753CC23, ResultCleaner<int>);

	// HUD/0xA17784FCA9548D15
	static auto nh_0xA17784FCA9548D15 = rage::scrEngine::GetNativeHandler(0xA17784FCA9548D15);
	rage::scrEngine::RegisterNativeHandler(0xA17784FCA9548D15, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA17784FCA9548D15(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0xA1AE736541B0FCA3
	static auto nh_0xA1AE736541B0FCA3 = rage::scrEngine::GetNativeHandler(0xA1AE736541B0FCA3);
	rage::scrEngine::RegisterNativeHandler(0xA1AE736541B0FCA3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA1AE736541B0FCA3(cxt);
		NullifyVoid(cxt);
	});
	        
	// DLC/0xA213B11DFF526300 (result cleaner only)
	AddResultCleaner(0xA213B11DFF526300, ResultCleaner<bool>);

	// HUD/0xA238192F33110615
	static auto nh_0xA238192F33110615 = rage::scrEngine::GetNativeHandler(0xA238192F33110615);
	rage::scrEngine::RegisterNativeHandler(0xA238192F33110615, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA238192F33110615(cxt);
	});
	        
	AddResultCleaner(0xA238192F33110615, ResultCleaner<bool>);

	// VEHICLE/0xA247F9EF01D8082E
	static auto nh_0xA247F9EF01D8082E = rage::scrEngine::GetNativeHandler(0xA247F9EF01D8082E);
	rage::scrEngine::RegisterNativeHandler(0xA247F9EF01D8082E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA247F9EF01D8082E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xA2767257A320FC82
	static auto nh_0xA2767257A320FC82 = rage::scrEngine::GetNativeHandler(0xA2767257A320FC82);
	rage::scrEngine::RegisterNativeHandler(0xA2767257A320FC82, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA2767257A320FC82(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xA2C1F5E92AFE49ED
	static auto nh_0xA2C1F5E92AFE49ED = rage::scrEngine::GetNativeHandler(0xA2C1F5E92AFE49ED);
	rage::scrEngine::RegisterNativeHandler(0xA2C1F5E92AFE49ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2C1F5E92AFE49ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/0xA2C9AC24B4061285 (result cleaner only)
	AddResultCleaner(0xA2C9AC24B4061285, ResultCleaner<int>);

	// MOBILE/0xA2CCBE62CD4C91A4
	static auto nh_0xA2CCBE62CD4C91A4 = rage::scrEngine::GetNativeHandler(0xA2CCBE62CD4C91A4);
	rage::scrEngine::RegisterNativeHandler(0xA2CCBE62CD4C91A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA2CCBE62CD4C91A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xA2E9C1AB8A92E8CD
	static auto nh_0xA2E9C1AB8A92E8CD = rage::scrEngine::GetNativeHandler(0xA2E9C1AB8A92E8CD);
	rage::scrEngine::RegisterNativeHandler(0xA2E9C1AB8A92E8CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2E9C1AB8A92E8CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xA306F470D1660581 (result cleaner only)
	AddResultCleaner(0xA306F470D1660581, ResultCleaner<int>);

	// STATS/0xA3C53804BDB68ED2
	static auto nh_0xA3C53804BDB68ED2 = rage::scrEngine::GetNativeHandler(0xA3C53804BDB68ED2);
	rage::scrEngine::RegisterNativeHandler(0xA3C53804BDB68ED2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA3C53804BDB68ED2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xA3F3564A5B3646C0 (result cleaner only)
	AddResultCleaner(0xA3F3564A5B3646C0, ResultCleaner<bool>);

	// SOCIALCLUB/0xA468E0BE12B12C70 (result cleaner only)
	AddResultCleaner(0xA468E0BE12B12C70, ResultCleaner<bool>);

	// GRAPHICS/0xA46B73FAA3460AE1
	static auto nh_0xA46B73FAA3460AE1 = rage::scrEngine::GetNativeHandler(0xA46B73FAA3460AE1);
	rage::scrEngine::RegisterNativeHandler(0xA46B73FAA3460AE1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA46B73FAA3460AE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xA4822F1CF23F4810
	static auto nh_0xA4822F1CF23F4810 = rage::scrEngine::GetNativeHandler(0xA4822F1CF23F4810);
	rage::scrEngine::RegisterNativeHandler(0xA4822F1CF23F4810, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xA4822F1CF23F4810(cxt);
	});
	        
	AddResultCleaner(0xA4822F1CF23F4810, ResultCleaner<bool>);

	// MISC/0xA4A0065E39C9F25C
	static auto nh_0xA4A0065E39C9F25C = rage::scrEngine::GetNativeHandler(0xA4A0065E39C9F25C);
	rage::scrEngine::RegisterNativeHandler(0xA4A0065E39C9F25C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA4A0065E39C9F25C(cxt);
	});
	        
	AddResultCleaner(0xA4A0065E39C9F25C, ResultCleaner<bool>);

	// VEHICLE/0xA4A9A4C40E615885
	static auto nh_0xA4A9A4C40E615885 = rage::scrEngine::GetNativeHandler(0xA4A9A4C40E615885);
	rage::scrEngine::RegisterNativeHandler(0xA4A9A4C40E615885, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA4A9A4C40E615885(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xA51338E0DCCD4065
	static auto nh_0xA51338E0DCCD4065 = rage::scrEngine::GetNativeHandler(0xA51338E0DCCD4065);
	rage::scrEngine::RegisterNativeHandler(0xA51338E0DCCD4065, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA51338E0DCCD4065(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xA51B086B0B2C0F7A
	static auto nh_0xA51B086B0B2C0F7A = rage::scrEngine::GetNativeHandler(0xA51B086B0B2C0F7A);
	rage::scrEngine::RegisterNativeHandler(0xA51B086B0B2C0F7A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA51B086B0B2C0F7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xA52D5247A4227E14
	static auto nh_0xA52D5247A4227E14 = rage::scrEngine::GetNativeHandler(0xA52D5247A4227E14);
	rage::scrEngine::RegisterNativeHandler(0xA52D5247A4227E14, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA52D5247A4227E14(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xA660FAF550EB37E5
	static auto nh_0xA660FAF550EB37E5 = rage::scrEngine::GetNativeHandler(0xA660FAF550EB37E5);
	rage::scrEngine::RegisterNativeHandler(0xA660FAF550EB37E5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA660FAF550EB37E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/0xA6EEF01087181EDD
	static auto nh_0xA6EEF01087181EDD = rage::scrEngine::GetNativeHandler(0xA6EEF01087181EDD);
	rage::scrEngine::RegisterNativeHandler(0xA6EEF01087181EDD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA6EEF01087181EDD(cxt);
	});
	        
	AddResultCleaner(0xA6EEF01087181EDD, ResultCleaner<int>);

	// STATS/0xA6F54BB2FFCA35EA
	static auto nh_0xA6F54BB2FFCA35EA = rage::scrEngine::GetNativeHandler(0xA6F54BB2FFCA35EA);
	rage::scrEngine::RegisterNativeHandler(0xA6F54BB2FFCA35EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA6F54BB2FFCA35EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xA6FCECCF4721D679
	static auto nh_0xA6FCECCF4721D679 = rage::scrEngine::GetNativeHandler(0xA6FCECCF4721D679);
	rage::scrEngine::RegisterNativeHandler(0xA6FCECCF4721D679, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA6FCECCF4721D679(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xA7092AFE81944852
	static auto nh_0xA7092AFE81944852 = rage::scrEngine::GetNativeHandler(0xA7092AFE81944852);
	rage::scrEngine::RegisterNativeHandler(0xA7092AFE81944852, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7092AFE81944852(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xA736CF7FB7C5BFF4
	static auto nh_0xA736CF7FB7C5BFF4 = rage::scrEngine::GetNativeHandler(0xA736CF7FB7C5BFF4);
	rage::scrEngine::RegisterNativeHandler(0xA736CF7FB7C5BFF4, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA736CF7FB7C5BFF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xA761D4AC6115623D (result cleaner only)
	AddResultCleaner(0xA761D4AC6115623D, ResultCleaner<int>);

	// NETWORK/0xA7862BC5ED1DFD7E
	static auto nh_0xA7862BC5ED1DFD7E = rage::scrEngine::GetNativeHandler(0xA7862BC5ED1DFD7E);
	rage::scrEngine::RegisterNativeHandler(0xA7862BC5ED1DFD7E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA7862BC5ED1DFD7E(cxt);
	});
	        
	AddResultCleaner(0xA7862BC5ED1DFD7E, ResultCleaner<bool>);

	// STATS/0xA78B8FA58200DA56
	static auto nh_0xA78B8FA58200DA56 = rage::scrEngine::GetNativeHandler(0xA78B8FA58200DA56);
	rage::scrEngine::RegisterNativeHandler(0xA78B8FA58200DA56, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA78B8FA58200DA56(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xA7DCDF4DED40A8F4
	static auto nh_0xA7DCDF4DED40A8F4 = rage::scrEngine::GetNativeHandler(0xA7DCDF4DED40A8F4);
	rage::scrEngine::RegisterNativeHandler(0xA7DCDF4DED40A8F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7DCDF4DED40A8F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xA85A21582451E951
	static auto nh_0xA85A21582451E951 = rage::scrEngine::GetNativeHandler(0xA85A21582451E951);
	rage::scrEngine::RegisterNativeHandler(0xA85A21582451E951, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA85A21582451E951(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xA8733668D1047B51
	static auto nh_0xA8733668D1047B51 = rage::scrEngine::GetNativeHandler(0xA8733668D1047B51);
	rage::scrEngine::RegisterNativeHandler(0xA8733668D1047B51, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA8733668D1047B51(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xA8ACB6459542A8C8 (result cleaner only)
	AddResultCleaner(0xA8ACB6459542A8C8, ResultCleaner<int>);

	// STATS/0xA943FD1722E11EFD (result cleaner only)
	AddResultCleaner(0xA943FD1722E11EFD, ResultCleaner<int>);

	// MONEY/0xA95CFB4E02390842
	static auto nh_0xA95CFB4E02390842 = rage::scrEngine::GetNativeHandler(0xA95CFB4E02390842);
	rage::scrEngine::RegisterNativeHandler(0xA95CFB4E02390842, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA95CFB4E02390842(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xA95F667A755725DA
	static auto nh_0xA95F667A755725DA = rage::scrEngine::GetNativeHandler(0xA95F667A755725DA);
	rage::scrEngine::RegisterNativeHandler(0xA95F667A755725DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA95F667A755725DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xA9B61A329BFDCBEA
	static auto nh_0xA9B61A329BFDCBEA = rage::scrEngine::GetNativeHandler(0xA9B61A329BFDCBEA);
	rage::scrEngine::RegisterNativeHandler(0xA9B61A329BFDCBEA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA9B61A329BFDCBEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xAA059C615DE9DD03
	static auto nh_0xAA059C615DE9DD03 = rage::scrEngine::GetNativeHandler(0xAA059C615DE9DD03);
	rage::scrEngine::RegisterNativeHandler(0xAA059C615DE9DD03, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAA059C615DE9DD03(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xAA525DFF66BB82F5
	static auto nh_0xAA525DFF66BB82F5 = rage::scrEngine::GetNativeHandler(0xAA525DFF66BB82F5);
	rage::scrEngine::RegisterNativeHandler(0xAA525DFF66BB82F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xAA525DFF66BB82F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xAA653AE61924B0A0
	static auto nh_0xAA653AE61924B0A0 = rage::scrEngine::GetNativeHandler(0xAA653AE61924B0A0);
	rage::scrEngine::RegisterNativeHandler(0xAA653AE61924B0A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA653AE61924B0A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/0xAA76052DDA9BFC3E
	static auto nh_0xAA76052DDA9BFC3E = rage::scrEngine::GetNativeHandler(0xAA76052DDA9BFC3E);
	rage::scrEngine::RegisterNativeHandler(0xAA76052DDA9BFC3E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xAA76052DDA9BFC3E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xAAA6A3698A69E048
	static auto nh_0xAAA6A3698A69E048 = rage::scrEngine::GetNativeHandler(0xAAA6A3698A69E048);
	rage::scrEngine::RegisterNativeHandler(0xAAA6A3698A69E048, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAAA6A3698A69E048(cxt);
	});
	        
	AddResultCleaner(0xAAA6A3698A69E048, ResultCleaner<int>);

	// CAM/0xAABD62873FFB1A33
	static auto nh_0xAABD62873FFB1A33 = rage::scrEngine::GetNativeHandler(0xAABD62873FFB1A33);
	rage::scrEngine::RegisterNativeHandler(0xAABD62873FFB1A33, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAABD62873FFB1A33(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xAAE9BE70EC7C69AB
	static auto nh_0xAAE9BE70EC7C69AB = rage::scrEngine::GetNativeHandler(0xAAE9BE70EC7C69AB);
	rage::scrEngine::RegisterNativeHandler(0xAAE9BE70EC7C69AB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xAAE9BE70EC7C69AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xAB04325045427AAE
	static auto nh_0xAB04325045427AAE = rage::scrEngine::GetNativeHandler(0xAB04325045427AAE);
	rage::scrEngine::RegisterNativeHandler(0xAB04325045427AAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAB04325045427AAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0xAB13A5565480B6D9
	static auto nh_0xAB13A5565480B6D9 = rage::scrEngine::GetNativeHandler(0xAB13A5565480B6D9);
	rage::scrEngine::RegisterNativeHandler(0xAB13A5565480B6D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAB13A5565480B6D9(cxt);
	});
	        
	AddResultCleaner(0xAB13A5565480B6D9, ResultCleaner<int>);

	// VEHICLE/0xAB31EF4DE6800CE9
	static auto nh_0xAB31EF4DE6800CE9 = rage::scrEngine::GetNativeHandler(0xAB31EF4DE6800CE9);
	rage::scrEngine::RegisterNativeHandler(0xAB31EF4DE6800CE9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAB31EF4DE6800CE9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/0xAC2890471901861C
	static auto nh_0xAC2890471901861C = rage::scrEngine::GetNativeHandler(0xAC2890471901861C);
	rage::scrEngine::RegisterNativeHandler(0xAC2890471901861C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC2890471901861C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xAD27D957598E49E9
	static auto nh_0xAD27D957598E49E9 = rage::scrEngine::GetNativeHandler(0xAD27D957598E49E9);
	rage::scrEngine::RegisterNativeHandler(0xAD27D957598E49E9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xAD27D957598E49E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xAD73CE5A09E42D12
	static auto nh_0xAD73CE5A09E42D12 = rage::scrEngine::GetNativeHandler(0xAD73CE5A09E42D12);
	rage::scrEngine::RegisterNativeHandler(0xAD73CE5A09E42D12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD73CE5A09E42D12(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xADB57E5B663CCA8B
	static auto nh_0xADB57E5B663CCA8B = rage::scrEngine::GetNativeHandler(0xADB57E5B663CCA8B);
	rage::scrEngine::RegisterNativeHandler(0xADB57E5B663CCA8B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xADB57E5B663CCA8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xADD6627C4D325458
	static auto nh_0xADD6627C4D325458 = rage::scrEngine::GetNativeHandler(0xADD6627C4D325458);
	rage::scrEngine::RegisterNativeHandler(0xADD6627C4D325458, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xADD6627C4D325458(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xADF084FB8F075D06 (result cleaner only)
	AddResultCleaner(0xADF084FB8F075D06, ResultCleaner<bool>);

	// VEHICLE/0xAE3FEE8709B39DCB (result cleaner only)
	AddResultCleaner(0xAE3FEE8709B39DCB, ResultCleaner<bool>);

	// GRAPHICS/0xAE51BC858F32BA66
	static auto nh_0xAE51BC858F32BA66 = rage::scrEngine::GetNativeHandler(0xAE51BC858F32BA66);
	rage::scrEngine::RegisterNativeHandler(0xAE51BC858F32BA66, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAE51BC858F32BA66(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xAEAB987727C5A8A4
	static auto nh_0xAEAB987727C5A8A4 = rage::scrEngine::GetNativeHandler(0xAEAB987727C5A8A4);
	rage::scrEngine::RegisterNativeHandler(0xAEAB987727C5A8A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAEAB987727C5A8A4(cxt);
	});
	        
	AddResultCleaner(0xAEAB987727C5A8A4, ResultCleaner<bool>);

	// NETWORK/0xAEDF1BC1C133D6E3
	static auto nh_0xAEDF1BC1C133D6E3 = rage::scrEngine::GetNativeHandler(0xAEDF1BC1C133D6E3);
	rage::scrEngine::RegisterNativeHandler(0xAEDF1BC1C133D6E3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAEDF1BC1C133D6E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/0xAF348AFCB575A441
	static auto nh_0xAF348AFCB575A441 = rage::scrEngine::GetNativeHandler(0xAF348AFCB575A441);
	rage::scrEngine::RegisterNativeHandler(0xAF348AFCB575A441, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAF348AFCB575A441(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xAF60E6A2936F982A
	static auto nh_0xAF60E6A2936F982A = rage::scrEngine::GetNativeHandler(0xAF60E6A2936F982A);
	rage::scrEngine::RegisterNativeHandler(0xAF60E6A2936F982A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAF60E6A2936F982A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xAFC976FD0580C7B3
	static auto nh_0xAFC976FD0580C7B3 = rage::scrEngine::GetNativeHandler(0xAFC976FD0580C7B3);
	rage::scrEngine::RegisterNativeHandler(0xAFC976FD0580C7B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAFC976FD0580C7B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xAFE24E4D29249E4A (result cleaner only)
	AddResultCleaner(0xAFE24E4D29249E4A, ResultCleaner<bool>);

	// STATS/0xAFF47709F1D5DCCE (result cleaner only)
	AddResultCleaner(0xAFF47709F1D5DCCE, ResultCleaner<int>);

	// CAM/0xB1381B97F70C7B30
	static auto nh_0xB1381B97F70C7B30 = rage::scrEngine::GetNativeHandler(0xB1381B97F70C7B30);
	rage::scrEngine::RegisterNativeHandler(0xB1381B97F70C7B30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1381B97F70C7B30(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xB13E88E655E5A3BC
	static auto nh_0xB13E88E655E5A3BC = rage::scrEngine::GetNativeHandler(0xB13E88E655E5A3BC);
	rage::scrEngine::RegisterNativeHandler(0xB13E88E655E5A3BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB13E88E655E5A3BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0xB17BC6453F6CF5AC
	static auto nh_0xB17BC6453F6CF5AC = rage::scrEngine::GetNativeHandler(0xB17BC6453F6CF5AC);
	rage::scrEngine::RegisterNativeHandler(0xB17BC6453F6CF5AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB17BC6453F6CF5AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0xB1B6216CA2E7B55E
	static auto nh_0xB1B6216CA2E7B55E = rage::scrEngine::GetNativeHandler(0xB1B6216CA2E7B55E);
	rage::scrEngine::RegisterNativeHandler(0xB1B6216CA2E7B55E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB1B6216CA2E7B55E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xB1D2BB1E1631F5B1 (result cleaner only)
	AddResultCleaner(0xB1D2BB1E1631F5B1, ResultCleaner<bool>);

	// STATS/0xB26F670685631727
	static auto nh_0xB26F670685631727 = rage::scrEngine::GetNativeHandler(0xB26F670685631727);
	rage::scrEngine::RegisterNativeHandler(0xB26F670685631727, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB26F670685631727(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xB282749D5E028163
	static auto nh_0xB282749D5E028163 = rage::scrEngine::GetNativeHandler(0xB282749D5E028163);
	rage::scrEngine::RegisterNativeHandler(0xB282749D5E028163, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB282749D5E028163(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xB2D0BDE54F0E8E5A
	static auto nh_0xB2D0BDE54F0E8E5A = rage::scrEngine::GetNativeHandler(0xB2D0BDE54F0E8E5A);
	rage::scrEngine::RegisterNativeHandler(0xB2D0BDE54F0E8E5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB2D0BDE54F0E8E5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xB2E0C0D6922D31F2
	static auto nh_0xB2E0C0D6922D31F2 = rage::scrEngine::GetNativeHandler(0xB2E0C0D6922D31F2);
	rage::scrEngine::RegisterNativeHandler(0xB2E0C0D6922D31F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB2E0C0D6922D31F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xB2EBE8CBC58B90E9 (result cleaner only)
	AddResultCleaner(0xB2EBE8CBC58B90E9, ResultCleaner<int>);

	// NETWORK/0xB309EBEA797E001F
	static auto nh_0xB309EBEA797E001F = rage::scrEngine::GetNativeHandler(0xB309EBEA797E001F);
	rage::scrEngine::RegisterNativeHandler(0xB309EBEA797E001F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB309EBEA797E001F(cxt);
	});
	        
	AddResultCleaner(0xB309EBEA797E001F, ResultCleaner<int>);

	// PED/0xB3352E018D6F89DF
	static auto nh_0xB3352E018D6F89DF = rage::scrEngine::GetNativeHandler(0xB3352E018D6F89DF);
	rage::scrEngine::RegisterNativeHandler(0xB3352E018D6F89DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3352E018D6F89DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xB37E4E6A2388CA7B (result cleaner only)
	AddResultCleaner(0xB37E4E6A2388CA7B, ResultCleaner<bool>);

	// GRAPHICS/0xB3C641F3630BF6DA
	static auto nh_0xB3C641F3630BF6DA = rage::scrEngine::GetNativeHandler(0xB3C641F3630BF6DA);
	rage::scrEngine::RegisterNativeHandler(0xB3C641F3630BF6DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3C641F3630BF6DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xB3DA2606774A8E2D (result cleaner only)
	AddResultCleaner(0xB3DA2606774A8E2D, ResultCleaner<bool>);

	// PLAYER/0xB45EFF719D8427A6
	static auto nh_0xB45EFF719D8427A6 = rage::scrEngine::GetNativeHandler(0xB45EFF719D8427A6);
	rage::scrEngine::RegisterNativeHandler(0xB45EFF719D8427A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB45EFF719D8427A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xB4C2EC463672474E
	static auto nh_0xB4C2EC463672474E = rage::scrEngine::GetNativeHandler(0xB4C2EC463672474E);
	rage::scrEngine::RegisterNativeHandler(0xB4C2EC463672474E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xB4C2EC463672474E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xB4DEAE67F35E2ACD
	static auto nh_0xB4DEAE67F35E2ACD = rage::scrEngine::GetNativeHandler(0xB4DEAE67F35E2ACD);
	rage::scrEngine::RegisterNativeHandler(0xB4DEAE67F35E2ACD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB4DEAE67F35E2ACD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xB51B9AB9EF81868C
	static auto nh_0xB51B9AB9EF81868C = rage::scrEngine::GetNativeHandler(0xB51B9AB9EF81868C);
	rage::scrEngine::RegisterNativeHandler(0xB51B9AB9EF81868C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB51B9AB9EF81868C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0xB542DE8C3D1CB210
	static auto nh_0xB542DE8C3D1CB210 = rage::scrEngine::GetNativeHandler(0xB542DE8C3D1CB210);
	rage::scrEngine::RegisterNativeHandler(0xB542DE8C3D1CB210, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB542DE8C3D1CB210(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xB552929B85FC27EC
	static auto nh_0xB552929B85FC27EC = rage::scrEngine::GetNativeHandler(0xB552929B85FC27EC);
	rage::scrEngine::RegisterNativeHandler(0xB552929B85FC27EC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB552929B85FC27EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xB569F41F3E7E83A4
	static auto nh_0xB569F41F3E7E83A4 = rage::scrEngine::GetNativeHandler(0xB569F41F3E7E83A4);
	rage::scrEngine::RegisterNativeHandler(0xB569F41F3E7E83A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB569F41F3E7E83A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xB5B58E24868CB09E
	static auto nh_0xB5B58E24868CB09E = rage::scrEngine::GetNativeHandler(0xB5B58E24868CB09E);
	rage::scrEngine::RegisterNativeHandler(0xB5B58E24868CB09E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xB5B58E24868CB09E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xB5B7742424BD4445
	static auto nh_0xB5B7742424BD4445 = rage::scrEngine::GetNativeHandler(0xB5B7742424BD4445);
	rage::scrEngine::RegisterNativeHandler(0xB5B7742424BD4445, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB5B7742424BD4445(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xB5D3453C98456528 (result cleaner only)
	AddResultCleaner(0xB5D3453C98456528, ResultCleaner<int>);

	// NETWORK/0xB606E6CC59664972
	static auto nh_0xB606E6CC59664972 = rage::scrEngine::GetNativeHandler(0xB606E6CC59664972);
	rage::scrEngine::RegisterNativeHandler(0xB606E6CC59664972, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB606E6CC59664972(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xB68CFAF83A02768D
	static auto nh_0xB68CFAF83A02768D = rage::scrEngine::GetNativeHandler(0xB68CFAF83A02768D);
	rage::scrEngine::RegisterNativeHandler(0xB68CFAF83A02768D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB68CFAF83A02768D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0xB743F735C03D7810
	static auto nh_0xB743F735C03D7810 = rage::scrEngine::GetNativeHandler(0xB743F735C03D7810);
	rage::scrEngine::RegisterNativeHandler(0xB743F735C03D7810, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB743F735C03D7810(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xB746D20B17F2A229
	static auto nh_0xB746D20B17F2A229 = rage::scrEngine::GetNativeHandler(0xB746D20B17F2A229);
	rage::scrEngine::RegisterNativeHandler(0xB746D20B17F2A229, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB746D20B17F2A229(cxt);
	});
	        
	AddResultCleaner(0xB746D20B17F2A229, ResultCleaner<bool>);

	// HUD/0xB7B873520C84C118
	static auto nh_0xB7B873520C84C118 = rage::scrEngine::GetNativeHandler(0xB7B873520C84C118);
	rage::scrEngine::RegisterNativeHandler(0xB7B873520C84C118, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB7B873520C84C118(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xB7C6D80FB371659A
	static auto nh_0xB7C6D80FB371659A = rage::scrEngine::GetNativeHandler(0xB7C6D80FB371659A);
	rage::scrEngine::RegisterNativeHandler(0xB7C6D80FB371659A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB7C6D80FB371659A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xB885852C39CC265D
	static auto nh_0xB885852C39CC265D = rage::scrEngine::GetNativeHandler(0xB885852C39CC265D);
	rage::scrEngine::RegisterNativeHandler(0xB885852C39CC265D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB885852C39CC265D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xB8B52E498014F5B0 (result cleaner only)
	AddResultCleaner(0xB8B52E498014F5B0, ResultCleaner<bool>);

	// NETWORK/0xB9351A07A0D458B1
	static auto nh_0xB9351A07A0D458B1 = rage::scrEngine::GetNativeHandler(0xB9351A07A0D458B1);
	rage::scrEngine::RegisterNativeHandler(0xB9351A07A0D458B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB9351A07A0D458B1(cxt);
	});
	        
	AddResultCleaner(0xB9351A07A0D458B1, ResultCleaner<int>);

	// VEHICLE/0xB9562064627FF9DB
	static auto nh_0xB9562064627FF9DB = rage::scrEngine::GetNativeHandler(0xB9562064627FF9DB);
	rage::scrEngine::RegisterNativeHandler(0xB9562064627FF9DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB9562064627FF9DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xB9CF1F793A9F1BF1 (result cleaner only)
	AddResultCleaner(0xB9CF1F793A9F1BF1, ResultCleaner<bool>);

	// GRAPHICS/0xBA0127DA25FD54C9
	static auto nh_0xBA0127DA25FD54C9 = rage::scrEngine::GetNativeHandler(0xBA0127DA25FD54C9);
	rage::scrEngine::RegisterNativeHandler(0xBA0127DA25FD54C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBA0127DA25FD54C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xBA3D194057C79A7B
	static auto nh_0xBA3D194057C79A7B = rage::scrEngine::GetNativeHandler(0xBA3D194057C79A7B);
	rage::scrEngine::RegisterNativeHandler(0xBA3D194057C79A7B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBA3D194057C79A7B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xBA4B8D83BDC75551
	static auto nh_0xBA4B8D83BDC75551 = rage::scrEngine::GetNativeHandler(0xBA4B8D83BDC75551);
	rage::scrEngine::RegisterNativeHandler(0xBA4B8D83BDC75551, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBA4B8D83BDC75551(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xBA7F0B77D80A4EB7
	static auto nh_0xBA7F0B77D80A4EB7 = rage::scrEngine::GetNativeHandler(0xBA7F0B77D80A4EB7);
	rage::scrEngine::RegisterNativeHandler(0xBA7F0B77D80A4EB7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBA7F0B77D80A4EB7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xBA8D65C1C65702E5
	static auto nh_0xBA8D65C1C65702E5 = rage::scrEngine::GetNativeHandler(0xBA8D65C1C65702E5);
	rage::scrEngine::RegisterNativeHandler(0xBA8D65C1C65702E5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA8D65C1C65702E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xBA9749CC94C1FD85 (result cleaner only)
	AddResultCleaner(0xBA9749CC94C1FD85, ResultCleaner<int>);

	// STATS/0xBAA2F0490E146BE8
	static auto nh_0xBAA2F0490E146BE8 = rage::scrEngine::GetNativeHandler(0xBAA2F0490E146BE8);
	rage::scrEngine::RegisterNativeHandler(0xBAA2F0490E146BE8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBAA2F0490E146BE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xBB2333BB87DDD87F
	static auto nh_0xBB2333BB87DDD87F = rage::scrEngine::GetNativeHandler(0xBB2333BB87DDD87F);
	rage::scrEngine::RegisterNativeHandler(0xBB2333BB87DDD87F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBB2333BB87DDD87F(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xBB90E12CAC1DAB25
	static auto nh_0xBB90E12CAC1DAB25 = rage::scrEngine::GetNativeHandler(0xBB90E12CAC1DAB25);
	rage::scrEngine::RegisterNativeHandler(0xBB90E12CAC1DAB25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB90E12CAC1DAB25(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0xBC0CE682D4D05650
	static auto nh_0xBC0CE682D4D05650 = rage::scrEngine::GetNativeHandler(0xBC0CE682D4D05650);
	rage::scrEngine::RegisterNativeHandler(0xBC0CE682D4D05650, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC0CE682D4D05650(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xBC9490CA15AEA8FB
	static auto nh_0xBC9490CA15AEA8FB = rage::scrEngine::GetNativeHandler(0xBC9490CA15AEA8FB);
	rage::scrEngine::RegisterNativeHandler(0xBC9490CA15AEA8FB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC9490CA15AEA8FB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xBCEDB009461DA156 (result cleaner only)
	AddResultCleaner(0xBCEDB009461DA156, ResultCleaner<int>);

	// MONEY/0xBD0EFB25CCA8F97A
	static auto nh_0xBD0EFB25CCA8F97A = rage::scrEngine::GetNativeHandler(0xBD0EFB25CCA8F97A);
	rage::scrEngine::RegisterNativeHandler(0xBD0EFB25CCA8F97A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBD0EFB25CCA8F97A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xBD545D44CCE70597 (result cleaner only)
	AddResultCleaner(0xBD545D44CCE70597, ResultCleaner<bool>);

	// NETWORK/0xBDB6F89C729CF388 (result cleaner only)
	AddResultCleaner(0xBDB6F89C729CF388, ResultCleaner<bool>);

	// GRAPHICS/0xBE197EAA669238F4
	static auto nh_0xBE197EAA669238F4 = rage::scrEngine::GetNativeHandler(0xBE197EAA669238F4);
	rage::scrEngine::RegisterNativeHandler(0xBE197EAA669238F4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBE197EAA669238F4(cxt);
	});
	        
	AddResultCleaner(0xBE197EAA669238F4, ResultCleaner<int>);

	// STATS/0xBE3DB208333D9844 (result cleaner only)
	AddResultCleaner(0xBE3DB208333D9844, ResultCleaner<int>);

	// VEHICLE/0xBE5C1255A1830FF5
	static auto nh_0xBE5C1255A1830FF5 = rage::scrEngine::GetNativeHandler(0xBE5C1255A1830FF5);
	rage::scrEngine::RegisterNativeHandler(0xBE5C1255A1830FF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE5C1255A1830FF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xBEB2D9A1D9A8F55A
	static auto nh_0xBEB2D9A1D9A8F55A = rage::scrEngine::GetNativeHandler(0xBEB2D9A1D9A8F55A);
	rage::scrEngine::RegisterNativeHandler(0xBEB2D9A1D9A8F55A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBEB2D9A1D9A8F55A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xBED8CA5FF5E04113
	static auto nh_0xBED8CA5FF5E04113 = rage::scrEngine::GetNativeHandler(0xBED8CA5FF5E04113);
	rage::scrEngine::RegisterNativeHandler(0xBED8CA5FF5E04113, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBED8CA5FF5E04113(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xBED9F5693F34ED17
	static auto nh_0xBED9F5693F34ED17 = rage::scrEngine::GetNativeHandler(0xBED9F5693F34ED17);
	rage::scrEngine::RegisterNativeHandler(0xBED9F5693F34ED17, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBED9F5693F34ED17(cxt);
	});
	        
	AddResultCleaner(0xBED9F5693F34ED17, ResultCleaner<bool>);

	// AUDIO/0xBEF34B1D9624D5DD
	static auto nh_0xBEF34B1D9624D5DD = rage::scrEngine::GetNativeHandler(0xBEF34B1D9624D5DD);
	rage::scrEngine::RegisterNativeHandler(0xBEF34B1D9624D5DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBEF34B1D9624D5DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xBF22E0F32968E967
	static auto nh_0xBF22E0F32968E967 = rage::scrEngine::GetNativeHandler(0xBF22E0F32968E967);
	rage::scrEngine::RegisterNativeHandler(0xBF22E0F32968E967, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF22E0F32968E967(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xBF371CD2B64212FD
	static auto nh_0xBF371CD2B64212FD = rage::scrEngine::GetNativeHandler(0xBF371CD2B64212FD);
	rage::scrEngine::RegisterNativeHandler(0xBF371CD2B64212FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBF371CD2B64212FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xBF4F34A85CA2970C
	static auto nh_0xBF4F34A85CA2970C = rage::scrEngine::GetNativeHandler(0xBF4F34A85CA2970C);
	rage::scrEngine::RegisterNativeHandler(0xBF4F34A85CA2970C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF4F34A85CA2970C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xBF72910D0F26F025 (result cleaner only)
	AddResultCleaner(0xBF72910D0F26F025, ResultCleaner<int>);

	// STATS/0xBFAFDB5FAAA5C5AB
	static auto nh_0xBFAFDB5FAAA5C5AB = rage::scrEngine::GetNativeHandler(0xBFAFDB5FAAA5C5AB);
	rage::scrEngine::RegisterNativeHandler(0xBFAFDB5FAAA5C5AB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBFAFDB5FAAA5C5AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xBFFE53AE7E67FCDC
	static auto nh_0xBFFE53AE7E67FCDC = rage::scrEngine::GetNativeHandler(0xBFFE53AE7E67FCDC);
	rage::scrEngine::RegisterNativeHandler(0xBFFE53AE7E67FCDC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBFFE53AE7E67FCDC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC01D2470F22CDE5A
	static auto nh_0xC01D2470F22CDE5A = rage::scrEngine::GetNativeHandler(0xC01D2470F22CDE5A);
	rage::scrEngine::RegisterNativeHandler(0xC01D2470F22CDE5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC01D2470F22CDE5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC03FAB2C2F92289B
	static auto nh_0xC03FAB2C2F92289B = rage::scrEngine::GetNativeHandler(0xC03FAB2C2F92289B);
	rage::scrEngine::RegisterNativeHandler(0xC03FAB2C2F92289B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC03FAB2C2F92289B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xC0416B061F2B7E5E
	static auto nh_0xC0416B061F2B7E5E = rage::scrEngine::GetNativeHandler(0xC0416B061F2B7E5E);
	rage::scrEngine::RegisterNativeHandler(0xC0416B061F2B7E5E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC0416B061F2B7E5E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC0E0D686DDFC6EAE (result cleaner only)
	AddResultCleaner(0xC0E0D686DDFC6EAE, ResultCleaner<int>);

	// VEHICLE/0xC0ED6438E6D39BA8
	static auto nh_0xC0ED6438E6D39BA8 = rage::scrEngine::GetNativeHandler(0xC0ED6438E6D39BA8);
	rage::scrEngine::RegisterNativeHandler(0xC0ED6438E6D39BA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC0ED6438E6D39BA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0xC13C38E47EA5DF31
	static auto nh_0xC13C38E47EA5DF31 = rage::scrEngine::GetNativeHandler(0xC13C38E47EA5DF31);
	rage::scrEngine::RegisterNativeHandler(0xC13C38E47EA5DF31, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC13C38E47EA5DF31(cxt);
	});
	        
	AddResultCleaner(0xC13C38E47EA5DF31, ResultCleaner<bool>);

	// STATS/0xC141B8917E0017EC
	static auto nh_0xC141B8917E0017EC = rage::scrEngine::GetNativeHandler(0xC141B8917E0017EC);
	rage::scrEngine::RegisterNativeHandler(0xC141B8917E0017EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC141B8917E0017EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC14BD9F5337219B2
	static auto nh_0xC14BD9F5337219B2 = rage::scrEngine::GetNativeHandler(0xC14BD9F5337219B2);
	rage::scrEngine::RegisterNativeHandler(0xC14BD9F5337219B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC14BD9F5337219B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/0xC1805D05E6D4FE10
	static auto nh_0xC1805D05E6D4FE10 = rage::scrEngine::GetNativeHandler(0xC1805D05E6D4FE10);
	rage::scrEngine::RegisterNativeHandler(0xC1805D05E6D4FE10, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1805D05E6D4FE10(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC1E963C58664B556
	static auto nh_0xC1E963C58664B556 = rage::scrEngine::GetNativeHandler(0xC1E963C58664B556);
	rage::scrEngine::RegisterNativeHandler(0xC1E963C58664B556, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC1E963C58664B556(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xC2C97EA97711D1AE (result cleaner only)
	AddResultCleaner(0xC2C97EA97711D1AE, ResultCleaner<bool>);

	// HUD/0xC2D2AD9EAAE265B8 (result cleaner only)
	AddResultCleaner(0xC2D2AD9EAAE265B8, ResultCleaner<bool>);

	// PED/0xC2EE020F5FB4DB53
	static auto nh_0xC2EE020F5FB4DB53 = rage::scrEngine::GetNativeHandler(0xC2EE020F5FB4DB53);
	rage::scrEngine::RegisterNativeHandler(0xC2EE020F5FB4DB53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC2EE020F5FB4DB53(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xC30BDAEE47256C13
	static auto nh_0xC30BDAEE47256C13 = rage::scrEngine::GetNativeHandler(0xC30BDAEE47256C13);
	rage::scrEngine::RegisterNativeHandler(0xC30BDAEE47256C13, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC30BDAEE47256C13(cxt);
	});
	        
	AddResultCleaner(0xC30BDAEE47256C13, ResultCleaner<int>);

	// NETWORK/0xC32EA7A2F6CA7557 (result cleaner only)
	AddResultCleaner(0xC32EA7A2F6CA7557, ResultCleaner<int>);

	// PLAYER/0xC3376F42B1FACCC6
	static auto nh_0xC3376F42B1FACCC6 = rage::scrEngine::GetNativeHandler(0xC3376F42B1FACCC6);
	rage::scrEngine::RegisterNativeHandler(0xC3376F42B1FACCC6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3376F42B1FACCC6(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0xC34BC448DA29F5E9
	static auto nh_0xC34BC448DA29F5E9 = rage::scrEngine::GetNativeHandler(0xC34BC448DA29F5E9);
	rage::scrEngine::RegisterNativeHandler(0xC34BC448DA29F5E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC34BC448DA29F5E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xC35A6D07C93802B2
	static auto nh_0xC35A6D07C93802B2 = rage::scrEngine::GetNativeHandler(0xC35A6D07C93802B2);
	rage::scrEngine::RegisterNativeHandler(0xC35A6D07C93802B2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC35A6D07C93802B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xC361AA040D6637A8
	static auto nh_0xC361AA040D6637A8 = rage::scrEngine::GetNativeHandler(0xC361AA040D6637A8);
	rage::scrEngine::RegisterNativeHandler(0xC361AA040D6637A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC361AA040D6637A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xC42DD763159F3461 (result cleaner only)
	AddResultCleaner(0xC42DD763159F3461, ResultCleaner<bool>);

	// NETWORK/0xC434133D9BA52777
	static auto nh_0xC434133D9BA52777 = rage::scrEngine::GetNativeHandler(0xC434133D9BA52777);
	rage::scrEngine::RegisterNativeHandler(0xC434133D9BA52777, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC434133D9BA52777(cxt);
	});
	        
	AddResultCleaner(0xC434133D9BA52777, ResultCleaner<int>);

	// DLC/0xC4637A6D03C24CC3 (result cleaner only)
	AddResultCleaner(0xC4637A6D03C24CC3, ResultCleaner<bool>);

	// VEHICLE/0xC4B3347BD68BD609
	static auto nh_0xC4B3347BD68BD609 = rage::scrEngine::GetNativeHandler(0xC4B3347BD68BD609);
	rage::scrEngine::RegisterNativeHandler(0xC4B3347BD68BD609, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC4B3347BD68BD609(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xC50CE861B55EAB8B
	static auto nh_0xC50CE861B55EAB8B = rage::scrEngine::GetNativeHandler(0xC50CE861B55EAB8B);
	rage::scrEngine::RegisterNativeHandler(0xC50CE861B55EAB8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC50CE861B55EAB8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xC56FBF2F228E1DAC
	static auto nh_0xC56FBF2F228E1DAC = rage::scrEngine::GetNativeHandler(0xC56FBF2F228E1DAC);
	rage::scrEngine::RegisterNativeHandler(0xC56FBF2F228E1DAC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC56FBF2F228E1DAC(cxt);
	});
	        
	AddResultCleaner(0xC56FBF2F228E1DAC, ResultCleaner<int>);

	// NETWORK/0xC571D0E77D8BBC29 (result cleaner only)
	AddResultCleaner(0xC571D0E77D8BBC29, ResultCleaner<bool>);

	// HUD/0xC594B315EDF2D4AF
	static auto nh_0xC594B315EDF2D4AF = rage::scrEngine::GetNativeHandler(0xC594B315EDF2D4AF);
	rage::scrEngine::RegisterNativeHandler(0xC594B315EDF2D4AF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC594B315EDF2D4AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xC5A35C73B68F3C49 (result cleaner only)
	AddResultCleaner(0xC5A35C73B68F3C49, ResultCleaner<bool>);

	// GRAPHICS/0xC5C8F970D4EDFF71
	static auto nh_0xC5C8F970D4EDFF71 = rage::scrEngine::GetNativeHandler(0xC5C8F970D4EDFF71);
	rage::scrEngine::RegisterNativeHandler(0xC5C8F970D4EDFF71, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC5C8F970D4EDFF71(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xC6033D32241F6FB5
	static auto nh_0xC6033D32241F6FB5 = rage::scrEngine::GetNativeHandler(0xC6033D32241F6FB5);
	rage::scrEngine::RegisterNativeHandler(0xC6033D32241F6FB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC6033D32241F6FB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0xC61B86C9F61EB404
	static auto nh_0xC61B86C9F61EB404 = rage::scrEngine::GetNativeHandler(0xC61B86C9F61EB404);
	rage::scrEngine::RegisterNativeHandler(0xC61B86C9F61EB404, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC61B86C9F61EB404(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC67E2DA1CBE759E2
	static auto nh_0xC67E2DA1CBE759E2 = rage::scrEngine::GetNativeHandler(0xC67E2DA1CBE759E2);
	rage::scrEngine::RegisterNativeHandler(0xC67E2DA1CBE759E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC67E2DA1CBE759E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC6E0E2616A7576BB (result cleaner only)
	AddResultCleaner(0xC6E0E2616A7576BB, ResultCleaner<int>);

	// MONEY/0xC6E74CF8C884C880
	static auto nh_0xC6E74CF8C884C880 = rage::scrEngine::GetNativeHandler(0xC6E74CF8C884C880);
	rage::scrEngine::RegisterNativeHandler(0xC6E74CF8C884C880, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC6E74CF8C884C880(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xC7F29CA00F46350E
	static auto nh_0xC7F29CA00F46350E = rage::scrEngine::GetNativeHandler(0xC7F29CA00F46350E);
	rage::scrEngine::RegisterNativeHandler(0xC7F29CA00F46350E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7F29CA00F46350E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0xC830417D630A50F9 (result cleaner only)
	AddResultCleaner(0xC830417D630A50F9, ResultCleaner<bool>);

	// CAM/0xC8391C309684595A
	static auto nh_0xC8391C309684595A = rage::scrEngine::GetNativeHandler(0xC8391C309684595A);
	rage::scrEngine::RegisterNativeHandler(0xC8391C309684595A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8391C309684595A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xC847B43F369AC0B5
	static auto nh_0xC847B43F369AC0B5 = rage::scrEngine::GetNativeHandler(0xC847B43F369AC0B5);
	rage::scrEngine::RegisterNativeHandler(0xC847B43F369AC0B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC847B43F369AC0B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xC87E740D9F3872CC (result cleaner only)
	AddResultCleaner(0xC87E740D9F3872CC, ResultCleaner<int>);

	// CAM/0xC8B5C4A79CC18B94
	static auto nh_0xC8B5C4A79CC18B94 = rage::scrEngine::GetNativeHandler(0xC8B5C4A79CC18B94);
	rage::scrEngine::RegisterNativeHandler(0xC8B5C4A79CC18B94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8B5C4A79CC18B94(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xC8E1071177A23BE5
	static auto nh_0xC8E1071177A23BE5 = rage::scrEngine::GetNativeHandler(0xC8E1071177A23BE5);
	rage::scrEngine::RegisterNativeHandler(0xC8E1071177A23BE5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC8E1071177A23BE5(cxt);
	});
	        
	AddResultCleaner(0xC8E1071177A23BE5, ResultCleaner<bool>);

	// GRAPHICS/0xCA465D9CC0D231BA
	static auto nh_0xCA465D9CC0D231BA = rage::scrEngine::GetNativeHandler(0xCA465D9CC0D231BA);
	rage::scrEngine::RegisterNativeHandler(0xCA465D9CC0D231BA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCA465D9CC0D231BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xCA4AE345A153D573
	static auto nh_0xCA4AE345A153D573 = rage::scrEngine::GetNativeHandler(0xCA4AE345A153D573);
	rage::scrEngine::RegisterNativeHandler(0xCA4AE345A153D573, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCA4AE345A153D573(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xCA575C391FEA25CC
	static auto nh_0xCA575C391FEA25CC = rage::scrEngine::GetNativeHandler(0xCA575C391FEA25CC);
	rage::scrEngine::RegisterNativeHandler(0xCA575C391FEA25CC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCA575C391FEA25CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xCA59CCAE5D01E4CE
	static auto nh_0xCA59CCAE5D01E4CE = rage::scrEngine::GetNativeHandler(0xCA59CCAE5D01E4CE);
	rage::scrEngine::RegisterNativeHandler(0xCA59CCAE5D01E4CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCA59CCAE5D01E4CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xCA6B2F7CE32AB653
	static auto nh_0xCA6B2F7CE32AB653 = rage::scrEngine::GetNativeHandler(0xCA6B2F7CE32AB653);
	rage::scrEngine::RegisterNativeHandler(0xCA6B2F7CE32AB653, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xCA6B2F7CE32AB653(cxt);
	});
	        
	AddResultCleaner(0xCA6B2F7CE32AB653, ResultCleaner<bool>);

	// PLAYER/0xCAC57395B151135F
	static auto nh_0xCAC57395B151135F = rage::scrEngine::GetNativeHandler(0xCAC57395B151135F);
	rage::scrEngine::RegisterNativeHandler(0xCAC57395B151135F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCAC57395B151135F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/0xCB0360EFEFB2580D
	static auto nh_0xCB0360EFEFB2580D = rage::scrEngine::GetNativeHandler(0xCB0360EFEFB2580D);
	rage::scrEngine::RegisterNativeHandler(0xCB0360EFEFB2580D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB0360EFEFB2580D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xCB645E85E97EA48B (result cleaner only)
	AddResultCleaner(0xCB645E85E97EA48B, ResultCleaner<bool>);

	// GRAPHICS/0xCB82A0BF0E3E3265 (result cleaner only)
	AddResultCleaner(0xCB82A0BF0E3E3265, ResultCleaner<int>);

	// STATS/0xCC25A4553DFBF9EA
	static auto nh_0xCC25A4553DFBF9EA = rage::scrEngine::GetNativeHandler(0xCC25A4553DFBF9EA);
	rage::scrEngine::RegisterNativeHandler(0xCC25A4553DFBF9EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xCC25A4553DFBF9EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/0xCC6E963682533882
	static auto nh_0xCC6E963682533882 = rage::scrEngine::GetNativeHandler(0xCC6E963682533882);
	rage::scrEngine::RegisterNativeHandler(0xCC6E963682533882, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC6E963682533882(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xCCD078C2665D2973
	static auto nh_0xCCD078C2665D2973 = rage::scrEngine::GetNativeHandler(0xCCD078C2665D2973);
	rage::scrEngine::RegisterNativeHandler(0xCCD078C2665D2973, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCCD078C2665D2973(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xCD018C591F94CB43
	static auto nh_0xCD018C591F94CB43 = rage::scrEngine::GetNativeHandler(0xCD018C591F94CB43);
	rage::scrEngine::RegisterNativeHandler(0xCD018C591F94CB43, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD018C591F94CB43(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xCD0F5B5D932AE473
	static auto nh_0xCD0F5B5D932AE473 = rage::scrEngine::GetNativeHandler(0xCD0F5B5D932AE473);
	rage::scrEngine::RegisterNativeHandler(0xCD0F5B5D932AE473, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD0F5B5D932AE473(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xCD4D66B43B1DD28D
	static auto nh_0xCD4D66B43B1DD28D = rage::scrEngine::GetNativeHandler(0xCD4D66B43B1DD28D);
	rage::scrEngine::RegisterNativeHandler(0xCD4D66B43B1DD28D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xCD4D66B43B1DD28D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xCD74233600C4EA6B
	static auto nh_0xCD74233600C4EA6B = rage::scrEngine::GetNativeHandler(0xCD74233600C4EA6B);
	rage::scrEngine::RegisterNativeHandler(0xCD74233600C4EA6B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD74233600C4EA6B(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0xCEA7C8E1B48FF68C
	static auto nh_0xCEA7C8E1B48FF68C = rage::scrEngine::GetNativeHandler(0xCEA7C8E1B48FF68C);
	rage::scrEngine::RegisterNativeHandler(0xCEA7C8E1B48FF68C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCEA7C8E1B48FF68C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xCED08CBE8EBB97C7
	static auto nh_0xCED08CBE8EBB97C7 = rage::scrEngine::GetNativeHandler(0xCED08CBE8EBB97C7);
	rage::scrEngine::RegisterNativeHandler(0xCED08CBE8EBB97C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCED08CBE8EBB97C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xCEDA60A74219D064
	static auto nh_0xCEDA60A74219D064 = rage::scrEngine::GetNativeHandler(0xCEDA60A74219D064);
	rage::scrEngine::RegisterNativeHandler(0xCEDA60A74219D064, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCEDA60A74219D064(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xCF9159024555488C
	static auto nh_0xCF9159024555488C = rage::scrEngine::GetNativeHandler(0xCF9159024555488C);
	rage::scrEngine::RegisterNativeHandler(0xCF9159024555488C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCF9159024555488C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xCFD16F0DB5A3535C
	static auto nh_0xCFD16F0DB5A3535C = rage::scrEngine::GetNativeHandler(0xCFD16F0DB5A3535C);
	rage::scrEngine::RegisterNativeHandler(0xCFD16F0DB5A3535C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFD16F0DB5A3535C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xCFD778E7904C255E
	static auto nh_0xCFD778E7904C255E = rage::scrEngine::GetNativeHandler(0xCFD778E7904C255E);
	rage::scrEngine::RegisterNativeHandler(0xCFD778E7904C255E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFD778E7904C255E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xCFEB46DCD7D8D5EB
	static auto nh_0xCFEB46DCD7D8D5EB = rage::scrEngine::GetNativeHandler(0xCFEB46DCD7D8D5EB);
	rage::scrEngine::RegisterNativeHandler(0xCFEB46DCD7D8D5EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFEB46DCD7D8D5EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xD05A3241B9A86F19
	static auto nh_0xD05A3241B9A86F19 = rage::scrEngine::GetNativeHandler(0xD05A3241B9A86F19);
	rage::scrEngine::RegisterNativeHandler(0xD05A3241B9A86F19, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD05A3241B9A86F19(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xD10282B6E3751BA0 (result cleaner only)
	AddResultCleaner(0xD10282B6E3751BA0, ResultCleaner<int>);

	// HUD/0xD1942374085C8469
	static auto nh_0xD1942374085C8469 = rage::scrEngine::GetNativeHandler(0xD1942374085C8469);
	rage::scrEngine::RegisterNativeHandler(0xD1942374085C8469, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD1942374085C8469(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xD1A1EE3B4FA8E760
	static auto nh_0xD1A1EE3B4FA8E760 = rage::scrEngine::GetNativeHandler(0xD1A1EE3B4FA8E760);
	rage::scrEngine::RegisterNativeHandler(0xD1A1EE3B4FA8E760, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD1A1EE3B4FA8E760(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xD1C55B110E4DF534
	static auto nh_0xD1C55B110E4DF534 = rage::scrEngine::GetNativeHandler(0xD1C55B110E4DF534);
	rage::scrEngine::RegisterNativeHandler(0xD1C55B110E4DF534, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD1C55B110E4DF534(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xD1C9B92BDD3F151D
	static auto nh_0xD1C9B92BDD3F151D = rage::scrEngine::GetNativeHandler(0xD1C9B92BDD3F151D);
	rage::scrEngine::RegisterNativeHandler(0xD1C9B92BDD3F151D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD1C9B92BDD3F151D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xD2049635DEB9C375
	static auto nh_0xD2049635DEB9C375 = rage::scrEngine::GetNativeHandler(0xD2049635DEB9C375);
	rage::scrEngine::RegisterNativeHandler(0xD2049635DEB9C375, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2049635DEB9C375(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xD29334ED1A256DBF
	static auto nh_0xD29334ED1A256DBF = rage::scrEngine::GetNativeHandler(0xD29334ED1A256DBF);
	rage::scrEngine::RegisterNativeHandler(0xD29334ED1A256DBF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xD29334ED1A256DBF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xD313DE83394AF134 (result cleaner only)
	AddResultCleaner(0xD313DE83394AF134, ResultCleaner<bool>);

	// VEHICLE/0xD3301660A57C9272
	static auto nh_0xD3301660A57C9272 = rage::scrEngine::GetNativeHandler(0xD3301660A57C9272);
	rage::scrEngine::RegisterNativeHandler(0xD3301660A57C9272, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD3301660A57C9272(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xD33DAA36272177C4
	static auto nh_0xD33DAA36272177C4 = rage::scrEngine::GetNativeHandler(0xD33DAA36272177C4);
	rage::scrEngine::RegisterNativeHandler(0xD33DAA36272177C4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD33DAA36272177C4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xD3E51C0AB8C26EEE
	static auto nh_0xD3E51C0AB8C26EEE = rage::scrEngine::GetNativeHandler(0xD3E51C0AB8C26EEE);
	rage::scrEngine::RegisterNativeHandler(0xD3E51C0AB8C26EEE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD3E51C0AB8C26EEE(cxt);
	});
	        
	AddResultCleaner(0xD3E51C0AB8C26EEE, ResultCleaner<int>);

	// VEHICLE/0xD4196117AF7BB974
	static auto nh_0xD4196117AF7BB974 = rage::scrEngine::GetNativeHandler(0xD4196117AF7BB974);
	rage::scrEngine::RegisterNativeHandler(0xD4196117AF7BB974, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD4196117AF7BB974(cxt);
	});
	        
	AddResultCleaner(0xD4196117AF7BB974, ResultCleaner<int>);

	// STATS/0xD4367D310F079DB0
	static auto nh_0xD4367D310F079DB0 = rage::scrEngine::GetNativeHandler(0xD4367D310F079DB0);
	rage::scrEngine::RegisterNativeHandler(0xD4367D310F079DB0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xD4367D310F079DB0(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xD4A7A435B3710D05
	static auto nh_0xD4A7A435B3710D05 = rage::scrEngine::GetNativeHandler(0xD4A7A435B3710D05);
	rage::scrEngine::RegisterNativeHandler(0xD4A7A435B3710D05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4A7A435B3710D05(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xD558BEC0BBA7E8D2
	static auto nh_0xD558BEC0BBA7E8D2 = rage::scrEngine::GetNativeHandler(0xD558BEC0BBA7E8D2);
	rage::scrEngine::RegisterNativeHandler(0xD558BEC0BBA7E8D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xD558BEC0BBA7E8D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xD565F438137F0E10
	static auto nh_0xD565F438137F0E10 = rage::scrEngine::GetNativeHandler(0xD565F438137F0E10);
	rage::scrEngine::RegisterNativeHandler(0xD565F438137F0E10, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD565F438137F0E10(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xD642319C54AADEB6 (result cleaner only)
	AddResultCleaner(0xD642319C54AADEB6, ResultCleaner<int>);

	// STATS/0xD6CA58B3B53A0F22
	static auto nh_0xD6CA58B3B53A0F22 = rage::scrEngine::GetNativeHandler(0xD6CA58B3B53A0F22);
	rage::scrEngine::RegisterNativeHandler(0xD6CA58B3B53A0F22, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD6CA58B3B53A0F22(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xD6D7478CA62B8D41
	static auto nh_0xD6D7478CA62B8D41 = rage::scrEngine::GetNativeHandler(0xD6D7478CA62B8D41);
	rage::scrEngine::RegisterNativeHandler(0xD6D7478CA62B8D41, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD6D7478CA62B8D41(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xD7B6C73CAD419BCF
	static auto nh_0xD7B6C73CAD419BCF = rage::scrEngine::GetNativeHandler(0xD7B6C73CAD419BCF);
	rage::scrEngine::RegisterNativeHandler(0xD7B6C73CAD419BCF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7B6C73CAD419BCF(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xD8122C407663B995 (result cleaner only)
	AddResultCleaner(0xD8122C407663B995, ResultCleaner<int>);

	// PLAYER/0xD821056B9ACF8052
	static auto nh_0xD821056B9ACF8052 = rage::scrEngine::GetNativeHandler(0xD821056B9ACF8052);
	rage::scrEngine::RegisterNativeHandler(0xD821056B9ACF8052, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD821056B9ACF8052(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xD9454B5752C857DC
	static auto nh_0xD9454B5752C857DC = rage::scrEngine::GetNativeHandler(0xD9454B5752C857DC);
	rage::scrEngine::RegisterNativeHandler(0xD9454B5752C857DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9454B5752C857DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xD9F692D349249528
	static auto nh_0xD9F692D349249528 = rage::scrEngine::GetNativeHandler(0xD9F692D349249528);
	rage::scrEngine::RegisterNativeHandler(0xD9F692D349249528, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9F692D349249528(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xDAF80797FC534BEC
	static auto nh_0xDAF80797FC534BEC = rage::scrEngine::GetNativeHandler(0xDAF80797FC534BEC);
	rage::scrEngine::RegisterNativeHandler(0xDAF80797FC534BEC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDAF80797FC534BEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xDAF87174BE7454FF
	static auto nh_0xDAF87174BE7454FF = rage::scrEngine::GetNativeHandler(0xDAF87174BE7454FF);
	rage::scrEngine::RegisterNativeHandler(0xDAF87174BE7454FF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDAF87174BE7454FF(cxt);
	});
	        
	AddResultCleaner(0xDAF87174BE7454FF, ResultCleaner<bool>);

	// GRAPHICS/0xDB1EA9411C8911EC
	static auto nh_0xDB1EA9411C8911EC = rage::scrEngine::GetNativeHandler(0xDB1EA9411C8911EC);
	rage::scrEngine::RegisterNativeHandler(0xDB1EA9411C8911EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB1EA9411C8911EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xDB41D07A45A6D4B7
	static auto nh_0xDB41D07A45A6D4B7 = rage::scrEngine::GetNativeHandler(0xDB41D07A45A6D4B7);
	rage::scrEngine::RegisterNativeHandler(0xDB41D07A45A6D4B7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDB41D07A45A6D4B7(cxt);
	});
	        
	AddResultCleaner(0xDB41D07A45A6D4B7, ResultCleaner<int>);

	// NETWORK/0xDB663CC9FF3407A9 (result cleaner only)
	AddResultCleaner(0xDB663CC9FF3407A9, ResultCleaner<int>);

	// CAM/0xDB90C6CCA48940F1
	static auto nh_0xDB90C6CCA48940F1 = rage::scrEngine::GetNativeHandler(0xDB90C6CCA48940F1);
	rage::scrEngine::RegisterNativeHandler(0xDB90C6CCA48940F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB90C6CCA48940F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xDBC631F109350B8C
	static auto nh_0xDBC631F109350B8C = rage::scrEngine::GetNativeHandler(0xDBC631F109350B8C);
	rage::scrEngine::RegisterNativeHandler(0xDBC631F109350B8C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBC631F109350B8C(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/0xDBF860CF1DB8E599
	static auto nh_0xDBF860CF1DB8E599 = rage::scrEngine::GetNativeHandler(0xDBF860CF1DB8E599);
	rage::scrEngine::RegisterNativeHandler(0xDBF860CF1DB8E599, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDBF860CF1DB8E599(cxt);
	});
	        
	AddResultCleaner(0xDBF860CF1DB8E599, ResultCleaner<int>);

	// ENTITY/0xDC6F8601FAF2E893
	static auto nh_0xDC6F8601FAF2E893 = rage::scrEngine::GetNativeHandler(0xDC6F8601FAF2E893);
	rage::scrEngine::RegisterNativeHandler(0xDC6F8601FAF2E893, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC6F8601FAF2E893(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xDCC07526B8EC45AF (result cleaner only)
	AddResultCleaner(0xDCC07526B8EC45AF, ResultCleaner<bool>);

	// VEHICLE/0xDCE97BDF8A0EABC8
	static auto nh_0xDCE97BDF8A0EABC8 = rage::scrEngine::GetNativeHandler(0xDCE97BDF8A0EABC8);
	rage::scrEngine::RegisterNativeHandler(0xDCE97BDF8A0EABC8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDCE97BDF8A0EABC8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xDD2620B7B9D16FF1 (result cleaner only)
	AddResultCleaner(0xDD2620B7B9D16FF1, ResultCleaner<bool>);

	// AUDIO/0xDD6BCF9E94425DF9
	static auto nh_0xDD6BCF9E94425DF9 = rage::scrEngine::GetNativeHandler(0xDD6BCF9E94425DF9);
	rage::scrEngine::RegisterNativeHandler(0xDD6BCF9E94425DF9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD6BCF9E94425DF9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xDD79DF9F4D26E1C9
	static auto nh_0xDD79DF9F4D26E1C9 = rage::scrEngine::GetNativeHandler(0xDD79DF9F4D26E1C9);
	rage::scrEngine::RegisterNativeHandler(0xDD79DF9F4D26E1C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD79DF9F4D26E1C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xDE03620F8703A9DF (result cleaner only)
	AddResultCleaner(0xDE03620F8703A9DF, ResultCleaner<int>);

	// PLAYER/0xDE45D1A1EF45EE61
	static auto nh_0xDE45D1A1EF45EE61 = rage::scrEngine::GetNativeHandler(0xDE45D1A1EF45EE61);
	rage::scrEngine::RegisterNativeHandler(0xDE45D1A1EF45EE61, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDE45D1A1EF45EE61(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xDE68E30D89F97132
	static auto nh_0xDE68E30D89F97132 = rage::scrEngine::GetNativeHandler(0xDE68E30D89F97132);
	rage::scrEngine::RegisterNativeHandler(0xDE68E30D89F97132, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDE68E30D89F97132(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xDEAAF77EB3687E97
	static auto nh_0xDEAAF77EB3687E97 = rage::scrEngine::GetNativeHandler(0xDEAAF77EB3687E97);
	rage::scrEngine::RegisterNativeHandler(0xDEAAF77EB3687E97, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDEAAF77EB3687E97(cxt);
	});
	        
	AddResultCleaner(0xDEAAF77EB3687E97, ResultCleaner<int>);

	// RECORDING/0xDF4B952F7D381B95 (result cleaner only)
	AddResultCleaner(0xDF4B952F7D381B95, ResultCleaner<int>);

	// STATS/0xDFBD93BF2943E29B
	static auto nh_0xDFBD93BF2943E29B = rage::scrEngine::GetNativeHandler(0xDFBD93BF2943E29B);
	rage::scrEngine::RegisterNativeHandler(0xDFBD93BF2943E29B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFBD93BF2943E29B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xDFCDB14317A9B361
	static auto nh_0xDFCDB14317A9B361 = rage::scrEngine::GetNativeHandler(0xDFCDB14317A9B361);
	rage::scrEngine::RegisterNativeHandler(0xDFCDB14317A9B361, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFCDB14317A9B361(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xDFE68C4B787E1BFB
	static auto nh_0xDFE68C4B787E1BFB = rage::scrEngine::GetNativeHandler(0xDFE68C4B787E1BFB);
	rage::scrEngine::RegisterNativeHandler(0xDFE68C4B787E1BFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDFE68C4B787E1BFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// REPLAY/0xE058175F8EAFE79A
	static auto nh_0xE058175F8EAFE79A = rage::scrEngine::GetNativeHandler(0xE058175F8EAFE79A);
	rage::scrEngine::RegisterNativeHandler(0xE058175F8EAFE79A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE058175F8EAFE79A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xE05DD0E9707003A3
	static auto nh_0xE05DD0E9707003A3 = rage::scrEngine::GetNativeHandler(0xE05DD0E9707003A3);
	rage::scrEngine::RegisterNativeHandler(0xE05DD0E9707003A3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE05DD0E9707003A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xE05F6AEEFEB0BB02
	static auto nh_0xE05F6AEEFEB0BB02 = rage::scrEngine::GetNativeHandler(0xE05F6AEEFEB0BB02);
	rage::scrEngine::RegisterNativeHandler(0xE05F6AEEFEB0BB02, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE05F6AEEFEB0BB02(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xE0F82D68C7039158
	static auto nh_0xE0F82D68C7039158 = rage::scrEngine::GetNativeHandler(0xE0F82D68C7039158);
	rage::scrEngine::RegisterNativeHandler(0xE0F82D68C7039158, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE0F82D68C7039158(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xE111A7C0D200CBC5
	static auto nh_0xE111A7C0D200CBC5 = rage::scrEngine::GetNativeHandler(0xE111A7C0D200CBC5);
	rage::scrEngine::RegisterNativeHandler(0xE111A7C0D200CBC5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE111A7C0D200CBC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xE154B48B68EF72BC
	static auto nh_0xE154B48B68EF72BC = rage::scrEngine::GetNativeHandler(0xE154B48B68EF72BC);
	rage::scrEngine::RegisterNativeHandler(0xE154B48B68EF72BC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE154B48B68EF72BC(cxt);
	});
	        
	AddResultCleaner(0xE154B48B68EF72BC, ResultCleaner<bool>);

	// PAD/0xE1615EC03B3BB4FD (result cleaner only)
	AddResultCleaner(0xE1615EC03B3BB4FD, ResultCleaner<bool>);

	// NETWORK/0xE16AA70CE9BEEDC3
	static auto nh_0xE16AA70CE9BEEDC3 = rage::scrEngine::GetNativeHandler(0xE16AA70CE9BEEDC3);
	rage::scrEngine::RegisterNativeHandler(0xE16AA70CE9BEEDC3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE16AA70CE9BEEDC3(cxt);
	});
	        
	AddResultCleaner(0xE16AA70CE9BEEDC3, ResultCleaner<int>);

	// MONEY/0xE23ADC6FCB1F29AE
	static auto nh_0xE23ADC6FCB1F29AE = rage::scrEngine::GetNativeHandler(0xE23ADC6FCB1F29AE);
	rage::scrEngine::RegisterNativeHandler(0xE23ADC6FCB1F29AE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE23ADC6FCB1F29AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xE2892E7E55D7073A
	static auto nh_0xE2892E7E55D7073A = rage::scrEngine::GetNativeHandler(0xE2892E7E55D7073A);
	rage::scrEngine::RegisterNativeHandler(0xE2892E7E55D7073A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE2892E7E55D7073A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xE2BB399D90942091
	static auto nh_0xE2BB399D90942091 = rage::scrEngine::GetNativeHandler(0xE2BB399D90942091);
	rage::scrEngine::RegisterNativeHandler(0xE2BB399D90942091, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE2BB399D90942091(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xE2E244AB823B4483
	static auto nh_0xE2E244AB823B4483 = rage::scrEngine::GetNativeHandler(0xE2E244AB823B4483);
	rage::scrEngine::RegisterNativeHandler(0xE2E244AB823B4483, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE2E244AB823B4483(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xE2F53F172B45EDE1
	static auto nh_0xE2F53F172B45EDE1 = rage::scrEngine::GetNativeHandler(0xE2F53F172B45EDE1);
	rage::scrEngine::RegisterNativeHandler(0xE2F53F172B45EDE1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE2F53F172B45EDE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xE3261D791EB44ACB
	static auto nh_0xE3261D791EB44ACB = rage::scrEngine::GetNativeHandler(0xE3261D791EB44ACB);
	rage::scrEngine::RegisterNativeHandler(0xE3261D791EB44ACB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE3261D791EB44ACB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/0xE36A98D8AB3D3C66
	static auto nh_0xE36A98D8AB3D3C66 = rage::scrEngine::GetNativeHandler(0xE36A98D8AB3D3C66);
	rage::scrEngine::RegisterNativeHandler(0xE36A98D8AB3D3C66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE36A98D8AB3D3C66(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xE3D969D2785FFB5E
	static auto nh_0xE3D969D2785FFB5E = rage::scrEngine::GetNativeHandler(0xE3D969D2785FFB5E);
	rage::scrEngine::RegisterNativeHandler(0xE3D969D2785FFB5E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3D969D2785FFB5E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xE3E2C1B4C59DBC77
	static auto nh_0xE3E2C1B4C59DBC77 = rage::scrEngine::GetNativeHandler(0xE3E2C1B4C59DBC77);
	rage::scrEngine::RegisterNativeHandler(0xE3E2C1B4C59DBC77, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3E2C1B4C59DBC77(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/0xE3E5A7C64CA2C6ED (result cleaner only)
	AddResultCleaner(0xE3E5A7C64CA2C6ED, ResultCleaner<int>);

	// NETWORK/0xE42D626EEC94E5D9
	static auto nh_0xE42D626EEC94E5D9 = rage::scrEngine::GetNativeHandler(0xE42D626EEC94E5D9);
	rage::scrEngine::RegisterNativeHandler(0xE42D626EEC94E5D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xE42D626EEC94E5D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xE496A53BA5F50A56
	static auto nh_0xE496A53BA5F50A56 = rage::scrEngine::GetNativeHandler(0xE496A53BA5F50A56);
	rage::scrEngine::RegisterNativeHandler(0xE496A53BA5F50A56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE496A53BA5F50A56(cxt);
	});
	        
	AddResultCleaner(0xE496A53BA5F50A56, ResultCleaner<int>);

	// HUD/0xE4C3B169876D33D7
	static auto nh_0xE4C3B169876D33D7 = rage::scrEngine::GetNativeHandler(0xE4C3B169876D33D7);
	rage::scrEngine::RegisterNativeHandler(0xE4C3B169876D33D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE4C3B169876D33D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/0xE4DCEC7FD5B739A5
	static auto nh_0xE4DCEC7FD5B739A5 = rage::scrEngine::GetNativeHandler(0xE4DCEC7FD5B739A5);
	rage::scrEngine::RegisterNativeHandler(0xE4DCEC7FD5B739A5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE4DCEC7FD5B739A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xE4F6E8D07A2F0F51
	static auto nh_0xE4F6E8D07A2F0F51 = rage::scrEngine::GetNativeHandler(0xE4F6E8D07A2F0F51);
	rage::scrEngine::RegisterNativeHandler(0xE4F6E8D07A2F0F51, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE4F6E8D07A2F0F51(cxt);
	});
	        
	AddResultCleaner(0xE4F6E8D07A2F0F51, ResultCleaner<int>);

	// MISC/0xE532EC1A63231B4F
	static auto nh_0xE532EC1A63231B4F = rage::scrEngine::GetNativeHandler(0xE532EC1A63231B4F);
	rage::scrEngine::RegisterNativeHandler(0xE532EC1A63231B4F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE532EC1A63231B4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xE5810AC70602F2F5
	static auto nh_0xE5810AC70602F2F5 = rage::scrEngine::GetNativeHandler(0xE5810AC70602F2F5);
	rage::scrEngine::RegisterNativeHandler(0xE5810AC70602F2F5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5810AC70602F2F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xE59343E9E96529E7 (result cleaner only)
	AddResultCleaner(0xE59343E9E96529E7, ResultCleaner<float>);

	// SAVEMIGRATION/0xE5E9746A66359F9D (result cleaner only)
	AddResultCleaner(0xE5E9746A66359F9D, ResultCleaner<int>);

	// GRAPHICS/0xE63D7C6EECECB66B
	static auto nh_0xE63D7C6EECECB66B = rage::scrEngine::GetNativeHandler(0xE63D7C6EECECB66B);
	rage::scrEngine::RegisterNativeHandler(0xE63D7C6EECECB66B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE63D7C6EECECB66B(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/0xE66377CDDADA4810
	static auto nh_0xE66377CDDADA4810 = rage::scrEngine::GetNativeHandler(0xE66377CDDADA4810);
	rage::scrEngine::RegisterNativeHandler(0xE66377CDDADA4810, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE66377CDDADA4810(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xE6717E652B8C8D8A
	static auto nh_0xE6717E652B8C8D8A = rage::scrEngine::GetNativeHandler(0xE6717E652B8C8D8A);
	rage::scrEngine::RegisterNativeHandler(0xE6717E652B8C8D8A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE6717E652B8C8D8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xE67C6DFD386EA5E7
	static auto nh_0xE67C6DFD386EA5E7 = rage::scrEngine::GetNativeHandler(0xE67C6DFD386EA5E7);
	rage::scrEngine::RegisterNativeHandler(0xE67C6DFD386EA5E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE67C6DFD386EA5E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/0xE6D2CEDD370FF98E
	static auto nh_0xE6D2CEDD370FF98E = rage::scrEngine::GetNativeHandler(0xE6D2CEDD370FF98E);
	rage::scrEngine::RegisterNativeHandler(0xE6D2CEDD370FF98E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE6D2CEDD370FF98E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xE75A4A2E5E316D86 (result cleaner only)
	AddResultCleaner(0xE75A4A2E5E316D86, ResultCleaner<bool>);

	// GRAPHICS/0xE791DF1F73ED2C8B
	static auto nh_0xE791DF1F73ED2C8B = rage::scrEngine::GetNativeHandler(0xE791DF1F73ED2C8B);
	rage::scrEngine::RegisterNativeHandler(0xE791DF1F73ED2C8B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE791DF1F73ED2C8B(cxt);
	});
	        
	AddResultCleaner(0xE791DF1F73ED2C8B, ResultCleaner<int>);

	// VEHICLE/0xE851E480B814D4BA
	static auto nh_0xE851E480B814D4BA = rage::scrEngine::GetNativeHandler(0xE851E480B814D4BA);
	rage::scrEngine::RegisterNativeHandler(0xE851E480B814D4BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE851E480B814D4BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xE8718FAF591FD224 (result cleaner only)
	AddResultCleaner(0xE8718FAF591FD224, ResultCleaner<bool>);

	// STATS/0xE8853FBCE7D8D0D6 (result cleaner only)
	AddResultCleaner(0xE8853FBCE7D8D0D6, ResultCleaner<int>);

	// PED/0xE906EC930F5FE7C8
	static auto nh_0xE906EC930F5FE7C8 = rage::scrEngine::GetNativeHandler(0xE906EC930F5FE7C8);
	rage::scrEngine::RegisterNativeHandler(0xE906EC930F5FE7C8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE906EC930F5FE7C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xE95B0C7D5BA3B96B (result cleaner only)
	AddResultCleaner(0xE95B0C7D5BA3B96B, ResultCleaner<bool>);

	// NETWORK/0xEA8C0DDB10E2822A
	static auto nh_0xEA8C0DDB10E2822A = rage::scrEngine::GetNativeHandler(0xEA8C0DDB10E2822A);
	rage::scrEngine::RegisterNativeHandler(0xEA8C0DDB10E2822A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEA8C0DDB10E2822A(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xEA95C0853A27888E
	static auto nh_0xEA95C0853A27888E = rage::scrEngine::GetNativeHandler(0xEA95C0853A27888E);
	rage::scrEngine::RegisterNativeHandler(0xEA95C0853A27888E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA95C0853A27888E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xEA9960D07DADCF10
	static auto nh_0xEA9960D07DADCF10 = rage::scrEngine::GetNativeHandler(0xEA9960D07DADCF10);
	rage::scrEngine::RegisterNativeHandler(0xEA9960D07DADCF10, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEA9960D07DADCF10(cxt);
	});
	        
	AddResultCleaner(0xEA9960D07DADCF10, ResultCleaner<int>);

	// CAM/0xEAF0FA793D05C592 (result cleaner only)
	AddResultCleaner(0xEAF0FA793D05C592, ResultCleaner<int>);

	// MISC/0xEB078CA2B5E82ADD
	static auto nh_0xEB078CA2B5E82ADD = rage::scrEngine::GetNativeHandler(0xEB078CA2B5E82ADD);
	rage::scrEngine::RegisterNativeHandler(0xEB078CA2B5E82ADD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEB078CA2B5E82ADD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xEB2104E905C6F2E9 (result cleaner only)
	AddResultCleaner(0xEB2104E905C6F2E9, ResultCleaner<int>);

	// OBJECT/0xEB6F1A9B5510A5D2
	static auto nh_0xEB6F1A9B5510A5D2 = rage::scrEngine::GetNativeHandler(0xEB6F1A9B5510A5D2);
	rage::scrEngine::RegisterNativeHandler(0xEB6F1A9B5510A5D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEB6F1A9B5510A5D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xEB81A3DADD503187
	static auto nh_0xEB81A3DADD503187 = rage::scrEngine::GetNativeHandler(0xEB81A3DADD503187);
	rage::scrEngine::RegisterNativeHandler(0xEB81A3DADD503187, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB81A3DADD503187(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xEBCAB9E5048434F4 (result cleaner only)
	AddResultCleaner(0xEBCAB9E5048434F4, ResultCleaner<int>);

	// MISC/0xEBD3205A207939ED
	static auto nh_0xEBD3205A207939ED = rage::scrEngine::GetNativeHandler(0xEBD3205A207939ED);
	rage::scrEngine::RegisterNativeHandler(0xEBD3205A207939ED, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEBD3205A207939ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xEBF8284D8CADEB53
	static auto nh_0xEBF8284D8CADEB53 = rage::scrEngine::GetNativeHandler(0xEBF8284D8CADEB53);
	rage::scrEngine::RegisterNativeHandler(0xEBF8284D8CADEB53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEBF8284D8CADEB53(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xEBFA8D50ADDC54C4
	static auto nh_0xEBFA8D50ADDC54C4 = rage::scrEngine::GetNativeHandler(0xEBFA8D50ADDC54C4);
	rage::scrEngine::RegisterNativeHandler(0xEBFA8D50ADDC54C4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEBFA8D50ADDC54C4(cxt);
	});
	        
	AddResultCleaner(0xEBFA8D50ADDC54C4, ResultCleaner<bool>);

	// PED/0xEC4B4B3B9908052A
	static auto nh_0xEC4B4B3B9908052A = rage::scrEngine::GetNativeHandler(0xEC4B4B3B9908052A);
	rage::scrEngine::RegisterNativeHandler(0xEC4B4B3B9908052A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC4B4B3B9908052A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xEC72C258667BE5EA
	static auto nh_0xEC72C258667BE5EA = rage::scrEngine::GetNativeHandler(0xEC72C258667BE5EA);
	rage::scrEngine::RegisterNativeHandler(0xEC72C258667BE5EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEC72C258667BE5EA(cxt);
	});
	        
	AddResultCleaner(0xEC72C258667BE5EA, ResultCleaner<int>);

	// STATS/0xECB41AC6AB754401 (result cleaner only)
	AddResultCleaner(0xECB41AC6AB754401, ResultCleaner<bool>);

	// PED/0xED3C76ADFA6D07C4
	static auto nh_0xED3C76ADFA6D07C4 = rage::scrEngine::GetNativeHandler(0xED3C76ADFA6D07C4);
	rage::scrEngine::RegisterNativeHandler(0xED3C76ADFA6D07C4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED3C76ADFA6D07C4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xED5EDE9E676643C9
	static auto nh_0xED5EDE9E676643C9 = rage::scrEngine::GetNativeHandler(0xED5EDE9E676643C9);
	rage::scrEngine::RegisterNativeHandler(0xED5EDE9E676643C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xED5EDE9E676643C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xED5FD7AF10F5E262
	static auto nh_0xED5FD7AF10F5E262 = rage::scrEngine::GetNativeHandler(0xED5FD7AF10F5E262);
	rage::scrEngine::RegisterNativeHandler(0xED5FD7AF10F5E262, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xED5FD7AF10F5E262(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/0xED76D195E6E3BF7F
	static auto nh_0xED76D195E6E3BF7F = rage::scrEngine::GetNativeHandler(0xED76D195E6E3BF7F);
	rage::scrEngine::RegisterNativeHandler(0xED76D195E6E3BF7F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xED76D195E6E3BF7F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xEDBF6C9B0D2C65C8
	static auto nh_0xEDBF6C9B0D2C65C8 = rage::scrEngine::GetNativeHandler(0xEDBF6C9B0D2C65C8);
	rage::scrEngine::RegisterNativeHandler(0xEDBF6C9B0D2C65C8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEDBF6C9B0D2C65C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xEEBFC7A7EFDC35B4 (result cleaner only)
	AddResultCleaner(0xEEBFC7A7EFDC35B4, ResultCleaner<int>);

	// GRAPHICS/0xEF398BEEE4EF45F9
	static auto nh_0xEF398BEEE4EF45F9 = rage::scrEngine::GetNativeHandler(0xEF398BEEE4EF45F9);
	rage::scrEngine::RegisterNativeHandler(0xEF398BEEE4EF45F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEF398BEEE4EF45F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xEF39EE20C537E98C
	static auto nh_0xEF39EE20C537E98C = rage::scrEngine::GetNativeHandler(0xEF39EE20C537E98C);
	rage::scrEngine::RegisterNativeHandler(0xEF39EE20C537E98C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xEF39EE20C537E98C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xEF9D388F8D377F44
	static auto nh_0xEF9D388F8D377F44 = rage::scrEngine::GetNativeHandler(0xEF9D388F8D377F44);
	rage::scrEngine::RegisterNativeHandler(0xEF9D388F8D377F44, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEF9D388F8D377F44(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xEFABC7722293DA7C
	static auto nh_0xEFABC7722293DA7C = rage::scrEngine::GetNativeHandler(0xEFABC7722293DA7C);
	rage::scrEngine::RegisterNativeHandler(0xEFABC7722293DA7C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFABC7722293DA7C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xF033419D1B81FAE8
	static auto nh_0xF033419D1B81FAE8 = rage::scrEngine::GetNativeHandler(0xF033419D1B81FAE8);
	rage::scrEngine::RegisterNativeHandler(0xF033419D1B81FAE8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF033419D1B81FAE8(cxt);
	});
	        
	AddResultCleaner(0xF033419D1B81FAE8, ResultCleaner<int>);

	// VEHICLE/0xF051D9BFB6BA39C0
	static auto nh_0xF051D9BFB6BA39C0 = rage::scrEngine::GetNativeHandler(0xF051D9BFB6BA39C0);
	rage::scrEngine::RegisterNativeHandler(0xF051D9BFB6BA39C0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF051D9BFB6BA39C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF06A6F41CB445443
	static auto nh_0xF06A6F41CB445443 = rage::scrEngine::GetNativeHandler(0xF06A6F41CB445443);
	rage::scrEngine::RegisterNativeHandler(0xF06A6F41CB445443, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF06A6F41CB445443(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xF083835B70BA9BFE
	static auto nh_0xF083835B70BA9BFE = rage::scrEngine::GetNativeHandler(0xF083835B70BA9BFE);
	rage::scrEngine::RegisterNativeHandler(0xF083835B70BA9BFE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF083835B70BA9BFE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF11F01D98113536A
	static auto nh_0xF11F01D98113536A = rage::scrEngine::GetNativeHandler(0xF11F01D98113536A);
	rage::scrEngine::RegisterNativeHandler(0xF11F01D98113536A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF11F01D98113536A(cxt);
	});
	        
	AddResultCleaner(0xF11F01D98113536A, ResultCleaner<int>);

	// HUD/0xF13FE2A80C05C561 (result cleaner only)
	AddResultCleaner(0xF13FE2A80C05C561, ResultCleaner<bool>);

	// STATS/0xF1A1803D3476F215
	static auto nh_0xF1A1803D3476F215 = rage::scrEngine::GetNativeHandler(0xF1A1803D3476F215);
	rage::scrEngine::RegisterNativeHandler(0xF1A1803D3476F215, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1A1803D3476F215(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xF22CA0FD74B80E7A
	static auto nh_0xF22CA0FD74B80E7A = rage::scrEngine::GetNativeHandler(0xF22CA0FD74B80E7A);
	rage::scrEngine::RegisterNativeHandler(0xF22CA0FD74B80E7A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF22CA0FD74B80E7A(cxt);
	});
	        
	AddResultCleaner(0xF22CA0FD74B80E7A, ResultCleaner<bool>);

	// PED/0xF2385935BFFD4D92 (result cleaner only)
	AddResultCleaner(0xF2385935BFFD4D92, ResultCleaner<bool>);

	// PAD/0xF239400E16C23E08
	static auto nh_0xF239400E16C23E08 = rage::scrEngine::GetNativeHandler(0xF239400E16C23E08);
	rage::scrEngine::RegisterNativeHandler(0xF239400E16C23E08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF239400E16C23E08(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xF25E02CB9C5818F8
	static auto nh_0xF25E02CB9C5818F8 = rage::scrEngine::GetNativeHandler(0xF25E02CB9C5818F8);
	rage::scrEngine::RegisterNativeHandler(0xF25E02CB9C5818F8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF25E02CB9C5818F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xF284AC67940C6812 (result cleaner only)
	AddResultCleaner(0xF284AC67940C6812, ResultCleaner<int>);

	// NETWORK/0xF287F506767CC8A9 (result cleaner only)
	AddResultCleaner(0xF287F506767CC8A9, ResultCleaner<int>);

	// PED/0xF2BEBCDFAFDAA19E
	static auto nh_0xF2BEBCDFAFDAA19E = rage::scrEngine::GetNativeHandler(0xF2BEBCDFAFDAA19E);
	rage::scrEngine::RegisterNativeHandler(0xF2BEBCDFAFDAA19E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2BEBCDFAFDAA19E(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOADINGSCREEN/0xF2CA003F167E21D2 (result cleaner only)
	AddResultCleaner(0xF2CA003F167E21D2, ResultCleaner<int>);

	// DLC/0xF2E07819EF1A5289 (result cleaner only)
	AddResultCleaner(0xF2E07819EF1A5289, ResultCleaner<bool>);

	// AUDIO/0xF3365489E0DD50F9
	static auto nh_0xF3365489E0DD50F9 = rage::scrEngine::GetNativeHandler(0xF3365489E0DD50F9);
	rage::scrEngine::RegisterNativeHandler(0xF3365489E0DD50F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF3365489E0DD50F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xF3B0E0AED097A3F5
	static auto nh_0xF3B0E0AED097A3F5 = rage::scrEngine::GetNativeHandler(0xF3B0E0AED097A3F5);
	rage::scrEngine::RegisterNativeHandler(0xF3B0E0AED097A3F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF3B0E0AED097A3F5(cxt);
	});
	        
	AddResultCleaner(0xF3B0E0AED097A3F5, ResultCleaner<int>);

	// GRAPHICS/0xF3F776ADA161E47D
	static auto nh_0xF3F776ADA161E47D = rage::scrEngine::GetNativeHandler(0xF3F776ADA161E47D);
	rage::scrEngine::RegisterNativeHandler(0xF3F776ADA161E47D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF3F776ADA161E47D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xF49ABC20D8552257
	static auto nh_0xF49ABC20D8552257 = rage::scrEngine::GetNativeHandler(0xF49ABC20D8552257);
	rage::scrEngine::RegisterNativeHandler(0xF49ABC20D8552257, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF49ABC20D8552257(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xF4A0DADB70F57FA6
	static auto nh_0xF4A0DADB70F57FA6 = rage::scrEngine::GetNativeHandler(0xF4A0DADB70F57FA6);
	rage::scrEngine::RegisterNativeHandler(0xF4A0DADB70F57FA6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4A0DADB70F57FA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xF51D36185993515D
	static auto nh_0xF51D36185993515D = rage::scrEngine::GetNativeHandler(0xF51D36185993515D);
	rage::scrEngine::RegisterNativeHandler(0xF51D36185993515D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF51D36185993515D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF534D94DFA2EAD26
	static auto nh_0xF534D94DFA2EAD26 = rage::scrEngine::GetNativeHandler(0xF534D94DFA2EAD26);
	rage::scrEngine::RegisterNativeHandler(0xF534D94DFA2EAD26, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xF534D94DFA2EAD26(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xF55E4046F6F831DC
	static auto nh_0xF55E4046F6F831DC = rage::scrEngine::GetNativeHandler(0xF55E4046F6F831DC);
	rage::scrEngine::RegisterNativeHandler(0xF55E4046F6F831DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF55E4046F6F831DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xF6BAAAF762E1BF40
	static auto nh_0xF6BAAAF762E1BF40 = rage::scrEngine::GetNativeHandler(0xF6BAAAF762E1BF40);
	rage::scrEngine::RegisterNativeHandler(0xF6BAAAF762E1BF40, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF6BAAAF762E1BF40(cxt);
	});
	        
	AddResultCleaner(0xF6BAAAF762E1BF40, ResultCleaner<bool>);

	// NETWORK/0xF6F4383B7C92F11A
	static auto nh_0xF6F4383B7C92F11A = rage::scrEngine::GetNativeHandler(0xF6F4383B7C92F11A);
	rage::scrEngine::RegisterNativeHandler(0xF6F4383B7C92F11A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF6F4383B7C92F11A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xF78B803082D4386F
	static auto nh_0xF78B803082D4386F = rage::scrEngine::GetNativeHandler(0xF78B803082D4386F);
	rage::scrEngine::RegisterNativeHandler(0xF78B803082D4386F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF78B803082D4386F(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xF814FEC6A19FD6E0
	static auto nh_0xF814FEC6A19FD6E0 = rage::scrEngine::GetNativeHandler(0xF814FEC6A19FD6E0);
	rage::scrEngine::RegisterNativeHandler(0xF814FEC6A19FD6E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF814FEC6A19FD6E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xF8155A7F03DDFC8E
	static auto nh_0xF8155A7F03DDFC8E = rage::scrEngine::GetNativeHandler(0xF8155A7F03DDFC8E);
	rage::scrEngine::RegisterNativeHandler(0xF8155A7F03DDFC8E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF8155A7F03DDFC8E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/0xF83D0FEBE75E62C9
	static auto nh_0xF83D0FEBE75E62C9 = rage::scrEngine::GetNativeHandler(0xF83D0FEBE75E62C9);
	rage::scrEngine::RegisterNativeHandler(0xF83D0FEBE75E62C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xF83D0FEBE75E62C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/0xF854439EFBB3B583
	static auto nh_0xF854439EFBB3B583 = rage::scrEngine::GetNativeHandler(0xF854439EFBB3B583);
	rage::scrEngine::RegisterNativeHandler(0xF854439EFBB3B583, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF854439EFBB3B583(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xF8B49F5BA7F850E7
	static auto nh_0xF8B49F5BA7F850E7 = rage::scrEngine::GetNativeHandler(0xF8B49F5BA7F850E7);
	rage::scrEngine::RegisterNativeHandler(0xF8B49F5BA7F850E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF8B49F5BA7F850E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF8C54A461C3E11DC
	static auto nh_0xF8C54A461C3E11DC = rage::scrEngine::GetNativeHandler(0xF8C54A461C3E11DC);
	rage::scrEngine::RegisterNativeHandler(0xF8C54A461C3E11DC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF8C54A461C3E11DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF9096193DF1F99D4
	static auto nh_0xF9096193DF1F99D4 = rage::scrEngine::GetNativeHandler(0xF9096193DF1F99D4);
	rage::scrEngine::RegisterNativeHandler(0xF9096193DF1F99D4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF9096193DF1F99D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xF92099527DB8E2A7
	static auto nh_0xF92099527DB8E2A7 = rage::scrEngine::GetNativeHandler(0xF92099527DB8E2A7);
	rage::scrEngine::RegisterNativeHandler(0xF92099527DB8E2A7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF92099527DB8E2A7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xF9ACF4A08098EA25
	static auto nh_0xF9ACF4A08098EA25 = rage::scrEngine::GetNativeHandler(0xF9ACF4A08098EA25);
	rage::scrEngine::RegisterNativeHandler(0xF9ACF4A08098EA25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF9ACF4A08098EA25(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xF9F2922717B819EC (result cleaner only)
	AddResultCleaner(0xF9F2922717B819EC, ResultCleaner<int>);

	// MONEY/0xFA07759E6FDDD7CF
	static auto nh_0xFA07759E6FDDD7CF = rage::scrEngine::GetNativeHandler(0xFA07759E6FDDD7CF);
	rage::scrEngine::RegisterNativeHandler(0xFA07759E6FDDD7CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xFA07759E6FDDD7CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOADINGSCREEN/0xFA1E0E893D915215
	static auto nh_0xFA1E0E893D915215 = rage::scrEngine::GetNativeHandler(0xFA1E0E893D915215);
	rage::scrEngine::RegisterNativeHandler(0xFA1E0E893D915215, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA1E0E893D915215(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xFA2888E3833C8E96
	static auto nh_0xFA2888E3833C8E96 = rage::scrEngine::GetNativeHandler(0xFA2888E3833C8E96);
	rage::scrEngine::RegisterNativeHandler(0xFA2888E3833C8E96, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA2888E3833C8E96(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xFA3FFB0EEBC288A3
	static auto nh_0xFA3FFB0EEBC288A3 = rage::scrEngine::GetNativeHandler(0xFA3FFB0EEBC288A3);
	rage::scrEngine::RegisterNativeHandler(0xFA3FFB0EEBC288A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA3FFB0EEBC288A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/0xFA83CA6776038F64
	static auto nh_0xFA83CA6776038F64 = rage::scrEngine::GetNativeHandler(0xFA83CA6776038F64);
	rage::scrEngine::RegisterNativeHandler(0xFA83CA6776038F64, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA83CA6776038F64(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xFAA457EF263E8763
	static auto nh_0xFAA457EF263E8763 = rage::scrEngine::GetNativeHandler(0xFAA457EF263E8763);
	rage::scrEngine::RegisterNativeHandler(0xFAA457EF263E8763, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFAA457EF263E8763(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xFAB944D4D481ACCB
	static auto nh_0xFAB944D4D481ACCB = rage::scrEngine::GetNativeHandler(0xFAB944D4D481ACCB);
	rage::scrEngine::RegisterNativeHandler(0xFAB944D4D481ACCB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAB944D4D481ACCB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xFAC18E7356BD3210
	static auto nh_0xFAC18E7356BD3210 = rage::scrEngine::GetNativeHandler(0xFAC18E7356BD3210);
	rage::scrEngine::RegisterNativeHandler(0xFAC18E7356BD3210, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAC18E7356BD3210(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/0xFAC75988A7D078D3
	static auto nh_0xFAC75988A7D078D3 = rage::scrEngine::GetNativeHandler(0xFAC75988A7D078D3);
	rage::scrEngine::RegisterNativeHandler(0xFAC75988A7D078D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAC75988A7D078D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xFAE628F1E9ADB239
	static auto nh_0xFAE628F1E9ADB239 = rage::scrEngine::GetNativeHandler(0xFAE628F1E9ADB239);
	rage::scrEngine::RegisterNativeHandler(0xFAE628F1E9ADB239, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAE628F1E9ADB239(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/0xFAF2A78061FD9EF4
	static auto nh_0xFAF2A78061FD9EF4 = rage::scrEngine::GetNativeHandler(0xFAF2A78061FD9EF4);
	rage::scrEngine::RegisterNativeHandler(0xFAF2A78061FD9EF4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFAF2A78061FD9EF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/0xFB00CA71DA386228
	static auto nh_0xFB00CA71DA386228 = rage::scrEngine::GetNativeHandler(0xFB00CA71DA386228);
	rage::scrEngine::RegisterNativeHandler(0xFB00CA71DA386228, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFB00CA71DA386228(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/0xFB199266061F820A (result cleaner only)
	AddResultCleaner(0xFB199266061F820A, ResultCleaner<bool>);

	// NETWORK/0xFB1F9381E80FA13F
	static auto nh_0xFB1F9381E80FA13F = rage::scrEngine::GetNativeHandler(0xFB1F9381E80FA13F);
	rage::scrEngine::RegisterNativeHandler(0xFB1F9381E80FA13F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFB1F9381E80FA13F(cxt);
	});
	        
	AddResultCleaner(0xFB1F9381E80FA13F, ResultCleaner<int>);

	// NETWORK/0xFB680D403909DC70
	static auto nh_0xFB680D403909DC70 = rage::scrEngine::GetNativeHandler(0xFB680D403909DC70);
	rage::scrEngine::RegisterNativeHandler(0xFB680D403909DC70, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFB680D403909DC70(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/0xFCC228E07217FCAC
	static auto nh_0xFCC228E07217FCAC = rage::scrEngine::GetNativeHandler(0xFCC228E07217FCAC);
	rage::scrEngine::RegisterNativeHandler(0xFCC228E07217FCAC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFCC228E07217FCAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/0xFCF6788FC4860CD4
	static auto nh_0xFCF6788FC4860CD4 = rage::scrEngine::GetNativeHandler(0xFCF6788FC4860CD4);
	rage::scrEngine::RegisterNativeHandler(0xFCF6788FC4860CD4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFCF6788FC4860CD4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/0xFD3151CD37EA2245
	static auto nh_0xFD3151CD37EA2245 = rage::scrEngine::GetNativeHandler(0xFD3151CD37EA2245);
	rage::scrEngine::RegisterNativeHandler(0xFD3151CD37EA2245, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD3151CD37EA2245(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xFD325494792302D7
	static auto nh_0xFD325494792302D7 = rage::scrEngine::GetNativeHandler(0xFD325494792302D7);
	rage::scrEngine::RegisterNativeHandler(0xFD325494792302D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD325494792302D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/0xFD75DABC0957BF33
	static auto nh_0xFD75DABC0957BF33 = rage::scrEngine::GetNativeHandler(0xFD75DABC0957BF33);
	rage::scrEngine::RegisterNativeHandler(0xFD75DABC0957BF33, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD75DABC0957BF33(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/0xFDC07C58E8AAB715
	static auto nh_0xFDC07C58E8AAB715 = rage::scrEngine::GetNativeHandler(0xFDC07C58E8AAB715);
	rage::scrEngine::RegisterNativeHandler(0xFDC07C58E8AAB715, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDC07C58E8AAB715(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xFE4C1D0D3B9CC17E
	static auto nh_0xFE4C1D0D3B9CC17E = rage::scrEngine::GetNativeHandler(0xFE4C1D0D3B9CC17E);
	rage::scrEngine::RegisterNativeHandler(0xFE4C1D0D3B9CC17E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFE4C1D0D3B9CC17E(cxt);
	});
	        
	AddResultCleaner(0xFE4C1D0D3B9CC17E, ResultCleaner<bool>);

	// PED/0xFEC9A3B1820F3331 (result cleaner only)
	AddResultCleaner(0xFEC9A3B1820F3331, ResultCleaner<bool>);

	// AUDIO/0xFF266D1D0EB1195D
	static auto nh_0xFF266D1D0EB1195D = rage::scrEngine::GetNativeHandler(0xFF266D1D0EB1195D);
	rage::scrEngine::RegisterNativeHandler(0xFF266D1D0EB1195D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF266D1D0EB1195D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/0xFF4803BC019852D9
	static auto nh_0xFF4803BC019852D9 = rage::scrEngine::GetNativeHandler(0xFF4803BC019852D9);
	rage::scrEngine::RegisterNativeHandler(0xFF4803BC019852D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFF4803BC019852D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/0xFF8F3A92B75ED67A (result cleaner only)
	AddResultCleaner(0xFF8F3A92B75ED67A, ResultCleaner<int>);

	// PLAYER/0xFFEE8FA29AB9A18E
	static auto nh_0xFFEE8FA29AB9A18E = rage::scrEngine::GetNativeHandler(0xFFEE8FA29AB9A18E);
	rage::scrEngine::RegisterNativeHandler(0xFFEE8FA29AB9A18E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFFEE8FA29AB9A18E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ABSF (result cleaner only)
	AddResultCleaner(0x73D57CFFDD12C355, ResultCleaner<float>);

	// MISC/ABSI (result cleaner only)
	AddResultCleaner(0xF0D31AD191A74F87, ResultCleaner<int>);

	// MISC/ACOS (result cleaner only)
	AddResultCleaner(0x1D08B970013C34B6, ResultCleaner<float>);

	// AUDIO/ACTIVATE_AUDIO_SLOWMO_MODE
	static auto nh_0xD01005D2BA2EB778 = rage::scrEngine::GetNativeHandler(0xD01005D2BA2EB778);
	rage::scrEngine::RegisterNativeHandler(0xD01005D2BA2EB778, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD01005D2BA2EB778(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID
	static auto nh_0xD45B1FFCCD52FF19 = rage::scrEngine::GetNativeHandler(0xD45B1FFCCD52FF19);
	rage::scrEngine::RegisterNativeHandler(0xD45B1FFCCD52FF19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD45B1FFCCD52FF19(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ACTIVATE_FRONTEND_MENU
	static auto nh_0xEF01D36B9C9D0C7B = rage::scrEngine::GetNativeHandler(0xEF01D36B9C9D0C7B);
	rage::scrEngine::RegisterNativeHandler(0xEF01D36B9C9D0C7B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEF01D36B9C9D0C7B(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/ACTIVATE_INTERIOR_ENTITY_SET
	static auto nh_0x55E86AF2712B36A1 = rage::scrEngine::GetNativeHandler(0x55E86AF2712B36A1);
	rage::scrEngine::RegisterNativeHandler(0x55E86AF2712B36A1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x55E86AF2712B36A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ACTIVATE_PHYSICS
	static auto nh_0x710311ADF0E20730 = rage::scrEngine::GetNativeHandler(0x710311ADF0E20730);
	rage::scrEngine::RegisterNativeHandler(0x710311ADF0E20730, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x710311ADF0E20730(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ACTIVATE_TIMECYCLE_EDITOR
	static auto nh_0xeeb9b76a = rage::scrEngine::GetNativeHandler(0xeeb9b76a);
	rage::scrEngine::RegisterNativeHandler(0xeeb9b76a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xeeb9b76a(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ACTIVITY_FEED_CREATE
	static auto nh_0x4DCDF92BF64236CD = rage::scrEngine::GetNativeHandler(0x4DCDF92BF64236CD);
	rage::scrEngine::RegisterNativeHandler(0x4DCDF92BF64236CD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4DCDF92BF64236CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/ADD_AMMO_TO_PED
	static auto nh_0x78F0424C34306220 = rage::scrEngine::GetNativeHandler(0x78F0424C34306220);
	rage::scrEngine::RegisterNativeHandler(0x78F0424C34306220, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78F0424C34306220(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/ADD_ARMOUR_TO_PED
	static auto nh_0x5BA652A0CD14DF2F = rage::scrEngine::GetNativeHandler(0x5BA652A0CD14DF2F);
	rage::scrEngine::RegisterNativeHandler(0x5BA652A0CD14DF2F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5BA652A0CD14DF2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ADD_AUDIO_SUBMIX_OUTPUT
	static auto nh_0xac6e290d = rage::scrEngine::GetNativeHandler(0xac6e290d);
	rage::scrEngine::RegisterNativeHandler(0xac6e290d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xac6e290d(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_BLIP_FOR_COORD (result cleaner only)
	AddResultCleaner(0x5A039BB0BCA604B6, ResultCleaner<int>);

	// HUD/ADD_BLIP_FOR_ENTITY (result cleaner only)
	AddResultCleaner(0x5CDE92C702A8FCE7, ResultCleaner<int>);

	// HUD/ADD_BLIP_FOR_PICKUP (result cleaner only)
	AddResultCleaner(0xBE339365C863BD36, ResultCleaner<int>);

	// HUD/ADD_BLIP_FOR_RADIUS (result cleaner only)
	AddResultCleaner(0x46818D79B1F7499A, ResultCleaner<int>);

	// CAM/ADD_CAM_SPLINE_NODE
	static auto nh_0x8609C75EC438FB3B = rage::scrEngine::GetNativeHandler(0x8609C75EC438FB3B);
	rage::scrEngine::RegisterNativeHandler(0x8609C75EC438FB3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8609C75EC438FB3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ADD_CAM_SPLINE_NODE_USING_CAMERA
	static auto nh_0x0FB82563989CF4FB = rage::scrEngine::GetNativeHandler(0x0FB82563989CF4FB);
	rage::scrEngine::RegisterNativeHandler(0x0FB82563989CF4FB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0FB82563989CF4FB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME
	static auto nh_0x0A9F2A468B328E74 = rage::scrEngine::GetNativeHandler(0x0A9F2A468B328E74);
	rage::scrEngine::RegisterNativeHandler(0x0A9F2A468B328E74, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A9F2A468B328E74(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME
	static auto nh_0x609278246A29CA34 = rage::scrEngine::GetNativeHandler(0x609278246A29CA34);
	rage::scrEngine::RegisterNativeHandler(0x609278246A29CA34, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x609278246A29CA34(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_COVER_BLOCKING_AREA
	static auto nh_0x45C597097DD7CB81 = rage::scrEngine::GetNativeHandler(0x45C597097DD7CB81);
	rage::scrEngine::RegisterNativeHandler(0x45C597097DD7CB81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45C597097DD7CB81(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_COVER_POINT
	static auto nh_0xD5C12A75C7B9497F = rage::scrEngine::GetNativeHandler(0xD5C12A75C7B9497F);
	rage::scrEngine::RegisterNativeHandler(0xD5C12A75C7B9497F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xD5C12A75C7B9497F(cxt);
	});
	        
	AddResultCleaner(0xD5C12A75C7B9497F, ResultCleaner<int>);

	// GRAPHICS/ADD_DECAL (result cleaner only)
	AddResultCleaner(0xB302244A1839BDAD, ResultCleaner<int>);

	// OBJECT/ADD_DOOR_TO_SYSTEM
	static auto nh_0x6F8838D03D1DC226 = rage::scrEngine::GetNativeHandler(0x6F8838D03D1DC226);
	rage::scrEngine::RegisterNativeHandler(0x6F8838D03D1DC226, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F8838D03D1DC226(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ADD_ENTITY_ICON
	static auto nh_0x9CD43EEE12BF4DD0 = rage::scrEngine::GetNativeHandler(0x9CD43EEE12BF4DD0);
	rage::scrEngine::RegisterNativeHandler(0x9CD43EEE12BF4DD0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9CD43EEE12BF4DD0(cxt);
	});
	        
	AddResultCleaner(0x9CD43EEE12BF4DD0, ResultCleaner<int>);

	// AUDIO/ADD_ENTITY_TO_AUDIO_MIX_GROUP
	static auto nh_0x153973AB99FE8980 = rage::scrEngine::GetNativeHandler(0x153973AB99FE8980);
	rage::scrEngine::RegisterNativeHandler(0x153973AB99FE8980, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x153973AB99FE8980(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/ADD_EXPLOSION
	static auto nh_0xE3AD2BDBAEE269AC = rage::scrEngine::GetNativeHandler(0xE3AD2BDBAEE269AC);
	rage::scrEngine::RegisterNativeHandler(0xE3AD2BDBAEE269AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3AD2BDBAEE269AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/ADD_EXPLOSION_WITH_USER_VFX
	static auto nh_0x36DD3FE58B5E5212 = rage::scrEngine::GetNativeHandler(0x36DD3FE58B5E5212);
	rage::scrEngine::RegisterNativeHandler(0x36DD3FE58B5E5212, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36DD3FE58B5E5212(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/ADD_EXTRA_CALMING_QUAD (result cleaner only)
	AddResultCleaner(0xFDBF4CDBC07E1706, ResultCleaner<int>);

	// MISC/ADD_HOSPITAL_RESTART
	static auto nh_0x1F464EF988465A81 = rage::scrEngine::GetNativeHandler(0x1F464EF988465A81);
	rage::scrEngine::RegisterNativeHandler(0x1F464EF988465A81, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x1F464EF988465A81(cxt);
	});
	        
	AddResultCleaner(0x1F464EF988465A81, ResultCleaner<int>);

	// AUDIO/ADD_LINE_TO_CONVERSATION
	static auto nh_0xC5EF963405593646 = rage::scrEngine::GetNativeHandler(0xC5EF963405593646);
	rage::scrEngine::RegisterNativeHandler(0xC5EF963405593646, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC5EF963405593646(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ADD_MINIMAP_OVERLAY
	static auto nh_0x4afd2499 = rage::scrEngine::GetNativeHandler(0x4afd2499);
	rage::scrEngine::RegisterNativeHandler(0x4afd2499, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4afd2499(cxt);
	});
	        
	AddResultCleaner(0x4afd2499, ResultCleaner<int>);

	// CFX/ADD_MINIMAP_OVERLAY_WITH_DEPTH
	static auto nh_0xed0935b5 = rage::scrEngine::GetNativeHandler(0xed0935b5);
	rage::scrEngine::RegisterNativeHandler(0xed0935b5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xed0935b5(cxt);
	});
	        
	AddResultCleaner(0xed0935b5, ResultCleaner<int>);

	// STREAMING/ADD_MODEL_TO_CREATOR_BUDGET (result cleaner only)
	AddResultCleaner(0x0BC3144DEB678666, ResultCleaner<bool>);

	// PATHFIND/ADD_NAVMESH_BLOCKING_OBJECT (result cleaner only)
	AddResultCleaner(0xFCD5C8E06E502F5A, ResultCleaner<int>);

	// PATHFIND/ADD_NAVMESH_REQUIRED_REGION
	static auto nh_0x387EAD7EE42F6685 = rage::scrEngine::GetNativeHandler(0x387EAD7EE42F6685);
	rage::scrEngine::RegisterNativeHandler(0x387EAD7EE42F6685, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x387EAD7EE42F6685(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS
	static auto nh_0x60296AF4BA14ABC5 = rage::scrEngine::GetNativeHandler(0x60296AF4BA14ABC5);
	rage::scrEngine::RegisterNativeHandler(0x60296AF4BA14ABC5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x60296AF4BA14ABC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/ADD_OWNED_EXPLOSION
	static auto nh_0x172AA1B624FA1013 = rage::scrEngine::GetNativeHandler(0x172AA1B624FA1013);
	rage::scrEngine::RegisterNativeHandler(0x172AA1B624FA1013, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x172AA1B624FA1013(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_PATROL_ROUTE_LINK
	static auto nh_0x23083260DEC3A551 = rage::scrEngine::GetNativeHandler(0x23083260DEC3A551);
	rage::scrEngine::RegisterNativeHandler(0x23083260DEC3A551, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23083260DEC3A551(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_PATROL_ROUTE_NODE
	static auto nh_0x8EDF950167586B7C = rage::scrEngine::GetNativeHandler(0x8EDF950167586B7C);
	rage::scrEngine::RegisterNativeHandler(0x8EDF950167586B7C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8EDF950167586B7C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/ADD_PED_DECORATION_FROM_HASHES
	static auto nh_0x5F5D1665E352A839 = rage::scrEngine::GetNativeHandler(0x5F5D1665E352A839);
	rage::scrEngine::RegisterNativeHandler(0x5F5D1665E352A839, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F5D1665E352A839(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/ADD_PED_DECORATION_FROM_HASHES_IN_CORONA
	static auto nh_0x5619BFA07CFD7833 = rage::scrEngine::GetNativeHandler(0x5619BFA07CFD7833);
	rage::scrEngine::RegisterNativeHandler(0x5619BFA07CFD7833, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5619BFA07CFD7833(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/ADD_PED_TO_CONVERSATION
	static auto nh_0x95D9F4BC443956E7 = rage::scrEngine::GetNativeHandler(0x95D9F4BC443956E7);
	rage::scrEngine::RegisterNativeHandler(0x95D9F4BC443956E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x95D9F4BC443956E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ADD_PETROL_DECAL (result cleaner only)
	AddResultCleaner(0x4F5212C7AD880DF8, ResultCleaner<int>);

	// GRAPHICS/ADD_PETROL_TRAIL_DECAL_INFO
	static auto nh_0x967278682CB6967A = rage::scrEngine::GetNativeHandler(0x967278682CB6967A);
	rage::scrEngine::RegisterNativeHandler(0x967278682CB6967A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x967278682CB6967A(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME
	static auto nh_0x3F6167F351168730 = rage::scrEngine::GetNativeHandler(0x3F6167F351168730);
	rage::scrEngine::RegisterNativeHandler(0x3F6167F351168730, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3F6167F351168730(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_POINT_TO_GPS_CUSTOM_ROUTE
	static auto nh_0x311438A071DD9B1A = rage::scrEngine::GetNativeHandler(0x311438A071DD9B1A);
	rage::scrEngine::RegisterNativeHandler(0x311438A071DD9B1A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x311438A071DD9B1A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_POINT_TO_GPS_MULTI_ROUTE
	static auto nh_0xA905192A6781C41B = rage::scrEngine::GetNativeHandler(0xA905192A6781C41B);
	rage::scrEngine::RegisterNativeHandler(0xA905192A6781C41B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA905192A6781C41B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ADD_POLICE_RESTART
	static auto nh_0x452736765B31FC4B = rage::scrEngine::GetNativeHandler(0x452736765B31FC4B);
	rage::scrEngine::RegisterNativeHandler(0x452736765B31FC4B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x452736765B31FC4B(cxt);
	});
	        
	AddResultCleaner(0x452736765B31FC4B, ResultCleaner<int>);

	// MISC/ADD_POP_MULTIPLIER_AREA (result cleaner only)
	AddResultCleaner(0x67F6413D3220E18D, ResultCleaner<int>);

	// MISC/ADD_POP_MULTIPLIER_SPHERE (result cleaner only)
	AddResultCleaner(0x32C7A7E8C43A1F80, ResultCleaner<int>);

	// PED/ADD_RELATIONSHIP_GROUP
	static auto nh_0xF372BC22FCB88606 = rage::scrEngine::GetNativeHandler(0xF372BC22FCB88606);
	rage::scrEngine::RegisterNativeHandler(0xF372BC22FCB88606, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF372BC22FCB88606(cxt);
	});
	        
	AddResultCleaner(0xF372BC22FCB88606, ResultCleaner<int>);

	// CFX/ADD_REPLACE_TEXTURE
	static auto nh_0xa66f8f75 = rage::scrEngine::GetNativeHandler(0xa66f8f75);
	rage::scrEngine::RegisterNativeHandler(0xa66f8f75, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xa66f8f75(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ADD_REPLAY_STAT_VALUE
	static auto nh_0x69FE6DC87BD2A5E9 = rage::scrEngine::GetNativeHandler(0x69FE6DC87BD2A5E9);
	rage::scrEngine::RegisterNativeHandler(0x69FE6DC87BD2A5E9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x69FE6DC87BD2A5E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ADD_ROAD_NODE_SPEED_ZONE (result cleaner only)
	AddResultCleaner(0x2CE544C68FB812A0, ResultCleaner<int>);

	// PHYSICS/ADD_ROPE
	static auto nh_0xE832D760399EB220 = rage::scrEngine::GetNativeHandler(0xE832D760399EB220);
	rage::scrEngine::RegisterNativeHandler(0xE832D760399EB220, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(16)); // Any* unkPtr
		if (!ValidateArg(cxt->GetArgument<void*>(16))) { return; }
		nh_0xE832D760399EB220(cxt);
	});
	        
	AddResultCleaner(0xE832D760399EB220, ResultCleaner<int>);

	// PED/ADD_SCENARIO_BLOCKING_AREA (result cleaner only)
	AddResultCleaner(0x1B5C85C612E5256E, ResultCleaner<int>);

	// BRAIN/ADD_SCRIPT_TO_RANDOM_PED
	static auto nh_0x4EE5367468A65CCC = rage::scrEngine::GetNativeHandler(0x4EE5367468A65CCC);
	rage::scrEngine::RegisterNativeHandler(0x4EE5367468A65CCC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4EE5367468A65CCC(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/ADD_SHOCKING_EVENT_AT_POSITION (result cleaner only)
	AddResultCleaner(0xD9F8455409B525E9, ResultCleaner<int>);

	// EVENT/ADD_SHOCKING_EVENT_FOR_ENTITY (result cleaner only)
	AddResultCleaner(0x7FD8F3BE76F89422, ResultCleaner<int>);

	// CFX/ADD_STATE_BAG_CHANGE_HANDLER
	static auto nh_0x5ba35aaf = rage::scrEngine::GetNativeHandler(0x5ba35aaf);
	rage::scrEngine::RegisterNativeHandler(0x5ba35aaf, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5ba35aaf(cxt);
	});
	        
	AddResultCleaner(0x5ba35aaf, ResultCleaner<int>);

	// MISC/ADD_STUNT_JUMP (result cleaner only)
	AddResultCleaner(0x1A992DA297A4630C, ResultCleaner<int>);

	// MISC/ADD_STUNT_JUMP_ANGLED (result cleaner only)
	AddResultCleaner(0xBBE5D803A5360CBF, ResultCleaner<int>);

	// GRAPHICS/ADD_TCMODIFIER_OVERRIDE
	static auto nh_0x1A8E2C8B9CF4549C = rage::scrEngine::GetNativeHandler(0x1A8E2C8B9CF4549C);
	rage::scrEngine::RegisterNativeHandler(0x1A8E2C8B9CF4549C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1A8E2C8B9CF4549C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_FLOAT
	static auto nh_0xE7DCB5B874BCD96E = rage::scrEngine::GetNativeHandler(0xE7DCB5B874BCD96E);
	rage::scrEngine::RegisterNativeHandler(0xE7DCB5B874BCD96E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE7DCB5B874BCD96E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_FORMATTED_INTEGER
	static auto nh_0x0E4C749FF9DE9CC4 = rage::scrEngine::GetNativeHandler(0x0E4C749FF9DE9CC4);
	rage::scrEngine::RegisterNativeHandler(0x0E4C749FF9DE9CC4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E4C749FF9DE9CC4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_INTEGER
	static auto nh_0x03B504CF259931BC = rage::scrEngine::GetNativeHandler(0x03B504CF259931BC);
	rage::scrEngine::RegisterNativeHandler(0x03B504CF259931BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03B504CF259931BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME
	static auto nh_0x80EAD8E2E1D5D52E = rage::scrEngine::GetNativeHandler(0x80EAD8E2E1D5D52E);
	rage::scrEngine::RegisterNativeHandler(0x80EAD8E2E1D5D52E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80EAD8E2E1D5D52E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY
	static auto nh_0x5F68520888E69014 = rage::scrEngine::GetNativeHandler(0x5F68520888E69014);
	rage::scrEngine::RegisterNativeHandler(0x5F68520888E69014, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5F68520888E69014(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER
	static auto nh_0x761B77454205A61D = rage::scrEngine::GetNativeHandler(0x761B77454205A61D);
	rage::scrEngine::RegisterNativeHandler(0x761B77454205A61D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x761B77454205A61D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME
	static auto nh_0x6C188BE134E074AA = rage::scrEngine::GetNativeHandler(0x6C188BE134E074AA);
	rage::scrEngine::RegisterNativeHandler(0x6C188BE134E074AA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6C188BE134E074AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL
	static auto nh_0xC63CD5D2920ACBE7 = rage::scrEngine::GetNativeHandler(0xC63CD5D2920ACBE7);
	rage::scrEngine::RegisterNativeHandler(0xC63CD5D2920ACBE7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC63CD5D2920ACBE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY
	static auto nh_0x17299B63C7683A2B = rage::scrEngine::GetNativeHandler(0x17299B63C7683A2B);
	rage::scrEngine::RegisterNativeHandler(0x17299B63C7683A2B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17299B63C7683A2B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_TIME
	static auto nh_0x1115F16B8AB9E8BF = rage::scrEngine::GetNativeHandler(0x1115F16B8AB9E8BF);
	rage::scrEngine::RegisterNativeHandler(0x1115F16B8AB9E8BF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1115F16B8AB9E8BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE
	static auto nh_0x94CF4AC034C9C986 = rage::scrEngine::GetNativeHandler(0x94CF4AC034C9C986);
	rage::scrEngine::RegisterNativeHandler(0x94CF4AC034C9C986, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x94CF4AC034C9C986(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ADD_TEXT_ENTRY
	static auto nh_0x32ca01c3 = rage::scrEngine::GetNativeHandler(0x32ca01c3);
	rage::scrEngine::RegisterNativeHandler(0x32ca01c3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x32ca01c3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ADD_TEXT_ENTRY_BY_HASH
	static auto nh_0x289da860 = rage::scrEngine::GetNativeHandler(0x289da860);
	rage::scrEngine::RegisterNativeHandler(0x289da860, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x289da860(cxt);
		NullifyVoid(cxt);
	});
	        
	// CLOCK/ADD_TO_CLOCK_TIME
	static auto nh_0xD716F30D8C8980E2 = rage::scrEngine::GetNativeHandler(0xD716F30D8C8980E2);
	rage::scrEngine::RegisterNativeHandler(0xD716F30D8C8980E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD716F30D8C8980E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// ITEMSET/ADD_TO_ITEMSET
	static auto nh_0xE3945201F14637DD = rage::scrEngine::GetNativeHandler(0xE3945201F14637DD);
	rage::scrEngine::RegisterNativeHandler(0xE3945201F14637DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE3945201F14637DD(cxt);
	});
	        
	AddResultCleaner(0xE3945201F14637DD, ResultCleaner<bool>);

	// VEHICLE/ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA (result cleaner only)
	AddResultCleaner(0x54B0F614960F4A5F, ResultCleaner<int>);

	// GRAPHICS/ADD_VEHICLE_CREW_EMBLEM
	static auto nh_0x428BDCB9DA58DA53 = rage::scrEngine::GetNativeHandler(0x428BDCB9DA58DA53);
	rage::scrEngine::RegisterNativeHandler(0x428BDCB9DA58DA53, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0x428BDCB9DA58DA53(cxt);
	});
	        
	AddResultCleaner(0x428BDCB9DA58DA53, ResultCleaner<bool>);

	// VEHICLE/ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE
	static auto nh_0x99AD4CCCB128CBC9 = rage::scrEngine::GetNativeHandler(0x99AD4CCCB128CBC9);
	rage::scrEngine::RegisterNativeHandler(0x99AD4CCCB128CBC9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x99AD4CCCB128CBC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ADD_VEHICLE_STUCK_CHECK_WITH_WARP
	static auto nh_0x2FA9923062DD396C = rage::scrEngine::GetNativeHandler(0x2FA9923062DD396C);
	rage::scrEngine::RegisterNativeHandler(0x2FA9923062DD396C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x2FA9923062DD396C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_VEHICLE_SUBTASK_ATTACK_COORD
	static auto nh_0x5CF0D8F9BBA0DD75 = rage::scrEngine::GetNativeHandler(0x5CF0D8F9BBA0DD75);
	rage::scrEngine::RegisterNativeHandler(0x5CF0D8F9BBA0DD75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5CF0D8F9BBA0DD75(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ADD_VEHICLE_SUBTASK_ATTACK_PED
	static auto nh_0x85F462BADC7DA47F = rage::scrEngine::GetNativeHandler(0x85F462BADC7DA47F);
	rage::scrEngine::RegisterNativeHandler(0x85F462BADC7DA47F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x85F462BADC7DA47F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ADD_VEHICLE_UPSIDEDOWN_CHECK
	static auto nh_0xB72E26D81006005B = rage::scrEngine::GetNativeHandler(0xB72E26D81006005B);
	rage::scrEngine::RegisterNativeHandler(0xB72E26D81006005B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB72E26D81006005B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CLOCK/ADVANCE_CLOCK_TIME_TO
	static auto nh_0xC8CA9670B9D83B3B = rage::scrEngine::GetNativeHandler(0xC8CA9670B9D83B3B);
	rage::scrEngine::RegisterNativeHandler(0xC8CA9670B9D83B3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8CA9670B9D83B3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS
	static auto nh_0xB264C4D2F2B0A78B = rage::scrEngine::GetNativeHandler(0xB264C4D2F2B0A78B);
	rage::scrEngine::RegisterNativeHandler(0xB264C4D2F2B0A78B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB264C4D2F2B0A78B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ALLOW_MISSION_CREATOR_WARP
	static auto nh_0xDEA36202FC3382DF = rage::scrEngine::GetNativeHandler(0xDEA36202FC3382DF);
	rage::scrEngine::RegisterNativeHandler(0xDEA36202FC3382DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDEA36202FC3382DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/ALLOW_PLAYER_SWITCH_ASCENT
	static auto nh_0x8E2A065ABDAE6994 = rage::scrEngine::GetNativeHandler(0x8E2A065ABDAE6994);
	rage::scrEngine::RegisterNativeHandler(0x8E2A065ABDAE6994, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8E2A065ABDAE6994(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/ALLOW_PLAYER_SWITCH_DESCENT
	static auto nh_0xAD5FDF34B81BFE79 = rage::scrEngine::GetNativeHandler(0xAD5FDF34B81BFE79);
	rage::scrEngine::RegisterNativeHandler(0xAD5FDF34B81BFE79, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD5FDF34B81BFE79(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/ALLOW_PLAYER_SWITCH_OUTRO
	static auto nh_0x74DE2E8739086740 = rage::scrEngine::GetNativeHandler(0x74DE2E8739086740);
	rage::scrEngine::RegisterNativeHandler(0x74DE2E8739086740, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74DE2E8739086740(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/ALLOW_PLAYER_SWITCH_PAN
	static auto nh_0x43D1680C6D19A8E9 = rage::scrEngine::GetNativeHandler(0x43D1680C6D19A8E9);
	rage::scrEngine::RegisterNativeHandler(0x43D1680C6D19A8E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43D1680C6D19A8E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/ALLOW_SONAR_BLIPS
	static auto nh_0x60734CC207C9833C = rage::scrEngine::GetNativeHandler(0x60734CC207C9833C);
	rage::scrEngine::RegisterNativeHandler(0x60734CC207C9833C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x60734CC207C9833C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ANIMATED_SHAKE_CAM
	static auto nh_0xA2746EEAE3E577CD = rage::scrEngine::GetNativeHandler(0xA2746EEAE3E577CD);
	rage::scrEngine::RegisterNativeHandler(0xA2746EEAE3E577CD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA2746EEAE3E577CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ANIMATED_SHAKE_SCRIPT_GLOBAL
	static auto nh_0xC2EAE3FB8CDBED31 = rage::scrEngine::GetNativeHandler(0xC2EAE3FB8CDBED31);
	rage::scrEngine::RegisterNativeHandler(0xC2EAE3FB8CDBED31, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC2EAE3FB8CDBED31(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ANIMPOSTFX_IS_RUNNING
	static auto nh_0x36AD3E690DA5ACEB = rage::scrEngine::GetNativeHandler(0x36AD3E690DA5ACEB);
	rage::scrEngine::RegisterNativeHandler(0x36AD3E690DA5ACEB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x36AD3E690DA5ACEB(cxt);
	});
	        
	AddResultCleaner(0x36AD3E690DA5ACEB, ResultCleaner<bool>);

	// GRAPHICS/ANIMPOSTFX_PLAY
	static auto nh_0x2206BF9A37B7F724 = rage::scrEngine::GetNativeHandler(0x2206BF9A37B7F724);
	rage::scrEngine::RegisterNativeHandler(0x2206BF9A37B7F724, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2206BF9A37B7F724(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ANIMPOSTFX_STOP
	static auto nh_0x068E835A1D0DC0E3 = rage::scrEngine::GetNativeHandler(0x068E835A1D0DC0E3);
	rage::scrEngine::RegisterNativeHandler(0x068E835A1D0DC0E3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x068E835A1D0DC0E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ANIMPOSTFX_STOP_ALL
	static auto nh_0xB4EDDC19532BFB85 = rage::scrEngine::GetNativeHandler(0xB4EDDC19532BFB85);
	rage::scrEngine::RegisterNativeHandler(0xB4EDDC19532BFB85, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB4EDDC19532BFB85(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_DAMAGE_TO_PED
	static auto nh_0x697157CED63F18D4 = rage::scrEngine::GetNativeHandler(0x697157CED63F18D4);
	rage::scrEngine::RegisterNativeHandler(0x697157CED63F18D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x697157CED63F18D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/APPLY_FORCE_TO_ENTITY
	static auto nh_0xC5F68BE9613E2D18 = rage::scrEngine::GetNativeHandler(0xC5F68BE9613E2D18);
	rage::scrEngine::RegisterNativeHandler(0xC5F68BE9613E2D18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC5F68BE9613E2D18(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS
	static auto nh_0x18FF00FC7EFF559E = rage::scrEngine::GetNativeHandler(0x18FF00FC7EFF559E);
	rage::scrEngine::RegisterNativeHandler(0x18FF00FC7EFF559E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x18FF00FC7EFF559E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/APPLY_IMPULSE_TO_CLOTH
	static auto nh_0xE37F721824571784 = rage::scrEngine::GetNativeHandler(0xE37F721824571784);
	rage::scrEngine::RegisterNativeHandler(0xE37F721824571784, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE37F721824571784(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_BLOOD
	static auto nh_0x83F7E01C7B769A26 = rage::scrEngine::GetNativeHandler(0x83F7E01C7B769A26);
	rage::scrEngine::RegisterNativeHandler(0x83F7E01C7B769A26, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x83F7E01C7B769A26(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_BLOOD_BY_ZONE
	static auto nh_0x3311E47B91EDCBBC = rage::scrEngine::GetNativeHandler(0x3311E47B91EDCBBC);
	rage::scrEngine::RegisterNativeHandler(0x3311E47B91EDCBBC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x3311E47B91EDCBBC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_BLOOD_DAMAGE_BY_ZONE
	static auto nh_0x816F6981C60BF53B = rage::scrEngine::GetNativeHandler(0x816F6981C60BF53B);
	rage::scrEngine::RegisterNativeHandler(0x816F6981C60BF53B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x816F6981C60BF53B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_BLOOD_SPECIFIC
	static auto nh_0xEF0D582CBF2D9B0F = rage::scrEngine::GetNativeHandler(0xEF0D582CBF2D9B0F);
	rage::scrEngine::RegisterNativeHandler(0xEF0D582CBF2D9B0F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xEF0D582CBF2D9B0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_DAMAGE_DECAL
	static auto nh_0x397C38AA7B4A5F83 = rage::scrEngine::GetNativeHandler(0x397C38AA7B4A5F83);
	rage::scrEngine::RegisterNativeHandler(0x397C38AA7B4A5F83, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x397C38AA7B4A5F83(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/APPLY_PED_DAMAGE_PACK
	static auto nh_0x46DF918788CB093F = rage::scrEngine::GetNativeHandler(0x46DF918788CB093F);
	rage::scrEngine::RegisterNativeHandler(0x46DF918788CB093F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x46DF918788CB093F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/APPLY_WEATHER_CYCLES (result cleaner only)
	AddResultCleaner(0x3422291c, ResultCleaner<bool>);

	// APP/APP_CLEAR_BLOCK
	static auto nh_0x5FE1DF3342DB7DBA = rage::scrEngine::GetNativeHandler(0x5FE1DF3342DB7DBA);
	rage::scrEngine::RegisterNativeHandler(0x5FE1DF3342DB7DBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FE1DF3342DB7DBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_CLOSE_APP
	static auto nh_0xE41C65E07A5F05FC = rage::scrEngine::GetNativeHandler(0xE41C65E07A5F05FC);
	rage::scrEngine::RegisterNativeHandler(0xE41C65E07A5F05FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE41C65E07A5F05FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_CLOSE_BLOCK
	static auto nh_0xE8E3FCF72EAC0EF8 = rage::scrEngine::GetNativeHandler(0xE8E3FCF72EAC0EF8);
	rage::scrEngine::RegisterNativeHandler(0xE8E3FCF72EAC0EF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE8E3FCF72EAC0EF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_DATA_VALID (result cleaner only)
	AddResultCleaner(0x846AA8E7D55EE5B6, ResultCleaner<bool>);

	// APP/APP_DELETE_APP_DATA
	static auto nh_0x44151AEA95C8A003 = rage::scrEngine::GetNativeHandler(0x44151AEA95C8A003);
	rage::scrEngine::RegisterNativeHandler(0x44151AEA95C8A003, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x44151AEA95C8A003(cxt);
	});
	        
	AddResultCleaner(0x44151AEA95C8A003, ResultCleaner<bool>);

	// APP/APP_GET_DELETED_FILE_STATUS (result cleaner only)
	AddResultCleaner(0xC9853A2BE3DED1A6, ResultCleaner<int>);

	// APP/APP_GET_FLOAT
	static auto nh_0x1514FB24C02C2322 = rage::scrEngine::GetNativeHandler(0x1514FB24C02C2322);
	rage::scrEngine::RegisterNativeHandler(0x1514FB24C02C2322, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1514FB24C02C2322(cxt);
	});
	        
	AddResultCleaner(0x1514FB24C02C2322, ResultCleaner<float>);

	// APP/APP_GET_INT
	static auto nh_0xD3A58A12C77D9D4B = rage::scrEngine::GetNativeHandler(0xD3A58A12C77D9D4B);
	rage::scrEngine::RegisterNativeHandler(0xD3A58A12C77D9D4B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD3A58A12C77D9D4B(cxt);
	});
	        
	AddResultCleaner(0xD3A58A12C77D9D4B, ResultCleaner<int>);

	// APP/APP_GET_STRING
	static auto nh_0x749B023950D2311C = rage::scrEngine::GetNativeHandler(0x749B023950D2311C);
	rage::scrEngine::RegisterNativeHandler(0x749B023950D2311C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x749B023950D2311C(cxt);
	});
	        
	AddResultCleaner(0x749B023950D2311C, ResultCleaner<char*>);

	// APP/APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT (result cleaner only)
	AddResultCleaner(0x71EEE69745088DA0, ResultCleaner<bool>);

	// APP/APP_HAS_SYNCED_DATA
	static auto nh_0xCA52279A7271517F = rage::scrEngine::GetNativeHandler(0xCA52279A7271517F);
	rage::scrEngine::RegisterNativeHandler(0xCA52279A7271517F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCA52279A7271517F(cxt);
	});
	        
	AddResultCleaner(0xCA52279A7271517F, ResultCleaner<bool>);

	// APP/APP_SAVE_DATA
	static auto nh_0x95C5D356CDA6E85F = rage::scrEngine::GetNativeHandler(0x95C5D356CDA6E85F);
	rage::scrEngine::RegisterNativeHandler(0x95C5D356CDA6E85F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95C5D356CDA6E85F(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_SET_APP
	static auto nh_0xCFD0406ADAF90D2B = rage::scrEngine::GetNativeHandler(0xCFD0406ADAF90D2B);
	rage::scrEngine::RegisterNativeHandler(0xCFD0406ADAF90D2B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCFD0406ADAF90D2B(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_SET_BLOCK
	static auto nh_0x262AB456A3D21F93 = rage::scrEngine::GetNativeHandler(0x262AB456A3D21F93);
	rage::scrEngine::RegisterNativeHandler(0x262AB456A3D21F93, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x262AB456A3D21F93(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_SET_FLOAT
	static auto nh_0x25D7687C68E0DAA4 = rage::scrEngine::GetNativeHandler(0x25D7687C68E0DAA4);
	rage::scrEngine::RegisterNativeHandler(0x25D7687C68E0DAA4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x25D7687C68E0DAA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_SET_INT
	static auto nh_0x607E8E3D3E4F9611 = rage::scrEngine::GetNativeHandler(0x607E8E3D3E4F9611);
	rage::scrEngine::RegisterNativeHandler(0x607E8E3D3E4F9611, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x607E8E3D3E4F9611(cxt);
		NullifyVoid(cxt);
	});
	        
	// APP/APP_SET_STRING
	static auto nh_0x3FF2FCEC4B7721B4 = rage::scrEngine::GetNativeHandler(0x3FF2FCEC4B7721B4);
	rage::scrEngine::RegisterNativeHandler(0x3FF2FCEC4B7721B4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3FF2FCEC4B7721B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/ARE_ALL_NAVMESH_REGIONS_LOADED (result cleaner only)
	AddResultCleaner(0x8415D95B194A3AEA, ResultCleaner<bool>);

	// VEHICLE/ARE_ALL_VEHICLE_WINDOWS_INTACT (result cleaner only)
	AddResultCleaner(0x11D862A3E977A9EF, ResultCleaner<bool>);

	// VEHICLE/ARE_ANY_VEHICLE_SEATS_FREE (result cleaner only)
	AddResultCleaner(0x2D34FC3BC4ADB780, ResultCleaner<bool>);

	// OBJECT/ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE
	static auto nh_0x85B6C850546FDDE2 = rage::scrEngine::GetNativeHandler(0x85B6C850546FDDE2);
	rage::scrEngine::RegisterNativeHandler(0x85B6C850546FDDE2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x85B6C850546FDDE2(cxt);
	});
	        
	AddResultCleaner(0x85B6C850546FDDE2, ResultCleaner<bool>);

	// PATHFIND/ARE_NODES_LOADED_FOR_AREA (result cleaner only)
	AddResultCleaner(0xF7B79A50B905A30D, ResultCleaner<bool>);

	// VEHICLE/ARE_PLANE_CONTROL_PANELS_INTACT (result cleaner only)
	AddResultCleaner(0xF78F94D60248C737, ResultCleaner<bool>);

	// VEHICLE/ARE_PLANE_PROPELLERS_INTACT (result cleaner only)
	AddResultCleaner(0x755D6D5267CBBD7E, ResultCleaner<bool>);

	// PLAYER/ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP (result cleaner only)
	AddResultCleaner(0xAFAF86043E5874E9, ResultCleaner<bool>);

	// PLAYER/ARE_PLAYER_STARS_GREYED_OUT (result cleaner only)
	AddResultCleaner(0x0A6EB355EE14A2DB, ResultCleaner<bool>);

	// MISC/ARE_PROFILE_SETTINGS_VALID (result cleaner only)
	AddResultCleaner(0x5AA3BEFA29F03AD4, ResultCleaner<bool>);

	// MISC/ARE_STRINGS_EQUAL
	static auto nh_0x0C515FAB3FF9EA92 = rage::scrEngine::GetNativeHandler(0x0C515FAB3FF9EA92);
	rage::scrEngine::RegisterNativeHandler(0x0C515FAB3FF9EA92, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0C515FAB3FF9EA92(cxt);
	});
	        
	AddResultCleaner(0x0C515FAB3FF9EA92, ResultCleaner<bool>);

	// MISC/ASIN (result cleaner only)
	AddResultCleaner(0xC843060B5765DCE7, ResultCleaner<float>);

	// PLAYER/ASSISTED_MOVEMENT_CLOSE_ROUTE
	static auto nh_0xAEBF081FFC0A0E5E = rage::scrEngine::GetNativeHandler(0xAEBF081FFC0A0E5E);
	rage::scrEngine::RegisterNativeHandler(0xAEBF081FFC0A0E5E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAEBF081FFC0A0E5E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/ASSISTED_MOVEMENT_FLUSH_ROUTE
	static auto nh_0x8621390F0CDCFE1F = rage::scrEngine::GetNativeHandler(0x8621390F0CDCFE1F);
	rage::scrEngine::RegisterNativeHandler(0x8621390F0CDCFE1F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8621390F0CDCFE1F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ASSISTED_MOVEMENT_IS_ROUTE_LOADED
	static auto nh_0x60F9A4393A21F741 = rage::scrEngine::GetNativeHandler(0x60F9A4393A21F741);
	rage::scrEngine::RegisterNativeHandler(0x60F9A4393A21F741, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x60F9A4393A21F741(cxt);
	});
	        
	AddResultCleaner(0x60F9A4393A21F741, ResultCleaner<bool>);

	// TASK/ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME
	static auto nh_0x13945951E16EF912 = rage::scrEngine::GetNativeHandler(0x13945951E16EF912);
	rage::scrEngine::RegisterNativeHandler(0x13945951E16EF912, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x13945951E16EF912(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ASSISTED_MOVEMENT_REMOVE_ROUTE
	static auto nh_0x3548536485DD792B = rage::scrEngine::GetNativeHandler(0x3548536485DD792B);
	rage::scrEngine::RegisterNativeHandler(0x3548536485DD792B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3548536485DD792B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ASSISTED_MOVEMENT_REQUEST_ROUTE
	static auto nh_0x817268968605947A = rage::scrEngine::GetNativeHandler(0x817268968605947A);
	rage::scrEngine::RegisterNativeHandler(0x817268968605947A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x817268968605947A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES
	static auto nh_0xD5002D78B7162E1B = rage::scrEngine::GetNativeHandler(0xD5002D78B7162E1B);
	rage::scrEngine::RegisterNativeHandler(0xD5002D78B7162E1B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD5002D78B7162E1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ATAN (result cleaner only)
	AddResultCleaner(0xA9D1795CD5043663, ResultCleaner<float>);

	// MISC/ATAN2 (result cleaner only)
	AddResultCleaner(0x8927CBF9D22261A4, ResultCleaner<float>);

	// CAM/ATTACH_CAM_TO_ENTITY
	static auto nh_0xFEDB7D269E8C60E3 = rage::scrEngine::GetNativeHandler(0xFEDB7D269E8C60E3);
	rage::scrEngine::RegisterNativeHandler(0xFEDB7D269E8C60E3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFEDB7D269E8C60E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/ATTACH_CAM_TO_PED_BONE
	static auto nh_0x61A3DBA14AB7F411 = rage::scrEngine::GetNativeHandler(0x61A3DBA14AB7F411);
	rage::scrEngine::RegisterNativeHandler(0x61A3DBA14AB7F411, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x61A3DBA14AB7F411(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ATTACH_ENTITIES_TO_ROPE
	static auto nh_0x3D95EC8B6D940AC3 = rage::scrEngine::GetNativeHandler(0x3D95EC8B6D940AC3);
	rage::scrEngine::RegisterNativeHandler(0x3D95EC8B6D940AC3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0x3D95EC8B6D940AC3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ATTACH_ENTITY_TO_CARGOBOB
	static auto nh_0xA1DD82F3CCF9A01E = rage::scrEngine::GetNativeHandler(0xA1DD82F3CCF9A01E);
	rage::scrEngine::RegisterNativeHandler(0xA1DD82F3CCF9A01E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA1DD82F3CCF9A01E(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/ATTACH_ENTITY_TO_ENTITY
	static auto nh_0x6B9BBD38AB0796DF = rage::scrEngine::GetNativeHandler(0x6B9BBD38AB0796DF);
	rage::scrEngine::RegisterNativeHandler(0x6B9BBD38AB0796DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B9BBD38AB0796DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/ATTACH_ENTITY_TO_ENTITY_PHYSICALLY
	static auto nh_0xC3675780C92F90F9 = rage::scrEngine::GetNativeHandler(0xC3675780C92F90F9);
	rage::scrEngine::RegisterNativeHandler(0xC3675780C92F90F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3675780C92F90F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/ATTACH_PORTABLE_PICKUP_TO_PED
	static auto nh_0x8DC39368BDD57755 = rage::scrEngine::GetNativeHandler(0x8DC39368BDD57755);
	rage::scrEngine::RegisterNativeHandler(0x8DC39368BDD57755, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8DC39368BDD57755(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ATTACH_ROPE_TO_ENTITY
	static auto nh_0x4B490A6832559A65 = rage::scrEngine::GetNativeHandler(0x4B490A6832559A65);
	rage::scrEngine::RegisterNativeHandler(0x4B490A6832559A65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4B490A6832559A65(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY
	static auto nh_0x272E4723B56A3B96 = rage::scrEngine::GetNativeHandler(0x272E4723B56A3B96);
	rage::scrEngine::RegisterNativeHandler(0x272E4723B56A3B96, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x272E4723B56A3B96(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ATTACH_TV_AUDIO_TO_ENTITY
	static auto nh_0x845BAD77CC770633 = rage::scrEngine::GetNativeHandler(0x845BAD77CC770633);
	rage::scrEngine::RegisterNativeHandler(0x845BAD77CC770633, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x845BAD77CC770633(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ATTACH_VEHICLE_ON_TO_TRAILER
	static auto nh_0x16B5E274BDE402F8 = rage::scrEngine::GetNativeHandler(0x16B5E274BDE402F8);
	rage::scrEngine::RegisterNativeHandler(0x16B5E274BDE402F8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x16B5E274BDE402F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ATTACH_VEHICLE_TO_CARGOBOB
	static auto nh_0x4127F1D84E347769 = rage::scrEngine::GetNativeHandler(0x4127F1D84E347769);
	rage::scrEngine::RegisterNativeHandler(0x4127F1D84E347769, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4127F1D84E347769(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ATTACH_VEHICLE_TO_TOW_TRUCK
	static auto nh_0x29A16F8D621C4508 = rage::scrEngine::GetNativeHandler(0x29A16F8D621C4508);
	rage::scrEngine::RegisterNativeHandler(0x29A16F8D621C4508, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x29A16F8D621C4508(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ATTACH_VEHICLE_TO_TRAILER
	static auto nh_0x3C7D42D58F770B54 = rage::scrEngine::GetNativeHandler(0x3C7D42D58F770B54);
	rage::scrEngine::RegisterNativeHandler(0x3C7D42D58F770B54, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C7D42D58F770B54(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/AUDIO_IS_SCRIPTED_MUSIC_PLAYING (result cleaner only)
	AddResultCleaner(0x845FFC3A4FEEFA3E, ResultCleaner<bool>);

	// NETWORK/BAD_SPORT_PLAYER_LEFT_DETECTED
	static auto nh_0xEC5E3AF5289DCA81 = rage::scrEngine::GetNativeHandler(0xEC5E3AF5289DCA81);
	rage::scrEngine::RegisterNativeHandler(0xEC5E3AF5289DCA81, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEC5E3AF5289DCA81(cxt);
	});
	        
	AddResultCleaner(0xEC5E3AF5289DCA81, ResultCleaner<bool>);

	// MISC/BEGIN_REPLAY_STATS
	static auto nh_0xE0E500246FF73D66 = rage::scrEngine::GetNativeHandler(0xE0E500246FF73D66);
	rage::scrEngine::RegisterNativeHandler(0xE0E500246FF73D66, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE0E500246FF73D66(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/BEGIN_SCALEFORM_MOVIE_METHOD
	static auto nh_0xF6E48914C7A8694E = rage::scrEngine::GetNativeHandler(0xF6E48914C7A8694E);
	rage::scrEngine::RegisterNativeHandler(0xF6E48914C7A8694E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF6E48914C7A8694E(cxt);
	});
	        
	AddResultCleaner(0xF6E48914C7A8694E, ResultCleaner<bool>);

	// GRAPHICS/BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND
	static auto nh_0xAB58C27C2E6123C6 = rage::scrEngine::GetNativeHandler(0xAB58C27C2E6123C6);
	rage::scrEngine::RegisterNativeHandler(0xAB58C27C2E6123C6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAB58C27C2E6123C6(cxt);
	});
	        
	AddResultCleaner(0xAB58C27C2E6123C6, ResultCleaner<bool>);

	// GRAPHICS/BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER
	static auto nh_0xB9449845F73F5E9C = rage::scrEngine::GetNativeHandler(0xB9449845F73F5E9C);
	rage::scrEngine::RegisterNativeHandler(0xB9449845F73F5E9C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB9449845F73F5E9C(cxt);
	});
	        
	AddResultCleaner(0xB9449845F73F5E9C, ResultCleaner<bool>);

	// GRAPHICS/BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD
	static auto nh_0x98C494FD5BDFBFD5 = rage::scrEngine::GetNativeHandler(0x98C494FD5BDFBFD5);
	rage::scrEngine::RegisterNativeHandler(0x98C494FD5BDFBFD5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x98C494FD5BDFBFD5(cxt);
	});
	        
	AddResultCleaner(0x98C494FD5BDFBFD5, ResultCleaner<bool>);

	// STREAMING/BEGIN_SRL
	static auto nh_0x9BADDC94EF83B823 = rage::scrEngine::GetNativeHandler(0x9BADDC94EF83B823);
	rage::scrEngine::RegisterNativeHandler(0x9BADDC94EF83B823, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BADDC94EF83B823(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/BEGIN_TAKE_HIGH_QUALITY_PHOTO (result cleaner only)
	AddResultCleaner(0xA67C35C56EB1BD9D, ResultCleaner<bool>);

	// GRAPHICS/BEGIN_TAKE_MISSION_CREATOR_PHOTO (result cleaner only)
	AddResultCleaner(0x1DD2139A9A20DCE8, ResultCleaner<bool>);

	// HUD/BEGIN_TEXT_COMMAND_BUSYSPINNER_ON
	static auto nh_0xABA17D7CE615ADBF = rage::scrEngine::GetNativeHandler(0xABA17D7CE615ADBF);
	rage::scrEngine::RegisterNativeHandler(0xABA17D7CE615ADBF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xABA17D7CE615ADBF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_CLEAR_PRINT
	static auto nh_0xE124FA80A759019C = rage::scrEngine::GetNativeHandler(0xE124FA80A759019C);
	rage::scrEngine::RegisterNativeHandler(0xE124FA80A759019C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE124FA80A759019C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_DISPLAY_HELP
	static auto nh_0x8509B634FBE7DA11 = rage::scrEngine::GetNativeHandler(0x8509B634FBE7DA11);
	rage::scrEngine::RegisterNativeHandler(0x8509B634FBE7DA11, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8509B634FBE7DA11(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_DISPLAY_TEXT
	static auto nh_0x25FBB336DF1804CB = rage::scrEngine::GetNativeHandler(0x25FBB336DF1804CB);
	rage::scrEngine::RegisterNativeHandler(0x25FBB336DF1804CB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x25FBB336DF1804CB(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED
	static auto nh_0x853648FD1063A213 = rage::scrEngine::GetNativeHandler(0x853648FD1063A213);
	rage::scrEngine::RegisterNativeHandler(0x853648FD1063A213, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x853648FD1063A213(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED
	static auto nh_0x0A24DA3A41B718F5 = rage::scrEngine::GetNativeHandler(0x0A24DA3A41B718F5);
	rage::scrEngine::RegisterNativeHandler(0x0A24DA3A41B718F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0A24DA3A41B718F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
	static auto nh_0x8F9EE5687F8EECCD = rage::scrEngine::GetNativeHandler(0x8F9EE5687F8EECCD);
	rage::scrEngine::RegisterNativeHandler(0x8F9EE5687F8EECCD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8F9EE5687F8EECCD(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_PRINT
	static auto nh_0xB87A37EEB7FAA67D = rage::scrEngine::GetNativeHandler(0xB87A37EEB7FAA67D);
	rage::scrEngine::RegisterNativeHandler(0xB87A37EEB7FAA67D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB87A37EEB7FAA67D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/BEGIN_TEXT_COMMAND_SCALEFORM_STRING
	static auto nh_0x80338406F3475E55 = rage::scrEngine::GetNativeHandler(0x80338406F3475E55);
	rage::scrEngine::RegisterNativeHandler(0x80338406F3475E55, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x80338406F3475E55(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_SET_BLIP_NAME
	static auto nh_0xF9113A30DE5C6670 = rage::scrEngine::GetNativeHandler(0xF9113A30DE5C6670);
	rage::scrEngine::RegisterNativeHandler(0xF9113A30DE5C6670, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF9113A30DE5C6670(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BEGIN_TEXT_COMMAND_THEFEED_POST
	static auto nh_0x202709F4C58A0424 = rage::scrEngine::GetNativeHandler(0x202709F4C58A0424);
	rage::scrEngine::RegisterNativeHandler(0x202709F4C58A0424, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x202709F4C58A0424(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/BG_END_CONTEXT
	static auto nh_0xDC2BACD920D0A0DD = rage::scrEngine::GetNativeHandler(0xDC2BACD920D0A0DD);
	rage::scrEngine::RegisterNativeHandler(0xDC2BACD920D0A0DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDC2BACD920D0A0DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/BG_END_CONTEXT_HASH
	static auto nh_0x107E5CC7CA942BC1 = rage::scrEngine::GetNativeHandler(0x107E5CC7CA942BC1);
	rage::scrEngine::RegisterNativeHandler(0x107E5CC7CA942BC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x107E5CC7CA942BC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/BG_START_CONTEXT
	static auto nh_0x9D5A25BADB742ACD = rage::scrEngine::GetNativeHandler(0x9D5A25BADB742ACD);
	rage::scrEngine::RegisterNativeHandler(0x9D5A25BADB742ACD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9D5A25BADB742ACD(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/BG_START_CONTEXT_HASH
	static auto nh_0x75B18E49607874C7 = rage::scrEngine::GetNativeHandler(0x75B18E49607874C7);
	rage::scrEngine::RegisterNativeHandler(0x75B18E49607874C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75B18E49607874C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/BLIP_SIREN
	static auto nh_0x1B9025BDA76822B6 = rage::scrEngine::GetNativeHandler(0x1B9025BDA76822B6);
	rage::scrEngine::RegisterNativeHandler(0x1B9025BDA76822B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B9025BDA76822B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/BLOCK_ALL_SPEECH_FROM_PED
	static auto nh_0xF8AD2EED7C47E8FE = rage::scrEngine::GetNativeHandler(0xF8AD2EED7C47E8FE);
	rage::scrEngine::RegisterNativeHandler(0xF8AD2EED7C47E8FE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF8AD2EED7C47E8FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/BLOCK_DEATH_JINGLE
	static auto nh_0xF154B8D1775B2DEC = rage::scrEngine::GetNativeHandler(0xF154B8D1775B2DEC);
	rage::scrEngine::RegisterNativeHandler(0xF154B8D1775B2DEC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF154B8D1775B2DEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/BLOCK_DECISION_MAKER_EVENT
	static auto nh_0xE42FCDFD0E4196F7 = rage::scrEngine::GetNativeHandler(0xE42FCDFD0E4196F7);
	rage::scrEngine::RegisterNativeHandler(0xE42FCDFD0E4196F7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE42FCDFD0E4196F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION
	static auto nh_0x9B2BD3773123EA2F = rage::scrEngine::GetNativeHandler(0x9B2BD3773123EA2F);
	rage::scrEngine::RegisterNativeHandler(0x9B2BD3773123EA2F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B2BD3773123EA2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/BLOCK_SPEECH_CONTEXT_GROUP
	static auto nh_0xA8A7D434AFB4B97B = rage::scrEngine::GetNativeHandler(0xA8A7D434AFB4B97B);
	rage::scrEngine::RegisterNativeHandler(0xA8A7D434AFB4B97B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA8A7D434AFB4B97B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/BREAK_ENTITY_GLASS
	static auto nh_0x2E648D16F6E308F3 = rage::scrEngine::GetNativeHandler(0x2E648D16F6E308F3);
	rage::scrEngine::RegisterNativeHandler(0x2E648D16F6E308F3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x2E648D16F6E308F3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/BREAK_OBJECT_FRAGMENT_CHILD
	static auto nh_0xE7E4C198B0185900 = rage::scrEngine::GetNativeHandler(0xE7E4C198B0185900);
	rage::scrEngine::RegisterNativeHandler(0xE7E4C198B0185900, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE7E4C198B0185900(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/BREAK_OFF_VEHICLE_WHEEL
	static auto nh_0xa274cadb = rage::scrEngine::GetNativeHandler(0xa274cadb);
	rage::scrEngine::RegisterNativeHandler(0xa274cadb, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xa274cadb(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/BRING_VEHICLE_TO_HALT
	static auto nh_0x260BE8F09E326A20 = rage::scrEngine::GetNativeHandler(0x260BE8F09E326A20);
	rage::scrEngine::RegisterNativeHandler(0x260BE8F09E326A20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x260BE8F09E326A20(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/BUSYSPINNER_IS_DISPLAYING (result cleaner only)
	AddResultCleaner(0xB2A592B04648A9CB, ResultCleaner<bool>);

	// HUD/BUSYSPINNER_IS_ON (result cleaner only)
	AddResultCleaner(0xD422FCC5F239A915, ResultCleaner<bool>);

	// HUD/BUSYSPINNER_OFF
	static auto nh_0x10D373323E5B9C0D = rage::scrEngine::GetNativeHandler(0x10D373323E5B9C0D);
	rage::scrEngine::RegisterNativeHandler(0x10D373323E5B9C0D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x10D373323E5B9C0D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS (result cleaner only)
	AddResultCleaner(0xADD95C7005C4A197, ResultCleaner<float>);

	// CFX/CALL_MINIMAP_SCALEFORM_FUNCTION
	static auto nh_0x4c89c0ed = rage::scrEngine::GetNativeHandler(0x4c89c0ed);
	rage::scrEngine::RegisterNativeHandler(0x4c89c0ed, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4c89c0ed(cxt);
	});
	        
	AddResultCleaner(0x4c89c0ed, ResultCleaner<bool>);

	// GRAPHICS/CALL_SCALEFORM_MOVIE_METHOD
	static auto nh_0xFBD96D87AC96D533 = rage::scrEngine::GetNativeHandler(0xFBD96D87AC96D533);
	rage::scrEngine::RegisterNativeHandler(0xFBD96D87AC96D533, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFBD96D87AC96D533(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER
	static auto nh_0xD0837058AE2E4BEE = rage::scrEngine::GetNativeHandler(0xD0837058AE2E4BEE);
	rage::scrEngine::RegisterNativeHandler(0xD0837058AE2E4BEE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD0837058AE2E4BEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING
	static auto nh_0xEF662D8D57E290B1 = rage::scrEngine::GetNativeHandler(0xEF662D8D57E290B1);
	rage::scrEngine::RegisterNativeHandler(0xEF662D8D57E290B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0xEF662D8D57E290B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING
	static auto nh_0x51BC1ED3CC44E8F7 = rage::scrEngine::GetNativeHandler(0x51BC1ED3CC44E8F7);
	rage::scrEngine::RegisterNativeHandler(0x51BC1ED3CC44E8F7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x51BC1ED3CC44E8F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CANCEL_ALL_POLICE_REPORTS
	static auto nh_0xB4F90FAF7670B16F = rage::scrEngine::GetNativeHandler(0xB4F90FAF7670B16F);
	rage::scrEngine::RegisterNativeHandler(0xB4F90FAF7670B16F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB4F90FAF7670B16F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/CANCEL_EVENT
	static auto nh_0xfa29d35d = rage::scrEngine::GetNativeHandler(0xfa29d35d);
	rage::scrEngine::RegisterNativeHandler(0xfa29d35d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xfa29d35d(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CANCEL_MUSIC_EVENT
	static auto nh_0x5B17A90291133DA5 = rage::scrEngine::GetNativeHandler(0x5B17A90291133DA5);
	rage::scrEngine::RegisterNativeHandler(0x5B17A90291133DA5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5B17A90291133DA5(cxt);
	});
	        
	AddResultCleaner(0x5B17A90291133DA5, ResultCleaner<bool>);

	// MISC/CANCEL_STUNT_JUMP
	static auto nh_0xE6B7B0ACD4E4B75E = rage::scrEngine::GetNativeHandler(0xE6B7B0ACD4E4B75E);
	rage::scrEngine::RegisterNativeHandler(0xE6B7B0ACD4E4B75E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6B7B0ACD4E4B75E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CAN_ANCHOR_BOAT_HERE (result cleaner only)
	AddResultCleaner(0x26C10ECBDA5D043B, ResultCleaner<bool>);

	// VEHICLE/CAN_CARGOBOB_PICK_UP_ENTITY (result cleaner only)
	AddResultCleaner(0x2C1D8B3B19E517CC, ResultCleaner<bool>);

	// PED/CAN_CREATE_RANDOM_BIKE_RIDER (result cleaner only)
	AddResultCleaner(0xEACEEDA81751915C, ResultCleaner<bool>);

	// PED/CAN_CREATE_RANDOM_COPS (result cleaner only)
	AddResultCleaner(0x5EE2CAFF7F17770D, ResultCleaner<bool>);

	// PED/CAN_CREATE_RANDOM_DRIVER (result cleaner only)
	AddResultCleaner(0xB8EB95E5B4E56978, ResultCleaner<bool>);

	// PED/CAN_CREATE_RANDOM_PED (result cleaner only)
	AddResultCleaner(0x3E8349C08E4B82E4, ResultCleaner<bool>);

	// PED/CAN_KNOCK_PED_OFF_VEHICLE (result cleaner only)
	AddResultCleaner(0x51AC07A44D4F5B8A, ResultCleaner<bool>);

	// PLAYER/CAN_PED_HEAR_PLAYER (result cleaner only)
	AddResultCleaner(0xF297383AA91DCA29, ResultCleaner<bool>);

	// PED/CAN_PED_IN_COMBAT_SEE_TARGET (result cleaner only)
	AddResultCleaner(0xEAD42DE3610D0721, ResultCleaner<bool>);

	// PED/CAN_PED_RAGDOLL (result cleaner only)
	AddResultCleaner(0x128F79EDCECE4FD5, ResultCleaner<bool>);

	// PED/CAN_PED_SEE_HATED_PED (result cleaner only)
	AddResultCleaner(0x6CD5A433374D4CFB, ResultCleaner<bool>);

	// MOBILE/CAN_PHONE_BE_SEEN_ON_SCREEN (result cleaner only)
	AddResultCleaner(0xC4E2813898C97A4B, ResultCleaner<bool>);

	// PLAYER/CAN_PLAYER_START_MISSION (result cleaner only)
	AddResultCleaner(0xDE7465A27D403C06, ResultCleaner<bool>);

	// NETWORK/CAN_REGISTER_MISSION_ENTITIES (result cleaner only)
	AddResultCleaner(0x69778E7564BADE6D, ResultCleaner<bool>);

	// NETWORK/CAN_REGISTER_MISSION_OBJECTS (result cleaner only)
	AddResultCleaner(0x800DD4721A8B008B, ResultCleaner<bool>);

	// NETWORK/CAN_REGISTER_MISSION_PEDS (result cleaner only)
	AddResultCleaner(0xBCBF4FEF9FA5D781, ResultCleaner<bool>);

	// NETWORK/CAN_REGISTER_MISSION_VEHICLES (result cleaner only)
	AddResultCleaner(0x7277F1F2E085EE74, ResultCleaner<bool>);

	// CUTSCENE/CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY (result cleaner only)
	AddResultCleaner(0xB56BBBCC2955D9CB, ResultCleaner<bool>);

	// CUTSCENE/CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY
	static auto nh_0x645D0B458D8E17B5 = rage::scrEngine::GetNativeHandler(0x645D0B458D8E17B5);
	rage::scrEngine::RegisterNativeHandler(0x645D0B458D8E17B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x645D0B458D8E17B5(cxt);
	});
	        
	AddResultCleaner(0x645D0B458D8E17B5, ResultCleaner<bool>);

	// CUTSCENE/CAN_SET_EXIT_STATE_FOR_CAMERA (result cleaner only)
	AddResultCleaner(0xB2CBCD0930DFB420, ResultCleaner<bool>);

	// CUTSCENE/CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY
	static auto nh_0x4C6A6451C79E4662 = rage::scrEngine::GetNativeHandler(0x4C6A6451C79E4662);
	rage::scrEngine::RegisterNativeHandler(0x4C6A6451C79E4662, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4C6A6451C79E4662(cxt);
	});
	        
	AddResultCleaner(0x4C6A6451C79E4662, ResultCleaner<bool>);

	// VEHICLE/CAN_SHUFFLE_SEAT (result cleaner only)
	AddResultCleaner(0x30785D90C956BF35, ResultCleaner<bool>);

	// WEAPON/CAN_USE_WEAPON_ON_PARACHUTE (result cleaner only)
	AddResultCleaner(0xBC7BE5ABC0879F74, ResultCleaner<bool>);

	// AUDIO/CAN_VEHICLE_RECEIVE_CB_RADIO (result cleaner only)
	AddResultCleaner(0x032A116663A4D5AC, ResultCleaner<bool>);

	// INTERIOR/CAP_INTERIOR
	static auto nh_0xD9175F941610DB54 = rage::scrEngine::GetNativeHandler(0xD9175F941610DB54);
	rage::scrEngine::RegisterNativeHandler(0xD9175F941610DB54, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9175F941610DB54(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER
	static auto nh_0x80ECBC0C856D3B0B = rage::scrEngine::GetNativeHandler(0x80ECBC0C856D3B0B);
	rage::scrEngine::RegisterNativeHandler(0x80ECBC0C856D3B0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80ECBC0C856D3B0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_INIT_SESSION
	static auto nh_0x03FC694AE06C5A20 = rage::scrEngine::GetNativeHandler(0x03FC694AE06C5A20);
	rage::scrEngine::RegisterNativeHandler(0x03FC694AE06C5A20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03FC694AE06C5A20(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_AIRCRAFT_MODE
	static auto nh_0x6DDBF9DFFC4AC080 = rage::scrEngine::GetNativeHandler(0x6DDBF9DFFC4AC080);
	rage::scrEngine::RegisterNativeHandler(0x6DDBF9DFFC4AC080, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6DDBF9DFFC4AC080(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_CASCADE_BOUNDS
	static auto nh_0xD2936CAB8B58FCBD = rage::scrEngine::GetNativeHandler(0xD2936CAB8B58FCBD);
	rage::scrEngine::RegisterNativeHandler(0xD2936CAB8B58FCBD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD2936CAB8B58FCBD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE
	static auto nh_0x5F0F3F56635809EF = rage::scrEngine::GetNativeHandler(0x5F0F3F56635809EF);
	rage::scrEngine::RegisterNativeHandler(0x5F0F3F56635809EF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F0F3F56635809EF(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE
	static auto nh_0xD39D13C9FEBF0511 = rage::scrEngine::GetNativeHandler(0xD39D13C9FEBF0511);
	rage::scrEngine::RegisterNativeHandler(0xD39D13C9FEBF0511, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD39D13C9FEBF0511(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE
	static auto nh_0x02AC28F3A01FA04A = rage::scrEngine::GetNativeHandler(0x02AC28F3A01FA04A);
	rage::scrEngine::RegisterNativeHandler(0x02AC28F3A01FA04A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02AC28F3A01FA04A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE
	static auto nh_0x5E9DAF5A20F15908 = rage::scrEngine::GetNativeHandler(0x5E9DAF5A20F15908);
	rage::scrEngine::RegisterNativeHandler(0x5E9DAF5A20F15908, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E9DAF5A20F15908(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE
	static auto nh_0xB11D94BC55F41932 = rage::scrEngine::GetNativeHandler(0xB11D94BC55F41932);
	rage::scrEngine::RegisterNativeHandler(0xB11D94BC55F41932, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB11D94BC55F41932(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/CEIL (result cleaner only)
	AddResultCleaner(0x11E019C8F43ACC8A, ResultCleaner<int>);

	// MOBILE/CELL_CAM_ACTIVATE
	static auto nh_0xFDE8F069C542D126 = rage::scrEngine::GetNativeHandler(0xFDE8F069C542D126);
	rage::scrEngine::RegisterNativeHandler(0xFDE8F069C542D126, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDE8F069C542D126(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/CELL_CAM_ACTIVATE_SELFIE_MODE
	static auto nh_0x015C49A93E3E086E = rage::scrEngine::GetNativeHandler(0x015C49A93E3E086E);
	rage::scrEngine::RegisterNativeHandler(0x015C49A93E3E086E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x015C49A93E3E086E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK (result cleaner only)
	AddResultCleaner(0x439E9BC95B7E7FBE, ResultCleaner<bool>);

	// HUD/CHANGE_FAKE_MP_CASH
	static auto nh_0x0772DF77852C2E30 = rage::scrEngine::GetNativeHandler(0x0772DF77852C2E30);
	rage::scrEngine::RegisterNativeHandler(0x0772DF77852C2E30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0772DF77852C2E30(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CHANGE_PLAYER_PED
	static auto nh_0x048189FAC643DEEE = rage::scrEngine::GetNativeHandler(0x048189FAC643DEEE);
	rage::scrEngine::RegisterNativeHandler(0x048189FAC643DEEE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x048189FAC643DEEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// ITEMSET/CLEAN_ITEMSET
	static auto nh_0x41BC0D722FC04221 = rage::scrEngine::GetNativeHandler(0x41BC0D722FC04221);
	rage::scrEngine::RegisterNativeHandler(0x41BC0D722FC04221, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x41BC0D722FC04221(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_ADDITIONAL_TEXT
	static auto nh_0x2A179DF17CCF04CD = rage::scrEngine::GetNativeHandler(0x2A179DF17CCF04CD);
	rage::scrEngine::RegisterNativeHandler(0x2A179DF17CCF04CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A179DF17CCF04CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CLEAR_ALL_BROKEN_GLASS
	static auto nh_0xB32209EFFDC04913 = rage::scrEngine::GetNativeHandler(0xB32209EFFDC04913);
	rage::scrEngine::RegisterNativeHandler(0xB32209EFFDC04913, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB32209EFFDC04913(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_ALL_HELP_MESSAGES
	static auto nh_0x6178F68A87A4D3A0 = rage::scrEngine::GetNativeHandler(0x6178F68A87A4D3A0);
	rage::scrEngine::RegisterNativeHandler(0x6178F68A87A4D3A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6178F68A87A4D3A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_ALL_PED_PROPS
	static auto nh_0xCD8A7537A9B52F06 = rage::scrEngine::GetNativeHandler(0xCD8A7537A9B52F06);
	rage::scrEngine::RegisterNativeHandler(0xCD8A7537A9B52F06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD8A7537A9B52F06(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE
	static auto nh_0xE6CA85E7259CE16B = rage::scrEngine::GetNativeHandler(0xE6CA85E7259CE16B);
	rage::scrEngine::RegisterNativeHandler(0xE6CA85E7259CE16B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6CA85E7259CE16B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CLEAR_AMBIENT_ZONE_LIST_STATE
	static auto nh_0x120C48C614909FA4 = rage::scrEngine::GetNativeHandler(0x120C48C614909FA4);
	rage::scrEngine::RegisterNativeHandler(0x120C48C614909FA4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x120C48C614909FA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CLEAR_AMBIENT_ZONE_STATE
	static auto nh_0x218DD44AAAC964FF = rage::scrEngine::GetNativeHandler(0x218DD44AAAC964FF);
	rage::scrEngine::RegisterNativeHandler(0x218DD44AAAC964FF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x218DD44AAAC964FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_ANGLED_AREA_OF_VEHICLES
	static auto nh_0x11DB3500F042A8AA = rage::scrEngine::GetNativeHandler(0x11DB3500F042A8AA);
	rage::scrEngine::RegisterNativeHandler(0x11DB3500F042A8AA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11DB3500F042A8AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA
	static auto nh_0xA56F01F3765B93A0 = rage::scrEngine::GetNativeHandler(0xA56F01F3765B93A0);
	rage::scrEngine::RegisterNativeHandler(0xA56F01F3765B93A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA56F01F3765B93A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_LEAVE_VEHICLE_HEALTH
	static auto nh_0x957838AAF91BD12D = rage::scrEngine::GetNativeHandler(0x957838AAF91BD12D);
	rage::scrEngine::RegisterNativeHandler(0x957838AAF91BD12D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x957838AAF91BD12D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_OF_COPS
	static auto nh_0x04F8FC8FCF58F88D = rage::scrEngine::GetNativeHandler(0x04F8FC8FCF58F88D);
	rage::scrEngine::RegisterNativeHandler(0x04F8FC8FCF58F88D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x04F8FC8FCF58F88D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_OF_OBJECTS
	static auto nh_0xDD9B9B385AAC7F5B = rage::scrEngine::GetNativeHandler(0xDD9B9B385AAC7F5B);
	rage::scrEngine::RegisterNativeHandler(0xDD9B9B385AAC7F5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD9B9B385AAC7F5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_OF_PEDS
	static auto nh_0xBE31FD6CE464AC59 = rage::scrEngine::GetNativeHandler(0xBE31FD6CE464AC59);
	rage::scrEngine::RegisterNativeHandler(0xBE31FD6CE464AC59, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE31FD6CE464AC59(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_OF_PROJECTILES
	static auto nh_0x0A1CB9094635D1A6 = rage::scrEngine::GetNativeHandler(0x0A1CB9094635D1A6);
	rage::scrEngine::RegisterNativeHandler(0x0A1CB9094635D1A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A1CB9094635D1A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_AREA_OF_VEHICLES
	static auto nh_0x01C7B9B38428AEB6 = rage::scrEngine::GetNativeHandler(0x01C7B9B38428AEB6);
	rage::scrEngine::RegisterNativeHandler(0x01C7B9B38428AEB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01C7B9B38428AEB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_BIT
	static auto nh_0xE80492A9AC099A93 = rage::scrEngine::GetNativeHandler(0xE80492A9AC099A93);
	rage::scrEngine::RegisterNativeHandler(0xE80492A9AC099A93, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE80492A9AC099A93(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_BRIEF
	static auto nh_0x9D292F73ADBD9313 = rage::scrEngine::GetNativeHandler(0x9D292F73ADBD9313);
	rage::scrEngine::RegisterNativeHandler(0x9D292F73ADBD9313, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D292F73ADBD9313(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CLEAR_CUSTOM_RADIO_TRACK_LIST
	static auto nh_0x1654F24A88A8E3FE = rage::scrEngine::GetNativeHandler(0x1654F24A88A8E3FE);
	rage::scrEngine::RegisterNativeHandler(0x1654F24A88A8E3FE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1654F24A88A8E3FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/CLEAR_DECISION_MAKER_EVENT_RESPONSE
	static auto nh_0x4FC9381A7AEE8968 = rage::scrEngine::GetNativeHandler(0x4FC9381A7AEE8968);
	rage::scrEngine::RegisterNativeHandler(0x4FC9381A7AEE8968, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4FC9381A7AEE8968(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CLEAR_DRAW_ORIGIN
	static auto nh_0xFF0B610F6BE0D7AF = rage::scrEngine::GetNativeHandler(0xFF0B610F6BE0D7AF);
	rage::scrEngine::RegisterNativeHandler(0xFF0B610F6BE0D7AF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF0B610F6BE0D7AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
	static auto nh_0xC35B5CDB2824CF69 = rage::scrEngine::GetNativeHandler(0xC35B5CDB2824CF69);
	rage::scrEngine::RegisterNativeHandler(0xC35B5CDB2824CF69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC35B5CDB2824CF69(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE
	static auto nh_0x7792424AA0EAC32E = rage::scrEngine::GetNativeHandler(0x7792424AA0EAC32E);
	rage::scrEngine::RegisterNativeHandler(0x7792424AA0EAC32E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7792424AA0EAC32E(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/CLEAR_ENTITY_LAST_DAMAGE_ENTITY
	static auto nh_0xA72CD9CA74A5ECBA = rage::scrEngine::GetNativeHandler(0xA72CD9CA74A5ECBA);
	rage::scrEngine::RegisterNativeHandler(0xA72CD9CA74A5ECBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA72CD9CA74A5ECBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/CLEAR_ENTITY_LAST_WEAPON_DAMAGE
	static auto nh_0xAC678E40BE7C74D2 = rage::scrEngine::GetNativeHandler(0xAC678E40BE7C74D2);
	rage::scrEngine::RegisterNativeHandler(0xAC678E40BE7C74D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC678E40BE7C74D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_FACIAL_IDLE_ANIM_OVERRIDE
	static auto nh_0x726256CC1EEB182F = rage::scrEngine::GetNativeHandler(0x726256CC1EEB182F);
	rage::scrEngine::RegisterNativeHandler(0x726256CC1EEB182F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x726256CC1EEB182F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_FLOATING_HELP
	static auto nh_0x50085246ABD3FEFA = rage::scrEngine::GetNativeHandler(0x50085246ABD3FEFA);
	rage::scrEngine::RegisterNativeHandler(0x50085246ABD3FEFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50085246ABD3FEFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/CLEAR_FOCUS
	static auto nh_0x31B73D1EA9F01DA2 = rage::scrEngine::GetNativeHandler(0x31B73D1EA9F01DA2);
	rage::scrEngine::RegisterNativeHandler(0x31B73D1EA9F01DA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31B73D1EA9F01DA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_GPS_CUSTOM_ROUTE
	static auto nh_0xE6DE0561D9232A64 = rage::scrEngine::GetNativeHandler(0xE6DE0561D9232A64);
	rage::scrEngine::RegisterNativeHandler(0xE6DE0561D9232A64, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6DE0561D9232A64(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/CLEAR_GPS_DISABLED_ZONE_AT_INDEX
	static auto nh_0x2801D0012266DF07 = rage::scrEngine::GetNativeHandler(0x2801D0012266DF07);
	rage::scrEngine::RegisterNativeHandler(0x2801D0012266DF07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2801D0012266DF07(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_GPS_FLAGS
	static auto nh_0x21986729D6A3A830 = rage::scrEngine::GetNativeHandler(0x21986729D6A3A830);
	rage::scrEngine::RegisterNativeHandler(0x21986729D6A3A830, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21986729D6A3A830(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_GPS_MULTI_ROUTE
	static auto nh_0x67EEDEA1B9BAFD94 = rage::scrEngine::GetNativeHandler(0x67EEDEA1B9BAFD94);
	rage::scrEngine::RegisterNativeHandler(0x67EEDEA1B9BAFD94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x67EEDEA1B9BAFD94(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_GPS_PLAYER_WAYPOINT
	static auto nh_0xFF4FB7C8CDFA3DA7 = rage::scrEngine::GetNativeHandler(0xFF4FB7C8CDFA3DA7);
	rage::scrEngine::RegisterNativeHandler(0xFF4FB7C8CDFA3DA7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF4FB7C8CDFA3DA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_GPS_RACE_TRACK
	static auto nh_0x7AA5B4CE533C858B = rage::scrEngine::GetNativeHandler(0x7AA5B4CE533C858B);
	rage::scrEngine::RegisterNativeHandler(0x7AA5B4CE533C858B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7AA5B4CE533C858B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/CLEAR_HD_AREA
	static auto nh_0xCE58B1CFB9290813 = rage::scrEngine::GetNativeHandler(0xCE58B1CFB9290813);
	rage::scrEngine::RegisterNativeHandler(0xCE58B1CFB9290813, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCE58B1CFB9290813(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_HELP
	static auto nh_0x8DFCED7A656F8802 = rage::scrEngine::GetNativeHandler(0x8DFCED7A656F8802);
	rage::scrEngine::RegisterNativeHandler(0x8DFCED7A656F8802, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8DFCED7A656F8802(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CLEAR_LAST_DRIVEN_VEHICLE
	static auto nh_0xE01903C47C7AC89E = rage::scrEngine::GetNativeHandler(0xE01903C47C7AC89E);
	rage::scrEngine::RegisterNativeHandler(0xE01903C47C7AC89E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE01903C47C7AC89E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/CLEAR_OBJECTS_INSIDE_GARAGE
	static auto nh_0x190428512B240692 = rage::scrEngine::GetNativeHandler(0x190428512B240692);
	rage::scrEngine::RegisterNativeHandler(0x190428512B240692, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x190428512B240692(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_OVERRIDE_WEATHER
	static auto nh_0x338D2E3477711050 = rage::scrEngine::GetNativeHandler(0x338D2E3477711050);
	rage::scrEngine::RegisterNativeHandler(0x338D2E3477711050, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x338D2E3477711050(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_ALTERNATE_MOVEMENT_ANIM
	static auto nh_0xD8D19675ED5FBDCE = rage::scrEngine::GetNativeHandler(0xD8D19675ED5FBDCE);
	rage::scrEngine::RegisterNativeHandler(0xD8D19675ED5FBDCE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8D19675ED5FBDCE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_ALTERNATE_WALK_ANIM
	static auto nh_0x8844BBFCE30AA9E9 = rage::scrEngine::GetNativeHandler(0x8844BBFCE30AA9E9);
	rage::scrEngine::RegisterNativeHandler(0x8844BBFCE30AA9E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8844BBFCE30AA9E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_BLOOD_DAMAGE
	static auto nh_0x8FE22675A5A45817 = rage::scrEngine::GetNativeHandler(0x8FE22675A5A45817);
	rage::scrEngine::RegisterNativeHandler(0x8FE22675A5A45817, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8FE22675A5A45817(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_BLOOD_DAMAGE_BY_ZONE
	static auto nh_0x56E3B78C5408D9F4 = rage::scrEngine::GetNativeHandler(0x56E3B78C5408D9F4);
	rage::scrEngine::RegisterNativeHandler(0x56E3B78C5408D9F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x56E3B78C5408D9F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_DAMAGE_DECAL_BY_ZONE
	static auto nh_0x523C79AEEFCC4A2A = rage::scrEngine::GetNativeHandler(0x523C79AEEFCC4A2A);
	rage::scrEngine::RegisterNativeHandler(0x523C79AEEFCC4A2A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x523C79AEEFCC4A2A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_DECORATIONS
	static auto nh_0x0E5173C163976E38 = rage::scrEngine::GetNativeHandler(0x0E5173C163976E38);
	rage::scrEngine::RegisterNativeHandler(0x0E5173C163976E38, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E5173C163976E38(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_DECORATIONS_LEAVE_SCARS
	static auto nh_0xE3B27E70CEAB9F0C = rage::scrEngine::GetNativeHandler(0xE3B27E70CEAB9F0C);
	rage::scrEngine::RegisterNativeHandler(0xE3B27E70CEAB9F0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3B27E70CEAB9F0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE
	static auto nh_0x4AFE3690D7E0B5AC = rage::scrEngine::GetNativeHandler(0x4AFE3690D7E0B5AC);
	rage::scrEngine::RegisterNativeHandler(0x4AFE3690D7E0B5AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AFE3690D7E0B5AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_ENV_DIRT
	static auto nh_0x6585D955A68452A5 = rage::scrEngine::GetNativeHandler(0x6585D955A68452A5);
	rage::scrEngine::RegisterNativeHandler(0x6585D955A68452A5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6585D955A68452A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_PED_IN_PAUSE_MENU
	static auto nh_0x5E62BE5DC58E9E06 = rage::scrEngine::GetNativeHandler(0x5E62BE5DC58E9E06);
	rage::scrEngine::RegisterNativeHandler(0x5E62BE5DC58E9E06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E62BE5DC58E9E06(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_LAST_DAMAGE_BONE
	static auto nh_0x8EF6B7AC68E2F01B = rage::scrEngine::GetNativeHandler(0x8EF6B7AC68E2F01B);
	rage::scrEngine::RegisterNativeHandler(0x8EF6B7AC68E2F01B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8EF6B7AC68E2F01B(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/CLEAR_PED_LAST_WEAPON_DAMAGE
	static auto nh_0x0E98F88A24C5F4B8 = rage::scrEngine::GetNativeHandler(0x0E98F88A24C5F4B8);
	rage::scrEngine::RegisterNativeHandler(0x0E98F88A24C5F4B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E98F88A24C5F4B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_NON_CREATION_AREA
	static auto nh_0x2E05208086BA0651 = rage::scrEngine::GetNativeHandler(0x2E05208086BA0651);
	rage::scrEngine::RegisterNativeHandler(0x2E05208086BA0651, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E05208086BA0651(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_PARACHUTE_PACK_VARIATION
	static auto nh_0x1280804F7CFD2D6C = rage::scrEngine::GetNativeHandler(0x1280804F7CFD2D6C);
	rage::scrEngine::RegisterNativeHandler(0x1280804F7CFD2D6C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1280804F7CFD2D6C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_PROP
	static auto nh_0x0943E5B8E078E76E = rage::scrEngine::GetNativeHandler(0x0943E5B8E078E76E);
	rage::scrEngine::RegisterNativeHandler(0x0943E5B8E078E76E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0943E5B8E078E76E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_SCUBA_GEAR_VARIATION
	static auto nh_0xB50EB4CCB29704AC = rage::scrEngine::GetNativeHandler(0xB50EB4CCB29704AC);
	rage::scrEngine::RegisterNativeHandler(0xB50EB4CCB29704AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB50EB4CCB29704AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLEAR_PED_SECONDARY_TASK
	static auto nh_0x176CECF6F920D707 = rage::scrEngine::GetNativeHandler(0x176CECF6F920D707);
	rage::scrEngine::RegisterNativeHandler(0x176CECF6F920D707, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x176CECF6F920D707(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_STORED_HAT_PROP
	static auto nh_0x687C0B594907D2E8 = rage::scrEngine::GetNativeHandler(0x687C0B594907D2E8);
	rage::scrEngine::RegisterNativeHandler(0x687C0B594907D2E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x687C0B594907D2E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLEAR_PED_TASKS
	static auto nh_0xE1EF3C1216AFF2CD = rage::scrEngine::GetNativeHandler(0xE1EF3C1216AFF2CD);
	rage::scrEngine::RegisterNativeHandler(0xE1EF3C1216AFF2CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE1EF3C1216AFF2CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLEAR_PED_TASKS_IMMEDIATELY
	static auto nh_0xAAA34F8A7CB32098 = rage::scrEngine::GetNativeHandler(0xAAA34F8A7CB32098);
	rage::scrEngine::RegisterNativeHandler(0xAAA34F8A7CB32098, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAAA34F8A7CB32098(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_PED_WETNESS
	static auto nh_0x9C720776DAA43E7E = rage::scrEngine::GetNativeHandler(0x9C720776DAA43E7E);
	rage::scrEngine::RegisterNativeHandler(0x9C720776DAA43E7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C720776DAA43E7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
	static auto nh_0x4AACB96203D11A31 = rage::scrEngine::GetNativeHandler(0x4AACB96203D11A31);
	rage::scrEngine::RegisterNativeHandler(0x4AACB96203D11A31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AACB96203D11A31(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED
	static auto nh_0xF0B67A4DE6AB5F98 = rage::scrEngine::GetNativeHandler(0xF0B67A4DE6AB5F98);
	rage::scrEngine::RegisterNativeHandler(0xF0B67A4DE6AB5F98, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF0B67A4DE6AB5F98(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE
	static auto nh_0x8753997EB5F6EE3F = rage::scrEngine::GetNativeHandler(0x8753997EB5F6EE3F);
	rage::scrEngine::RegisterNativeHandler(0x8753997EB5F6EE3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8753997EB5F6EE3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
	static auto nh_0x10C54E4389C12B42 = rage::scrEngine::GetNativeHandler(0x10C54E4389C12B42);
	rage::scrEngine::RegisterNativeHandler(0x10C54E4389C12B42, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x10C54E4389C12B42(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE
	static auto nh_0x0F4CC924CF8C7B21 = rage::scrEngine::GetNativeHandler(0x0F4CC924CF8C7B21);
	rage::scrEngine::RegisterNativeHandler(0x0F4CC924CF8C7B21, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F4CC924CF8C7B21(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/CLEAR_PLAYER_WANTED_LEVEL
	static auto nh_0xB302540597885499 = rage::scrEngine::GetNativeHandler(0xB302540597885499);
	rage::scrEngine::RegisterNativeHandler(0xB302540597885499, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB302540597885499(cxt);
		NullifyVoid(cxt);
	});
	        
	// ZONE/CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL
	static auto nh_0x5C0DE367AA0D911C = rage::scrEngine::GetNativeHandler(0x5C0DE367AA0D911C);
	rage::scrEngine::RegisterNativeHandler(0x5C0DE367AA0D911C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C0DE367AA0D911C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_PRINTS
	static auto nh_0xCC33FA791322B9D9 = rage::scrEngine::GetNativeHandler(0xCC33FA791322B9D9);
	rage::scrEngine::RegisterNativeHandler(0xCC33FA791322B9D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC33FA791322B9D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_RAGDOLL_BLOCKING_FLAGS
	static auto nh_0xD86D101FCFD00A4B = rage::scrEngine::GetNativeHandler(0xD86D101FCFD00A4B);
	rage::scrEngine::RegisterNativeHandler(0xD86D101FCFD00A4B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD86D101FCFD00A4B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLEAR_RELATIONSHIP_BETWEEN_GROUPS
	static auto nh_0x5E29243FB56FC6D4 = rage::scrEngine::GetNativeHandler(0x5E29243FB56FC6D4);
	rage::scrEngine::RegisterNativeHandler(0x5E29243FB56FC6D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E29243FB56FC6D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_REMINDER_MESSAGE
	static auto nh_0xB57D8DD645CFA2CF = rage::scrEngine::GetNativeHandler(0xB57D8DD645CFA2CF);
	rage::scrEngine::RegisterNativeHandler(0xB57D8DD645CFA2CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB57D8DD645CFA2CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_REPLAY_STATS
	static auto nh_0x1B1AB132A16FDA55 = rage::scrEngine::GetNativeHandler(0x1B1AB132A16FDA55);
	rage::scrEngine::RegisterNativeHandler(0x1B1AB132A16FDA55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B1AB132A16FDA55(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/CLEAR_ROOM_FOR_ENTITY
	static auto nh_0xB365FC0C4E27FFA7 = rage::scrEngine::GetNativeHandler(0xB365FC0C4E27FFA7);
	rage::scrEngine::RegisterNativeHandler(0xB365FC0C4E27FFA7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB365FC0C4E27FFA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/CLEAR_ROOM_FOR_GAME_VIEWPORT
	static auto nh_0x23B59D8912F94246 = rage::scrEngine::GetNativeHandler(0x23B59D8912F94246);
	rage::scrEngine::RegisterNativeHandler(0x23B59D8912F94246, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23B59D8912F94246(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLEAR_SEQUENCE_TASK
	static auto nh_0x3841422E9C488D8C = rage::scrEngine::GetNativeHandler(0x3841422E9C488D8C);
	rage::scrEngine::RegisterNativeHandler(0x3841422E9C488D8C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3841422E9C488D8C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_SMALL_PRINTS
	static auto nh_0x2CEA2839313C09AC = rage::scrEngine::GetNativeHandler(0x2CEA2839313C09AC);
	rage::scrEngine::RegisterNativeHandler(0x2CEA2839313C09AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2CEA2839313C09AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLEAR_THIS_PRINT
	static auto nh_0xCF708001E1E536DD = rage::scrEngine::GetNativeHandler(0xCF708001E1E536DD);
	rage::scrEngine::RegisterNativeHandler(0xCF708001E1E536DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCF708001E1E536DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CLEAR_TIMECYCLE_MODIFIER
	static auto nh_0x0F07E7745A236711 = rage::scrEngine::GetNativeHandler(0x0F07E7745A236711);
	rage::scrEngine::RegisterNativeHandler(0x0F07E7745A236711, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F07E7745A236711(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/CLEAR_TV_CHANNEL_PLAYLIST
	static auto nh_0xBEB3D46BB7F043C0 = rage::scrEngine::GetNativeHandler(0xBEB3D46BB7F043C0);
	rage::scrEngine::RegisterNativeHandler(0xBEB3D46BB7F043C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBEB3D46BB7F043C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR
	static auto nh_0x55E1D2758F34E437 = rage::scrEngine::GetNativeHandler(0x55E1D2758F34E437);
	rage::scrEngine::RegisterNativeHandler(0x55E1D2758F34E437, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55E1D2758F34E437(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR
	static auto nh_0x5FFBDEEC3E8E2009 = rage::scrEngine::GetNativeHandler(0x5FFBDEEC3E8E2009);
	rage::scrEngine::RegisterNativeHandler(0x5FFBDEEC3E8E2009, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FFBDEEC3E8E2009(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST
	static auto nh_0x0A436B8643716D14 = rage::scrEngine::GetNativeHandler(0x0A436B8643716D14);
	rage::scrEngine::RegisterNativeHandler(0x0A436B8643716D14, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A436B8643716D14(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/CLEAR_VEHICLE_ROUTE_HISTORY
	static auto nh_0x6D6AF961B72728AE = rage::scrEngine::GetNativeHandler(0x6D6AF961B72728AE);
	rage::scrEngine::RegisterNativeHandler(0x6D6AF961B72728AE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D6AF961B72728AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/CLEAR_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR
	static auto nh_0x2867ed8c = rage::scrEngine::GetNativeHandler(0x2867ed8c);
	rage::scrEngine::RegisterNativeHandler(0x2867ed8c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2867ed8c(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK
	static auto nh_0x0CF97F497FE7D048 = rage::scrEngine::GetNativeHandler(0x0CF97F497FE7D048);
	rage::scrEngine::RegisterNativeHandler(0x0CF97F497FE7D048, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0CF97F497FE7D048(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/CLEAR_WEATHER_TYPE_PERSIST
	static auto nh_0xCCC39339BEF76CF5 = rage::scrEngine::GetNativeHandler(0xCCC39339BEF76CF5);
	rage::scrEngine::RegisterNativeHandler(0xCCC39339BEF76CF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCCC39339BEF76CF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CLONE_PED (result cleaner only)
	AddResultCleaner(0xEF29A16337FACADB, ResultCleaner<int>);

	// PED/CLONE_PED_TO_TARGET
	static auto nh_0xE952D6431689AD9A = rage::scrEngine::GetNativeHandler(0xE952D6431689AD9A);
	rage::scrEngine::RegisterNativeHandler(0xE952D6431689AD9A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE952D6431689AD9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/CLONE_TIMECYCLE_MODIFIER
	static auto nh_0x54d636b3 = rage::scrEngine::GetNativeHandler(0x54d636b3);
	rage::scrEngine::RegisterNativeHandler(0x54d636b3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x54d636b3(cxt);
	});
	        
	AddResultCleaner(0x54d636b3, ResultCleaner<int>);

	// VEHICLE/CLOSE_BOMB_BAY_DOORS
	static auto nh_0x3556041742A0DC74 = rage::scrEngine::GetNativeHandler(0x3556041742A0DC74);
	rage::scrEngine::RegisterNativeHandler(0x3556041742A0DC74, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3556041742A0DC74(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLOSE_PATROL_ROUTE
	static auto nh_0xB043ECA801B8CBC1 = rage::scrEngine::GetNativeHandler(0xB043ECA801B8CBC1);
	rage::scrEngine::RegisterNativeHandler(0xB043ECA801B8CBC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB043ECA801B8CBC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CLOSE_SEQUENCE_TASK
	static auto nh_0x39E72BC99E6360CB = rage::scrEngine::GetNativeHandler(0x39E72BC99E6360CB);
	rage::scrEngine::RegisterNativeHandler(0x39E72BC99E6360CB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x39E72BC99E6360CB(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CLOSE_SOCIAL_CLUB_MENU
	static auto nh_0xD2B32BE3FC1626C6 = rage::scrEngine::GetNativeHandler(0xD2B32BE3FC1626C6);
	rage::scrEngine::RegisterNativeHandler(0xD2B32BE3FC1626C6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2B32BE3FC1626C6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/CLOUD_CHECK_AVAILABILITY
	static auto nh_0x4F18196C8D38768D = rage::scrEngine::GetNativeHandler(0x4F18196C8D38768D);
	rage::scrEngine::RegisterNativeHandler(0x4F18196C8D38768D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F18196C8D38768D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/CLOUD_DELETE_MEMBER_FILE
	static auto nh_0xC64DED7EF0D2FE37 = rage::scrEngine::GetNativeHandler(0xC64DED7EF0D2FE37);
	rage::scrEngine::RegisterNativeHandler(0xC64DED7EF0D2FE37, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC64DED7EF0D2FE37(cxt);
	});
	        
	AddResultCleaner(0xC64DED7EF0D2FE37, ResultCleaner<int>);

	// NETWORK/CLOUD_DID_REQUEST_SUCCEED (result cleaner only)
	AddResultCleaner(0x3A3D5568AF297CD5, ResultCleaner<bool>);

	// NETWORK/CLOUD_GET_AVAILABILITY_CHECK_RESULT (result cleaner only)
	AddResultCleaner(0x0B0CC10720653F3B, ResultCleaner<bool>);

	// NETWORK/CLOUD_HAS_REQUEST_COMPLETED (result cleaner only)
	AddResultCleaner(0x4C61B39930D045DA, ResultCleaner<bool>);

	// NETWORK/CLOUD_IS_CHECKING_AVAILABILITY (result cleaner only)
	AddResultCleaner(0xC7ABAC5DE675EE3B, ResultCleaner<bool>);

	// CFX/COMMIT_RUNTIME_TEXTURE
	static auto nh_0x19d81f4e = rage::scrEngine::GetNativeHandler(0x19d81f4e);
	rage::scrEngine::RegisterNativeHandler(0x19d81f4e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19d81f4e(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/COMPARE_STRINGS
	static auto nh_0x1E34710ECD4AB0EB = rage::scrEngine::GetNativeHandler(0x1E34710ECD4AB0EB);
	rage::scrEngine::RegisterNativeHandler(0x1E34710ECD4AB0EB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1E34710ECD4AB0EB(cxt);
	});
	        
	AddResultCleaner(0x1E34710ECD4AB0EB, ResultCleaner<int>);

	// VEHICLE/CONTROL_LANDING_GEAR
	static auto nh_0xCFC8BE9A5E1FE575 = rage::scrEngine::GetNativeHandler(0xCFC8BE9A5E1FE575);
	rage::scrEngine::RegisterNativeHandler(0xCFC8BE9A5E1FE575, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFC8BE9A5E1FE575(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/CONTROL_MOUNTED_WEAPON (result cleaner only)
	AddResultCleaner(0xDCFE42068FE0135A, ResultCleaner<bool>);

	// NETWORK/CONVERT_POSIX_TIME
	static auto nh_0xAC97AF97FA68E5D5 = rage::scrEngine::GetNativeHandler(0xAC97AF97FA68E5D5);
	rage::scrEngine::RegisterNativeHandler(0xAC97AF97FA68E5D5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* timeStructure
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAC97AF97FA68E5D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/COPY_VEHICLE_DAMAGES
	static auto nh_0xE44A982368A4AF23 = rage::scrEngine::GetNativeHandler(0xE44A982368A4AF23);
	rage::scrEngine::RegisterNativeHandler(0xE44A982368A4AF23, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE44A982368A4AF23(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/COS (result cleaner only)
	AddResultCleaner(0xD0FFB162F40A139C, ResultCleaner<float>);

	// OBJECT/CREATE_AMBIENT_PICKUP (result cleaner only)
	AddResultCleaner(0x673966A0C0FD7171, ResultCleaner<int>);

	// CFX/CREATE_AUDIO_SUBMIX
	static auto nh_0x658d2bc8 = rage::scrEngine::GetNativeHandler(0x658d2bc8);
	rage::scrEngine::RegisterNativeHandler(0x658d2bc8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x658d2bc8(cxt);
	});
	        
	AddResultCleaner(0x658d2bc8, ResultCleaner<int>);

	// CAM/CREATE_CAM
	static auto nh_0xC3981DCE61D9E13F = rage::scrEngine::GetNativeHandler(0xC3981DCE61D9E13F);
	rage::scrEngine::RegisterNativeHandler(0xC3981DCE61D9E13F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC3981DCE61D9E13F(cxt);
	});
	        
	AddResultCleaner(0xC3981DCE61D9E13F, ResultCleaner<int>);

	// CAM/CREATE_CAMERA (result cleaner only)
	AddResultCleaner(0x5E3CF89C6BCCA67D, ResultCleaner<int>);

	// CAM/CREATE_CAMERA_WITH_PARAMS (result cleaner only)
	AddResultCleaner(0x6ABFA3E16460F22D, ResultCleaner<int>);

	// CAM/CREATE_CAM_WITH_PARAMS
	static auto nh_0xB51194800B257161 = rage::scrEngine::GetNativeHandler(0xB51194800B257161);
	rage::scrEngine::RegisterNativeHandler(0xB51194800B257161, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB51194800B257161(cxt);
	});
	        
	AddResultCleaner(0xB51194800B257161, ResultCleaner<int>);

	// GRAPHICS/CREATE_CHECKPOINT (result cleaner only)
	AddResultCleaner(0x0134F0835AB6BFCB, ResultCleaner<int>);

	// CAM/CREATE_CINEMATIC_SHOT
	static auto nh_0x741B0129D4560F31 = rage::scrEngine::GetNativeHandler(0x741B0129D4560F31);
	rage::scrEngine::RegisterNativeHandler(0x741B0129D4560F31, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x741B0129D4560F31(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/CREATE_DRY_VOLUME (result cleaner only)
	AddResultCleaner(0xeb1c6dd, ResultCleaner<int>);

	// CFX/CREATE_DUI
	static auto nh_0x23eaf899 = rage::scrEngine::GetNativeHandler(0x23eaf899);
	rage::scrEngine::RegisterNativeHandler(0x23eaf899, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x23eaf899(cxt);
	});
	        
	AddResultCleaner(0x23eaf899, ResultCleaner<int>);

	// HUD/CREATE_FAKE_MP_GAMER_TAG
	static auto nh_0xBFEFE3321A3F5015 = rage::scrEngine::GetNativeHandler(0xBFEFE3321A3F5015);
	rage::scrEngine::RegisterNativeHandler(0xBFEFE3321A3F5015, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xBFEFE3321A3F5015(cxt);
	});
	        
	AddResultCleaner(0xBFEFE3321A3F5015, ResultCleaner<int>);

	// ENTITY/CREATE_FORCED_OBJECT
	static auto nh_0x150E808B375A385A = rage::scrEngine::GetNativeHandler(0x150E808B375A385A);
	rage::scrEngine::RegisterNativeHandler(0x150E808B375A385A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x150E808B375A385A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CREATE_GROUP (result cleaner only)
	AddResultCleaner(0x90370EBE0FEE1A3D, ResultCleaner<int>);

	// MISC/CREATE_INCIDENT
	static auto nh_0x3F892CAF67444AE7 = rage::scrEngine::GetNativeHandler(0x3F892CAF67444AE7);
	rage::scrEngine::RegisterNativeHandler(0x3F892CAF67444AE7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x3F892CAF67444AE7(cxt);
	});
	        
	AddResultCleaner(0x3F892CAF67444AE7, ResultCleaner<bool>);

	// MISC/CREATE_INCIDENT_WITH_ENTITY
	static auto nh_0x05983472F0494E60 = rage::scrEngine::GetNativeHandler(0x05983472F0494E60);
	rage::scrEngine::RegisterNativeHandler(0x05983472F0494E60, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x05983472F0494E60(cxt);
	});
	        
	AddResultCleaner(0x05983472F0494E60, ResultCleaner<bool>);

	// ITEMSET/CREATE_ITEMSET (result cleaner only)
	AddResultCleaner(0x35AD299F50D91B24, ResultCleaner<int>);

	// VEHICLE/CREATE_MISSION_TRAIN (result cleaner only)
	AddResultCleaner(0x63C6CCA8E68AE8C8, ResultCleaner<int>);

	// MOBILE/CREATE_MOBILE_PHONE
	static auto nh_0xA4E8E696C532FBC7 = rage::scrEngine::GetNativeHandler(0xA4E8E696C532FBC7);
	rage::scrEngine::RegisterNativeHandler(0xA4E8E696C532FBC7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA4E8E696C532FBC7(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/CREATE_MODEL_HIDE
	static auto nh_0x8A97BCA30A0CE478 = rage::scrEngine::GetNativeHandler(0x8A97BCA30A0CE478);
	rage::scrEngine::RegisterNativeHandler(0x8A97BCA30A0CE478, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8A97BCA30A0CE478(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS
	static auto nh_0x3A52AE588830BF7F = rage::scrEngine::GetNativeHandler(0x3A52AE588830BF7F);
	rage::scrEngine::RegisterNativeHandler(0x3A52AE588830BF7F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3A52AE588830BF7F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/CREATE_MODEL_SWAP
	static auto nh_0x92C47782FDA8B2A3 = rage::scrEngine::GetNativeHandler(0x92C47782FDA8B2A3);
	rage::scrEngine::RegisterNativeHandler(0x92C47782FDA8B2A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92C47782FDA8B2A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/CREATE_MONEY_PICKUPS
	static auto nh_0x0589B5E791CE9B2B = rage::scrEngine::GetNativeHandler(0x0589B5E791CE9B2B);
	rage::scrEngine::RegisterNativeHandler(0x0589B5E791CE9B2B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0589B5E791CE9B2B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/CREATE_MP_GAMER_TAG_WITH_CREW_COLOR
	static auto nh_0x6DD05E9D83EFA4C9 = rage::scrEngine::GetNativeHandler(0x6DD05E9D83EFA4C9);
	rage::scrEngine::RegisterNativeHandler(0x6DD05E9D83EFA4C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x6DD05E9D83EFA4C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/CREATE_NEW_SCRIPTED_CONVERSATION
	static auto nh_0xD2C91A0B572AAE56 = rage::scrEngine::GetNativeHandler(0xD2C91A0B572AAE56);
	rage::scrEngine::RegisterNativeHandler(0xD2C91A0B572AAE56, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2C91A0B572AAE56(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CREATE_NM_MESSAGE
	static auto nh_0x418EF2A1BCE56685 = rage::scrEngine::GetNativeHandler(0x418EF2A1BCE56685);
	rage::scrEngine::RegisterNativeHandler(0x418EF2A1BCE56685, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x418EF2A1BCE56685(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/CREATE_NON_NETWORKED_PORTABLE_PICKUP (result cleaner only)
	AddResultCleaner(0x125494B98A21AAF7, ResultCleaner<int>);

	// OBJECT/CREATE_OBJECT (result cleaner only)
	AddResultCleaner(0x509D5878EB39E842, ResultCleaner<int>);

	// OBJECT/CREATE_OBJECT_NO_OFFSET (result cleaner only)
	AddResultCleaner(0x9A294B2138ABB884, ResultCleaner<int>);

	// PED/CREATE_PARACHUTE_BAG_OBJECT (result cleaner only)
	AddResultCleaner(0x8C4F3BF23B6237DB, ResultCleaner<int>);

	// TASK/CREATE_PATROL_ROUTE
	static auto nh_0xAF8A443CCC8018DC = rage::scrEngine::GetNativeHandler(0xAF8A443CCC8018DC);
	rage::scrEngine::RegisterNativeHandler(0xAF8A443CCC8018DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAF8A443CCC8018DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/CREATE_PED (result cleaner only)
	AddResultCleaner(0xD49F9B0955C367DE, ResultCleaner<int>);

	// PED/CREATE_PED_INSIDE_VEHICLE (result cleaner only)
	AddResultCleaner(0x7DD959874C1FD534, ResultCleaner<int>);

	// OBJECT/CREATE_PICKUP (result cleaner only)
	AddResultCleaner(0xFBA08C503DD5FA58, ResultCleaner<int>);

	// OBJECT/CREATE_PICKUP_ROTATE
	static auto nh_0x891804727E0A98B7 = rage::scrEngine::GetNativeHandler(0x891804727E0A98B7);
	rage::scrEngine::RegisterNativeHandler(0x891804727E0A98B7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x891804727E0A98B7(cxt);
	});
	        
	AddResultCleaner(0x891804727E0A98B7, ResultCleaner<int>);

	// VEHICLE/CREATE_PICK_UP_ROPE_FOR_CARGOBOB
	static auto nh_0x7BEB0C7A235F6F3B = rage::scrEngine::GetNativeHandler(0x7BEB0C7A235F6F3B);
	rage::scrEngine::RegisterNativeHandler(0x7BEB0C7A235F6F3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7BEB0C7A235F6F3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/CREATE_PORTABLE_PICKUP (result cleaner only)
	AddResultCleaner(0x2EAF1FDB2FB55698, ResultCleaner<int>);

	// PED/CREATE_RANDOM_PED (result cleaner only)
	AddResultCleaner(0xB4AC7D0CF06BFE8F, ResultCleaner<int>);

	// PED/CREATE_RANDOM_PED_AS_DRIVER (result cleaner only)
	AddResultCleaner(0x9B62392B474F44A0, ResultCleaner<int>);

	// CFX/CREATE_RUNTIME_TEXTURE
	static auto nh_0xfec3766d = rage::scrEngine::GetNativeHandler(0xfec3766d);
	rage::scrEngine::RegisterNativeHandler(0xfec3766d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xfec3766d(cxt);
	});
	        
	AddResultCleaner(0xfec3766d, ResultCleaner<int>);

	// CFX/CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE
	static auto nh_0xb135472b = rage::scrEngine::GetNativeHandler(0xb135472b);
	rage::scrEngine::RegisterNativeHandler(0xb135472b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xb135472b(cxt);
	});
	        
	AddResultCleaner(0xb135472b, ResultCleaner<int>);

	// CFX/CREATE_RUNTIME_TEXTURE_FROM_IMAGE
	static auto nh_0x786d8bc3 = rage::scrEngine::GetNativeHandler(0x786d8bc3);
	rage::scrEngine::RegisterNativeHandler(0x786d8bc3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x786d8bc3(cxt);
	});
	        
	AddResultCleaner(0x786d8bc3, ResultCleaner<int>);

	// CFX/CREATE_RUNTIME_TXD
	static auto nh_0x1f3ac778 = rage::scrEngine::GetNativeHandler(0x1f3ac778);
	rage::scrEngine::RegisterNativeHandler(0x1f3ac778, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1f3ac778(cxt);
	});
	        
	AddResultCleaner(0x1f3ac778, ResultCleaner<int>);

	// VEHICLE/CREATE_SCRIPT_VEHICLE_GENERATOR (result cleaner only)
	AddResultCleaner(0x9DEF883114668116, ResultCleaner<int>);

	// PED/CREATE_SYNCHRONIZED_SCENE (result cleaner only)
	AddResultCleaner(0x8C18E0F9080ADD73, ResultCleaner<int>);

	// CFX/CREATE_TIMECYCLE_MODIFIER
	static auto nh_0x70fa2afa = rage::scrEngine::GetNativeHandler(0x70fa2afa);
	rage::scrEngine::RegisterNativeHandler(0x70fa2afa, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x70fa2afa(cxt);
	});
	        
	AddResultCleaner(0x70fa2afa, ResultCleaner<int>);

	// GRAPHICS/CREATE_TRACKED_POINT (result cleaner only)
	AddResultCleaner(0xE2C9439ED45DEA60, ResultCleaner<int>);

	// VEHICLE/CREATE_VEHICLE (result cleaner only)
	AddResultCleaner(0xAF35D0D2583051B0, ResultCleaner<int>);

	// WEAPON/CREATE_WEAPON_OBJECT (result cleaner only)
	AddResultCleaner(0x9541D3CF0D398F36, ResultCleaner<int>);

	// CAM/CUSTOM_MENU_COORDINATES
	static auto nh_0x487A82C650EB7799 = rage::scrEngine::GetNativeHandler(0x487A82C650EB7799);
	rage::scrEngine::RegisterNativeHandler(0x487A82C650EB7799, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x487A82C650EB7799(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_BOOL
	static auto nh_0xF8B0F5A43E928C76 = rage::scrEngine::GetNativeHandler(0xF8B0F5A43E928C76);
	rage::scrEngine::RegisterNativeHandler(0xF8B0F5A43E928C76, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF8B0F5A43E928C76(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_DICT
	static auto nh_0x6889498B3E19C797 = rage::scrEngine::GetNativeHandler(0x6889498B3E19C797);
	rage::scrEngine::RegisterNativeHandler(0x6889498B3E19C797, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6889498B3E19C797(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_FLOAT
	static auto nh_0x57A995FD75D37F56 = rage::scrEngine::GetNativeHandler(0x57A995FD75D37F56);
	rage::scrEngine::RegisterNativeHandler(0x57A995FD75D37F56, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x57A995FD75D37F56(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_INT
	static auto nh_0xCABDB751D86FE93B = rage::scrEngine::GetNativeHandler(0xCABDB751D86FE93B);
	rage::scrEngine::RegisterNativeHandler(0xCABDB751D86FE93B, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCABDB751D86FE93B(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_STRING
	static auto nh_0x2F0661C155AEEEAA = rage::scrEngine::GetNativeHandler(0x2F0661C155AEEEAA);
	rage::scrEngine::RegisterNativeHandler(0x2F0661C155AEEEAA, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2F0661C155AEEEAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_ADD_VECTOR
	static auto nh_0x407F8D034F70F0C2 = rage::scrEngine::GetNativeHandler(0x407F8D034F70F0C2);
	rage::scrEngine::RegisterNativeHandler(0x407F8D034F70F0C2, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x407F8D034F70F0C2(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAARRAY_GET_BOOL
	static auto nh_0x50C1B2874E50C114 = rage::scrEngine::GetNativeHandler(0x50C1B2874E50C114);
	rage::scrEngine::RegisterNativeHandler(0x50C1B2874E50C114, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x50C1B2874E50C114(cxt);
	});
	        
	AddResultCleaner(0x50C1B2874E50C114, ResultCleaner<bool>);

	// DATAFILE/DATAARRAY_GET_COUNT
	static auto nh_0x065DB281590CEA2D = rage::scrEngine::GetNativeHandler(0x065DB281590CEA2D);
	rage::scrEngine::RegisterNativeHandler(0x065DB281590CEA2D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x065DB281590CEA2D(cxt);
	});
	        
	AddResultCleaner(0x065DB281590CEA2D, ResultCleaner<int>);

	// DATAFILE/DATAARRAY_GET_DICT
	static auto nh_0x8B5FADCC4E3A145F = rage::scrEngine::GetNativeHandler(0x8B5FADCC4E3A145F);
	rage::scrEngine::RegisterNativeHandler(0x8B5FADCC4E3A145F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8B5FADCC4E3A145F(cxt);
	});
	        
	// DATAFILE/DATAARRAY_GET_FLOAT
	static auto nh_0xC0C527B525D7CFB5 = rage::scrEngine::GetNativeHandler(0xC0C527B525D7CFB5);
	rage::scrEngine::RegisterNativeHandler(0xC0C527B525D7CFB5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC0C527B525D7CFB5(cxt);
	});
	        
	AddResultCleaner(0xC0C527B525D7CFB5, ResultCleaner<float>);

	// DATAFILE/DATAARRAY_GET_INT
	static auto nh_0x3E5AE19425CD74BE = rage::scrEngine::GetNativeHandler(0x3E5AE19425CD74BE);
	rage::scrEngine::RegisterNativeHandler(0x3E5AE19425CD74BE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3E5AE19425CD74BE(cxt);
	});
	        
	AddResultCleaner(0x3E5AE19425CD74BE, ResultCleaner<int>);

	// DATAFILE/DATAARRAY_GET_STRING
	static auto nh_0xD3F2FFEB8D836F52 = rage::scrEngine::GetNativeHandler(0xD3F2FFEB8D836F52);
	rage::scrEngine::RegisterNativeHandler(0xD3F2FFEB8D836F52, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD3F2FFEB8D836F52(cxt);
	});
	        
	AddResultCleaner(0xD3F2FFEB8D836F52, ResultCleaner<char*>);

	// DATAFILE/DATAARRAY_GET_TYPE
	static auto nh_0x3A0014ADB172A3C5 = rage::scrEngine::GetNativeHandler(0x3A0014ADB172A3C5);
	rage::scrEngine::RegisterNativeHandler(0x3A0014ADB172A3C5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3A0014ADB172A3C5(cxt);
	});
	        
	AddResultCleaner(0x3A0014ADB172A3C5, ResultCleaner<int>);

	// DATAFILE/DATAARRAY_GET_VECTOR
	static auto nh_0x8D2064E5B64A628A = rage::scrEngine::GetNativeHandler(0x8D2064E5B64A628A);
	rage::scrEngine::RegisterNativeHandler(0x8D2064E5B64A628A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* arrayData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8D2064E5B64A628A(cxt);
	});
	        
	// DATAFILE/DATADICT_CREATE_ARRAY
	static auto nh_0x5B11728527CA6E5F = rage::scrEngine::GetNativeHandler(0x5B11728527CA6E5F);
	rage::scrEngine::RegisterNativeHandler(0x5B11728527CA6E5F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5B11728527CA6E5F(cxt);
	});
	        
	// DATAFILE/DATADICT_CREATE_DICT
	static auto nh_0xA358F56F10732EE1 = rage::scrEngine::GetNativeHandler(0xA358F56F10732EE1);
	rage::scrEngine::RegisterNativeHandler(0xA358F56F10732EE1, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA358F56F10732EE1(cxt);
	});
	        
	// DATAFILE/DATADICT_GET_ARRAY
	static auto nh_0x7A983AA9DA2659ED = rage::scrEngine::GetNativeHandler(0x7A983AA9DA2659ED);
	rage::scrEngine::RegisterNativeHandler(0x7A983AA9DA2659ED, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7A983AA9DA2659ED(cxt);
	});
	        
	// DATAFILE/DATADICT_GET_BOOL
	static auto nh_0x1186940ED72FFEEC = rage::scrEngine::GetNativeHandler(0x1186940ED72FFEEC);
	rage::scrEngine::RegisterNativeHandler(0x1186940ED72FFEEC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1186940ED72FFEEC(cxt);
	});
	        
	AddResultCleaner(0x1186940ED72FFEEC, ResultCleaner<bool>);

	// DATAFILE/DATADICT_GET_DICT
	static auto nh_0xB6B9DDC412FCEEE2 = rage::scrEngine::GetNativeHandler(0xB6B9DDC412FCEEE2);
	rage::scrEngine::RegisterNativeHandler(0xB6B9DDC412FCEEE2, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB6B9DDC412FCEEE2(cxt);
	});
	        
	// DATAFILE/DATADICT_GET_FLOAT
	static auto nh_0x06610343E73B9727 = rage::scrEngine::GetNativeHandler(0x06610343E73B9727);
	rage::scrEngine::RegisterNativeHandler(0x06610343E73B9727, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x06610343E73B9727(cxt);
	});
	        
	AddResultCleaner(0x06610343E73B9727, ResultCleaner<float>);

	// DATAFILE/DATADICT_GET_INT
	static auto nh_0x78F06F6B1FB5A80C = rage::scrEngine::GetNativeHandler(0x78F06F6B1FB5A80C);
	rage::scrEngine::RegisterNativeHandler(0x78F06F6B1FB5A80C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x78F06F6B1FB5A80C(cxt);
	});
	        
	AddResultCleaner(0x78F06F6B1FB5A80C, ResultCleaner<int>);

	// DATAFILE/DATADICT_GET_STRING
	static auto nh_0x3D2FD9E763B24472 = rage::scrEngine::GetNativeHandler(0x3D2FD9E763B24472);
	rage::scrEngine::RegisterNativeHandler(0x3D2FD9E763B24472, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3D2FD9E763B24472(cxt);
	});
	        
	AddResultCleaner(0x3D2FD9E763B24472, ResultCleaner<char*>);

	// DATAFILE/DATADICT_GET_TYPE
	static auto nh_0x031C55ED33227371 = rage::scrEngine::GetNativeHandler(0x031C55ED33227371);
	rage::scrEngine::RegisterNativeHandler(0x031C55ED33227371, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x031C55ED33227371(cxt);
	});
	        
	AddResultCleaner(0x031C55ED33227371, ResultCleaner<int>);

	// DATAFILE/DATADICT_GET_VECTOR
	static auto nh_0x46CD3CB66E0825CC = rage::scrEngine::GetNativeHandler(0x46CD3CB66E0825CC);
	rage::scrEngine::RegisterNativeHandler(0x46CD3CB66E0825CC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x46CD3CB66E0825CC(cxt);
	});
	        
	// DATAFILE/DATADICT_SET_BOOL
	static auto nh_0x35124302A556A325 = rage::scrEngine::GetNativeHandler(0x35124302A556A325);
	rage::scrEngine::RegisterNativeHandler(0x35124302A556A325, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x35124302A556A325(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATADICT_SET_FLOAT
	static auto nh_0xC27E1CC2D795105E = rage::scrEngine::GetNativeHandler(0xC27E1CC2D795105E);
	rage::scrEngine::RegisterNativeHandler(0xC27E1CC2D795105E, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC27E1CC2D795105E(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATADICT_SET_INT
	static auto nh_0xE7E035450A7948D5 = rage::scrEngine::GetNativeHandler(0xE7E035450A7948D5);
	rage::scrEngine::RegisterNativeHandler(0xE7E035450A7948D5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE7E035450A7948D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATADICT_SET_STRING
	static auto nh_0x8FF3847DADD8E30C = rage::scrEngine::GetNativeHandler(0x8FF3847DADD8E30C);
	rage::scrEngine::RegisterNativeHandler(0x8FF3847DADD8E30C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8FF3847DADD8E30C(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATADICT_SET_VECTOR
	static auto nh_0x4CD49B76338C7DEE = rage::scrEngine::GetNativeHandler(0x4CD49B76338C7DEE);
	rage::scrEngine::RegisterNativeHandler(0x4CD49B76338C7DEE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* objectData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4CD49B76338C7DEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_CLEAR_WATCH_LIST
	static auto nh_0x6CC86E78358D5119 = rage::scrEngine::GetNativeHandler(0x6CC86E78358D5119);
	rage::scrEngine::RegisterNativeHandler(0x6CC86E78358D5119, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6CC86E78358D5119(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_CREATE
	static auto nh_0xD27058A1CA2B13EE = rage::scrEngine::GetNativeHandler(0xD27058A1CA2B13EE);
	rage::scrEngine::RegisterNativeHandler(0xD27058A1CA2B13EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD27058A1CA2B13EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_DELETE
	static auto nh_0x9AB9C1CFC8862DFB = rage::scrEngine::GetNativeHandler(0x9AB9C1CFC8862DFB);
	rage::scrEngine::RegisterNativeHandler(0x9AB9C1CFC8862DFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AB9C1CFC8862DFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_DELETE_REQUESTED_FILE
	static auto nh_0x8F5EA1C01D65A100 = rage::scrEngine::GetNativeHandler(0x8F5EA1C01D65A100);
	rage::scrEngine::RegisterNativeHandler(0x8F5EA1C01D65A100, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8F5EA1C01D65A100(cxt);
	});
	        
	AddResultCleaner(0x8F5EA1C01D65A100, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_FLUSH_MISSION_HEADER
	static auto nh_0xC55854C7D7274882 = rage::scrEngine::GetNativeHandler(0xC55854C7D7274882);
	rage::scrEngine::RegisterNativeHandler(0xC55854C7D7274882, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC55854C7D7274882(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_GET_FILE_DICT (result cleaner only)
	AddResultCleaner(0x906B778CA1DC72B6, ResultCleaner<char*>);

	// DATAFILE/DATAFILE_HAS_LOADED_FILE_DATA
	static auto nh_0x15FF52B809DB2353 = rage::scrEngine::GetNativeHandler(0x15FF52B809DB2353);
	rage::scrEngine::RegisterNativeHandler(0x15FF52B809DB2353, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x15FF52B809DB2353(cxt);
	});
	        
	AddResultCleaner(0x15FF52B809DB2353, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_HAS_VALID_FILE_DATA
	static auto nh_0xF8CC1EBE0B62E29F = rage::scrEngine::GetNativeHandler(0xF8CC1EBE0B62E29F);
	rage::scrEngine::RegisterNativeHandler(0xF8CC1EBE0B62E29F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF8CC1EBE0B62E29F(cxt);
	});
	        
	AddResultCleaner(0xF8CC1EBE0B62E29F, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_IS_SAVE_PENDING (result cleaner only)
	AddResultCleaner(0xBEDB96A7584AA8CF, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_IS_VALID_REQUEST_ID (result cleaner only)
	AddResultCleaner(0xFCCAE5B92A830878, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_LOAD_OFFLINE_UGC
	static auto nh_0xC5238C011AF405E4 = rage::scrEngine::GetNativeHandler(0xC5238C011AF405E4);
	rage::scrEngine::RegisterNativeHandler(0xC5238C011AF405E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC5238C011AF405E4(cxt);
	});
	        
	AddResultCleaner(0xC5238C011AF405E4, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_SELECT_ACTIVE_FILE
	static auto nh_0x22DA66936E0FFF37 = rage::scrEngine::GetNativeHandler(0x22DA66936E0FFF37);
	rage::scrEngine::RegisterNativeHandler(0x22DA66936E0FFF37, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x22DA66936E0FFF37(cxt);
	});
	        
	AddResultCleaner(0x22DA66936E0FFF37, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_SELECT_CREATOR_STATS (result cleaner only)
	AddResultCleaner(0x01095C95CD46B624, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_SELECT_UGC_DATA (result cleaner only)
	AddResultCleaner(0xA69AC4ADE82B57A4, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_SELECT_UGC_PLAYER_DATA (result cleaner only)
	AddResultCleaner(0x52818819057F2B40, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_SELECT_UGC_STATS (result cleaner only)
	AddResultCleaner(0x9CB0BFA7A9342C3D, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_START_SAVE_TO_CLOUD
	static auto nh_0x83BCCE3224735F05 = rage::scrEngine::GetNativeHandler(0x83BCCE3224735F05);
	rage::scrEngine::RegisterNativeHandler(0x83BCCE3224735F05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x83BCCE3224735F05(cxt);
	});
	        
	AddResultCleaner(0x83BCCE3224735F05, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_STORE_MISSION_HEADER
	static auto nh_0x2ED61456317B8178 = rage::scrEngine::GetNativeHandler(0x2ED61456317B8178);
	rage::scrEngine::RegisterNativeHandler(0x2ED61456317B8178, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2ED61456317B8178(cxt);
		NullifyVoid(cxt);
	});
	        
	// DATAFILE/DATAFILE_UPDATE_SAVE_TO_CLOUD
	static auto nh_0x4DFDD9EB705F8140 = rage::scrEngine::GetNativeHandler(0x4DFDD9EB705F8140);
	rage::scrEngine::RegisterNativeHandler(0x4DFDD9EB705F8140, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4DFDD9EB705F8140(cxt);
	});
	        
	AddResultCleaner(0x4DFDD9EB705F8140, ResultCleaner<bool>);

	// DATAFILE/DATAFILE_WATCH_REQUEST_ID
	static auto nh_0xAD6875BBC0FC899C = rage::scrEngine::GetNativeHandler(0xAD6875BBC0FC899C);
	rage::scrEngine::RegisterNativeHandler(0xAD6875BBC0FC899C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD6875BBC0FC899C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/DEACTIVATE_AUDIO_SLOWMO_MODE
	static auto nh_0xDDC635D5B3262C56 = rage::scrEngine::GetNativeHandler(0xDDC635D5B3262C56);
	rage::scrEngine::RegisterNativeHandler(0xDDC635D5B3262C56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDDC635D5B3262C56(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/DEACTIVATE_INTERIOR_ENTITY_SET
	static auto nh_0x420BD37289EEE162 = rage::scrEngine::GetNativeHandler(0x420BD37289EEE162);
	rage::scrEngine::RegisterNativeHandler(0x420BD37289EEE162, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x420BD37289EEE162(cxt);
		NullifyVoid(cxt);
	});
	        
	// DECORATOR/DECOR_EXIST_ON
	static auto nh_0x05661B80A8C9165F = rage::scrEngine::GetNativeHandler(0x05661B80A8C9165F);
	rage::scrEngine::RegisterNativeHandler(0x05661B80A8C9165F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x05661B80A8C9165F(cxt);
	});
	        
	AddResultCleaner(0x05661B80A8C9165F, ResultCleaner<bool>);

	// DECORATOR/DECOR_GET_BOOL
	static auto nh_0xDACE671663F2F5DB = rage::scrEngine::GetNativeHandler(0xDACE671663F2F5DB);
	rage::scrEngine::RegisterNativeHandler(0xDACE671663F2F5DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDACE671663F2F5DB(cxt);
	});
	        
	AddResultCleaner(0xDACE671663F2F5DB, ResultCleaner<bool>);

	// DECORATOR/DECOR_GET_FLOAT
	static auto nh_0x6524A2F114706F43 = rage::scrEngine::GetNativeHandler(0x6524A2F114706F43);
	rage::scrEngine::RegisterNativeHandler(0x6524A2F114706F43, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6524A2F114706F43(cxt);
	});
	        
	AddResultCleaner(0x6524A2F114706F43, ResultCleaner<float>);

	// DECORATOR/DECOR_GET_INT
	static auto nh_0xA06C969B02A97298 = rage::scrEngine::GetNativeHandler(0xA06C969B02A97298);
	rage::scrEngine::RegisterNativeHandler(0xA06C969B02A97298, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA06C969B02A97298(cxt);
	});
	        
	AddResultCleaner(0xA06C969B02A97298, ResultCleaner<int>);

	// DECORATOR/DECOR_IS_REGISTERED_AS_TYPE
	static auto nh_0x4F14F9F870D6FBC8 = rage::scrEngine::GetNativeHandler(0x4F14F9F870D6FBC8);
	rage::scrEngine::RegisterNativeHandler(0x4F14F9F870D6FBC8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4F14F9F870D6FBC8(cxt);
	});
	        
	AddResultCleaner(0x4F14F9F870D6FBC8, ResultCleaner<bool>);

	// DECORATOR/DECOR_REGISTER
	static auto nh_0x9FD90732F56403CE = rage::scrEngine::GetNativeHandler(0x9FD90732F56403CE);
	rage::scrEngine::RegisterNativeHandler(0x9FD90732F56403CE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9FD90732F56403CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// DECORATOR/DECOR_REGISTER_LOCK
	static auto nh_0xA9D14EEA259F9248 = rage::scrEngine::GetNativeHandler(0xA9D14EEA259F9248);
	rage::scrEngine::RegisterNativeHandler(0xA9D14EEA259F9248, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA9D14EEA259F9248(cxt);
		NullifyVoid(cxt);
	});
	        
	// DECORATOR/DECOR_REMOVE
	static auto nh_0x00EE9F297C738720 = rage::scrEngine::GetNativeHandler(0x00EE9F297C738720);
	rage::scrEngine::RegisterNativeHandler(0x00EE9F297C738720, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x00EE9F297C738720(cxt);
	});
	        
	AddResultCleaner(0x00EE9F297C738720, ResultCleaner<bool>);

	// DECORATOR/DECOR_SET_BOOL
	static auto nh_0x6B1E8E2ED1335B71 = rage::scrEngine::GetNativeHandler(0x6B1E8E2ED1335B71);
	rage::scrEngine::RegisterNativeHandler(0x6B1E8E2ED1335B71, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6B1E8E2ED1335B71(cxt);
	});
	        
	AddResultCleaner(0x6B1E8E2ED1335B71, ResultCleaner<bool>);

	// DECORATOR/DECOR_SET_FLOAT
	static auto nh_0x211AB1DD8D0F363A = rage::scrEngine::GetNativeHandler(0x211AB1DD8D0F363A);
	rage::scrEngine::RegisterNativeHandler(0x211AB1DD8D0F363A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x211AB1DD8D0F363A(cxt);
	});
	        
	AddResultCleaner(0x211AB1DD8D0F363A, ResultCleaner<bool>);

	// DECORATOR/DECOR_SET_INT
	static auto nh_0x0CE3AA5E1CA19E10 = rage::scrEngine::GetNativeHandler(0x0CE3AA5E1CA19E10);
	rage::scrEngine::RegisterNativeHandler(0x0CE3AA5E1CA19E10, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0CE3AA5E1CA19E10(cxt);
	});
	        
	AddResultCleaner(0x0CE3AA5E1CA19E10, ResultCleaner<bool>);

	// DECORATOR/DECOR_SET_TIME
	static auto nh_0x95AED7B8E39ECAA4 = rage::scrEngine::GetNativeHandler(0x95AED7B8E39ECAA4);
	rage::scrEngine::RegisterNativeHandler(0x95AED7B8E39ECAA4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x95AED7B8E39ECAA4(cxt);
	});
	        
	AddResultCleaner(0x95AED7B8E39ECAA4, ResultCleaner<bool>);

	// VEHICLE/DELETE_ALL_TRAINS
	static auto nh_0x736A718577F39C7D = rage::scrEngine::GetNativeHandler(0x736A718577F39C7D);
	rage::scrEngine::RegisterNativeHandler(0x736A718577F39C7D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x736A718577F39C7D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DELETE_CHECKPOINT
	static auto nh_0xF5ED37F54CD4D52E = rage::scrEngine::GetNativeHandler(0xF5ED37F54CD4D52E);
	rage::scrEngine::RegisterNativeHandler(0xF5ED37F54CD4D52E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF5ED37F54CD4D52E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/DELETE_CHILD_ROPE
	static auto nh_0xAA5D6B1888E4DB20 = rage::scrEngine::GetNativeHandler(0xAA5D6B1888E4DB20);
	rage::scrEngine::RegisterNativeHandler(0xAA5D6B1888E4DB20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA5D6B1888E4DB20(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/DELETE_ENTITY
	static auto nh_0xAE3CBE5BF394C9C9 = rage::scrEngine::GetNativeHandler(0xAE3CBE5BF394C9C9);
	rage::scrEngine::RegisterNativeHandler(0xAE3CBE5BF394C9C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAE3CBE5BF394C9C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DELETE_FUNCTION_REFERENCE
	static auto nh_0x1e86f206 = rage::scrEngine::GetNativeHandler(0x1e86f206);
	rage::scrEngine::RegisterNativeHandler(0x1e86f206, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1e86f206(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DELETE_INCIDENT
	static auto nh_0x556C1AA270D5A207 = rage::scrEngine::GetNativeHandler(0x556C1AA270D5A207);
	rage::scrEngine::RegisterNativeHandler(0x556C1AA270D5A207, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x556C1AA270D5A207(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DELETE_MISSION_TRAIN
	static auto nh_0x5B76B14AE875C795 = rage::scrEngine::GetNativeHandler(0x5B76B14AE875C795);
	rage::scrEngine::RegisterNativeHandler(0x5B76B14AE875C795, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5B76B14AE875C795(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DELETE_OBJECT
	static auto nh_0x539E0AE3E6634B9F = rage::scrEngine::GetNativeHandler(0x539E0AE3E6634B9F);
	rage::scrEngine::RegisterNativeHandler(0x539E0AE3E6634B9F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x539E0AE3E6634B9F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/DELETE_PATROL_ROUTE
	static auto nh_0x7767DD9D65E91319 = rage::scrEngine::GetNativeHandler(0x7767DD9D65E91319);
	rage::scrEngine::RegisterNativeHandler(0x7767DD9D65E91319, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7767DD9D65E91319(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/DELETE_PED
	static auto nh_0x9614299DCB53E54B = rage::scrEngine::GetNativeHandler(0x9614299DCB53E54B);
	rage::scrEngine::RegisterNativeHandler(0x9614299DCB53E54B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9614299DCB53E54B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DELETE_RESOURCE_KVP
	static auto nh_0x7389b5df = rage::scrEngine::GetNativeHandler(0x7389b5df);
	rage::scrEngine::RegisterNativeHandler(0x7389b5df, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7389b5df(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/DELETE_ROPE
	static auto nh_0x52B4829281364649 = rage::scrEngine::GetNativeHandler(0x52B4829281364649);
	rage::scrEngine::RegisterNativeHandler(0x52B4829281364649, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x52B4829281364649(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DELETE_SCRIPT_VEHICLE_GENERATOR
	static auto nh_0x22102C9ABFCF125D = rage::scrEngine::GetNativeHandler(0x22102C9ABFCF125D);
	rage::scrEngine::RegisterNativeHandler(0x22102C9ABFCF125D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x22102C9ABFCF125D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DELETE_STUNT_JUMP
	static auto nh_0xDC518000E39DAE1F = rage::scrEngine::GetNativeHandler(0xDC518000E39DAE1F);
	rage::scrEngine::RegisterNativeHandler(0xDC518000E39DAE1F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC518000E39DAE1F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DELETE_VEHICLE
	static auto nh_0xEA386986E786A54F = rage::scrEngine::GetNativeHandler(0xEA386986E786A54F);
	rage::scrEngine::RegisterNativeHandler(0xEA386986E786A54F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEA386986E786A54F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/DEPOSIT_VC (result cleaner only)
	AddResultCleaner(0xE260E0BB9CD995AC, ResultCleaner<bool>);

	// CAM/DESTROY_ALL_CAMS
	static auto nh_0x8E5FB15663F79120 = rage::scrEngine::GetNativeHandler(0x8E5FB15663F79120);
	rage::scrEngine::RegisterNativeHandler(0x8E5FB15663F79120, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8E5FB15663F79120(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DESTROY_CAM
	static auto nh_0x865908C81A2C22E9 = rage::scrEngine::GetNativeHandler(0x865908C81A2C22E9);
	rage::scrEngine::RegisterNativeHandler(0x865908C81A2C22E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x865908C81A2C22E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DESTROY_DUI
	static auto nh_0xa085cb10 = rage::scrEngine::GetNativeHandler(0xa085cb10);
	rage::scrEngine::RegisterNativeHandler(0xa085cb10, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xa085cb10(cxt);
		NullifyVoid(cxt);
	});
	        
	// ITEMSET/DESTROY_ITEMSET
	static auto nh_0xDE18220B1C183EDA = rage::scrEngine::GetNativeHandler(0xDE18220B1C183EDA);
	rage::scrEngine::RegisterNativeHandler(0xDE18220B1C183EDA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDE18220B1C183EDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/DESTROY_MOBILE_PHONE
	static auto nh_0x3BC861DF703E5097 = rage::scrEngine::GetNativeHandler(0x3BC861DF703E5097);
	rage::scrEngine::RegisterNativeHandler(0x3BC861DF703E5097, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3BC861DF703E5097(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DESTROY_TRACKED_POINT
	static auto nh_0xB25DC90BAD56CA42 = rage::scrEngine::GetNativeHandler(0xB25DC90BAD56CA42);
	rage::scrEngine::RegisterNativeHandler(0xB25DC90BAD56CA42, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB25DC90BAD56CA42(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DETACH_CAM
	static auto nh_0xA2FABBE87F4BAD82 = rage::scrEngine::GetNativeHandler(0xA2FABBE87F4BAD82);
	rage::scrEngine::RegisterNativeHandler(0xA2FABBE87F4BAD82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2FABBE87F4BAD82(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETACH_CONTAINER_FROM_HANDLER_FRAME
	static auto nh_0x7C0043FDFF6436BC = rage::scrEngine::GetNativeHandler(0x7C0043FDFF6436BC);
	rage::scrEngine::RegisterNativeHandler(0x7C0043FDFF6436BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7C0043FDFF6436BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/DETACH_ENTITY
	static auto nh_0x961AC54BF0613F5D = rage::scrEngine::GetNativeHandler(0x961AC54BF0613F5D);
	rage::scrEngine::RegisterNativeHandler(0x961AC54BF0613F5D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x961AC54BF0613F5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETACH_ENTITY_FROM_CARGOBOB (result cleaner only)
	AddResultCleaner(0xAF03011701811146, ResultCleaner<int>);

	// OBJECT/DETACH_PORTABLE_PICKUP_FROM_PED
	static auto nh_0xCF463D1E9A0AECB1 = rage::scrEngine::GetNativeHandler(0xCF463D1E9A0AECB1);
	rage::scrEngine::RegisterNativeHandler(0xCF463D1E9A0AECB1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCF463D1E9A0AECB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/DETACH_ROPE_FROM_ENTITY
	static auto nh_0xBCF3026912A8647D = rage::scrEngine::GetNativeHandler(0xBCF3026912A8647D);
	rage::scrEngine::RegisterNativeHandler(0xBCF3026912A8647D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCF3026912A8647D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/DETACH_SYNCHRONIZED_SCENE
	static auto nh_0x6D38F1F04CBB37EA = rage::scrEngine::GetNativeHandler(0x6D38F1F04CBB37EA);
	rage::scrEngine::RegisterNativeHandler(0x6D38F1F04CBB37EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D38F1F04CBB37EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETACH_VEHICLE_FROM_ANY_CARGOBOB (result cleaner only)
	AddResultCleaner(0xADF7BE450512C12F, ResultCleaner<bool>);

	// VEHICLE/DETACH_VEHICLE_FROM_ANY_TOW_TRUCK (result cleaner only)
	AddResultCleaner(0xD0E9CE05A1E68CD8, ResultCleaner<bool>);

	// VEHICLE/DETACH_VEHICLE_FROM_CARGOBOB
	static auto nh_0x0E21D3DF1051399D = rage::scrEngine::GetNativeHandler(0x0E21D3DF1051399D);
	rage::scrEngine::RegisterNativeHandler(0x0E21D3DF1051399D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E21D3DF1051399D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETACH_VEHICLE_FROM_TOW_TRUCK
	static auto nh_0xC2DB6B6708350ED8 = rage::scrEngine::GetNativeHandler(0xC2DB6B6708350ED8);
	rage::scrEngine::RegisterNativeHandler(0xC2DB6B6708350ED8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC2DB6B6708350ED8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETACH_VEHICLE_FROM_TRAILER
	static auto nh_0x90532EDF0D2BDD86 = rage::scrEngine::GetNativeHandler(0x90532EDF0D2BDD86);
	rage::scrEngine::RegisterNativeHandler(0x90532EDF0D2BDD86, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x90532EDF0D2BDD86(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE
	static auto nh_0xEF49CF0270307CBE = rage::scrEngine::GetNativeHandler(0xEF49CF0270307CBE);
	rage::scrEngine::RegisterNativeHandler(0xEF49CF0270307CBE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEF49CF0270307CBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DISABLE_AIM_CAM_THIS_UPDATE
	static auto nh_0x1A31FE0049E542F6 = rage::scrEngine::GetNativeHandler(0x1A31FE0049E542F6);
	rage::scrEngine::RegisterNativeHandler(0x1A31FE0049E542F6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A31FE0049E542F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/DISABLE_ALL_CONTROL_ACTIONS
	static auto nh_0x5F4B6931816E599B = rage::scrEngine::GetNativeHandler(0x5F4B6931816E599B);
	rage::scrEngine::RegisterNativeHandler(0x5F4B6931816E599B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F4B6931816E599B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DISABLE_CAM_COLLISION_FOR_OBJECT
	static auto nh_0x49482F9FCD825AAA = rage::scrEngine::GetNativeHandler(0x49482F9FCD825AAA);
	rage::scrEngine::RegisterNativeHandler(0x49482F9FCD825AAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x49482F9FCD825AAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/DISABLE_CONTROL_ACTION
	static auto nh_0xFE99B66D079CF6BC = rage::scrEngine::GetNativeHandler(0xFE99B66D079CF6BC);
	rage::scrEngine::RegisterNativeHandler(0xFE99B66D079CF6BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFE99B66D079CF6BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DISABLE_EDITOR_RUNTIME
	static auto nh_0xb1622b17 = rage::scrEngine::GetNativeHandler(0xb1622b17);
	rage::scrEngine::RegisterNativeHandler(0xb1622b17, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb1622b17(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISABLE_FRONTEND_THIS_FRAME
	static auto nh_0x6D3465A73092F0E6 = rage::scrEngine::GetNativeHandler(0x6D3465A73092F0E6);
	rage::scrEngine::RegisterNativeHandler(0x6D3465A73092F0E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D3465A73092F0E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/DISABLE_HEAD_BLEND_PALETTE_COLOR
	static auto nh_0xA21C118553BBDF02 = rage::scrEngine::GetNativeHandler(0xA21C118553BBDF02);
	rage::scrEngine::RegisterNativeHandler(0xA21C118553BBDF02, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA21C118553BBDF02(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DISABLE_HOSPITAL_RESTART
	static auto nh_0xC8535819C450EBA8 = rage::scrEngine::GetNativeHandler(0xC8535819C450EBA8);
	rage::scrEngine::RegisterNativeHandler(0xC8535819C450EBA8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8535819C450EBA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DISABLE_IDLE_CAMERA
	static auto nh_0x3d5ab7f0 = rage::scrEngine::GetNativeHandler(0x3d5ab7f0);
	rage::scrEngine::RegisterNativeHandler(0x3d5ab7f0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3d5ab7f0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DISABLE_INDIVIDUAL_PLANE_PROPELLER
	static auto nh_0x500873A45724C863 = rage::scrEngine::GetNativeHandler(0x500873A45724C863);
	rage::scrEngine::RegisterNativeHandler(0x500873A45724C863, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x500873A45724C863(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/DISABLE_INTERIOR
	static auto nh_0x6170941419D7D8EC = rage::scrEngine::GetNativeHandler(0x6170941419D7D8EC);
	rage::scrEngine::RegisterNativeHandler(0x6170941419D7D8EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6170941419D7D8EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DISABLE_MOON_CYCLE_OVERRIDE
	static auto nh_0x2BF72AD5B41AA739 = rage::scrEngine::GetNativeHandler(0x2BF72AD5B41AA739);
	rage::scrEngine::RegisterNativeHandler(0x2BF72AD5B41AA739, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2BF72AD5B41AA739(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/DISABLE_NAVMESH_IN_AREA
	static auto nh_0x4C8872D8CDBE1B8B = rage::scrEngine::GetNativeHandler(0x4C8872D8CDBE1B8B);
	rage::scrEngine::RegisterNativeHandler(0x4C8872D8CDBE1B8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4C8872D8CDBE1B8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DISABLE_OCCLUSION_THIS_FRAME
	static auto nh_0x3669F1B198DCAA4F = rage::scrEngine::GetNativeHandler(0x3669F1B198DCAA4F);
	rage::scrEngine::RegisterNativeHandler(0x3669F1B198DCAA4F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3669F1B198DCAA4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/DISABLE_PED_HEATSCALE_OVERRIDE
	static auto nh_0x600048C60D5C2C51 = rage::scrEngine::GetNativeHandler(0x600048C60D5C2C51);
	rage::scrEngine::RegisterNativeHandler(0x600048C60D5C2C51, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x600048C60D5C2C51(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/DISABLE_PED_PAIN_AUDIO
	static auto nh_0xA9A41C1E940FB0E8 = rage::scrEngine::GetNativeHandler(0xA9A41C1E940FB0E8);
	rage::scrEngine::RegisterNativeHandler(0xA9A41C1E940FB0E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA9A41C1E940FB0E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DISABLE_PLANE_AILERON
	static auto nh_0x23428FC53C60919C = rage::scrEngine::GetNativeHandler(0x23428FC53C60919C);
	rage::scrEngine::RegisterNativeHandler(0x23428FC53C60919C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23428FC53C60919C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/DISABLE_PLAYER_FIRING
	static auto nh_0x5E6CC07646BBEAB8 = rage::scrEngine::GetNativeHandler(0x5E6CC07646BBEAB8);
	rage::scrEngine::RegisterNativeHandler(0x5E6CC07646BBEAB8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E6CC07646BBEAB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/DISABLE_PLAYER_VEHICLE_REWARDS
	static auto nh_0xC142BE3BB9CE125F = rage::scrEngine::GetNativeHandler(0xC142BE3BB9CE125F);
	rage::scrEngine::RegisterNativeHandler(0xC142BE3BB9CE125F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC142BE3BB9CE125F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DISABLE_POLICE_RESTART
	static auto nh_0x23285DED6EBD7EA3 = rage::scrEngine::GetNativeHandler(0x23285DED6EBD7EA3);
	rage::scrEngine::RegisterNativeHandler(0x23285DED6EBD7EA3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23285DED6EBD7EA3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DISABLE_SCREENBLUR_FADE
	static auto nh_0xDE81239437E8C5A8 = rage::scrEngine::GetNativeHandler(0xDE81239437E8C5A8);
	rage::scrEngine::RegisterNativeHandler(0xDE81239437E8C5A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDE81239437E8C5A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// BRAIN/DISABLE_SCRIPT_BRAIN_SET
	static auto nh_0x14D8518E9760F08F = rage::scrEngine::GetNativeHandler(0x14D8518E9760F08F);
	rage::scrEngine::RegisterNativeHandler(0x14D8518E9760F08F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14D8518E9760F08F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DISABLE_STUNT_JUMP_SET
	static auto nh_0xA5272EBEDD4747F6 = rage::scrEngine::GetNativeHandler(0xA5272EBEDD4747F6);
	rage::scrEngine::RegisterNativeHandler(0xA5272EBEDD4747F6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5272EBEDD4747F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/DISABLE_SWITCH_OUTRO_FX
	static auto nh_0xBD605B8E0E18B3BB = rage::scrEngine::GetNativeHandler(0xBD605B8E0E18B3BB);
	rage::scrEngine::RegisterNativeHandler(0xBD605B8E0E18B3BB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD605B8E0E18B3BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DISABLE_VEHICLE_DISTANTLIGHTS
	static auto nh_0xC9F98AC1884E73A2 = rage::scrEngine::GetNativeHandler(0xC9F98AC1884E73A2);
	rage::scrEngine::RegisterNativeHandler(0xC9F98AC1884E73A2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9F98AC1884E73A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DISABLE_VEHICLE_PASSENGER_IDLE_CAMERA
	static auto nh_0x5c140555 = rage::scrEngine::GetNativeHandler(0x5c140555);
	rage::scrEngine::RegisterNativeHandler(0x5c140555, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5c140555(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/DISABLE_VEHICLE_WEAPON
	static auto nh_0xF4FC6A6F67D8D856 = rage::scrEngine::GetNativeHandler(0xF4FC6A6F67D8D856);
	rage::scrEngine::RegisterNativeHandler(0xF4FC6A6F67D8D856, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4FC6A6F67D8D856(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DISABLE_WORLDHORIZON_RENDERING
	static auto nh_0xa9c92cdc = rage::scrEngine::GetNativeHandler(0xa9c92cdc);
	rage::scrEngine::RegisterNativeHandler(0xa9c92cdc, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xa9c92cdc(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_AMMO_THIS_FRAME
	static auto nh_0xA5E78BA2B1331C55 = rage::scrEngine::GetNativeHandler(0xA5E78BA2B1331C55);
	rage::scrEngine::RegisterNativeHandler(0xA5E78BA2B1331C55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5E78BA2B1331C55(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_AREA_NAME
	static auto nh_0x276B6CE369C33678 = rage::scrEngine::GetNativeHandler(0x276B6CE369C33678);
	rage::scrEngine::RegisterNativeHandler(0x276B6CE369C33678, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x276B6CE369C33678(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_CASH
	static auto nh_0x96DEC8D5430208B7 = rage::scrEngine::GetNativeHandler(0x96DEC8D5430208B7);
	rage::scrEngine::RegisterNativeHandler(0x96DEC8D5430208B7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x96DEC8D5430208B7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_HELP_TEXT_THIS_FRAME
	static auto nh_0x960C9FF8F616E41C = rage::scrEngine::GetNativeHandler(0x960C9FF8F616E41C);
	rage::scrEngine::RegisterNativeHandler(0x960C9FF8F616E41C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x960C9FF8F616E41C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_HUD
	static auto nh_0xA6294919E56FF02A = rage::scrEngine::GetNativeHandler(0xA6294919E56FF02A);
	rage::scrEngine::RegisterNativeHandler(0xA6294919E56FF02A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6294919E56FF02A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME
	static auto nh_0x402F9ED62087E898 = rage::scrEngine::GetNativeHandler(0x402F9ED62087E898);
	rage::scrEngine::RegisterNativeHandler(0x402F9ED62087E898, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x402F9ED62087E898(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DISPLAY_ONSCREEN_KEYBOARD
	static auto nh_0x00DC833F2568DBF6 = rage::scrEngine::GetNativeHandler(0x00DC833F2568DBF6);
	rage::scrEngine::RegisterNativeHandler(0x00DC833F2568DBF6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x00DC833F2568DBF6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING
	static auto nh_0xCA78CFA0366592FE = rage::scrEngine::GetNativeHandler(0xCA78CFA0366592FE);
	rage::scrEngine::RegisterNativeHandler(0xCA78CFA0366592FE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0xCA78CFA0366592FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS
	static auto nh_0x82CEDC33687E1F50 = rage::scrEngine::GetNativeHandler(0x82CEDC33687E1F50);
	rage::scrEngine::RegisterNativeHandler(0x82CEDC33687E1F50, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x82CEDC33687E1F50(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_RADAR
	static auto nh_0xA0EBB943C300E693 = rage::scrEngine::GetNativeHandler(0xA0EBB943C300E693);
	rage::scrEngine::RegisterNativeHandler(0xA0EBB943C300E693, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA0EBB943C300E693(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DISPLAY_SNIPER_SCOPE_THIS_FRAME
	static auto nh_0x73115226F4814E62 = rage::scrEngine::GetNativeHandler(0x73115226F4814E62);
	rage::scrEngine::RegisterNativeHandler(0x73115226F4814E62, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x73115226F4814E62(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/DISPLAY_SYSTEM_SIGNIN_UI
	static auto nh_0x94DD7888C10A979E = rage::scrEngine::GetNativeHandler(0x94DD7888C10A979E);
	rage::scrEngine::RegisterNativeHandler(0x94DD7888C10A979E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x94DD7888C10A979E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/DISTANT_COP_CAR_SIRENS
	static auto nh_0x552369F549563AD5 = rage::scrEngine::GetNativeHandler(0x552369F549563AD5);
	rage::scrEngine::RegisterNativeHandler(0x552369F549563AD5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x552369F549563AD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/DOES_ANIM_DICT_EXIST
	static auto nh_0x2DA49C3B79856961 = rage::scrEngine::GetNativeHandler(0x2DA49C3B79856961);
	rage::scrEngine::RegisterNativeHandler(0x2DA49C3B79856961, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2DA49C3B79856961(cxt);
	});
	        
	AddResultCleaner(0x2DA49C3B79856961, ResultCleaner<bool>);

	// HUD/DOES_BLIP_EXIST (result cleaner only)
	AddResultCleaner(0xA6DB27D19ECBB7DA, ResultCleaner<bool>);

	// HUD/DOES_BLIP_HAVE_GPS_ROUTE (result cleaner only)
	AddResultCleaner(0xDD2238F57B977751, ResultCleaner<bool>);

	// CAM/DOES_CAM_EXIST (result cleaner only)
	AddResultCleaner(0xA7A932170592B50E, ResultCleaner<bool>);

	// VEHICLE/DOES_CARGOBOB_HAVE_PICKUP_MAGNET (result cleaner only)
	AddResultCleaner(0x6E08BF5B3722BAC9, ResultCleaner<bool>);

	// VEHICLE/DOES_CARGOBOB_HAVE_PICK_UP_ROPE (result cleaner only)
	AddResultCleaner(0x1821D91AD4B56108, ResultCleaner<bool>);

	// AUDIO/DOES_CONTEXT_EXIST_FOR_THIS_PED
	static auto nh_0x49B99BF3FDA89A7A = rage::scrEngine::GetNativeHandler(0x49B99BF3FDA89A7A);
	rage::scrEngine::RegisterNativeHandler(0x49B99BF3FDA89A7A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x49B99BF3FDA89A7A(cxt);
	});
	        
	AddResultCleaner(0x49B99BF3FDA89A7A, ResultCleaner<bool>);

	// CUTSCENE/DOES_CUTSCENE_ENTITY_EXIST
	static auto nh_0x499EF20C5DB25C59 = rage::scrEngine::GetNativeHandler(0x499EF20C5DB25C59);
	rage::scrEngine::RegisterNativeHandler(0x499EF20C5DB25C59, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x499EF20C5DB25C59(cxt);
	});
	        
	AddResultCleaner(0x499EF20C5DB25C59, ResultCleaner<bool>);

	// ENTITY/DOES_ENTITY_BELONG_TO_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0xDDE6DF5AE89981D2, ResultCleaner<bool>);

	// ENTITY/DOES_ENTITY_EXIST (result cleaner only)
	AddResultCleaner(0x7239B21A38F536BA, ResultCleaner<bool>);

	// ENTITY/DOES_ENTITY_HAVE_DRAWABLE (result cleaner only)
	AddResultCleaner(0x060D6E96F8B8E48D, ResultCleaner<bool>);

	// ENTITY/DOES_ENTITY_HAVE_PHYSICS (result cleaner only)
	AddResultCleaner(0xDA95EA3317CC5064, ResultCleaner<bool>);

	// VEHICLE/DOES_EXTRA_EXIST (result cleaner only)
	AddResultCleaner(0x1262D55792428154, ResultCleaner<bool>);

	// PED/DOES_GROUP_EXIST (result cleaner only)
	AddResultCleaner(0x7C6B0C22F9F40BBE, ResultCleaner<bool>);

	// GRAPHICS/DOES_LATEST_BRIEF_STRING_EXIST (result cleaner only)
	AddResultCleaner(0x5E657EF1099EDD65, ResultCleaner<bool>);

	// PATHFIND/DOES_NAVMESH_BLOCKING_OBJECT_EXIST
	static auto nh_0x0EAEB0DB4B132399 = rage::scrEngine::GetNativeHandler(0x0EAEB0DB4B132399);
	rage::scrEngine::RegisterNativeHandler(0x0EAEB0DB4B132399, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0EAEB0DB4B132399(cxt);
	});
	        
	AddResultCleaner(0x0EAEB0DB4B132399, ResultCleaner<bool>);

	// OBJECT/DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS (result cleaner only)
	AddResultCleaner(0xBFA48E2FF417213F, ResultCleaner<bool>);

	// GRAPHICS/DOES_PARTICLE_FX_LOOPED_EXIST (result cleaner only)
	AddResultCleaner(0x74AFEF0D2E1E409B, ResultCleaner<bool>);

	// HUD/DOES_PED_HAVE_AI_BLIP (result cleaner only)
	AddResultCleaner(0x15B8ECF844EE67ED, ResultCleaner<bool>);

	// OBJECT/DOES_PICKUP_EXIST (result cleaner only)
	AddResultCleaner(0xAFC1CA75AD4074D1, ResultCleaner<bool>);

	// OBJECT/DOES_PICKUP_OBJECT_EXIST (result cleaner only)
	AddResultCleaner(0xD9EFB6DBF7DAAEA3, ResultCleaner<bool>);

	// OBJECT/DOES_PICKUP_OF_TYPE_EXIST_IN_AREA (result cleaner only)
	AddResultCleaner(0xF9C36251F6E48E33, ResultCleaner<bool>);

	// AUDIO/DOES_PLAYER_VEH_HAVE_RADIO (result cleaner only)
	AddResultCleaner(0x109697E2FFBAC8A1, ResultCleaner<bool>);

	// MISC/DOES_POP_MULTIPLIER_AREA_EXIST (result cleaner only)
	AddResultCleaner(0x1327E2FE9746BAEE, ResultCleaner<bool>);

	// MISC/DOES_POP_MULTIPLIER_SPHERE_EXIST (result cleaner only)
	AddResultCleaner(0x171BAFB3C60389F4, ResultCleaner<bool>);

	// OBJECT/DOES_RAYFIRE_MAP_OBJECT_EXIST (result cleaner only)
	AddResultCleaner(0x52AF537A0C5B8AAD, ResultCleaner<bool>);

	// PHYSICS/DOES_ROPE_EXIST
	static auto nh_0xFD5448BE3111ED96 = rage::scrEngine::GetNativeHandler(0xFD5448BE3111ED96);
	rage::scrEngine::RegisterNativeHandler(0xFD5448BE3111ED96, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFD5448BE3111ED96(cxt);
	});
	        
	AddResultCleaner(0xFD5448BE3111ED96, ResultCleaner<bool>);

	// TASK/DOES_SCENARIO_EXIST_IN_AREA (result cleaner only)
	AddResultCleaner(0x5A59271FFADD33C1, ResultCleaner<bool>);

	// TASK/DOES_SCENARIO_GROUP_EXIST
	static auto nh_0xF9034C136C9E00D3 = rage::scrEngine::GetNativeHandler(0xF9034C136C9E00D3);
	rage::scrEngine::RegisterNativeHandler(0xF9034C136C9E00D3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF9034C136C9E00D3(cxt);
	});
	        
	AddResultCleaner(0xF9034C136C9E00D3, ResultCleaner<bool>);

	// TASK/DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA
	static auto nh_0x0A9D0C2A3BBC86C1 = rage::scrEngine::GetNativeHandler(0x0A9D0C2A3BBC86C1);
	rage::scrEngine::RegisterNativeHandler(0x0A9D0C2A3BBC86C1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0A9D0C2A3BBC86C1(cxt);
	});
	        
	AddResultCleaner(0x0A9D0C2A3BBC86C1, ResultCleaner<bool>);

	// TASK/DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS (result cleaner only)
	AddResultCleaner(0xA98B8E3C088E5A31, ResultCleaner<bool>);

	// SCRIPT/DOES_SCRIPT_EXIST
	static auto nh_0xFC04745FBE67C19A = rage::scrEngine::GetNativeHandler(0xFC04745FBE67C19A);
	rage::scrEngine::RegisterNativeHandler(0xFC04745FBE67C19A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFC04745FBE67C19A(cxt);
	});
	        
	AddResultCleaner(0xFC04745FBE67C19A, ResultCleaner<bool>);

	// VEHICLE/DOES_SCRIPT_VEHICLE_GENERATOR_EXIST (result cleaner only)
	AddResultCleaner(0xF6086BC836400876, ResultCleaner<bool>);

	// SCRIPT/DOES_SCRIPT_WITH_NAME_HASH_EXIST (result cleaner only)
	AddResultCleaner(0xF86AA3C56BA31381, ResultCleaner<bool>);

	// FILES/DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG (result cleaner only)
	AddResultCleaner(0x341DE7ED1D2A1BFD, ResultCleaner<bool>);

	// HUD/DOES_TEXT_BLOCK_EXIST
	static auto nh_0x1C7302E725259789 = rage::scrEngine::GetNativeHandler(0x1C7302E725259789);
	rage::scrEngine::RegisterNativeHandler(0x1C7302E725259789, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1C7302E725259789(cxt);
	});
	        
	AddResultCleaner(0x1C7302E725259789, ResultCleaner<bool>);

	// HUD/DOES_TEXT_LABEL_EXIST
	static auto nh_0xAC09CA973C564252 = rage::scrEngine::GetNativeHandler(0xAC09CA973C564252);
	rage::scrEngine::RegisterNativeHandler(0xAC09CA973C564252, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAC09CA973C564252(cxt);
	});
	        
	AddResultCleaner(0xAC09CA973C564252, ResultCleaner<bool>);

	// CFX/DOES_TIMECYCLE_MODIFIER_HAS_VAR
	static auto nh_0xc53bb6d3 = rage::scrEngine::GetNativeHandler(0xc53bb6d3);
	rage::scrEngine::RegisterNativeHandler(0xc53bb6d3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xc53bb6d3(cxt);
	});
	        
	AddResultCleaner(0xc53bb6d3, ResultCleaner<bool>);

	// VEHICLE/DOES_VEHICLE_EXIST_WITH_DECORATOR
	static auto nh_0x956B409B984D9BF7 = rage::scrEngine::GetNativeHandler(0x956B409B984D9BF7);
	rage::scrEngine::RegisterNativeHandler(0x956B409B984D9BF7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x956B409B984D9BF7(cxt);
	});
	        
	AddResultCleaner(0x956B409B984D9BF7, ResultCleaner<bool>);

	// GRAPHICS/DOES_VEHICLE_HAVE_CREW_EMBLEM (result cleaner only)
	AddResultCleaner(0x060D935D3981A275, ResultCleaner<bool>);

	// VEHICLE/DOES_VEHICLE_HAVE_ROOF (result cleaner only)
	AddResultCleaner(0x8AC862B0B32C5B80, ResultCleaner<bool>);

	// VEHICLE/DOES_VEHICLE_HAVE_SEARCHLIGHT (result cleaner only)
	AddResultCleaner(0x99015ED7DBEA5113, ResultCleaner<bool>);

	// VEHICLE/DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK (result cleaner only)
	AddResultCleaner(0x57E4C39DE5EE8470, ResultCleaner<bool>);

	// VEHICLE/DOES_VEHICLE_HAVE_WEAPONS (result cleaner only)
	AddResultCleaner(0x25ECB9F8017D98E0, ResultCleaner<bool>);

	// CFX/DOES_VEHICLE_USE_FUEL (result cleaner only)
	AddResultCleaner(0xef30a696, ResultCleaner<bool>);

	// WEAPON/DOES_WEAPON_TAKE_WEAPON_COMPONENT (result cleaner only)
	AddResultCleaner(0x5CEE3DF569CECAB0, ResultCleaner<bool>);

	// GRAPHICS/DONT_RENDER_IN_GAME_UI
	static auto nh_0x22A249A53034450A = rage::scrEngine::GetNativeHandler(0x22A249A53034450A);
	rage::scrEngine::RegisterNativeHandler(0x22A249A53034450A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x22A249A53034450A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/DONT_TILT_MINIMAP_THIS_FRAME
	static auto nh_0x6D14BFDC33B34F55 = rage::scrEngine::GetNativeHandler(0x6D14BFDC33B34F55);
	rage::scrEngine::RegisterNativeHandler(0x6D14BFDC33B34F55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D14BFDC33B34F55(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_FIND_EXISTING_DOOR
	static auto nh_0x589F80B325CC82C5 = rage::scrEngine::GetNativeHandler(0x589F80B325CC82C5);
	rage::scrEngine::RegisterNativeHandler(0x589F80B325CC82C5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x589F80B325CC82C5(cxt);
	});
	        
	AddResultCleaner(0x589F80B325CC82C5, ResultCleaner<bool>);

	// OBJECT/DOOR_SYSTEM_GET_DOOR_PENDING_STATE (result cleaner only)
	AddResultCleaner(0x4BC2854478F3A749, ResultCleaner<int>);

	// OBJECT/DOOR_SYSTEM_GET_DOOR_STATE (result cleaner only)
	AddResultCleaner(0x160AA1B32F6139B8, ResultCleaner<int>);

	// OBJECT/DOOR_SYSTEM_GET_IS_PHYSICS_LOADED (result cleaner only)
	AddResultCleaner(0xDF97CDD4FC08FD34, ResultCleaner<bool>);

	// OBJECT/DOOR_SYSTEM_GET_OPEN_RATIO (result cleaner only)
	AddResultCleaner(0x65499865FCA6E5EC, ResultCleaner<float>);

	// CFX/DOOR_SYSTEM_GET_SIZE (result cleaner only)
	AddResultCleaner(0x237613b3, ResultCleaner<int>);

	// OBJECT/DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE
	static auto nh_0x9BA001CB45CBF627 = rage::scrEngine::GetNativeHandler(0x9BA001CB45CBF627);
	rage::scrEngine::RegisterNativeHandler(0x9BA001CB45CBF627, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BA001CB45CBF627(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_SET_AUTOMATIC_RATE
	static auto nh_0x03C27E13B42A0E82 = rage::scrEngine::GetNativeHandler(0x03C27E13B42A0E82);
	rage::scrEngine::RegisterNativeHandler(0x03C27E13B42A0E82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03C27E13B42A0E82(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_SET_DOOR_STATE
	static auto nh_0x6BAB9442830C7F53 = rage::scrEngine::GetNativeHandler(0x6BAB9442830C7F53);
	rage::scrEngine::RegisterNativeHandler(0x6BAB9442830C7F53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6BAB9442830C7F53(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_SET_HOLD_OPEN
	static auto nh_0xD9B71952F78A2640 = rage::scrEngine::GetNativeHandler(0xD9B71952F78A2640);
	rage::scrEngine::RegisterNativeHandler(0xD9B71952F78A2640, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9B71952F78A2640(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_SET_OPEN_RATIO
	static auto nh_0xB6E6FBA95C7324AC = rage::scrEngine::GetNativeHandler(0xB6E6FBA95C7324AC);
	rage::scrEngine::RegisterNativeHandler(0xB6E6FBA95C7324AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB6E6FBA95C7324AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/DOOR_SYSTEM_SET_SPRING_REMOVED
	static auto nh_0xC485E07E4F0B7958 = rage::scrEngine::GetNativeHandler(0xC485E07E4F0B7958);
	rage::scrEngine::RegisterNativeHandler(0xC485E07E4F0B7958, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC485E07E4F0B7958(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/DO_AUTO_SAVE
	static auto nh_0x50EEAAD86232EE55 = rage::scrEngine::GetNativeHandler(0x50EEAAD86232EE55);
	rage::scrEngine::RegisterNativeHandler(0x50EEAAD86232EE55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50EEAAD86232EE55(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DO_SCREEN_FADE_IN
	static auto nh_0xD4E8E24955024033 = rage::scrEngine::GetNativeHandler(0xD4E8E24955024033);
	rage::scrEngine::RegisterNativeHandler(0xD4E8E24955024033, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4E8E24955024033(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/DO_SCREEN_FADE_OUT
	static auto nh_0x891B5B39AC6302AF = rage::scrEngine::GetNativeHandler(0x891B5B39AC6302AF);
	rage::scrEngine::RegisterNativeHandler(0x891B5B39AC6302AF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x891B5B39AC6302AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_BOX
	static auto nh_0xD3A9971CADAC7252 = rage::scrEngine::GetNativeHandler(0xD3A9971CADAC7252);
	rage::scrEngine::RegisterNativeHandler(0xD3A9971CADAC7252, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD3A9971CADAC7252(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_BOX
	static auto nh_0x083A2CA4F2E573BD = rage::scrEngine::GetNativeHandler(0x083A2CA4F2E573BD);
	rage::scrEngine::RegisterNativeHandler(0x083A2CA4F2E573BD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x083A2CA4F2E573BD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_CROSS
	static auto nh_0x73B1189623049839 = rage::scrEngine::GetNativeHandler(0x73B1189623049839);
	rage::scrEngine::RegisterNativeHandler(0x73B1189623049839, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x73B1189623049839(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_LINE
	static auto nh_0x7FDFADE676AA3CB0 = rage::scrEngine::GetNativeHandler(0x7FDFADE676AA3CB0);
	rage::scrEngine::RegisterNativeHandler(0x7FDFADE676AA3CB0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7FDFADE676AA3CB0(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_LINE_WITH_TWO_COLOURS
	static auto nh_0xD8B9A8AC5608FF94 = rage::scrEngine::GetNativeHandler(0xD8B9A8AC5608FF94);
	rage::scrEngine::RegisterNativeHandler(0xD8B9A8AC5608FF94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8B9A8AC5608FF94(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_SPHERE
	static auto nh_0xAAD68E1AB39DA632 = rage::scrEngine::GetNativeHandler(0xAAD68E1AB39DA632);
	rage::scrEngine::RegisterNativeHandler(0xAAD68E1AB39DA632, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAAD68E1AB39DA632(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_TEXT
	static auto nh_0x3903E216620488E8 = rage::scrEngine::GetNativeHandler(0x3903E216620488E8);
	rage::scrEngine::RegisterNativeHandler(0x3903E216620488E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3903E216620488E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_DEBUG_TEXT_2D
	static auto nh_0xA3BB2E9555C05A8F = rage::scrEngine::GetNativeHandler(0xA3BB2E9555C05A8F);
	rage::scrEngine::RegisterNativeHandler(0xA3BB2E9555C05A8F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA3BB2E9555C05A8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DRAW_GIZMO
	static auto nh_0xeb2edca2 = rage::scrEngine::GetNativeHandler(0xeb2edca2);
	rage::scrEngine::RegisterNativeHandler(0xeb2edca2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xeb2edca2(cxt);
	});
	        
	AddResultCleaner(0xeb2edca2, ResultCleaner<bool>);

	// CFX/DRAW_GLOW_SPHERE
	static auto nh_0xbd25ec89 = rage::scrEngine::GetNativeHandler(0xbd25ec89);
	rage::scrEngine::RegisterNativeHandler(0xbd25ec89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xbd25ec89(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_LIGHT_WITH_RANGE
	static auto nh_0xF2A1B2771A01DBD4 = rage::scrEngine::GetNativeHandler(0xF2A1B2771A01DBD4);
	rage::scrEngine::RegisterNativeHandler(0xF2A1B2771A01DBD4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2A1B2771A01DBD4(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_LINE
	static auto nh_0x6B7256074AE34680 = rage::scrEngine::GetNativeHandler(0x6B7256074AE34680);
	rage::scrEngine::RegisterNativeHandler(0x6B7256074AE34680, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B7256074AE34680(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DRAW_LINE_2D
	static auto nh_0xb856a90 = rage::scrEngine::GetNativeHandler(0xb856a90);
	rage::scrEngine::RegisterNativeHandler(0xb856a90, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb856a90(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_LOW_QUALITY_PHOTO_TO_PHONE
	static auto nh_0x1072F115DAB0717E = rage::scrEngine::GetNativeHandler(0x1072F115DAB0717E);
	rage::scrEngine::RegisterNativeHandler(0x1072F115DAB0717E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1072F115DAB0717E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_MARKER
	static auto nh_0x28477EC23D892089 = rage::scrEngine::GetNativeHandler(0x28477EC23D892089);
	rage::scrEngine::RegisterNativeHandler(0x28477EC23D892089, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(21))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(22))) { return; }
		nh_0x28477EC23D892089(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_POLY
	static auto nh_0xAC26716048436851 = rage::scrEngine::GetNativeHandler(0xAC26716048436851);
	rage::scrEngine::RegisterNativeHandler(0xAC26716048436851, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC26716048436851(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_RECT
	static auto nh_0x3A618A217E5154F0 = rage::scrEngine::GetNativeHandler(0x3A618A217E5154F0);
	rage::scrEngine::RegisterNativeHandler(0x3A618A217E5154F0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3A618A217E5154F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DRAW_RECT_ROTATED
	static auto nh_0xec37c168 = rage::scrEngine::GetNativeHandler(0xec37c168);
	rage::scrEngine::RegisterNativeHandler(0xec37c168, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xec37c168(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SCALEFORM_MOVIE
	static auto nh_0x54972ADAF0294A93 = rage::scrEngine::GetNativeHandler(0x54972ADAF0294A93);
	rage::scrEngine::RegisterNativeHandler(0x54972ADAF0294A93, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x54972ADAF0294A93(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SCALEFORM_MOVIE_3D
	static auto nh_0x87D51D72255D4E78 = rage::scrEngine::GetNativeHandler(0x87D51D72255D4E78);
	rage::scrEngine::RegisterNativeHandler(0x87D51D72255D4E78, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0x87D51D72255D4E78(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SCALEFORM_MOVIE_3D_SOLID
	static auto nh_0x1CE592FDC749D6F5 = rage::scrEngine::GetNativeHandler(0x1CE592FDC749D6F5);
	rage::scrEngine::RegisterNativeHandler(0x1CE592FDC749D6F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0x1CE592FDC749D6F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SCALEFORM_MOVIE_FULLSCREEN
	static auto nh_0x0DF606929C105BE1 = rage::scrEngine::GetNativeHandler(0x0DF606929C105BE1);
	rage::scrEngine::RegisterNativeHandler(0x0DF606929C105BE1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0DF606929C105BE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED
	static auto nh_0xCF537FDE4FBD4CE5 = rage::scrEngine::GetNativeHandler(0xCF537FDE4FBD4CE5);
	rage::scrEngine::RegisterNativeHandler(0xCF537FDE4FBD4CE5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCF537FDE4FBD4CE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SPOT_LIGHT
	static auto nh_0xD0F64B265C8C8B33 = rage::scrEngine::GetNativeHandler(0xD0F64B265C8C8B33);
	rage::scrEngine::RegisterNativeHandler(0xD0F64B265C8C8B33, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD0F64B265C8C8B33(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_SPRITE
	static auto nh_0xE7FFAE5EBF23D890 = rage::scrEngine::GetNativeHandler(0xE7FFAE5EBF23D890);
	rage::scrEngine::RegisterNativeHandler(0xE7FFAE5EBF23D890, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE7FFAE5EBF23D890(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/DRAW_TV_CHANNEL
	static auto nh_0xFDDC2B4ED3C69DF0 = rage::scrEngine::GetNativeHandler(0xFDDC2B4ED3C69DF0);
	rage::scrEngine::RegisterNativeHandler(0xFDDC2B4ED3C69DF0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDDC2B4ED3C69DF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/DROP_AMBIENT_PROP
	static auto nh_0xAFF4710E2A0A6C12 = rage::scrEngine::GetNativeHandler(0xAFF4710E2A0A6C12);
	rage::scrEngine::RegisterNativeHandler(0xAFF4710E2A0A6C12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAFF4710E2A0A6C12(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/DUPLICATE_FUNCTION_REFERENCE
	static auto nh_0xf4e2079d = rage::scrEngine::GetNativeHandler(0xf4e2079d);
	rage::scrEngine::RegisterNativeHandler(0xf4e2079d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xf4e2079d(cxt);
	});
	        
	AddResultCleaner(0xf4e2079d, ResultCleaner<char*>);

	// GRAPHICS/ENABLE_ALIEN_BLOOD_VFX
	static auto nh_0x9DCE1F0F78260875 = rage::scrEngine::GetNativeHandler(0x9DCE1F0F78260875);
	rage::scrEngine::RegisterNativeHandler(0x9DCE1F0F78260875, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9DCE1F0F78260875(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/ENABLE_ALL_CONTROL_ACTIONS
	static auto nh_0xA5FFE9B05F199DE7 = rage::scrEngine::GetNativeHandler(0xA5FFE9B05F199DE7);
	rage::scrEngine::RegisterNativeHandler(0xA5FFE9B05F199DE7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5FFE9B05F199DE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ENABLE_CLOWN_BLOOD_VFX
	static auto nh_0xD821490579791273 = rage::scrEngine::GetNativeHandler(0xD821490579791273);
	rage::scrEngine::RegisterNativeHandler(0xD821490579791273, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD821490579791273(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/ENABLE_CONTROL_ACTION
	static auto nh_0x351220255D64C155 = rage::scrEngine::GetNativeHandler(0x351220255D64C155);
	rage::scrEngine::RegisterNativeHandler(0x351220255D64C155, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x351220255D64C155(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ENABLE_DISPATCH_SERVICE
	static auto nh_0xDC0F817884CDD856 = rage::scrEngine::GetNativeHandler(0xDC0F817884CDD856);
	rage::scrEngine::RegisterNativeHandler(0xDC0F817884CDD856, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC0F817884CDD856(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ENABLE_EDITOR_RUNTIME
	static auto nh_0xc383871d = rage::scrEngine::GetNativeHandler(0xc383871d);
	rage::scrEngine::RegisterNativeHandler(0xc383871d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xc383871d(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME
	static auto nh_0xA97F257D0151A6AB = rage::scrEngine::GetNativeHandler(0xA97F257D0151A6AB);
	rage::scrEngine::RegisterNativeHandler(0xA97F257D0151A6AB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA97F257D0151A6AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/ENABLE_LASER_SIGHT_RENDERING
	static auto nh_0xC8B46D7727D864AA = rage::scrEngine::GetNativeHandler(0xC8B46D7727D864AA);
	rage::scrEngine::RegisterNativeHandler(0xC8B46D7727D864AA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8B46D7727D864AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ENABLE_MOON_CYCLE_OVERRIDE
	static auto nh_0x2C328AF17210F009 = rage::scrEngine::GetNativeHandler(0x2C328AF17210F009);
	rage::scrEngine::RegisterNativeHandler(0x2C328AF17210F009, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C328AF17210F009(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ENABLE_MOVIE_KEYFRAME_WAIT
	static auto nh_0x74C180030FDE4B69 = rage::scrEngine::GetNativeHandler(0x74C180030FDE4B69);
	rage::scrEngine::RegisterNativeHandler(0x74C180030FDE4B69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74C180030FDE4B69(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/ENABLE_MOVIE_SUBTITLES
	static auto nh_0x873FA65C778AD970 = rage::scrEngine::GetNativeHandler(0x873FA65C778AD970);
	rage::scrEngine::RegisterNativeHandler(0x873FA65C778AD970, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x873FA65C778AD970(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/ENABLE_SAVING_IN_GARAGE
	static auto nh_0xF2E1A7133DD356A6 = rage::scrEngine::GetNativeHandler(0xF2E1A7133DD356A6);
	rage::scrEngine::RegisterNativeHandler(0xF2E1A7133DD356A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2E1A7133DD356A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// BRAIN/ENABLE_SCRIPT_BRAIN_SET
	static auto nh_0x67AA4D73F0CFA86B = rage::scrEngine::GetNativeHandler(0x67AA4D73F0CFA86B);
	rage::scrEngine::RegisterNativeHandler(0x67AA4D73F0CFA86B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x67AA4D73F0CFA86B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/ENABLE_SPECIAL_ABILITY
	static auto nh_0x181EC197DAEFE121 = rage::scrEngine::GetNativeHandler(0x181EC197DAEFE121);
	rage::scrEngine::RegisterNativeHandler(0x181EC197DAEFE121, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x181EC197DAEFE121(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/ENABLE_STALL_WARNING_SOUNDS
	static auto nh_0xC15907D667F7CFB2 = rage::scrEngine::GetNativeHandler(0xC15907D667F7CFB2);
	rage::scrEngine::RegisterNativeHandler(0xC15907D667F7CFB2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC15907D667F7CFB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/ENABLE_STUNT_JUMP_AUDIO
	static auto nh_0xB81CF134AEB56FFB = rage::scrEngine::GetNativeHandler(0xB81CF134AEB56FFB);
	rage::scrEngine::RegisterNativeHandler(0xB81CF134AEB56FFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB81CF134AEB56FFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ENABLE_STUNT_JUMP_SET
	static auto nh_0xE369A5783B866016 = rage::scrEngine::GetNativeHandler(0xE369A5783B866016);
	rage::scrEngine::RegisterNativeHandler(0xE369A5783B866016, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE369A5783B866016(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/ENABLE_SWITCH_PAUSE_BEFORE_DESCENT
	static auto nh_0xD4793DFF3AF2ABCD = rage::scrEngine::GetNativeHandler(0xD4793DFF3AF2ABCD);
	rage::scrEngine::RegisterNativeHandler(0xD4793DFF3AF2ABCD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4793DFF3AF2ABCD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/ENABLE_TENNIS_MODE
	static auto nh_0x28A04B411933F8A6 = rage::scrEngine::GetNativeHandler(0x28A04B411933F8A6);
	rage::scrEngine::RegisterNativeHandler(0x28A04B411933F8A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x28A04B411933F8A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/ENABLE_VEHICLE_EXHAUST_POPS
	static auto nh_0x2BE4BC731D039D5A = rage::scrEngine::GetNativeHandler(0x2BE4BC731D039D5A);
	rage::scrEngine::RegisterNativeHandler(0x2BE4BC731D039D5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2BE4BC731D039D5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/ENABLE_VEHICLE_FANBELT_DAMAGE
	static auto nh_0x1C073274E065C6D2 = rage::scrEngine::GetNativeHandler(0x1C073274E065C6D2);
	rage::scrEngine::RegisterNativeHandler(0x1C073274E065C6D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C073274E065C6D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/END_FIND_KVP
	static auto nh_0xb3210203 = rage::scrEngine::GetNativeHandler(0xb3210203);
	rage::scrEngine::RegisterNativeHandler(0xb3210203, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb3210203(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/END_FIND_OBJECT
	static auto nh_0xdeda4e50 = rage::scrEngine::GetNativeHandler(0xdeda4e50);
	rage::scrEngine::RegisterNativeHandler(0xdeda4e50, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xdeda4e50(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/END_FIND_PED
	static auto nh_0x9615c2ad = rage::scrEngine::GetNativeHandler(0x9615c2ad);
	rage::scrEngine::RegisterNativeHandler(0x9615c2ad, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9615c2ad(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/END_FIND_PICKUP
	static auto nh_0x3c407d53 = rage::scrEngine::GetNativeHandler(0x3c407d53);
	rage::scrEngine::RegisterNativeHandler(0x3c407d53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3c407d53(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/END_FIND_VEHICLE
	static auto nh_0x9227415a = rage::scrEngine::GetNativeHandler(0x9227415a);
	rage::scrEngine::RegisterNativeHandler(0x9227415a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9227415a(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/END_PETROL_TRAIL_DECALS
	static auto nh_0x0A123435A26C36CD = rage::scrEngine::GetNativeHandler(0x0A123435A26C36CD);
	rage::scrEngine::RegisterNativeHandler(0x0A123435A26C36CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A123435A26C36CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/END_REPLAY_STATS
	static auto nh_0xA23E821FBDF8A5F2 = rage::scrEngine::GetNativeHandler(0xA23E821FBDF8A5F2);
	rage::scrEngine::RegisterNativeHandler(0xA23E821FBDF8A5F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA23E821FBDF8A5F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/END_SCALEFORM_MOVIE_METHOD
	static auto nh_0xC6796A8FFA375E53 = rage::scrEngine::GetNativeHandler(0xC6796A8FFA375E53);
	rage::scrEngine::RegisterNativeHandler(0xC6796A8FFA375E53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC6796A8FFA375E53(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE (result cleaner only)
	AddResultCleaner(0xC50AA39A577AF886, ResultCleaner<int>);

	// STREAMING/END_SRL
	static auto nh_0x0A41540E63C9EE17 = rage::scrEngine::GetNativeHandler(0x0A41540E63C9EE17);
	rage::scrEngine::RegisterNativeHandler(0x0A41540E63C9EE17, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A41540E63C9EE17(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_BUSYSPINNER_ON
	static auto nh_0xBD12F8228410D9B4 = rage::scrEngine::GetNativeHandler(0xBD12F8228410D9B4);
	rage::scrEngine::RegisterNativeHandler(0xBD12F8228410D9B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD12F8228410D9B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_CLEAR_PRINT
	static auto nh_0xFCC75460ABA29378 = rage::scrEngine::GetNativeHandler(0xFCC75460ABA29378);
	rage::scrEngine::RegisterNativeHandler(0xFCC75460ABA29378, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFCC75460ABA29378(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_DISPLAY_HELP
	static auto nh_0x238FFE5C7B0498A6 = rage::scrEngine::GetNativeHandler(0x238FFE5C7B0498A6);
	rage::scrEngine::RegisterNativeHandler(0x238FFE5C7B0498A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x238FFE5C7B0498A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_DISPLAY_TEXT
	static auto nh_0xCD015E5BB0D96A57 = rage::scrEngine::GetNativeHandler(0xCD015E5BB0D96A57);
	rage::scrEngine::RegisterNativeHandler(0xCD015E5BB0D96A57, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD015E5BB0D96A57(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED (result cleaner only)
	AddResultCleaner(0x8A9BA1AB3E237613, ResultCleaner<bool>);

	// HUD/END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED (result cleaner only)
	AddResultCleaner(0x10BDDBFC529428DD, ResultCleaner<bool>);

	// HUD/END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
	static auto nh_0xA86911979638106F = rage::scrEngine::GetNativeHandler(0xA86911979638106F);
	rage::scrEngine::RegisterNativeHandler(0xA86911979638106F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA86911979638106F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_PRINT
	static auto nh_0x9D77056A530643F6 = rage::scrEngine::GetNativeHandler(0x9D77056A530643F6);
	rage::scrEngine::RegisterNativeHandler(0x9D77056A530643F6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D77056A530643F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/END_TEXT_COMMAND_SCALEFORM_STRING
	static auto nh_0x362E2D3FE93A9959 = rage::scrEngine::GetNativeHandler(0x362E2D3FE93A9959);
	rage::scrEngine::RegisterNativeHandler(0x362E2D3FE93A9959, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x362E2D3FE93A9959(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_SET_BLIP_NAME
	static auto nh_0xBC38B49BCB83BC9B = rage::scrEngine::GetNativeHandler(0xBC38B49BCB83BC9B);
	rage::scrEngine::RegisterNativeHandler(0xBC38B49BCB83BC9B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC38B49BCB83BC9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/END_TEXT_COMMAND_THEFEED_POST_AWARD
	static auto nh_0xAA295B6F28BD587D = rage::scrEngine::GetNativeHandler(0xAA295B6F28BD587D);
	rage::scrEngine::RegisterNativeHandler(0xAA295B6F28BD587D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xAA295B6F28BD587D(cxt);
	});
	        
	AddResultCleaner(0xAA295B6F28BD587D, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_CREWTAG
	static auto nh_0x97C9E4E7024A8F2C = rage::scrEngine::GetNativeHandler(0x97C9E4E7024A8F2C);
	rage::scrEngine::RegisterNativeHandler(0x97C9E4E7024A8F2C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x97C9E4E7024A8F2C(cxt);
	});
	        
	AddResultCleaner(0x97C9E4E7024A8F2C, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME
	static auto nh_0x137BC35589E34E1E = rage::scrEngine::GetNativeHandler(0x137BC35589E34E1E);
	rage::scrEngine::RegisterNativeHandler(0x137BC35589E34E1E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x137BC35589E34E1E(cxt);
	});
	        
	AddResultCleaner(0x137BC35589E34E1E, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP
	static auto nh_0x8EFCCF6EC66D85E4 = rage::scrEngine::GetNativeHandler(0x8EFCCF6EC66D85E4);
	rage::scrEngine::RegisterNativeHandler(0x8EFCCF6EC66D85E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8EFCCF6EC66D85E4(cxt);
	});
	        
	AddResultCleaner(0x8EFCCF6EC66D85E4, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT
	static auto nh_0x1CCD9A37359072CF = rage::scrEngine::GetNativeHandler(0x1CCD9A37359072CF);
	rage::scrEngine::RegisterNativeHandler(0x1CCD9A37359072CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x1CCD9A37359072CF(cxt);
	});
	        
	AddResultCleaner(0x1CCD9A37359072CF, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU
	static auto nh_0x1E6611149DB3DB6B = rage::scrEngine::GetNativeHandler(0x1E6611149DB3DB6B);
	rage::scrEngine::RegisterNativeHandler(0x1E6611149DB3DB6B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x1E6611149DB3DB6B(cxt);
	});
	        
	AddResultCleaner(0x1E6611149DB3DB6B, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG
	static auto nh_0x5CBF7BADE20DB93E = rage::scrEngine::GetNativeHandler(0x5CBF7BADE20DB93E);
	rage::scrEngine::RegisterNativeHandler(0x5CBF7BADE20DB93E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x5CBF7BADE20DB93E(cxt);
	});
	        
	AddResultCleaner(0x5CBF7BADE20DB93E, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON
	static auto nh_0x531B84E7DA981FB6 = rage::scrEngine::GetNativeHandler(0x531B84E7DA981FB6);
	rage::scrEngine::RegisterNativeHandler(0x531B84E7DA981FB6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x531B84E7DA981FB6(cxt);
	});
	        
	AddResultCleaner(0x531B84E7DA981FB6, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_MPTICKER (result cleaner only)
	AddResultCleaner(0xF020C96915705B3A, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_STATS
	static auto nh_0x2B7E9A4EAAA93C89 = rage::scrEngine::GetNativeHandler(0x2B7E9A4EAAA93C89);
	rage::scrEngine::RegisterNativeHandler(0x2B7E9A4EAAA93C89, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x2B7E9A4EAAA93C89(cxt);
	});
	        
	AddResultCleaner(0x2B7E9A4EAAA93C89, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_TICKER (result cleaner only)
	AddResultCleaner(0x2ED7843F8F801023, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED (result cleaner only)
	AddResultCleaner(0x44FA03975424A0EE, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS (result cleaner only)
	AddResultCleaner(0x378E809BF61EC840, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_UNLOCK
	static auto nh_0x33EE12743CCD6343 = rage::scrEngine::GetNativeHandler(0x33EE12743CCD6343);
	rage::scrEngine::RegisterNativeHandler(0x33EE12743CCD6343, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x33EE12743CCD6343(cxt);
	});
	        
	AddResultCleaner(0x33EE12743CCD6343, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU
	static auto nh_0xC8F3AAF93D0600BF = rage::scrEngine::GetNativeHandler(0xC8F3AAF93D0600BF);
	rage::scrEngine::RegisterNativeHandler(0xC8F3AAF93D0600BF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC8F3AAF93D0600BF(cxt);
	});
	        
	AddResultCleaner(0xC8F3AAF93D0600BF, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR
	static auto nh_0x7AE0589093A2E088 = rage::scrEngine::GetNativeHandler(0x7AE0589093A2E088);
	rage::scrEngine::RegisterNativeHandler(0x7AE0589093A2E088, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7AE0589093A2E088(cxt);
	});
	        
	AddResultCleaner(0x7AE0589093A2E088, ResultCleaner<int>);

	// HUD/END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU
	static auto nh_0xB6871B0555B02996 = rage::scrEngine::GetNativeHandler(0xB6871B0555B02996);
	rage::scrEngine::RegisterNativeHandler(0xB6871B0555B02996, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xB6871B0555B02996(cxt);
	});
	        
	AddResultCleaner(0xB6871B0555B02996, ResultCleaner<int>);

	// CFX/ENSURE_ENTITY_STATE_BAG
	static auto nh_0x3bb78f05 = rage::scrEngine::GetNativeHandler(0x3bb78f05);
	rage::scrEngine::RegisterNativeHandler(0x3bb78f05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3bb78f05(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/ENTER_CURSOR_MODE
	static auto nh_0x780da86 = rage::scrEngine::GetNativeHandler(0x780da86);
	rage::scrEngine::RegisterNativeHandler(0x780da86, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x780da86(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/EXECUTE_COMMAND
	static auto nh_0x561c060b = rage::scrEngine::GetNativeHandler(0x561c060b);
	rage::scrEngine::RegisterNativeHandler(0x561c060b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x561c060b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/EXPERIMENTAL_LOAD_CLONE_CREATE
	static auto nh_0xd2cb95a3 = rage::scrEngine::GetNativeHandler(0xd2cb95a3);
	rage::scrEngine::RegisterNativeHandler(0xd2cb95a3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xd2cb95a3(cxt);
	});
	        
	AddResultCleaner(0xd2cb95a3, ResultCleaner<int>);

	// CFX/EXPERIMENTAL_LOAD_CLONE_SYNC
	static auto nh_0x6bc189ac = rage::scrEngine::GetNativeHandler(0x6bc189ac);
	rage::scrEngine::RegisterNativeHandler(0x6bc189ac, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6bc189ac(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/EXPERIMENTAL_SAVE_CLONE_CREATE (result cleaner only)
	AddResultCleaner(0x9d65cad2, ResultCleaner<char*>);

	// CFX/EXPERIMENTAL_SAVE_CLONE_SYNC (result cleaner only)
	AddResultCleaner(0x38d19210, ResultCleaner<char*>);

	// PED/EXPLODE_PED_HEAD
	static auto nh_0x2D05CED3A38D0F3A = rage::scrEngine::GetNativeHandler(0x2D05CED3A38D0F3A);
	rage::scrEngine::RegisterNativeHandler(0x2D05CED3A38D0F3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D05CED3A38D0F3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/EXPLODE_PROJECTILES
	static auto nh_0xFC4BD125DE7611E4 = rage::scrEngine::GetNativeHandler(0xFC4BD125DE7611E4);
	rage::scrEngine::RegisterNativeHandler(0xFC4BD125DE7611E4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC4BD125DE7611E4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/EXPLODE_VEHICLE
	static auto nh_0xBA71116ADF5B514C = rage::scrEngine::GetNativeHandler(0xBA71116ADF5B514C);
	rage::scrEngine::RegisterNativeHandler(0xBA71116ADF5B514C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA71116ADF5B514C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/EXPLODE_VEHICLE_IN_CUTSCENE
	static auto nh_0x786A4EB67B01BF0B = rage::scrEngine::GetNativeHandler(0x786A4EB67B01BF0B);
	rage::scrEngine::RegisterNativeHandler(0x786A4EB67B01BF0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x786A4EB67B01BF0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/EXTEND_WORLD_BOUNDARY_FOR_PLAYER
	static auto nh_0x5006D96C995A5827 = rage::scrEngine::GetNativeHandler(0x5006D96C995A5827);
	rage::scrEngine::RegisterNativeHandler(0x5006D96C995A5827, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5006D96C995A5827(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FADE_DECALS_IN_RANGE
	static auto nh_0xD77EDADB0420E6E0 = rage::scrEngine::GetNativeHandler(0xD77EDADB0420E6E0);
	rage::scrEngine::RegisterNativeHandler(0xD77EDADB0420E6E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD77EDADB0420E6E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/FADE_OUT_LOCAL_PLAYER
	static auto nh_0x416DBD4CD6ED8DD2 = rage::scrEngine::GetNativeHandler(0x416DBD4CD6ED8DD2);
	rage::scrEngine::RegisterNativeHandler(0x416DBD4CD6ED8DD2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x416DBD4CD6ED8DD2(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FADE_UP_PED_LIGHT
	static auto nh_0xC9B18B4619F48F7B = rage::scrEngine::GetNativeHandler(0xC9B18B4619F48F7B);
	rage::scrEngine::RegisterNativeHandler(0xC9B18B4619F48F7B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9B18B4619F48F7B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/FILLOUT_PM_PLAYER_LIST
	static auto nh_0xCBBD7C4991B64809 = rage::scrEngine::GetNativeHandler(0xCBBD7C4991B64809);
	rage::scrEngine::RegisterNativeHandler(0xCBBD7C4991B64809, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xCBBD7C4991B64809(cxt);
	});
	        
	AddResultCleaner(0xCBBD7C4991B64809, ResultCleaner<bool>);

	// NETWORK/FILLOUT_PM_PLAYER_LIST_WITH_NAMES
	static auto nh_0x716B6DB9D1886106 = rage::scrEngine::GetNativeHandler(0x716B6DB9D1886106);
	rage::scrEngine::RegisterNativeHandler(0x716B6DB9D1886106, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x716B6DB9D1886106(cxt);
	});
	        
	AddResultCleaner(0x716B6DB9D1886106, ResultCleaner<bool>);

	// PED/FINALIZE_HEAD_BLEND
	static auto nh_0x4668D80430D6C299 = rage::scrEngine::GetNativeHandler(0x4668D80430D6C299);
	rage::scrEngine::RegisterNativeHandler(0x4668D80430D6C299, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4668D80430D6C299(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/FIND_ANIM_EVENT_PHASE
	static auto nh_0x07F1BE2BCCAA27A7 = rage::scrEngine::GetNativeHandler(0x07F1BE2BCCAA27A7);
	rage::scrEngine::RegisterNativeHandler(0x07F1BE2BCCAA27A7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x07F1BE2BCCAA27A7(cxt);
	});
	        
	AddResultCleaner(0x07F1BE2BCCAA27A7, ResultCleaner<bool>);

	// CFX/FIND_FIRST_OBJECT
	static auto nh_0xfaa6cb5d = rage::scrEngine::GetNativeHandler(0xfaa6cb5d);
	rage::scrEngine::RegisterNativeHandler(0xfaa6cb5d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xfaa6cb5d(cxt);
	});
	        
	AddResultCleaner(0xfaa6cb5d, ResultCleaner<int>);

	// CFX/FIND_FIRST_PED
	static auto nh_0xfb012961 = rage::scrEngine::GetNativeHandler(0xfb012961);
	rage::scrEngine::RegisterNativeHandler(0xfb012961, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xfb012961(cxt);
	});
	        
	AddResultCleaner(0xfb012961, ResultCleaner<int>);

	// CFX/FIND_FIRST_PICKUP
	static auto nh_0x3ff9d340 = rage::scrEngine::GetNativeHandler(0x3ff9d340);
	rage::scrEngine::RegisterNativeHandler(0x3ff9d340, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3ff9d340(cxt);
	});
	        
	AddResultCleaner(0x3ff9d340, ResultCleaner<int>);

	// CFX/FIND_FIRST_VEHICLE
	static auto nh_0x15e55694 = rage::scrEngine::GetNativeHandler(0x15e55694);
	rage::scrEngine::RegisterNativeHandler(0x15e55694, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x15e55694(cxt);
	});
	        
	AddResultCleaner(0x15e55694, ResultCleaner<int>);

	// CFX/FIND_KVP (result cleaner only)
	AddResultCleaner(0xbd7bebc5, ResultCleaner<char*>);

	// CFX/FIND_NEXT_OBJECT
	static auto nh_0x4e129dbf = rage::scrEngine::GetNativeHandler(0x4e129dbf);
	rage::scrEngine::RegisterNativeHandler(0x4e129dbf, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4e129dbf(cxt);
	});
	        
	AddResultCleaner(0x4e129dbf, ResultCleaner<bool>);

	// CFX/FIND_NEXT_PED
	static auto nh_0xab09b548 = rage::scrEngine::GetNativeHandler(0xab09b548);
	rage::scrEngine::RegisterNativeHandler(0xab09b548, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xab09b548(cxt);
	});
	        
	AddResultCleaner(0xab09b548, ResultCleaner<bool>);

	// CFX/FIND_NEXT_PICKUP
	static auto nh_0x4107ef0f = rage::scrEngine::GetNativeHandler(0x4107ef0f);
	rage::scrEngine::RegisterNativeHandler(0x4107ef0f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4107ef0f(cxt);
	});
	        
	AddResultCleaner(0x4107ef0f, ResultCleaner<bool>);

	// CFX/FIND_NEXT_VEHICLE
	static auto nh_0x8839120d = rage::scrEngine::GetNativeHandler(0x8839120d);
	rage::scrEngine::RegisterNativeHandler(0x8839120d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8839120d(cxt);
	});
	        
	AddResultCleaner(0x8839120d, ResultCleaner<bool>);

	// AUDIO/FIND_RADIO_STATION_INDEX (result cleaner only)
	AddResultCleaner(0x8D67489793FF428B, ResultCleaner<int>);

	// MISC/FIND_SPAWN_POINT_IN_DIRECTION
	static auto nh_0x6874E2190B0C1972 = rage::scrEngine::GetNativeHandler(0x6874E2190B0C1972);
	rage::scrEngine::RegisterNativeHandler(0x6874E2190B0C1972, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x6874E2190B0C1972(cxt);
	});
	        
	AddResultCleaner(0x6874E2190B0C1972, ResultCleaner<bool>);

	// OBJECT/FIX_OBJECT_FRAGMENT
	static auto nh_0xF9C1681347C8BD15 = rage::scrEngine::GetNativeHandler(0xF9C1681347C8BD15);
	rage::scrEngine::RegisterNativeHandler(0xF9C1681347C8BD15, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF9C1681347C8BD15(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/FIX_VEHICLE_WINDOW
	static auto nh_0x772282EBEB95E682 = rage::scrEngine::GetNativeHandler(0x772282EBEB95E682);
	rage::scrEngine::RegisterNativeHandler(0x772282EBEB95E682, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x772282EBEB95E682(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FLAG_PLAYER_CONTEXT_IN_TOURNAMENT
	static auto nh_0xCEF214315D276FD1 = rage::scrEngine::GetNativeHandler(0xCEF214315D276FD1);
	rage::scrEngine::RegisterNativeHandler(0xCEF214315D276FD1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCEF214315D276FD1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FLASH_ABILITY_BAR
	static auto nh_0x02CFBA0C9E9275CE = rage::scrEngine::GetNativeHandler(0x02CFBA0C9E9275CE);
	rage::scrEngine::RegisterNativeHandler(0x02CFBA0C9E9275CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02CFBA0C9E9275CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FLASH_MINIMAP_DISPLAY
	static auto nh_0xF2DD778C22B15BDA = rage::scrEngine::GetNativeHandler(0xF2DD778C22B15BDA);
	rage::scrEngine::RegisterNativeHandler(0xF2DD778C22B15BDA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2DD778C22B15BDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FLASH_MINIMAP_DISPLAY_WITH_COLOR
	static auto nh_0x6B1DE27EE78E6A19 = rage::scrEngine::GetNativeHandler(0x6B1DE27EE78E6A19);
	rage::scrEngine::RegisterNativeHandler(0x6B1DE27EE78E6A19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B1DE27EE78E6A19(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FLASH_WANTED_DISPLAY
	static auto nh_0xA18AFB39081B6A1F = rage::scrEngine::GetNativeHandler(0xA18AFB39081B6A1F);
	rage::scrEngine::RegisterNativeHandler(0xA18AFB39081B6A1F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA18AFB39081B6A1F(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/FLOOR (result cleaner only)
	AddResultCleaner(0xF34EE736CF047844, ResultCleaner<int>);

	// CAM/FORCE_CINEMATIC_RENDERING_THIS_UPDATE
	static auto nh_0xA41BCD7213805AAC = rage::scrEngine::GetNativeHandler(0xA41BCD7213805AAC);
	rage::scrEngine::RegisterNativeHandler(0xA41BCD7213805AAC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA41BCD7213805AAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/FORCE_CLEANUP
	static auto nh_0xBC8983F38F78ED51 = rage::scrEngine::GetNativeHandler(0xBC8983F38F78ED51);
	rage::scrEngine::RegisterNativeHandler(0xBC8983F38F78ED51, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC8983F38F78ED51(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME
	static auto nh_0x4C68DDDDF0097317 = rage::scrEngine::GetNativeHandler(0x4C68DDDDF0097317);
	rage::scrEngine::RegisterNativeHandler(0x4C68DDDDF0097317, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4C68DDDDF0097317(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID
	static auto nh_0xF745B37630DF176B = rage::scrEngine::GetNativeHandler(0xF745B37630DF176B);
	rage::scrEngine::RegisterNativeHandler(0xF745B37630DF176B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF745B37630DF176B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FORCE_CLOSE_REPORTUGC_MENU
	static auto nh_0xEE4C0E6DBC6F2C6F = rage::scrEngine::GetNativeHandler(0xEE4C0E6DBC6F2C6F);
	rage::scrEngine::RegisterNativeHandler(0xEE4C0E6DBC6F2C6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE4C0E6DBC6F2C6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/FORCE_ENTITY_AI_AND_ANIMATION_UPDATE
	static auto nh_0x40FDEDB72F8293B2 = rage::scrEngine::GetNativeHandler(0x40FDEDB72F8293B2);
	rage::scrEngine::RegisterNativeHandler(0x40FDEDB72F8293B2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x40FDEDB72F8293B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/FORCE_GAME_STATE_PLAYING
	static auto nh_0xC0AA53F866B3134D = rage::scrEngine::GetNativeHandler(0xC0AA53F866B3134D);
	rage::scrEngine::RegisterNativeHandler(0xC0AA53F866B3134D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC0AA53F866B3134D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/FORCE_LIGHTNING_FLASH
	static auto nh_0xF6062E089251C898 = rage::scrEngine::GetNativeHandler(0xF6062E089251C898);
	rage::scrEngine::RegisterNativeHandler(0xF6062E089251C898, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF6062E089251C898(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/FORCE_MUSIC_TRACK_LIST
	static auto nh_0x4E0AF9114608257C = rage::scrEngine::GetNativeHandler(0x4E0AF9114608257C);
	rage::scrEngine::RegisterNativeHandler(0x4E0AF9114608257C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4E0AF9114608257C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/FORCE_PED_AI_AND_ANIMATION_UPDATE
	static auto nh_0x2208438012482A1A = rage::scrEngine::GetNativeHandler(0x2208438012482A1A);
	rage::scrEngine::RegisterNativeHandler(0x2208438012482A1A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2208438012482A1A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/FORCE_PED_MOTION_STATE (result cleaner only)
	AddResultCleaner(0xF28965D04F570DCA, ResultCleaner<bool>);

	// AUDIO/FORCE_PED_PANIC_WALLA
	static auto nh_0x062D5EAD4DA2FA6A = rage::scrEngine::GetNativeHandler(0x062D5EAD4DA2FA6A);
	rage::scrEngine::RegisterNativeHandler(0x062D5EAD4DA2FA6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x062D5EAD4DA2FA6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/FORCE_PED_TO_OPEN_PARACHUTE
	static auto nh_0x16E42E800B472221 = rage::scrEngine::GetNativeHandler(0x16E42E800B472221);
	rage::scrEngine::RegisterNativeHandler(0x16E42E800B472221, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x16E42E800B472221(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE
	static auto nh_0x1F2E4E06DEA8992B = rage::scrEngine::GetNativeHandler(0x1F2E4E06DEA8992B);
	rage::scrEngine::RegisterNativeHandler(0x1F2E4E06DEA8992B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F2E4E06DEA8992B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FORCE_RENDER_IN_GAME_UI
	static auto nh_0xDC459CFA0CCE245B = rage::scrEngine::GetNativeHandler(0xDC459CFA0CCE245B);
	rage::scrEngine::RegisterNativeHandler(0xDC459CFA0CCE245B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC459CFA0CCE245B(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/FORCE_ROOM_FOR_ENTITY
	static auto nh_0x52923C4710DD9907 = rage::scrEngine::GetNativeHandler(0x52923C4710DD9907);
	rage::scrEngine::RegisterNativeHandler(0x52923C4710DD9907, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x52923C4710DD9907(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/FORCE_ROOM_FOR_GAME_VIEWPORT
	static auto nh_0x920D853F3E17F1DA = rage::scrEngine::GetNativeHandler(0x920D853F3E17F1DA);
	rage::scrEngine::RegisterNativeHandler(0x920D853F3E17F1DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x920D853F3E17F1DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/FORCE_SNOW_PASS
	static auto nh_0xe6e16170 = rage::scrEngine::GetNativeHandler(0xe6e16170);
	rage::scrEngine::RegisterNativeHandler(0xe6e16170, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xe6e16170(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/FORCE_SONAR_BLIPS_THIS_FRAME (result cleaner only)
	AddResultCleaner(0x1121BFA1A1A522A8, ResultCleaner<int>);

	// VEHICLE/FORCE_SUBMARINE_NEURTAL_BUOYANCY
	static auto nh_0xC67DB108A9ADE3BE = rage::scrEngine::GetNativeHandler(0xC67DB108A9ADE3BE);
	rage::scrEngine::RegisterNativeHandler(0xC67DB108A9ADE3BE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC67DB108A9ADE3BE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/FORCE_SUBMARINE_SURFACE_MODE
	static auto nh_0x33506883545AC0DF = rage::scrEngine::GetNativeHandler(0x33506883545AC0DF);
	rage::scrEngine::RegisterNativeHandler(0x33506883545AC0DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33506883545AC0DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/FORCE_USE_AUDIO_GAME_OBJECT
	static auto nh_0x4F0C413926060B38 = rage::scrEngine::GetNativeHandler(0x4F0C413926060B38);
	rage::scrEngine::RegisterNativeHandler(0x4F0C413926060B38, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4F0C413926060B38(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/FREEZE_ENTITY_POSITION
	static auto nh_0x428CA6DBD1094446 = rage::scrEngine::GetNativeHandler(0x428CA6DBD1094446);
	rage::scrEngine::RegisterNativeHandler(0x428CA6DBD1094446, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x428CA6DBD1094446(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/FREEZE_MICROPHONE
	static auto nh_0xD57AAAE0E2214D11 = rage::scrEngine::GetNativeHandler(0xD57AAAE0E2214D11);
	rage::scrEngine::RegisterNativeHandler(0xD57AAAE0E2214D11, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD57AAAE0E2214D11(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/FREEZE_RADIO_STATION
	static auto nh_0x344F393B027E38C3 = rage::scrEngine::GetNativeHandler(0x344F393B027E38C3);
	rage::scrEngine::RegisterNativeHandler(0x344F393B027E38C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x344F393B027E38C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO
	static auto nh_0xD801CC02177FA3F1 = rage::scrEngine::GetNativeHandler(0xD801CC02177FA3F1);
	rage::scrEngine::RegisterNativeHandler(0xD801CC02177FA3F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD801CC02177FA3F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
	static auto nh_0x6A12D88881435DCA = rage::scrEngine::GetNativeHandler(0x6A12D88881435DCA);
	rage::scrEngine::RegisterNativeHandler(0x6A12D88881435DCA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A12D88881435DCA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO
	static auto nh_0x0A46AF8A78DC5E0A = rage::scrEngine::GetNativeHandler(0x0A46AF8A78DC5E0A);
	rage::scrEngine::RegisterNativeHandler(0x0A46AF8A78DC5E0A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A46AF8A78DC5E0A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/GENERATE_DIRECTIONS_TO_COORD
	static auto nh_0xF90125F1F79ECDF8 = rage::scrEngine::GetNativeHandler(0xF90125F1F79ECDF8);
	rage::scrEngine::RegisterNativeHandler(0xF90125F1F79ECDF8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xF90125F1F79ECDF8(cxt);
	});
	        
	AddResultCleaner(0xF90125F1F79ECDF8, ResultCleaner<int>);

	// TASK/GET_ACTIVE_VEHICLE_MISSION_TYPE (result cleaner only)
	AddResultCleaner(0x534AEBA6E5ED4CAB, ResultCleaner<int>);

	// MISC/GET_ALLOCATED_STACK_SIZE (result cleaner only)
	AddResultCleaner(0x8B3CA62B1EF19B62, ResultCleaner<int>);

	// PAD/GET_ALLOW_MOVEMENT_WHILE_ZOOMED (result cleaner only)
	AddResultCleaner(0xFC859E2374407556, ResultCleaner<bool>);

	// CFX/GET_AMBIENT_PED_RANGE_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xb550232d, ResultCleaner<float>);

	// CFX/GET_AMBIENT_VEHICLE_RANGE_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x667ec929, ResultCleaner<float>);

	// AUDIO/GET_AMBIENT_VOICE_NAME_HASH (result cleaner only)
	AddResultCleaner(0x5E203DA2BA15D436, ResultCleaner<int>);

	// WEAPON/GET_AMMO_IN_CLIP
	static auto nh_0x2E1202248937775C = rage::scrEngine::GetNativeHandler(0x2E1202248937775C);
	rage::scrEngine::RegisterNativeHandler(0x2E1202248937775C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2E1202248937775C(cxt);
	});
	        
	AddResultCleaner(0x2E1202248937775C, ResultCleaner<bool>);

	// WEAPON/GET_AMMO_IN_PED_WEAPON (result cleaner only)
	AddResultCleaner(0x015A522136D7F951, ResultCleaner<int>);

	// MISC/GET_ANGLE_BETWEEN_2D_VECTORS (result cleaner only)
	AddResultCleaner(0x186FC4BE848E1C92, ResultCleaner<float>);

	// ENTITY/GET_ANIM_DURATION
	static auto nh_0xFEDDF04D62B8D790 = rage::scrEngine::GetNativeHandler(0xFEDDF04D62B8D790);
	rage::scrEngine::RegisterNativeHandler(0xFEDDF04D62B8D790, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFEDDF04D62B8D790(cxt);
	});
	        
	AddResultCleaner(0xFEDDF04D62B8D790, ResultCleaner<float>);

	// PED/GET_ANIM_INITIAL_OFFSET_POSITION
	static auto nh_0xBE22B26DD764C040 = rage::scrEngine::GetNativeHandler(0xBE22B26DD764C040);
	rage::scrEngine::RegisterNativeHandler(0xBE22B26DD764C040, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBE22B26DD764C040(cxt);
	});
	        
	// PED/GET_ANIM_INITIAL_OFFSET_ROTATION
	static auto nh_0x4B805E6046EE9E47 = rage::scrEngine::GetNativeHandler(0x4B805E6046EE9E47);
	rage::scrEngine::RegisterNativeHandler(0x4B805E6046EE9E47, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4B805E6046EE9E47(cxt);
	});
	        
	// AUDIO/GET_AUDIBLE_MUSIC_TRACK_TEXT_ID (result cleaner only)
	AddResultCleaner(0x50B196FC9ED6545B, ResultCleaner<int>);

	// WEAPON/GET_BEST_PED_WEAPON (result cleaner only)
	AddResultCleaner(0x8483E98E8B888AE2, ResultCleaner<int>);

	// MISC/GET_BITS_IN_RANGE (result cleaner only)
	AddResultCleaner(0x53158863FCC0893A, ResultCleaner<int>);

	// HUD/GET_BLIP_ALPHA (result cleaner only)
	AddResultCleaner(0x970F608F0EE6C885, ResultCleaner<int>);

	// HUD/GET_BLIP_COLOUR (result cleaner only)
	AddResultCleaner(0xDF729E8D20CF7327, ResultCleaner<int>);

	// HUD/GET_BLIP_FROM_ENTITY (result cleaner only)
	AddResultCleaner(0xBC8DBDCA2436F7E8, ResultCleaner<int>);

	// HUD/GET_BLIP_HUD_COLOUR (result cleaner only)
	AddResultCleaner(0x729B5F1EFBC0AAEE, ResultCleaner<int>);

	// HUD/GET_BLIP_INFO_ID_DISPLAY (result cleaner only)
	AddResultCleaner(0x1E314167F701DC3B, ResultCleaner<int>);

	// HUD/GET_BLIP_INFO_ID_ENTITY_INDEX (result cleaner only)
	AddResultCleaner(0x4BA4E2553AFEDC2C, ResultCleaner<int>);

	// HUD/GET_BLIP_INFO_ID_PICKUP_INDEX (result cleaner only)
	AddResultCleaner(0x9B6786E4C03DD382, ResultCleaner<int>);

	// HUD/GET_BLIP_INFO_ID_TYPE (result cleaner only)
	AddResultCleaner(0xBE9B0959FFD0779B, ResultCleaner<int>);

	// HUD/GET_BLIP_SPRITE (result cleaner only)
	AddResultCleaner(0x1FC877464A04FC4F, ResultCleaner<int>);

	// VEHICLE/GET_BOAT_BOOM_POSITION_RATIO (result cleaner only)
	AddResultCleaner(0x6636C535F6CC2725, ResultCleaner<float>);

	// VEHICLE/GET_BOAT_VEHICLE_MODEL_AGILITY (result cleaner only)
	AddResultCleaner(0x5AA3F878A178C4FC, ResultCleaner<float>);

	// CFX/GET_CALMING_QUAD_AT_COORDS (result cleaner only)
	AddResultCleaner(0x870e8b40, ResultCleaner<int>);

	// CFX/GET_CALMING_QUAD_BOUNDS
	static auto nh_0xff60e63 = rage::scrEngine::GetNativeHandler(0xff60e63);
	rage::scrEngine::RegisterNativeHandler(0xff60e63, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xff60e63(cxt);
	});
	        
	AddResultCleaner(0xff60e63, ResultCleaner<bool>);

	// CFX/GET_CALMING_QUAD_COUNT (result cleaner only)
	AddResultCleaner(0xcebfc42, ResultCleaner<int>);

	// CFX/GET_CALMING_QUAD_DAMPENING
	static auto nh_0xb0e3a058 = rage::scrEngine::GetNativeHandler(0xb0e3a058);
	rage::scrEngine::RegisterNativeHandler(0xb0e3a058, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xb0e3a058(cxt);
	});
	        
	AddResultCleaner(0xb0e3a058, ResultCleaner<bool>);

	// CAM/GET_CAM_ANIM_CURRENT_PHASE (result cleaner only)
	AddResultCleaner(0xA10B2DB49E92A6B0, ResultCleaner<float>);

	// CAM/GET_CAM_FAR_CLIP (result cleaner only)
	AddResultCleaner(0xB60A9CFEB21CA6AA, ResultCleaner<float>);

	// CAM/GET_CAM_FAR_DOF (result cleaner only)
	AddResultCleaner(0x255F8DAFD540D397, ResultCleaner<float>);

	// CAM/GET_CAM_FOV (result cleaner only)
	AddResultCleaner(0xC3330A45CCCDB26A, ResultCleaner<float>);

	// CFX/GET_CAM_MATRIX
	static auto nh_0x8f57a89d = rage::scrEngine::GetNativeHandler(0x8f57a89d);
	rage::scrEngine::RegisterNativeHandler(0x8f57a89d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x8f57a89d(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/GET_CAM_NEAR_CLIP (result cleaner only)
	AddResultCleaner(0xC520A34DAFBF24B1, ResultCleaner<float>);

	// CAM/GET_CAM_SPLINE_NODE_INDEX (result cleaner only)
	AddResultCleaner(0xB22B17DF858716A6, ResultCleaner<int>);

	// CAM/GET_CAM_SPLINE_NODE_PHASE (result cleaner only)
	AddResultCleaner(0xD9D0E694C8282C96, ResultCleaner<float>);

	// CAM/GET_CAM_SPLINE_PHASE (result cleaner only)
	AddResultCleaner(0xB5349E36C546509A, ResultCleaner<float>);

	// CAM/GET_CAM_VIEW_MODE_FOR_CONTEXT (result cleaner only)
	AddResultCleaner(0xEE778F8C7E1142E2, ResultCleaner<int>);

	// PLAYER/GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP (result cleaner only)
	AddResultCleaner(0x9A41CF4674A12272, ResultCleaner<int>);

	// TASK/GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK (result cleaner only)
	AddResultCleaner(0x3A8CADC7D37AACC5, ResultCleaner<char*>);

	// CLOCK/GET_CLOCK_DAY_OF_MONTH (result cleaner only)
	AddResultCleaner(0x3D10BC92A4DB1D35, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_DAY_OF_WEEK (result cleaner only)
	AddResultCleaner(0xD972E4BD7AEB235F, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_HOURS (result cleaner only)
	AddResultCleaner(0x25223CA6B4D20B7F, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_MINUTES (result cleaner only)
	AddResultCleaner(0x13D2B8ADD79640F2, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_MONTH (result cleaner only)
	AddResultCleaner(0xBBC72712E80257A1, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_SECONDS (result cleaner only)
	AddResultCleaner(0x494E97C2EF27C470, ResultCleaner<int>);

	// CLOCK/GET_CLOCK_YEAR (result cleaner only)
	AddResultCleaner(0x961777E64BDAF717, ResultCleaner<int>);

	// FIRE/GET_CLOSEST_FIRE_POS
	static auto nh_0x352A9F6BCF90081F = rage::scrEngine::GetNativeHandler(0x352A9F6BCF90081F);
	rage::scrEngine::RegisterNativeHandler(0x352A9F6BCF90081F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x352A9F6BCF90081F(cxt);
	});
	        
	AddResultCleaner(0x352A9F6BCF90081F, ResultCleaner<bool>);

	// PATHFIND/GET_CLOSEST_MAJOR_VEHICLE_NODE
	static auto nh_0x2EABE3B06F58C1BE = rage::scrEngine::GetNativeHandler(0x2EABE3B06F58C1BE);
	rage::scrEngine::RegisterNativeHandler(0x2EABE3B06F58C1BE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2EABE3B06F58C1BE(cxt);
	});
	        
	AddResultCleaner(0x2EABE3B06F58C1BE, ResultCleaner<bool>);

	// OBJECT/GET_CLOSEST_OBJECT_OF_TYPE (result cleaner only)
	AddResultCleaner(0xE143FA2249364369, ResultCleaner<int>);

	// PED/GET_CLOSEST_PED
	static auto nh_0xC33AB876A77F8164 = rage::scrEngine::GetNativeHandler(0xC33AB876A77F8164);
	rage::scrEngine::RegisterNativeHandler(0xC33AB876A77F8164, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC33AB876A77F8164(cxt);
	});
	        
	AddResultCleaner(0xC33AB876A77F8164, ResultCleaner<bool>);

	// PATHFIND/GET_CLOSEST_ROAD
	static auto nh_0x132F52BBA570FE92 = rage::scrEngine::GetNativeHandler(0x132F52BBA570FE92);
	rage::scrEngine::RegisterNativeHandler(0x132F52BBA570FE92, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x132F52BBA570FE92(cxt);
	});
	        
	AddResultCleaner(0x132F52BBA570FE92, ResultCleaner<int>);

	// VEHICLE/GET_CLOSEST_VEHICLE (result cleaner only)
	AddResultCleaner(0xF73EB622C4F1689B, ResultCleaner<int>);

	// PATHFIND/GET_CLOSEST_VEHICLE_NODE
	static auto nh_0x240A18690AE96513 = rage::scrEngine::GetNativeHandler(0x240A18690AE96513);
	rage::scrEngine::RegisterNativeHandler(0x240A18690AE96513, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x240A18690AE96513(cxt);
	});
	        
	AddResultCleaner(0x240A18690AE96513, ResultCleaner<bool>);

	// PATHFIND/GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
	static auto nh_0xFF071FB798B803B0 = rage::scrEngine::GetNativeHandler(0xFF071FB798B803B0);
	rage::scrEngine::RegisterNativeHandler(0xFF071FB798B803B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xFF071FB798B803B0(cxt);
	});
	        
	AddResultCleaner(0xFF071FB798B803B0, ResultCleaner<bool>);

	// NETWORK/GET_CLOUD_TIME_AS_INT (result cleaner only)
	AddResultCleaner(0x9A73240B49945C76, ResultCleaner<int>);

	// PED/GET_COMBAT_FLOAT (result cleaner only)
	AddResultCleaner(0x52DFF8A10508090A, ResultCleaner<float>);

	// NETWORK/GET_COMMERCE_ITEM_CAT (result cleaner only)
	AddResultCleaner(0x6F44CBF56D79FAC0, ResultCleaner<char*>);

	// NETWORK/GET_COMMERCE_ITEM_ID (result cleaner only)
	AddResultCleaner(0x662635855957C411, ResultCleaner<char*>);

	// NETWORK/GET_COMMERCE_ITEM_NAME (result cleaner only)
	AddResultCleaner(0xB4271092CA7EDF48, ResultCleaner<char*>);

	// NETWORK/GET_COMMERCE_ITEM_NUM_CATS (result cleaner only)
	AddResultCleaner(0x2A7776C709904AB0, ResultCleaner<int>);

	// NETWORK/GET_COMMERCE_ITEM_TEXTURENAME (result cleaner only)
	AddResultCleaner(0x722F5D28B61C5EA8, ResultCleaner<char*>);

	// NETWORK/GET_COMMERCE_PRODUCT_PRICE (result cleaner only)
	AddResultCleaner(0xCA94551B50B4932C, ResultCleaner<char*>);

	// PAD/GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON (result cleaner only)
	AddResultCleaner(0x80C2FD58D720C801, ResultCleaner<char*>);

	// PAD/GET_CONTROL_INSTRUCTIONAL_BUTTON (result cleaner only)
	AddResultCleaner(0x0499D7B09FC9B407, ResultCleaner<char*>);

	// PAD/GET_CONTROL_NORMAL (result cleaner only)
	AddResultCleaner(0xEC3C9B8D5327B563, ResultCleaner<float>);

	// PAD/GET_CONTROL_UNBOUND_NORMAL (result cleaner only)
	AddResultCleaner(0x5B84D09CEC5209C5, ResultCleaner<float>);

	// PAD/GET_CONTROL_VALUE (result cleaner only)
	AddResultCleaner(0xD95E79E8686D2C27, ResultCleaner<int>);

	// CFX/GET_CONVAR
	static auto nh_0x6ccd2564 = rage::scrEngine::GetNativeHandler(0x6ccd2564);
	rage::scrEngine::RegisterNativeHandler(0x6ccd2564, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6ccd2564(cxt);
	});
	        
	AddResultCleaner(0x6ccd2564, ResultCleaner<char*>);

	// CFX/GET_CONVAR_INT
	static auto nh_0x935c0ab2 = rage::scrEngine::GetNativeHandler(0x935c0ab2);
	rage::scrEngine::RegisterNativeHandler(0x935c0ab2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x935c0ab2(cxt);
	});
	        
	AddResultCleaner(0x935c0ab2, ResultCleaner<int>);

	// VEHICLE/GET_CONVERTIBLE_ROOF_STATE (result cleaner only)
	AddResultCleaner(0xF8C397922FC03F41, ResultCleaner<int>);

	// OBJECT/GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE
	static auto nh_0x163F8B586BC95F2A = rage::scrEngine::GetNativeHandler(0x163F8B586BC95F2A);
	rage::scrEngine::RegisterNativeHandler(0x163F8B586BC95F2A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x163F8B586BC95F2A(cxt);
	});
	        
	AddResultCleaner(0x163F8B586BC95F2A, ResultCleaner<int>);

	// MISC/GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA
	static auto nh_0x8D7A43EC6A5FEA45 = rage::scrEngine::GetNativeHandler(0x8D7A43EC6A5FEA45);
	rage::scrEngine::RegisterNativeHandler(0x8D7A43EC6A5FEA45, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x8D7A43EC6A5FEA45(cxt);
	});
	        
	AddResultCleaner(0x8D7A43EC6A5FEA45, ResultCleaner<bool>);

	// MISC/GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
	static auto nh_0xDFB4138EEFED7B81 = rage::scrEngine::GetNativeHandler(0xDFB4138EEFED7B81);
	rage::scrEngine::RegisterNativeHandler(0xDFB4138EEFED7B81, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xDFB4138EEFED7B81(cxt);
	});
	        
	AddResultCleaner(0xDFB4138EEFED7B81, ResultCleaner<bool>);

	// HUD/GET_CURRENT_FRONTEND_MENU_VERSION (result cleaner only)
	AddResultCleaner(0x2309595AD6145265, ResultCleaner<int>);

	// CFX/GET_CURRENT_GAME_NAME (result cleaner only)
	AddResultCleaner(0xaca18ecd, ResultCleaner<char*>);

	// LOCALIZATION/GET_CURRENT_LANGUAGE (result cleaner only)
	AddResultCleaner(0x2BDD44CC428A7EAE, ResultCleaner<int>);

	// GRAPHICS/GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS (result cleaner only)
	AddResultCleaner(0x473151EBC762C6DA, ResultCleaner<int>);

	// WEAPON/GET_CURRENT_PED_VEHICLE_WEAPON
	static auto nh_0x1017582BCD3832DC = rage::scrEngine::GetNativeHandler(0x1017582BCD3832DC);
	rage::scrEngine::RegisterNativeHandler(0x1017582BCD3832DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1017582BCD3832DC(cxt);
	});
	        
	AddResultCleaner(0x1017582BCD3832DC, ResultCleaner<bool>);

	// WEAPON/GET_CURRENT_PED_WEAPON
	static auto nh_0x3A87E44BB9A01D54 = rage::scrEngine::GetNativeHandler(0x3A87E44BB9A01D54);
	rage::scrEngine::RegisterNativeHandler(0x3A87E44BB9A01D54, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3A87E44BB9A01D54(cxt);
	});
	        
	AddResultCleaner(0x3A87E44BB9A01D54, ResultCleaner<bool>);

	// WEAPON/GET_CURRENT_PED_WEAPON_ENTITY_INDEX (result cleaner only)
	AddResultCleaner(0x3B390A939AF0B5FC, ResultCleaner<int>);

	// VEHICLE/GET_CURRENT_PLAYBACK_FOR_VEHICLE (result cleaner only)
	AddResultCleaner(0x42BC05C27A946054, ResultCleaner<int>);

	// CFX/GET_CURRENT_RESOURCE_NAME (result cleaner only)
	AddResultCleaner(0xe5e9ebbb, ResultCleaner<char*>);

	// AUDIO/GET_CURRENT_SCRIPTED_CONVERSATION_LINE (result cleaner only)
	AddResultCleaner(0x480357EE890C295A, ResultCleaner<int>);

	// CFX/GET_CURRENT_SERVER_ENDPOINT (result cleaner only)
	AddResultCleaner(0xea11bfba, ResultCleaner<char*>);

	// AUDIO/GET_CURRENT_TRACK_SOUND_NAME
	static auto nh_0x34D66BC058019CE0 = rage::scrEngine::GetNativeHandler(0x34D66BC058019CE0);
	rage::scrEngine::RegisterNativeHandler(0x34D66BC058019CE0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x34D66BC058019CE0(cxt);
	});
	        
	AddResultCleaner(0x34D66BC058019CE0, ResultCleaner<int>);

	// HUD/GET_CURRENT_WEBPAGE_ID (result cleaner only)
	AddResultCleaner(0x01A358D9128B7A86, ResultCleaner<int>);

	// HUD/GET_CURRENT_WEBSITE_ID (result cleaner only)
	AddResultCleaner(0x97D47996FC48CBAD, ResultCleaner<int>);

	// CUTSCENE/GET_CUTSCENE_SECTION_PLAYING (result cleaner only)
	AddResultCleaner(0x49010A6A396553D8, ResultCleaner<int>);

	// CUTSCENE/GET_CUTSCENE_TIME (result cleaner only)
	AddResultCleaner(0xE625BEABBAFFDAB9, ResultCleaner<int>);

	// CUTSCENE/GET_CUTSCENE_TOTAL_DURATION (result cleaner only)
	AddResultCleaner(0xEE53B14A19E480D4, ResultCleaner<int>);

	// GRAPHICS/GET_DECAL_WASH_LEVEL (result cleaner only)
	AddResultCleaner(0x323F647679A09103, ResultCleaner<float>);

	// WATER/GET_DEEP_OCEAN_SCALER (result cleaner only)
	AddResultCleaner(0x2B2A2CC86778B619, ResultCleaner<float>);

	// HUD/GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID (result cleaner only)
	AddResultCleaner(0x52F0982D7FD156B6, ResultCleaner<int>);

	// PAD/GET_DISABLED_CONTROL_NORMAL (result cleaner only)
	AddResultCleaner(0x11E65974A982637C, ResultCleaner<float>);

	// PAD/GET_DISABLED_CONTROL_UNBOUND_NORMAL (result cleaner only)
	AddResultCleaner(0x4F8A26A890FD62FB, ResultCleaner<float>);

	// VEHICLE/GET_DISPLAY_NAME_FROM_VEHICLE_MODEL (result cleaner only)
	AddResultCleaner(0xB215AAC32D25D019, ResultCleaner<char*>);

	// MISC/GET_DISTANCE_BETWEEN_COORDS (result cleaner only)
	AddResultCleaner(0xF1B760881820C952, ResultCleaner<float>);

	// FILES/GET_DLC_VEHICLE_DATA
	static auto nh_0x33468EDC08E371F6 = rage::scrEngine::GetNativeHandler(0x33468EDC08E371F6);
	rage::scrEngine::RegisterNativeHandler(0x33468EDC08E371F6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x33468EDC08E371F6(cxt);
	});
	        
	AddResultCleaner(0x33468EDC08E371F6, ResultCleaner<bool>);

	// FILES/GET_DLC_VEHICLE_FLAGS (result cleaner only)
	AddResultCleaner(0x5549EE11FA22FCF2, ResultCleaner<int>);

	// FILES/GET_DLC_VEHICLE_MODEL (result cleaner only)
	AddResultCleaner(0xECC01B7C5763333C, ResultCleaner<int>);

	// FILES/GET_DLC_VEHICLE_MOD_LOCK_HASH (result cleaner only)
	AddResultCleaner(0xC098810437312FFF, ResultCleaner<int>);

	// FILES/GET_DLC_WEAPON_COMPONENT_DATA
	static auto nh_0x6CF598A2957C2BF8 = rage::scrEngine::GetNativeHandler(0x6CF598A2957C2BF8);
	rage::scrEngine::RegisterNativeHandler(0x6CF598A2957C2BF8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6CF598A2957C2BF8(cxt);
	});
	        
	AddResultCleaner(0x6CF598A2957C2BF8, ResultCleaner<bool>);

	// FILES/GET_DLC_WEAPON_DATA
	static auto nh_0x79923CD21BECE14E = rage::scrEngine::GetNativeHandler(0x79923CD21BECE14E);
	rage::scrEngine::RegisterNativeHandler(0x79923CD21BECE14E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x79923CD21BECE14E(cxt);
	});
	        
	AddResultCleaner(0x79923CD21BECE14E, ResultCleaner<bool>);

	// CFX/GET_DUI_HANDLE (result cleaner only)
	AddResultCleaner(0x1655d41d, ResultCleaner<char*>);

	// ENTITY/GET_ENTITY_ALPHA (result cleaner only)
	AddResultCleaner(0x5A47B3B5E63E94C6, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_ANIM_CURRENT_TIME
	static auto nh_0x346D81500D088F42 = rage::scrEngine::GetNativeHandler(0x346D81500D088F42);
	rage::scrEngine::RegisterNativeHandler(0x346D81500D088F42, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x346D81500D088F42(cxt);
	});
	        
	AddResultCleaner(0x346D81500D088F42, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_ANIM_TOTAL_TIME
	static auto nh_0x50BD2730B191E360 = rage::scrEngine::GetNativeHandler(0x50BD2730B191E360);
	rage::scrEngine::RegisterNativeHandler(0x50BD2730B191E360, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x50BD2730B191E360(cxt);
	});
	        
	AddResultCleaner(0x50BD2730B191E360, ResultCleaner<float>);

	// CFX/GET_ENTITY_ARCHETYPE_NAME (result cleaner only)
	AddResultCleaner(0x47b870f5, ResultCleaner<char*>);

	// ENTITY/GET_ENTITY_ATTACHED_TO (result cleaner only)
	AddResultCleaner(0x48C2BED9180FE123, ResultCleaner<int>);

	// VEHICLE/GET_ENTITY_ATTACHED_TO_TOW_TRUCK (result cleaner only)
	AddResultCleaner(0xEFEA18DCF10F8F75, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_BONE_INDEX_BY_NAME
	static auto nh_0xFB71170B7E76ACBA = rage::scrEngine::GetNativeHandler(0xFB71170B7E76ACBA);
	rage::scrEngine::RegisterNativeHandler(0xFB71170B7E76ACBA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFB71170B7E76ACBA(cxt);
	});
	        
	AddResultCleaner(0xFB71170B7E76ACBA, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_CAN_BE_DAMAGED (result cleaner only)
	AddResultCleaner(0xD95CC5D2AB15A09F, ResultCleaner<bool>);

	// ENTITY/GET_ENTITY_COLLISION_DISABLED (result cleaner only)
	AddResultCleaner(0xCCF1E97BEFDAE480, ResultCleaner<bool>);

	// ENTITY/GET_ENTITY_FORWARD_X (result cleaner only)
	AddResultCleaner(0x8BB4EF4214E0E6D5, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_FORWARD_Y (result cleaner only)
	AddResultCleaner(0x866A4A5FAE349510, ResultCleaner<float>);

	// CFX/GET_ENTITY_FROM_STATE_BAG_NAME
	static auto nh_0x4bdf1867 = rage::scrEngine::GetNativeHandler(0x4bdf1867);
	rage::scrEngine::RegisterNativeHandler(0x4bdf1867, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4bdf1867(cxt);
	});
	        
	AddResultCleaner(0x4bdf1867, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_HEADING (result cleaner only)
	AddResultCleaner(0xE83D4F9BA2A38914, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_HEALTH (result cleaner only)
	AddResultCleaner(0xEEF059FAD016D209, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_HEIGHT (result cleaner only)
	AddResultCleaner(0x5A504562485944DD, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_HEIGHT_ABOVE_GROUND (result cleaner only)
	AddResultCleaner(0x1DD55701034110E5, ResultCleaner<float>);

	// CFX/GET_ENTITY_INDEX_FROM_MAPDATA (result cleaner only)
	AddResultCleaner(0xee43540d, ResultCleaner<int>);

	// CUTSCENE/GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY
	static auto nh_0x0A2E9FDB9A8C62F6 = rage::scrEngine::GetNativeHandler(0x0A2E9FDB9A8C62F6);
	rage::scrEngine::RegisterNativeHandler(0x0A2E9FDB9A8C62F6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0A2E9FDB9A8C62F6(cxt);
	});
	        
	AddResultCleaner(0x0A2E9FDB9A8C62F6, ResultCleaner<int>);

	// CUTSCENE/GET_ENTITY_INDEX_OF_REGISTERED_ENTITY
	static auto nh_0xC0741A26499654CD = rage::scrEngine::GetNativeHandler(0xC0741A26499654CD);
	rage::scrEngine::RegisterNativeHandler(0xC0741A26499654CD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC0741A26499654CD(cxt);
	});
	        
	AddResultCleaner(0xC0741A26499654CD, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_LOD_DIST (result cleaner only)
	AddResultCleaner(0x4159C2762B5791D6, ResultCleaner<int>);

	// CFX/GET_ENTITY_MAPDATA_OWNER
	static auto nh_0xf6b815c5 = rage::scrEngine::GetNativeHandler(0xf6b815c5);
	rage::scrEngine::RegisterNativeHandler(0xf6b815c5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xf6b815c5(cxt);
	});
	        
	AddResultCleaner(0xf6b815c5, ResultCleaner<bool>);

	// ENTITY/GET_ENTITY_MATRIX
	static auto nh_0xECB2FC7235A7D137 = rage::scrEngine::GetNativeHandler(0xECB2FC7235A7D137);
	rage::scrEngine::RegisterNativeHandler(0xECB2FC7235A7D137, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xECB2FC7235A7D137(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/GET_ENTITY_MAX_HEALTH (result cleaner only)
	AddResultCleaner(0x15D757606D170C3C, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_MODEL (result cleaner only)
	AddResultCleaner(0x9F47B058362C84B5, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_PITCH (result cleaner only)
	AddResultCleaner(0xD45DC2893621E1FE, ResultCleaner<float>);

	// PLAYER/GET_ENTITY_PLAYER_IS_FREE_AIMING_AT
	static auto nh_0x2975C866E6713290 = rage::scrEngine::GetNativeHandler(0x2975C866E6713290);
	rage::scrEngine::RegisterNativeHandler(0x2975C866E6713290, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2975C866E6713290(cxt);
	});
	        
	AddResultCleaner(0x2975C866E6713290, ResultCleaner<bool>);

	// ENTITY/GET_ENTITY_POPULATION_TYPE (result cleaner only)
	AddResultCleaner(0xF6F5161F4534EDFF, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_QUATERNION
	static auto nh_0x7B3703D2D32DFA18 = rage::scrEngine::GetNativeHandler(0x7B3703D2D32DFA18);
	rage::scrEngine::RegisterNativeHandler(0x7B3703D2D32DFA18, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x7B3703D2D32DFA18(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/GET_ENTITY_ROLL (result cleaner only)
	AddResultCleaner(0x831E0242595560DF, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_SCRIPT
	static auto nh_0xA6E9C38DB51D7748 = rage::scrEngine::GetNativeHandler(0xA6E9C38DB51D7748);
	rage::scrEngine::RegisterNativeHandler(0xA6E9C38DB51D7748, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA6E9C38DB51D7748(cxt);
	});
	        
	AddResultCleaner(0xA6E9C38DB51D7748, ResultCleaner<char*>);

	// ENTITY/GET_ENTITY_SPEED (result cleaner only)
	AddResultCleaner(0xD5037BA82E12416F, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_SUBMERGED_LEVEL (result cleaner only)
	AddResultCleaner(0xE81AFC1BC4CC41CE, ResultCleaner<float>);

	// ENTITY/GET_ENTITY_TYPE (result cleaner only)
	AddResultCleaner(0x8ACD366038D14505, ResultCleaner<int>);

	// ENTITY/GET_ENTITY_UPRIGHT_VALUE (result cleaner only)
	AddResultCleaner(0x95EED5A694951F9F, ResultCleaner<float>);

	// SCRIPT/GET_EVENT_AT_INDEX (result cleaner only)
	AddResultCleaner(0xD8F66A3A60C62153, ResultCleaner<int>);

	// SCRIPT/GET_EVENT_DATA
	static auto nh_0x2902843FCD2B2D79 = rage::scrEngine::GetNativeHandler(0x2902843FCD2B2D79);
	rage::scrEngine::RegisterNativeHandler(0x2902843FCD2B2D79, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2902843FCD2B2D79(cxt);
	});
	        
	AddResultCleaner(0x2902843FCD2B2D79, ResultCleaner<bool>);

	// SCRIPT/GET_EVENT_EXISTS (result cleaner only)
	AddResultCleaner(0x936E6168A9BCEDB5, ResultCleaner<bool>);

	// CFX/GET_EXTERNAL_KVP_FLOAT
	static auto nh_0x3cc98b25 = rage::scrEngine::GetNativeHandler(0x3cc98b25);
	rage::scrEngine::RegisterNativeHandler(0x3cc98b25, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3cc98b25(cxt);
	});
	        
	AddResultCleaner(0x3cc98b25, ResultCleaner<float>);

	// CFX/GET_EXTERNAL_KVP_INT
	static auto nh_0x12b8d689 = rage::scrEngine::GetNativeHandler(0x12b8d689);
	rage::scrEngine::RegisterNativeHandler(0x12b8d689, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x12b8d689(cxt);
	});
	        
	AddResultCleaner(0x12b8d689, ResultCleaner<int>);

	// CFX/GET_EXTERNAL_KVP_STRING
	static auto nh_0x9080363a = rage::scrEngine::GetNativeHandler(0x9080363a);
	rage::scrEngine::RegisterNativeHandler(0x9080363a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9080363a(cxt);
	});
	        
	AddResultCleaner(0x9080363a, ResultCleaner<char*>);

	// MISC/GET_FAKE_WANTED_LEVEL (result cleaner only)
	AddResultCleaner(0x4C9296CBCD1B971E, ResultCleaner<int>);

	// CAM/GET_FINAL_RENDERED_CAM_FAR_CLIP (result cleaner only)
	AddResultCleaner(0xDFC8CBC606FDB0FC, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_CAM_FAR_DOF (result cleaner only)
	AddResultCleaner(0x9780F32BCAF72431, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_CAM_FOV (result cleaner only)
	AddResultCleaner(0x80EC114669DAEFF4, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH (result cleaner only)
	AddResultCleaner(0x162F9D995753DC19, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_CAM_NEAR_CLIP (result cleaner only)
	AddResultCleaner(0xD0082607100D7193, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_CAM_NEAR_DOF (result cleaner only)
	AddResultCleaner(0xA03502FC581F7D9B, ResultCleaner<float>);

	// CAM/GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV (result cleaner only)
	AddResultCleaner(0x5F35F6732C3FBBA0, ResultCleaner<float>);

	// HUD/GET_FIRST_BLIP_INFO_ID (result cleaner only)
	AddResultCleaner(0x1BEDE233E6CD2A1F, ResultCleaner<int>);

	// CAM/GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR (result cleaner only)
	AddResultCleaner(0x7EC52CC40597D170, ResultCleaner<float>);

	// CAM/GET_FOCUS_PED_ON_SCREEN (result cleaner only)
	AddResultCleaner(0x89215EC747DF244A, ResultCleaner<int>);

	// CAM/GET_FOLLOW_PED_CAM_VIEW_MODE (result cleaner only)
	AddResultCleaner(0x8D4D46230B2C353A, ResultCleaner<int>);

	// CAM/GET_FOLLOW_PED_CAM_ZOOM_LEVEL (result cleaner only)
	AddResultCleaner(0x33E6C8EFD0CD93E9, ResultCleaner<int>);

	// CAM/GET_FOLLOW_VEHICLE_CAM_VIEW_MODE (result cleaner only)
	AddResultCleaner(0xA4FF579AC0E3AAAE, ResultCleaner<int>);

	// CAM/GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL (result cleaner only)
	AddResultCleaner(0xEE82280AB767B690, ResultCleaner<int>);

	// FILES/GET_FORCED_COMPONENT
	static auto nh_0x6C93ED8C2F74859B = rage::scrEngine::GetNativeHandler(0x6C93ED8C2F74859B);
	rage::scrEngine::RegisterNativeHandler(0x6C93ED8C2F74859B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x6C93ED8C2F74859B(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_FORCED_PROP
	static auto nh_0xE1CA84EBF72E691D = rage::scrEngine::GetNativeHandler(0xE1CA84EBF72E691D);
	rage::scrEngine::RegisterNativeHandler(0xE1CA84EBF72E691D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xE1CA84EBF72E691D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/GET_FRAME_COUNT (result cleaner only)
	AddResultCleaner(0xFC8202EFC642E6F2, ResultCleaner<int>);

	// MISC/GET_FRAME_TIME (result cleaner only)
	AddResultCleaner(0x15C40837039FFAF7, ResultCleaner<float>);

	// CFX/GET_FUEL_CONSUMPTION_RATE_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x5550bf9f, ResultCleaner<float>);

	// CFX/GET_FUEL_CONSUMPTION_STATE (result cleaner only)
	AddResultCleaner(0xc66cd90c, ResultCleaner<bool>);

	// CAM/GET_GAMEPLAY_CAM_FOV (result cleaner only)
	AddResultCleaner(0x65019750A0324133, ResultCleaner<float>);

	// CAM/GET_GAMEPLAY_CAM_RELATIVE_HEADING (result cleaner only)
	AddResultCleaner(0x743607648ADD4587, ResultCleaner<float>);

	// CAM/GET_GAMEPLAY_CAM_RELATIVE_PITCH (result cleaner only)
	AddResultCleaner(0x3A6867B4845BEDA2, ResultCleaner<float>);

	// CFX/GET_GAME_BUILD_NUMBER (result cleaner only)
	AddResultCleaner(0x804b9f7b, ResultCleaner<int>);

	// CFX/GET_GAME_NAME (result cleaner only)
	AddResultCleaner(0xe8eaa18b, ResultCleaner<char*>);

	// CFX/GET_GAME_POOL
	static auto nh_0x2b9d4f50 = rage::scrEngine::GetNativeHandler(0x2b9d4f50);
	rage::scrEngine::RegisterNativeHandler(0x2b9d4f50, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2b9d4f50(cxt);
	});
	        
	// MISC/GET_GAME_TIMER (result cleaner only)
	AddResultCleaner(0x9CD27B0045628463, ResultCleaner<int>);

	// HUD/GET_GLOBAL_ACTIONSCRIPT_FLAG (result cleaner only)
	AddResultCleaner(0xE3B05614DCE1D014, ResultCleaner<int>);

	// PATHFIND/GET_GPS_BLIP_ROUTE_FOUND (result cleaner only)
	AddResultCleaner(0x869DAACBBE9FA006, ResultCleaner<bool>);

	// PATHFIND/GET_GPS_BLIP_ROUTE_LENGTH (result cleaner only)
	AddResultCleaner(0xBBB45C3CF5C8AA85, ResultCleaner<int>);

	// PATHFIND/GET_GPS_WAYPOINT_ROUTE_END
	static auto nh_0xF3162836C28F9DA5 = rage::scrEngine::GetNativeHandler(0xF3162836C28F9DA5);
	rage::scrEngine::RegisterNativeHandler(0xF3162836C28F9DA5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF3162836C28F9DA5(cxt);
	});
	        
	AddResultCleaner(0xF3162836C28F9DA5, ResultCleaner<bool>);

	// MISC/GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD
	static auto nh_0x8BDC7BFC57A81E76 = rage::scrEngine::GetNativeHandler(0x8BDC7BFC57A81E76);
	rage::scrEngine::RegisterNativeHandler(0x8BDC7BFC57A81E76, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x8BDC7BFC57A81E76(cxt);
	});
	        
	AddResultCleaner(0x8BDC7BFC57A81E76, ResultCleaner<bool>);

	// MISC/GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD
	static auto nh_0x9E82F0F362881B29 = rage::scrEngine::GetNativeHandler(0x9E82F0F362881B29);
	rage::scrEngine::RegisterNativeHandler(0x9E82F0F362881B29, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x9E82F0F362881B29(cxt);
	});
	        
	AddResultCleaner(0x9E82F0F362881B29, ResultCleaner<bool>);

	// MISC/GET_GROUND_Z_FOR_3D_COORD
	static auto nh_0xC906A7DAB05C8D2B = rage::scrEngine::GetNativeHandler(0xC906A7DAB05C8D2B);
	rage::scrEngine::RegisterNativeHandler(0xC906A7DAB05C8D2B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xC906A7DAB05C8D2B(cxt);
	});
	        
	AddResultCleaner(0xC906A7DAB05C8D2B, ResultCleaner<bool>);

	// PED/GET_GROUP_SIZE
	static auto nh_0x8DE69FE35CA09A45 = rage::scrEngine::GetNativeHandler(0x8DE69FE35CA09A45);
	rage::scrEngine::RegisterNativeHandler(0x8DE69FE35CA09A45, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8DE69FE35CA09A45(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/GET_HASH_KEY
	static auto nh_0xD24D37CC275948CC = rage::scrEngine::GetNativeHandler(0xD24D37CC275948CC);
	rage::scrEngine::RegisterNativeHandler(0xD24D37CC275948CC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD24D37CC275948CC(cxt);
	});
	        
	AddResultCleaner(0xD24D37CC275948CC, ResultCleaner<int>);

	// FILES/GET_HASH_NAME_FOR_COMPONENT (result cleaner only)
	AddResultCleaner(0x0368B3A838070348, ResultCleaner<int>);

	// FILES/GET_HASH_NAME_FOR_PROP (result cleaner only)
	AddResultCleaner(0x5D6160275CAEC8DD, ResultCleaner<int>);

	// ZONE/GET_HASH_OF_MAP_AREA_AT_COORDS (result cleaner only)
	AddResultCleaner(0x7EE64D51E8498728, ResultCleaner<int>);

	// SCRIPT/GET_HASH_OF_THIS_SCRIPT_NAME (result cleaner only)
	AddResultCleaner(0x8A1C8B1738FFE87E, ResultCleaner<int>);

	// MISC/GET_HEADING_FROM_VECTOR_2D (result cleaner only)
	AddResultCleaner(0x2FFB6B224F4B2926, ResultCleaner<float>);

	// VEHICLE/GET_HELI_MAIN_ROTOR_HEALTH (result cleaner only)
	AddResultCleaner(0xE4CB7541F413D2C5, ResultCleaner<float>);

	// VEHICLE/GET_HELI_TAIL_BOOM_HEALTH (result cleaner only)
	AddResultCleaner(0xAC51915D27E4A5F7, ResultCleaner<float>);

	// VEHICLE/GET_HELI_TAIL_ROTOR_HEALTH (result cleaner only)
	AddResultCleaner(0xAE8CE82A4219AC8C, ResultCleaner<float>);

	// HUD/GET_HUD_COLOUR
	static auto nh_0x7C9C91AB74A0360F = rage::scrEngine::GetNativeHandler(0x7C9C91AB74A0360F);
	rage::scrEngine::RegisterNativeHandler(0x7C9C91AB74A0360F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x7C9C91AB74A0360F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_HUD_COMPONENT_ALIGN
	static auto nh_0xcd949e20 = rage::scrEngine::GetNativeHandler(0xcd949e20);
	rage::scrEngine::RegisterNativeHandler(0xcd949e20, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xcd949e20(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_HUD_COMPONENT_NAME (result cleaner only)
	AddResultCleaner(0xa91866bc, ResultCleaner<char*>);

	// HUD/GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION
	static auto nh_0xF9904D11F1ACBEC3 = rage::scrEngine::GetNativeHandler(0xF9904D11F1ACBEC3);
	rage::scrEngine::RegisterNativeHandler(0xF9904D11F1ACBEC3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xF9904D11F1ACBEC3(cxt);
	});
	        
	AddResultCleaner(0xF9904D11F1ACBEC3, ResultCleaner<bool>);

	// STREAMING/GET_IDEAL_PLAYER_SWITCH_TYPE (result cleaner only)
	AddResultCleaner(0xB5D7B26B45720E05, ResultCleaner<int>);

	// SCRIPT/GET_ID_OF_THIS_THREAD (result cleaner only)
	AddResultCleaner(0xC30338E8088E2E21, ResultCleaner<int>);

	// ITEMSET/GET_INDEXED_ITEM_IN_ITEMSET
	static auto nh_0x7A197E2521EE2BAB = rage::scrEngine::GetNativeHandler(0x7A197E2521EE2BAB);
	rage::scrEngine::RegisterNativeHandler(0x7A197E2521EE2BAB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7A197E2521EE2BAB(cxt);
	});
	        
	AddResultCleaner(0x7A197E2521EE2BAB, ResultCleaner<int>);

	// MISC/GET_INDEX_OF_CURRENT_LEVEL (result cleaner only)
	AddResultCleaner(0xCBAD6729F7B1F4FC, ResultCleaner<int>);

	// CFX/GET_INSTANCE_ID (result cleaner only)
	AddResultCleaner(0x9f1c4383, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_AT_COORDS (result cleaner only)
	AddResultCleaner(0xB0F7F8663821D9C3, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_AT_COORDS_WITH_TYPE
	static auto nh_0x05B7A89BD78797FC = rage::scrEngine::GetNativeHandler(0x05B7A89BD78797FC);
	rage::scrEngine::RegisterNativeHandler(0x05B7A89BD78797FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x05B7A89BD78797FC(cxt);
	});
	        
	AddResultCleaner(0x05B7A89BD78797FC, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_AT_COORDS_WITH_TYPEHASH (result cleaner only)
	AddResultCleaner(0xF0F77ADB9F67E79D, ResultCleaner<int>);

	// CFX/GET_INTERIOR_ENTITIES_EXTENTS
	static auto nh_0x322b1192 = rage::scrEngine::GetNativeHandler(0x322b1192);
	rage::scrEngine::RegisterNativeHandler(0x322b1192, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x322b1192(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/GET_INTERIOR_FROM_COLLISION (result cleaner only)
	AddResultCleaner(0xEC4CF9FCB29A4424, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_FROM_ENTITY (result cleaner only)
	AddResultCleaner(0x2107BA504071A6BB, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_FROM_PRIMARY_VIEW (result cleaner only)
	AddResultCleaner(0xE7D267EC6CA966C3, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_GROUP_ID (result cleaner only)
	AddResultCleaner(0xE4A84ABF135EF91A, ResultCleaner<int>);

	// INTERIOR/GET_INTERIOR_HEADING (result cleaner only)
	AddResultCleaner(0xF49B58631D9E22D9, ResultCleaner<float>);

	// INTERIOR/GET_INTERIOR_LOCATION_AND_NAMEHASH
	static auto nh_0x252BDC06B73FA6EA = rage::scrEngine::GetNativeHandler(0x252BDC06B73FA6EA);
	rage::scrEngine::RegisterNativeHandler(0x252BDC06B73FA6EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x252BDC06B73FA6EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_PORTAL_CORNER_POSITION
	static auto nh_0xf772bb2c = rage::scrEngine::GetNativeHandler(0xf772bb2c);
	rage::scrEngine::RegisterNativeHandler(0xf772bb2c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xf772bb2c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_PORTAL_COUNT (result cleaner only)
	AddResultCleaner(0xd05bb8b1, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ENTITY_ARCHETYPE (result cleaner only)
	AddResultCleaner(0x9a0e1700, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ENTITY_COUNT (result cleaner only)
	AddResultCleaner(0xc68021b, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ENTITY_FLAG (result cleaner only)
	AddResultCleaner(0x9da2e811, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ENTITY_POSITION
	static auto nh_0x9b7ab83c = rage::scrEngine::GetNativeHandler(0x9b7ab83c);
	rage::scrEngine::RegisterNativeHandler(0x9b7ab83c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x9b7ab83c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_PORTAL_ENTITY_ROTATION
	static auto nh_0x9f9ceb63 = rage::scrEngine::GetNativeHandler(0x9f9ceb63);
	rage::scrEngine::RegisterNativeHandler(0x9f9ceb63, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x9f9ceb63(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_PORTAL_FLAG (result cleaner only)
	AddResultCleaner(0xc74da47c, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ROOM_FROM (result cleaner only)
	AddResultCleaner(0xaa9c141d, ResultCleaner<int>);

	// CFX/GET_INTERIOR_PORTAL_ROOM_TO (result cleaner only)
	AddResultCleaner(0x3f47f0e8, ResultCleaner<int>);

	// CFX/GET_INTERIOR_POSITION
	static auto nh_0x77a435b0 = rage::scrEngine::GetNativeHandler(0x77a435b0);
	rage::scrEngine::RegisterNativeHandler(0x77a435b0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x77a435b0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_ROOM_COUNT (result cleaner only)
	AddResultCleaner(0xa2737c2c, ResultCleaner<int>);

	// CFX/GET_INTERIOR_ROOM_EXTENTS
	static auto nh_0xf9e795dd = rage::scrEngine::GetNativeHandler(0xf9e795dd);
	rage::scrEngine::RegisterNativeHandler(0xf9e795dd, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xf9e795dd(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INTERIOR_ROOM_FLAG (result cleaner only)
	AddResultCleaner(0x6b7af743, ResultCleaner<int>);

	// CFX/GET_INTERIOR_ROOM_INDEX_BY_HASH (result cleaner only)
	AddResultCleaner(0xe0ee05f8, ResultCleaner<int>);

	// CFX/GET_INTERIOR_ROOM_NAME (result cleaner only)
	AddResultCleaner(0x11755df2, ResultCleaner<char*>);

	// CFX/GET_INTERIOR_ROOM_TIMECYCLE (result cleaner only)
	AddResultCleaner(0x82ba3f88, ResultCleaner<int>);

	// CFX/GET_INTERIOR_ROTATION
	static auto nh_0x5a039998 = rage::scrEngine::GetNativeHandler(0x5a039998);
	rage::scrEngine::RegisterNativeHandler(0x5a039998, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x5a039998(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_INVOKING_RESOURCE (result cleaner only)
	AddResultCleaner(0x4d52fe5b, ResultCleaner<char*>);

	// MISC/GET_IS_AUTO_SAVE_OFF (result cleaner only)
	AddResultCleaner(0x6E04F06094C87047, ResultCleaner<bool>);

	// VEHICLE/GET_IS_BOAT_CAPSIZED (result cleaner only)
	AddResultCleaner(0xBA91D045575699AD, ResultCleaner<bool>);

	// GRAPHICS/GET_IS_HIDEF (result cleaner only)
	AddResultCleaner(0x84ED31191CC5D2C9, ResultCleaner<bool>);

	// VEHICLE/GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED (result cleaner only)
	AddResultCleaner(0x5EF77C9ADD3B11A3, ResultCleaner<bool>);

	// DLC/GET_IS_LOADING_SCREEN_ACTIVE (result cleaner only)
	AddResultCleaner(0x10D0A8F259E93EC9, ResultCleaner<bool>);

	// WEAPON/GET_IS_PED_GADGET_EQUIPPED (result cleaner only)
	AddResultCleaner(0xF731332072F5156C, ResultCleaner<bool>);

	// GRAPHICS/GET_IS_PETROL_DECAL_IN_RANGE (result cleaner only)
	AddResultCleaner(0x2F09F7976C512404, ResultCleaner<bool>);

	// AUDIO/GET_IS_PRELOADED_CONVERSATION_READY (result cleaner only)
	AddResultCleaner(0xE73364DB90778FFA, ResultCleaner<bool>);

	// VEHICLE/GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED (result cleaner only)
	AddResultCleaner(0xA7ECB73355EB2F20, ResultCleaner<bool>);

	// TASK/GET_IS_TASK_ACTIVE (result cleaner only)
	AddResultCleaner(0xB0760331C7AA4155, ResultCleaner<bool>);

	// PAD/GET_IS_USING_ALTERNATE_DRIVEBY (result cleaner only)
	AddResultCleaner(0x0F70731BACCFBB96, ResultCleaner<bool>);

	// VEHICLE/GET_IS_VEHICLE_ENGINE_RUNNING (result cleaner only)
	AddResultCleaner(0xAE31E7DF9B5B132E, ResultCleaner<bool>);

	// VEHICLE/GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM (result cleaner only)
	AddResultCleaner(0xF095C0405307B21B, ResultCleaner<bool>);

	// VEHICLE/GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM (result cleaner only)
	AddResultCleaner(0x910A32E7AAD2656C, ResultCleaner<bool>);

	// TASK/GET_IS_WAYPOINT_RECORDING_LOADED
	static auto nh_0xCB4E8BE8A0063C5D = rage::scrEngine::GetNativeHandler(0xCB4E8BE8A0063C5D);
	rage::scrEngine::RegisterNativeHandler(0xCB4E8BE8A0063C5D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCB4E8BE8A0063C5D(cxt);
	});
	        
	AddResultCleaner(0xCB4E8BE8A0063C5D, ResultCleaner<bool>);

	// GRAPHICS/GET_IS_WIDESCREEN (result cleaner only)
	AddResultCleaner(0x30CF4BDA4FCB1905, ResultCleaner<bool>);

	// ITEMSET/GET_ITEMSET_SIZE (result cleaner only)
	AddResultCleaner(0xD9127E83ABF7C631, ResultCleaner<int>);

	// PED/GET_JACK_TARGET (result cleaner only)
	AddResultCleaner(0x5486A79D9FBD342D, ResultCleaner<int>);

	// INTERIOR/GET_KEY_FOR_ENTITY_IN_ROOM (result cleaner only)
	AddResultCleaner(0x399685DB942336BC, ResultCleaner<int>);

	// VEHICLE/GET_LANDING_GEAR_STATE (result cleaner only)
	AddResultCleaner(0x9B0F3DCA3DB0F4CD, ResultCleaner<int>);

	// VEHICLE/GET_LAST_DRIVEN_VEHICLE (result cleaner only)
	AddResultCleaner(0xB2D06FAEDE65B577, ResultCleaner<int>);

	// ENTITY/GET_LAST_MATERIAL_HIT_BY_ENTITY (result cleaner only)
	AddResultCleaner(0x5C3D0A935F535C4C, ResultCleaner<int>);

	// VEHICLE/GET_LAST_PED_IN_VEHICLE_SEAT (result cleaner only)
	AddResultCleaner(0x83F969AA1EE2A664, ResultCleaner<int>);

	// HUD/GET_LENGTH_OF_LITERAL_STRING
	static auto nh_0xF030907CCBB8A9FD = rage::scrEngine::GetNativeHandler(0xF030907CCBB8A9FD);
	rage::scrEngine::RegisterNativeHandler(0xF030907CCBB8A9FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF030907CCBB8A9FD(cxt);
	});
	        
	AddResultCleaner(0xF030907CCBB8A9FD, ResultCleaner<int>);

	// HUD/GET_LENGTH_OF_LITERAL_STRING_IN_BYTES
	static auto nh_0x43E4111189E54F0E = rage::scrEngine::GetNativeHandler(0x43E4111189E54F0E);
	rage::scrEngine::RegisterNativeHandler(0x43E4111189E54F0E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x43E4111189E54F0E(cxt);
	});
	        
	AddResultCleaner(0x43E4111189E54F0E, ResultCleaner<int>);

	// HUD/GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL
	static auto nh_0x801BD273D3A23F74 = rage::scrEngine::GetNativeHandler(0x801BD273D3A23F74);
	rage::scrEngine::RegisterNativeHandler(0x801BD273D3A23F74, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x801BD273D3A23F74(cxt);
	});
	        
	AddResultCleaner(0x801BD273D3A23F74, ResultCleaner<int>);

	// MISC/GET_LINE_PLANE_INTERSECTION
	static auto nh_0xF56DFB7B61BE7276 = rage::scrEngine::GetNativeHandler(0xF56DFB7B61BE7276);
	rage::scrEngine::RegisterNativeHandler(0xF56DFB7B61BE7276, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		nh_0xF56DFB7B61BE7276(cxt);
	});
	        
	AddResultCleaner(0xF56DFB7B61BE7276, ResultCleaner<bool>);

	// VEHICLE/GET_LIVERY_NAME (result cleaner only)
	AddResultCleaner(0xB4C7A93837C91A1F, ResultCleaner<char*>);

	// PAD/GET_LOCAL_PLAYER_AIM_STATE (result cleaner only)
	AddResultCleaner(0xBB41AFBBBC0A0287, ResultCleaner<int>);

	// CLOCK/GET_LOCAL_TIME
	static auto nh_0x50C7A99057A69748 = rage::scrEngine::GetNativeHandler(0x50C7A99057A69748);
	rage::scrEngine::RegisterNativeHandler(0x50C7A99057A69748, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x50C7A99057A69748(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON (result cleaner only)
	AddResultCleaner(0x840F03E9041E2C9C, ResultCleaner<float>);

	// STREAMING/GET_LODSCALE (result cleaner only)
	AddResultCleaner(0x0C15B0E443B2349D, ResultCleaner<float>);

	// HUD/GET_MAIN_PLAYER_BLIP_ID (result cleaner only)
	AddResultCleaner(0xDCD4EC3F419D02FA, ResultCleaner<int>);

	// VEHICLE/GET_MAKE_NAME_FROM_VEHICLE_MODEL (result cleaner only)
	AddResultCleaner(0xF7AF4F159FF99F97, ResultCleaner<char*>);

	// CFX/GET_MAPDATA_ENTITY_HANDLE
	static auto nh_0x30aa6911 = rage::scrEngine::GetNativeHandler(0x30aa6911);
	rage::scrEngine::RegisterNativeHandler(0x30aa6911, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x30aa6911(cxt);
	});
	        
	AddResultCleaner(0x30aa6911, ResultCleaner<bool>);

	// CFX/GET_MAPDATA_ENTITY_MATRIX (result cleaner only)
	AddResultCleaner(0x2c3cda93, ResultCleaner<bool>);

	// CFX/GET_MAPDATA_FROM_HASH_KEY (result cleaner only)
	AddResultCleaner(0xd29d8edd, ResultCleaner<int>);

	// CFX/GET_MAP_ZOOM_DATA_LEVEL
	static auto nh_0x1363a998 = rage::scrEngine::GetNativeHandler(0x1363a998);
	rage::scrEngine::RegisterNativeHandler(0x1363a998, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x1363a998(cxt);
	});
	        
	AddResultCleaner(0x1363a998, ResultCleaner<bool>);

	// GRAPHICS/GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS (result cleaner only)
	AddResultCleaner(0xDC54A7AF8B3A14EF, ResultCleaner<int>);

	// GRAPHICS/GET_MAXIMUM_NUMBER_OF_PHOTOS (result cleaner only)
	AddResultCleaner(0x34D23450F028B0BF, ResultCleaner<int>);

	// WEAPON/GET_MAX_AMMO
	static auto nh_0xDC16122C7A20C933 = rage::scrEngine::GetNativeHandler(0xDC16122C7A20C933);
	rage::scrEngine::RegisterNativeHandler(0xDC16122C7A20C933, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xDC16122C7A20C933(cxt);
	});
	        
	AddResultCleaner(0xDC16122C7A20C933, ResultCleaner<bool>);

	// WEAPON/GET_MAX_AMMO_IN_CLIP (result cleaner only)
	AddResultCleaner(0xA38DCFFCEA8962FA, ResultCleaner<int>);

	// NETWORK/GET_MAX_NUM_NETWORK_OBJECTS (result cleaner only)
	AddResultCleaner(0xC7BE335216B5EC7C, ResultCleaner<int>);

	// NETWORK/GET_MAX_NUM_NETWORK_PEDS (result cleaner only)
	AddResultCleaner(0x0C1F7D49C39D2289, ResultCleaner<int>);

	// NETWORK/GET_MAX_NUM_NETWORK_PICKUPS (result cleaner only)
	AddResultCleaner(0xA72835064DD63E4C, ResultCleaner<int>);

	// NETWORK/GET_MAX_NUM_NETWORK_VEHICLES (result cleaner only)
	AddResultCleaner(0x0AFCE529F69B21FF, ResultCleaner<int>);

	// WEAPON/GET_MAX_RANGE_OF_CURRENT_PED_WEAPON (result cleaner only)
	AddResultCleaner(0x814C9D19DFD69679, ResultCleaner<float>);

	// PLAYER/GET_MAX_WANTED_LEVEL (result cleaner only)
	AddResultCleaner(0x462E0DB9B137DC5F, ResultCleaner<int>);

	// PED/GET_MELEE_TARGET_FOR_PED (result cleaner only)
	AddResultCleaner(0x18A3E9EE1297FD39, ResultCleaner<int>);

	// HUD/GET_MENU_PED_BOOL_STAT
	static auto nh_0x052991E59076E4E4 = rage::scrEngine::GetNativeHandler(0x052991E59076E4E4);
	rage::scrEngine::RegisterNativeHandler(0x052991E59076E4E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x052991E59076E4E4(cxt);
	});
	        
	AddResultCleaner(0x052991E59076E4E4, ResultCleaner<bool>);

	// HUD/GET_MENU_PED_FLOAT_STAT
	static auto nh_0x5FBD7095FE7AE57F = rage::scrEngine::GetNativeHandler(0x5FBD7095FE7AE57F);
	rage::scrEngine::RegisterNativeHandler(0x5FBD7095FE7AE57F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5FBD7095FE7AE57F(cxt);
	});
	        
	AddResultCleaner(0x5FBD7095FE7AE57F, ResultCleaner<bool>);

	// HUD/GET_MENU_PED_INT_STAT
	static auto nh_0xEF4CED81CEBEDC6D = rage::scrEngine::GetNativeHandler(0xEF4CED81CEBEDC6D);
	rage::scrEngine::RegisterNativeHandler(0xEF4CED81CEBEDC6D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEF4CED81CEBEDC6D(cxt);
	});
	        
	AddResultCleaner(0xEF4CED81CEBEDC6D, ResultCleaner<bool>);

	// HUD/GET_MENU_PED_MASKED_INT_STAT
	static auto nh_0x90A6526CF0381030 = rage::scrEngine::GetNativeHandler(0x90A6526CF0381030);
	rage::scrEngine::RegisterNativeHandler(0x90A6526CF0381030, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x90A6526CF0381030(cxt);
	});
	        
	AddResultCleaner(0x90A6526CF0381030, ResultCleaner<bool>);

	// CLOCK/GET_MILLISECONDS_PER_GAME_MINUTE (result cleaner only)
	AddResultCleaner(0x2F8B4D1C595B11DB, ResultCleaner<int>);

	// HUD/GET_MINIMAP_FOW_COORDINATE_IS_REVEALED (result cleaner only)
	AddResultCleaner(0x6E31B91145873922, ResultCleaner<bool>);

	// HUD/GET_MINIMAP_FOW_DISCOVERY_RATIO (result cleaner only)
	AddResultCleaner(0xE0130B41D3CF4574, ResultCleaner<float>);

	// MISC/GET_MISSION_FLAG (result cleaner only)
	AddResultCleaner(0xA33CDCCDA663159E, ResultCleaner<bool>);

	// MOBILE/GET_MOBILE_PHONE_POSITION
	static auto nh_0x584FDFDA48805B86 = rage::scrEngine::GetNativeHandler(0x584FDFDA48805B86);
	rage::scrEngine::RegisterNativeHandler(0x584FDFDA48805B86, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x584FDFDA48805B86(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/GET_MOBILE_PHONE_RENDER_ID
	static auto nh_0xB4A53E05F68B6FA1 = rage::scrEngine::GetNativeHandler(0xB4A53E05F68B6FA1);
	rage::scrEngine::RegisterNativeHandler(0xB4A53E05F68B6FA1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB4A53E05F68B6FA1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/GET_MOBILE_PHONE_ROTATION
	static auto nh_0x1CEFB61F193070AE = rage::scrEngine::GetNativeHandler(0x1CEFB61F193070AE);
	rage::scrEngine::RegisterNativeHandler(0x1CEFB61F193070AE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1CEFB61F193070AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/GET_MODEL_DIMENSIONS
	static auto nh_0x03E8D3D5F549087A = rage::scrEngine::GetNativeHandler(0x03E8D3D5F549087A);
	rage::scrEngine::RegisterNativeHandler(0x03E8D3D5F549087A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x03E8D3D5F549087A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_MOD_SLOT_NAME (result cleaner only)
	AddResultCleaner(0x51F0FEB9F6AE98C0, ResultCleaner<char*>);

	// VEHICLE/GET_MOD_TEXT_LABEL (result cleaner only)
	AddResultCleaner(0x8935624F8C5592CC, ResultCleaner<char*>);

	// PED/GET_MOUNT (result cleaner only)
	AddResultCleaner(0xE7E11B8DCBED1058, ResultCleaner<int>);

	// AUDIO/GET_MUSIC_PLAYTIME (result cleaner only)
	AddResultCleaner(0xE7A0D23DC414507B, ResultCleaner<int>);

	// AUDIO/GET_MUSIC_VOL_SLIDER (result cleaner only)
	AddResultCleaner(0x3A48AB4445D499BE, ResultCleaner<int>);

	// HUD/GET_NAMED_RENDERTARGET_RENDER_ID
	static auto nh_0x1A6478B61C6BDC3B = rage::scrEngine::GetNativeHandler(0x1A6478B61C6BDC3B);
	rage::scrEngine::RegisterNativeHandler(0x1A6478B61C6BDC3B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A6478B61C6BDC3B(cxt);
	});
	        
	AddResultCleaner(0x1A6478B61C6BDC3B, ResultCleaner<int>);

	// ZONE/GET_NAME_OF_ZONE (result cleaner only)
	AddResultCleaner(0xCD90657D4C30E1CA, ResultCleaner<char*>);

	// TASK/GET_NAVMESH_ROUTE_DISTANCE_REMAINING
	static auto nh_0xC6F5C0BCDC74D62D = rage::scrEngine::GetNativeHandler(0xC6F5C0BCDC74D62D);
	rage::scrEngine::RegisterNativeHandler(0xC6F5C0BCDC74D62D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC6F5C0BCDC74D62D(cxt);
	});
	        
	AddResultCleaner(0xC6F5C0BCDC74D62D, ResultCleaner<int>);

	// TASK/GET_NAVMESH_ROUTE_RESULT (result cleaner only)
	AddResultCleaner(0x632E831F382A0FA8, ResultCleaner<int>);

	// ENTITY/GET_NEAREST_PLAYER_TO_ENTITY (result cleaner only)
	AddResultCleaner(0x7196842CB375CDB3, ResultCleaner<int>);

	// ENTITY/GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM (result cleaner only)
	AddResultCleaner(0x4DC9A62F844D9337, ResultCleaner<int>);

	// AUDIO/GET_NETWORK_ID_FROM_SOUND_ID (result cleaner only)
	AddResultCleaner(0x2DE3F0A134FFBC0D, ResultCleaner<int>);

	// NETWORK/GET_NETWORK_TIME (result cleaner only)
	AddResultCleaner(0x7A5487FE9FAA6B48, ResultCleaner<int>);

	// NETWORK/GET_NETWORK_TIME_ACCURATE (result cleaner only)
	AddResultCleaner(0x89023FBBF9200E9F, ResultCleaner<int>);

	// HUD/GET_NEW_SELECTED_MISSION_CREATOR_BLIP (result cleaner only)
	AddResultCleaner(0x5C90988E7C8E1AF4, ResultCleaner<int>);

	// AUDIO/GET_NEXT_AUDIBLE_BEAT
	static auto nh_0xC64A06D939F826F5 = rage::scrEngine::GetNativeHandler(0xC64A06D939F826F5);
	rage::scrEngine::RegisterNativeHandler(0xC64A06D939F826F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC64A06D939F826F5(cxt);
	});
	        
	AddResultCleaner(0xC64A06D939F826F5, ResultCleaner<bool>);

	// HUD/GET_NEXT_BLIP_INFO_ID (result cleaner only)
	AddResultCleaner(0x14F96AA50D6FBEA7, ResultCleaner<int>);

	// PATHFIND/GET_NEXT_GPS_DISABLED_ZONE_INDEX (result cleaner only)
	AddResultCleaner(0xD3A6A0EF48823A8C, ResultCleaner<int>);

	// MISC/GET_NEXT_WEATHER_TYPE_HASH_NAME (result cleaner only)
	AddResultCleaner(0x711327CD09C8F162, ResultCleaner<int>);

	// SCRIPT/GET_NO_LOADING_SCREEN (result cleaner only)
	AddResultCleaner(0x18C1270EA7F199BC, ResultCleaner<bool>);

	// PATHFIND/GET_NTH_CLOSEST_VEHICLE_NODE
	static auto nh_0xE50E52416CCF948B = rage::scrEngine::GetNativeHandler(0xE50E52416CCF948B);
	rage::scrEngine::RegisterNativeHandler(0xE50E52416CCF948B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xE50E52416CCF948B(cxt);
	});
	        
	AddResultCleaner(0xE50E52416CCF948B, ResultCleaner<bool>);

	// PATHFIND/GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
	static auto nh_0x45905BE8654AE067 = rage::scrEngine::GetNativeHandler(0x45905BE8654AE067);
	rage::scrEngine::RegisterNativeHandler(0x45905BE8654AE067, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0x45905BE8654AE067(cxt);
	});
	        
	AddResultCleaner(0x45905BE8654AE067, ResultCleaner<bool>);

	// PATHFIND/GET_NTH_CLOSEST_VEHICLE_NODE_ID (result cleaner only)
	AddResultCleaner(0x22D7275A79FE8215, ResultCleaner<int>);

	// PATHFIND/GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING
	static auto nh_0x6448050E9C2A7207 = rage::scrEngine::GetNativeHandler(0x6448050E9C2A7207);
	rage::scrEngine::RegisterNativeHandler(0x6448050E9C2A7207, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x6448050E9C2A7207(cxt);
	});
	        
	AddResultCleaner(0x6448050E9C2A7207, ResultCleaner<int>);

	// PATHFIND/GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
	static auto nh_0x80CA6A8B6C094CC4 = rage::scrEngine::GetNativeHandler(0x80CA6A8B6C094CC4);
	rage::scrEngine::RegisterNativeHandler(0x80CA6A8B6C094CC4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x80CA6A8B6C094CC4(cxt);
	});
	        
	AddResultCleaner(0x80CA6A8B6C094CC4, ResultCleaner<bool>);

	// CFX/GET_NUI_CURSOR_POSITION
	static auto nh_0xbdba226f = rage::scrEngine::GetNativeHandler(0xbdba226f);
	rage::scrEngine::RegisterNativeHandler(0xbdba226f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xbdba226f(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/GET_NUMBER_OF_ACTIVE_BLIPS (result cleaner only)
	AddResultCleaner(0x9A3FF3DE163034E8, ResultCleaner<int>);

	// SCRIPT/GET_NUMBER_OF_EVENTS (result cleaner only)
	AddResultCleaner(0x5F92A689A06620AA, ResultCleaner<int>);

	// FIRE/GET_NUMBER_OF_FIRES_IN_RANGE (result cleaner only)
	AddResultCleaner(0x50CAD495A460B305, ResultCleaner<int>);

	// MISC/GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE (result cleaner only)
	AddResultCleaner(0xFEAD16FC8F9DFC0F, ResultCleaner<int>);

	// CFX/GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS
	static auto nh_0x310d0271 = rage::scrEngine::GetNativeHandler(0x310d0271);
	rage::scrEngine::RegisterNativeHandler(0x310d0271, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x310d0271(cxt);
	});
	        
	AddResultCleaner(0x310d0271, ResultCleaner<int>);

	// CFX/GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS
	static auto nh_0x3b6a13e1 = rage::scrEngine::GetNativeHandler(0x3b6a13e1);
	rage::scrEngine::RegisterNativeHandler(0x3b6a13e1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3b6a13e1(cxt);
	});
	        
	AddResultCleaner(0x3b6a13e1, ResultCleaner<int>);

	// CFX/GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS
	static auto nh_0x75caf9cc = rage::scrEngine::GetNativeHandler(0x75caf9cc);
	rage::scrEngine::RegisterNativeHandler(0x75caf9cc, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x75caf9cc(cxt);
	});
	        
	AddResultCleaner(0x75caf9cc, ResultCleaner<int>);

	// CFX/GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS
	static auto nh_0xd2c15d7 = rage::scrEngine::GetNativeHandler(0xd2c15d7);
	rage::scrEngine::RegisterNativeHandler(0xd2c15d7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xd2c15d7(cxt);
	});
	        
	AddResultCleaner(0xd2c15d7, ResultCleaner<int>);

	// PED/GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS (result cleaner only)
	AddResultCleaner(0x27561561732A7842, ResultCleaner<int>);

	// PED/GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS (result cleaner only)
	AddResultCleaner(0x5FAF9754E789FB47, ResultCleaner<int>);

	// PED/GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS (result cleaner only)
	AddResultCleaner(0xA6E7F1CEB523E171, ResultCleaner<int>);

	// PED/GET_NUMBER_OF_PED_TEXTURE_VARIATIONS (result cleaner only)
	AddResultCleaner(0x8F7156A3142A6BAD, ResultCleaner<int>);

	// PLAYER/GET_NUMBER_OF_PLAYERS (result cleaner only)
	AddResultCleaner(0x407C7F91DDB46C16, ResultCleaner<int>);

	// STREAMING/GET_NUMBER_OF_STREAMING_REQUESTS (result cleaner only)
	AddResultCleaner(0x4060057271CEBC89, ResultCleaner<int>);

	// VEHICLE/GET_NUMBER_OF_VEHICLE_COLOURS (result cleaner only)
	AddResultCleaner(0x3B963160CD65D41E, ResultCleaner<int>);

	// VEHICLE/GET_NUMBER_OF_VEHICLE_NUMBER_PLATES (result cleaner only)
	AddResultCleaner(0x4C4D6B2644F458CB, ResultCleaner<int>);

	// NETWORK/GET_NUM_COMMERCE_ITEMS (result cleaner only)
	AddResultCleaner(0xF2EAC213D5EA0623, ResultCleaner<int>);

	// NETWORK/GET_NUM_CREATED_MISSION_OBJECTS (result cleaner only)
	AddResultCleaner(0x12B6281B6C6706C0, ResultCleaner<int>);

	// NETWORK/GET_NUM_CREATED_MISSION_PEDS (result cleaner only)
	AddResultCleaner(0xCB215C4B56A7FAE7, ResultCleaner<int>);

	// NETWORK/GET_NUM_CREATED_MISSION_VEHICLES (result cleaner only)
	AddResultCleaner(0x0CD9AB83489430EA, ResultCleaner<int>);

	// FILES/GET_NUM_DLC_VEHICLES (result cleaner only)
	AddResultCleaner(0xA7A866D21CD2329B, ResultCleaner<int>);

	// FILES/GET_NUM_DLC_WEAPONS (result cleaner only)
	AddResultCleaner(0xEE47635F352DA367, ResultCleaner<int>);

	// FILES/GET_NUM_DLC_WEAPON_COMPONENTS (result cleaner only)
	AddResultCleaner(0x405425358A7D61FE, ResultCleaner<int>);

	// VEHICLE/GET_NUM_MOD_COLORS (result cleaner only)
	AddResultCleaner(0xA551BE18C11A476D, ResultCleaner<int>);

	// VEHICLE/GET_NUM_MOD_KITS (result cleaner only)
	AddResultCleaner(0x33F2E3FE70EAAE1D, ResultCleaner<int>);

	// PATHFIND/GET_NUM_NAVMESHES_EXISTING_IN_AREA (result cleaner only)
	AddResultCleaner(0x01708E8DD3FF8C65, ResultCleaner<int>);

	// NETWORK/GET_NUM_RESERVED_MISSION_OBJECTS (result cleaner only)
	AddResultCleaner(0xAA81B5F10BC43AC2, ResultCleaner<int>);

	// NETWORK/GET_NUM_RESERVED_MISSION_PEDS (result cleaner only)
	AddResultCleaner(0x1F13D5AE5CB17E17, ResultCleaner<int>);

	// NETWORK/GET_NUM_RESERVED_MISSION_VEHICLES (result cleaner only)
	AddResultCleaner(0xCF3A965906452031, ResultCleaner<int>);

	// CFX/GET_NUM_RESOURCES (result cleaner only)
	AddResultCleaner(0x863f27b, ResultCleaner<int>);

	// CFX/GET_NUM_RESOURCE_METADATA
	static auto nh_0x776e864 = rage::scrEngine::GetNativeHandler(0x776e864);
	rage::scrEngine::RegisterNativeHandler(0x776e864, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x776e864(cxt);
	});
	        
	AddResultCleaner(0x776e864, ResultCleaner<int>);

	// MISC/GET_NUM_SUCCESSFUL_STUNT_JUMPS (result cleaner only)
	AddResultCleaner(0x996DD1E1E02F1008, ResultCleaner<int>);

	// FILES/GET_NUM_TATTOO_SHOP_DLC_ITEMS (result cleaner only)
	AddResultCleaner(0x278F76C3B0A8F109, ResultCleaner<int>);

	// AUDIO/GET_NUM_UNLOCKED_RADIO_STATIONS (result cleaner only)
	AddResultCleaner(0xF1620ECB50E01DE7, ResultCleaner<int>);

	// VEHICLE/GET_NUM_VEHICLE_MODS (result cleaner only)
	AddResultCleaner(0xE38E9162A2500646, ResultCleaner<int>);

	// VEHICLE/GET_NUM_VEHICLE_WINDOW_TINTS (result cleaner only)
	AddResultCleaner(0x9D1224004B3A6707, ResultCleaner<int>);

	// OBJECT/GET_OBJECT_FRAGMENT_DAMAGE_HEALTH
	static auto nh_0xB6FBFD079B8D0596 = rage::scrEngine::GetNativeHandler(0xB6FBFD079B8D0596);
	rage::scrEngine::RegisterNativeHandler(0xB6FBFD079B8D0596, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB6FBFD079B8D0596(cxt);
	});
	        
	AddResultCleaner(0xB6FBFD079B8D0596, ResultCleaner<float>);

	// ENTITY/GET_OBJECT_INDEX_FROM_ENTITY_INDEX (result cleaner only)
	AddResultCleaner(0xD7E3B9735C0F89D6, ResultCleaner<int>);

	// MISC/GET_ONSCREEN_KEYBOARD_RESULT (result cleaner only)
	AddResultCleaner(0x8362B09B91893647, ResultCleaner<char*>);

	// STATS/GET_PACKED_BOOL_STAT_KEY (result cleaner only)
	AddResultCleaner(0x80C75307B1C42837, ResultCleaner<int>);

	// STATS/GET_PACKED_INT_STAT_KEY (result cleaner only)
	AddResultCleaner(0x61E111E323419E07, ResultCleaner<int>);

	// STATS/GET_PACKED_TU_BOOL_STAT_KEY (result cleaner only)
	AddResultCleaner(0xC4BB08EE7907471E, ResultCleaner<int>);

	// STATS/GET_PACKED_TU_INT_STAT_KEY (result cleaner only)
	AddResultCleaner(0xD16C2AD6B8E32854, ResultCleaner<int>);

	// CFX/GET_PARKED_VEHICLE_DENSITY_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xff72df84, ResultCleaner<float>);

	// HUD/GET_PAUSE_MENU_STATE (result cleaner only)
	AddResultCleaner(0x272ACD84970869C5, ResultCleaner<int>);

	// PED/GET_PEDHEADSHOT_TXD_STRING (result cleaner only)
	AddResultCleaner(0xDB4EACD4AD0A5D6B, ResultCleaner<char*>);

	// PED/GET_PEDS_JACKER (result cleaner only)
	AddResultCleaner(0x9B128DC36C1E04CF, ResultCleaner<int>);

	// PED/GET_PED_ACCURACY (result cleaner only)
	AddResultCleaner(0x37F4AD56ECBC0CD6, ResultCleaner<int>);

	// PED/GET_PED_ALERTNESS (result cleaner only)
	AddResultCleaner(0xF6AA118530443FD2, ResultCleaner<int>);

	// WEAPON/GET_PED_AMMO_BY_TYPE (result cleaner only)
	AddResultCleaner(0x39D22031557946C1, ResultCleaner<int>);

	// WEAPON/GET_PED_AMMO_TYPE_FROM_WEAPON (result cleaner only)
	AddResultCleaner(0x7FEAD38B326B9F74, ResultCleaner<int>);

	// PED/GET_PED_ARMOUR (result cleaner only)
	AddResultCleaner(0x9483AF821605B1D8, ResultCleaner<int>);

	// PED/GET_PED_AS_GROUP_LEADER (result cleaner only)
	AddResultCleaner(0x5CCE68DBD5FE93EC, ResultCleaner<int>);

	// PED/GET_PED_AS_GROUP_MEMBER (result cleaner only)
	AddResultCleaner(0x51455483CF23ED97, ResultCleaner<int>);

	// PED/GET_PED_BONE_INDEX (result cleaner only)
	AddResultCleaner(0x3F428D08BE5AAE31, ResultCleaner<int>);

	// PED/GET_PED_CAUSE_OF_DEATH (result cleaner only)
	AddResultCleaner(0x16FFE42AB2D2DC59, ResultCleaner<int>);

	// CFX/GET_PED_COLLECTIONS_COUNT (result cleaner only)
	AddResultCleaner(0x45946359, ResultCleaner<int>);

	// CFX/GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE (result cleaner only)
	AddResultCleaner(0x94eb1fe4, ResultCleaner<int>);

	// CFX/GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP (result cleaner only)
	AddResultCleaner(0xfbdb885f, ResultCleaner<int>);

	// CFX/GET_PED_COLLECTION_NAME (result cleaner only)
	AddResultCleaner(0xfed5d83a, ResultCleaner<char*>);

	// CFX/GET_PED_COLLECTION_NAME_FROM_DRAWABLE (result cleaner only)
	AddResultCleaner(0xd6bba48b, ResultCleaner<char*>);

	// CFX/GET_PED_COLLECTION_NAME_FROM_PROP (result cleaner only)
	AddResultCleaner(0x8ed0c17, ResultCleaner<char*>);

	// PED/GET_PED_COMBAT_MOVEMENT (result cleaner only)
	AddResultCleaner(0xDEA92412FCAEB3F5, ResultCleaner<int>);

	// PED/GET_PED_COMBAT_RANGE (result cleaner only)
	AddResultCleaner(0xF9D9F7F2DB8E2FA0, ResultCleaner<int>);

	// PED/GET_PED_CONFIG_FLAG (result cleaner only)
	AddResultCleaner(0x7EE53118C892B513, ResultCleaner<bool>);

	// PED/GET_PED_DECORATIONS_STATE (result cleaner only)
	AddResultCleaner(0x71EAB450D86954A1, ResultCleaner<int>);

	// PED/GET_PED_DECORATION_ZONE_FROM_HASHES (result cleaner only)
	AddResultCleaner(0x9FD452BFBE7A7A8B, ResultCleaner<int>);

	// CFX/GET_PED_DENSITY_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xf5a904f9, ResultCleaner<float>);

	// TASK/GET_PED_DESIRED_MOVE_BLEND_RATIO (result cleaner only)
	AddResultCleaner(0x8517D4A6CA8513ED, ResultCleaner<float>);

	// CFX/GET_PED_DRAWABLE_GLOBAL_INDEX_FROM_COLLECTION
	static auto nh_0x280f1fc3 = rage::scrEngine::GetNativeHandler(0x280f1fc3);
	rage::scrEngine::RegisterNativeHandler(0x280f1fc3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x280f1fc3(cxt);
	});
	        
	AddResultCleaner(0x280f1fc3, ResultCleaner<int>);

	// PED/GET_PED_DRAWABLE_VARIATION (result cleaner only)
	AddResultCleaner(0x67F3780DD425D4FC, ResultCleaner<int>);

	// CFX/GET_PED_DRAWABLE_VARIATION_COLLECTION_LOCAL_INDEX (result cleaner only)
	AddResultCleaner(0x9970386f, ResultCleaner<int>);

	// CFX/GET_PED_DRAWABLE_VARIATION_COLLECTION_NAME (result cleaner only)
	AddResultCleaner(0xbce0ab63, ResultCleaner<char*>);

	// PED/GET_PED_ENVEFF_SCALE (result cleaner only)
	AddResultCleaner(0x9C14D30395A51A3C, ResultCleaner<float>);

	// CFX/GET_PED_EYE_COLOR (result cleaner only)
	AddResultCleaner(0xa47b860f, ResultCleaner<int>);

	// CFX/GET_PED_FACE_FEATURE (result cleaner only)
	AddResultCleaner(0xba352add, ResultCleaner<float>);

	// PED/GET_PED_GROUP_INDEX (result cleaner only)
	AddResultCleaner(0xF162E133B4E7A675, ResultCleaner<int>);

	// CFX/GET_PED_HAIR_COLOR (result cleaner only)
	AddResultCleaner(0xa3ea2893, ResultCleaner<int>);

	// CFX/GET_PED_HAIR_HIGHLIGHT_COLOR (result cleaner only)
	AddResultCleaner(0x4b087305, ResultCleaner<int>);

	// PED/GET_PED_HEAD_BLEND_DATA
	static auto nh_0x2746BD9D88C5C5D0 = rage::scrEngine::GetNativeHandler(0x2746BD9D88C5C5D0);
	rage::scrEngine::RegisterNativeHandler(0x2746BD9D88C5C5D0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2746BD9D88C5C5D0(cxt);
	});
	        
	AddResultCleaner(0x2746BD9D88C5C5D0, ResultCleaner<bool>);

	// PED/GET_PED_HEAD_BLEND_FIRST_INDEX (result cleaner only)
	AddResultCleaner(0x68D353AB88B97E0C, ResultCleaner<int>);

	// PED/GET_PED_HEAD_BLEND_NUM_HEADS (result cleaner only)
	AddResultCleaner(0x5EF37013A6539C9D, ResultCleaner<int>);

	// CFX/GET_PED_HEAD_OVERLAY_DATA
	static auto nh_0xc46ee605 = rage::scrEngine::GetNativeHandler(0xc46ee605);
	rage::scrEngine::RegisterNativeHandler(0xc46ee605, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xc46ee605(cxt);
	});
	        
	AddResultCleaner(0xc46ee605, ResultCleaner<bool>);

	// PED/GET_PED_HEAD_OVERLAY_NUM (result cleaner only)
	AddResultCleaner(0xCF1CE768BB43480E, ResultCleaner<int>);

	// PED/GET_PED_HELMET_STORED_HAT_PROP_INDEX (result cleaner only)
	AddResultCleaner(0x451294E859ECC018, ResultCleaner<int>);

	// PED/GET_PED_HELMET_STORED_HAT_TEX_INDEX (result cleaner only)
	AddResultCleaner(0x9D728C1E12BF5518, ResultCleaner<int>);

	// ENTITY/GET_PED_INDEX_FROM_ENTITY_INDEX (result cleaner only)
	AddResultCleaner(0x04A2A40C73395041, ResultCleaner<int>);

	// VEHICLE/GET_PED_IN_VEHICLE_SEAT (result cleaner only)
	AddResultCleaner(0xBB40DD2270B65366, ResultCleaner<int>);

	// PED/GET_PED_LAST_DAMAGE_BONE
	static auto nh_0xD75960F6BD9EA49C = rage::scrEngine::GetNativeHandler(0xD75960F6BD9EA49C);
	rage::scrEngine::RegisterNativeHandler(0xD75960F6BD9EA49C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD75960F6BD9EA49C(cxt);
	});
	        
	AddResultCleaner(0xD75960F6BD9EA49C, ResultCleaner<bool>);

	// WEAPON/GET_PED_LAST_WEAPON_IMPACT_COORD
	static auto nh_0x6C4D0409BA1A2BC2 = rage::scrEngine::GetNativeHandler(0x6C4D0409BA1A2BC2);
	rage::scrEngine::RegisterNativeHandler(0x6C4D0409BA1A2BC2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6C4D0409BA1A2BC2(cxt);
	});
	        
	AddResultCleaner(0x6C4D0409BA1A2BC2, ResultCleaner<bool>);

	// PED/GET_PED_MAX_HEALTH (result cleaner only)
	AddResultCleaner(0x4700A416E8324EF3, ResultCleaner<int>);

	// CFX/GET_PED_MODEL_PERSONALITY (result cleaner only)
	AddResultCleaner(0xfe08cad6, ResultCleaner<int>);

	// PED/GET_PED_MONEY (result cleaner only)
	AddResultCleaner(0x3F69145BBA87BAE7, ResultCleaner<int>);

	// CFX/GET_PED_MOVEMENT_CLIPSET (result cleaner only)
	AddResultCleaner(0x69e81e3d, ResultCleaner<int>);

	// PED/GET_PED_NEARBY_PEDS
	static auto nh_0x23F8F5FC7E8C4A6B = rage::scrEngine::GetNativeHandler(0x23F8F5FC7E8C4A6B);
	rage::scrEngine::RegisterNativeHandler(0x23F8F5FC7E8C4A6B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x23F8F5FC7E8C4A6B(cxt);
	});
	        
	AddResultCleaner(0x23F8F5FC7E8C4A6B, ResultCleaner<int>);

	// PED/GET_PED_NEARBY_VEHICLES
	static auto nh_0xCFF869CBFA210D82 = rage::scrEngine::GetNativeHandler(0xCFF869CBFA210D82);
	rage::scrEngine::RegisterNativeHandler(0xCFF869CBFA210D82, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCFF869CBFA210D82(cxt);
	});
	        
	AddResultCleaner(0xCFF869CBFA210D82, ResultCleaner<int>);

	// PED/GET_PED_PALETTE_VARIATION (result cleaner only)
	AddResultCleaner(0xE3DD5F2A84B42281, ResultCleaner<int>);

	// PED/GET_PED_PARACHUTE_LANDING_TYPE (result cleaner only)
	AddResultCleaner(0x8B9F1FC6AE8166C0, ResultCleaner<int>);

	// PED/GET_PED_PARACHUTE_STATE (result cleaner only)
	AddResultCleaner(0x79CFD9827CC979B6, ResultCleaner<int>);

	// PED/GET_PED_PARACHUTE_TINT_INDEX
	static auto nh_0xEAF5F7E5AE7C6C9D = rage::scrEngine::GetNativeHandler(0xEAF5F7E5AE7C6C9D);
	rage::scrEngine::RegisterNativeHandler(0xEAF5F7E5AE7C6C9D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEAF5F7E5AE7C6C9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_PED_PROP_GLOBAL_INDEX_FROM_COLLECTION
	static auto nh_0x2cb45cdc = rage::scrEngine::GetNativeHandler(0x2cb45cdc);
	rage::scrEngine::RegisterNativeHandler(0x2cb45cdc, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2cb45cdc(cxt);
	});
	        
	AddResultCleaner(0x2cb45cdc, ResultCleaner<int>);

	// PED/GET_PED_PROP_INDEX (result cleaner only)
	AddResultCleaner(0x898CC20EA75BACD8, ResultCleaner<int>);

	// PED/GET_PED_PROP_TEXTURE_INDEX (result cleaner only)
	AddResultCleaner(0xE131A28626F81AB2, ResultCleaner<int>);

	// PED/GET_PED_RAGDOLL_BONE_INDEX (result cleaner only)
	AddResultCleaner(0x2057EF813397A772, ResultCleaner<int>);

	// PED/GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH (result cleaner only)
	AddResultCleaner(0x42FDD0F017B1E38E, ResultCleaner<int>);

	// PED/GET_PED_RELATIONSHIP_GROUP_HASH (result cleaner only)
	AddResultCleaner(0x7DBDD04862D95F04, ResultCleaner<int>);

	// PED/GET_PED_RESET_FLAG (result cleaner only)
	AddResultCleaner(0xAF9E59B1B1FBF2A0, ResultCleaner<bool>);

	// PED/GET_PED_SOURCE_OF_DEATH (result cleaner only)
	AddResultCleaner(0x93C8B64DEB84728C, ResultCleaner<int>);

	// PED/GET_PED_STEALTH_MOVEMENT (result cleaner only)
	AddResultCleaner(0x7C2AC9CA66575FBF, ResultCleaner<bool>);

	// CFX/GET_PED_SWEAT (result cleaner only)
	AddResultCleaner(0x44b91e94, ResultCleaner<float>);

	// PED/GET_PED_TEXTURE_VARIATION (result cleaner only)
	AddResultCleaner(0x04A355E041E004E6, ResultCleaner<int>);

	// PED/GET_PED_TIME_OF_DEATH (result cleaner only)
	AddResultCleaner(0x1E98817B311AE98A, ResultCleaner<int>);

	// PED/GET_PED_TYPE (result cleaner only)
	AddResultCleaner(0xFF059E1E4C01E63C, ResultCleaner<int>);

	// VEHICLE/GET_PED_USING_VEHICLE_DOOR (result cleaner only)
	AddResultCleaner(0x218297BF0CFD853B, ResultCleaner<int>);

	// TASK/GET_PED_WAYPOINT_DISTANCE
	static auto nh_0xE6A877C64CAF1BC5 = rage::scrEngine::GetNativeHandler(0xE6A877C64CAF1BC5);
	rage::scrEngine::RegisterNativeHandler(0xE6A877C64CAF1BC5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE6A877C64CAF1BC5(cxt);
	});
	        
	AddResultCleaner(0xE6A877C64CAF1BC5, ResultCleaner<float>);

	// TASK/GET_PED_WAYPOINT_PROGRESS (result cleaner only)
	AddResultCleaner(0x2720AAA75001E094, ResultCleaner<int>);

	// WEAPON/GET_PED_WEAPONTYPE_IN_SLOT (result cleaner only)
	AddResultCleaner(0xEFFED78E9011134D, ResultCleaner<int>);

	// WEAPON/GET_PED_WEAPON_TINT_INDEX (result cleaner only)
	AddResultCleaner(0x2B9EEDC07BD06B9F, ResultCleaner<int>);

	// TASK/GET_PHONE_GESTURE_ANIM_CURRENT_TIME (result cleaner only)
	AddResultCleaner(0x47619ABE8B268C60, ResultCleaner<float>);

	// TASK/GET_PHONE_GESTURE_ANIM_TOTAL_TIME (result cleaner only)
	AddResultCleaner(0x1EE0F68A7C25DEC6, ResultCleaner<float>);

	// OBJECT/GET_PICKUP_OBJECT (result cleaner only)
	AddResultCleaner(0x5099BC55630B25AE, ResultCleaner<int>);

	// PLAYER/GET_PLAYERS_LAST_VEHICLE (result cleaner only)
	AddResultCleaner(0xB6997A7EB3F5C8C0, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_CURRENT_STEALTH_NOISE (result cleaner only)
	AddResultCleaner(0x2F395D61F3A1F877, ResultCleaner<float>);

	// PLAYER/GET_PLAYER_FAKE_WANTED_LEVEL (result cleaner only)
	AddResultCleaner(0x56105E599CAB0EFA, ResultCleaner<int>);

	// CFX/GET_PLAYER_FROM_SERVER_ID (result cleaner only)
	AddResultCleaner(0x344ea166, ResultCleaner<int>);

	// CFX/GET_PLAYER_FROM_STATE_BAG_NAME
	static auto nh_0xa56135e0 = rage::scrEngine::GetNativeHandler(0xa56135e0);
	rage::scrEngine::RegisterNativeHandler(0xa56135e0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xa56135e0(cxt);
	});
	        
	AddResultCleaner(0xa56135e0, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_GROUP (result cleaner only)
	AddResultCleaner(0x0D127585F77030AF, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_HAS_RESERVE_PARACHUTE (result cleaner only)
	AddResultCleaner(0x5DDFE2FF727F3CA3, ResultCleaner<bool>);

	// PLAYER/GET_PLAYER_INDEX (result cleaner only)
	AddResultCleaner(0xA5EDC40EF369B48D, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_INVINCIBLE (result cleaner only)
	AddResultCleaner(0xB721981B2B939E07, ResultCleaner<bool>);

	// CFX/GET_PLAYER_INVINCIBLE_2 (result cleaner only)
	AddResultCleaner(0xf2e3912b, ResultCleaner<bool>);

	// PLAYER/GET_PLAYER_MAX_ARMOUR (result cleaner only)
	AddResultCleaner(0x92659B4CE1863CB3, ResultCleaner<int>);

	// CFX/GET_PLAYER_MAX_STAMINA (result cleaner only)
	AddResultCleaner(0xd014ab79, ResultCleaner<float>);

	// CFX/GET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x8689a825, ResultCleaner<float>);

	// CFX/GET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER (result cleaner only)
	AddResultCleaner(0x27e94ef8, ResultCleaner<float>);

	// PLAYER/GET_PLAYER_NAME (result cleaner only)
	AddResultCleaner(0x6D0DE6A7B5DA71F8, ResultCleaner<char*>);

	// PLAYER/GET_PLAYER_PARACHUTE_PACK_TINT_INDEX
	static auto nh_0x6E9C742F340CE5A2 = rage::scrEngine::GetNativeHandler(0x6E9C742F340CE5A2);
	rage::scrEngine::RegisterNativeHandler(0x6E9C742F340CE5A2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6E9C742F340CE5A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
	static auto nh_0xEF56DBABD3CD4887 = rage::scrEngine::GetNativeHandler(0xEF56DBABD3CD4887);
	rage::scrEngine::RegisterNativeHandler(0xEF56DBABD3CD4887, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xEF56DBABD3CD4887(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/GET_PLAYER_PARACHUTE_TINT_INDEX
	static auto nh_0x75D3F7A1B0D9B145 = rage::scrEngine::GetNativeHandler(0x75D3F7A1B0D9B145);
	rage::scrEngine::RegisterNativeHandler(0x75D3F7A1B0D9B145, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x75D3F7A1B0D9B145(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/GET_PLAYER_PED (result cleaner only)
	AddResultCleaner(0x43A66C31C68491C0, ResultCleaner<int>);

	// PED/GET_PLAYER_PED_IS_FOLLOWING (result cleaner only)
	AddResultCleaner(0x6A3975DEA89F9A17, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_PED_SCRIPT_INDEX (result cleaner only)
	AddResultCleaner(0x50FAC3A3E030A6E1, ResultCleaner<int>);

	// AUDIO/GET_PLAYER_RADIO_STATION_GENRE (result cleaner only)
	AddResultCleaner(0xA571991A7FE6CCEB, ResultCleaner<int>);

	// AUDIO/GET_PLAYER_RADIO_STATION_INDEX (result cleaner only)
	AddResultCleaner(0xE8AF77C4C06ADC93, ResultCleaner<int>);

	// AUDIO/GET_PLAYER_RADIO_STATION_NAME (result cleaner only)
	AddResultCleaner(0xF6D733C32076AD03, ResultCleaner<char*>);

	// PLAYER/GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX
	static auto nh_0xD5A016BC3C09CF40 = rage::scrEngine::GetNativeHandler(0xD5A016BC3C09CF40);
	rage::scrEngine::RegisterNativeHandler(0xD5A016BC3C09CF40, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD5A016BC3C09CF40(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/GET_PLAYER_RGB_COLOUR
	static auto nh_0xE902EF951DCE178F = rage::scrEngine::GetNativeHandler(0xE902EF951DCE178F);
	rage::scrEngine::RegisterNativeHandler(0xE902EF951DCE178F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE902EF951DCE178F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_PLAYER_SERVER_ID (result cleaner only)
	AddResultCleaner(0x4d97bcc7, ResultCleaner<int>);

	// STREAMING/GET_PLAYER_SHORT_SWITCH_STATE (result cleaner only)
	AddResultCleaner(0x20F898A5D9782800, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_SPRINT_STAMINA_REMAINING (result cleaner only)
	AddResultCleaner(0x3F9F16F8E65A7ED7, ResultCleaner<float>);

	// PLAYER/GET_PLAYER_SPRINT_TIME_REMAINING (result cleaner only)
	AddResultCleaner(0x1885BC9B108B4C99, ResultCleaner<float>);

	// CFX/GET_PLAYER_STAMINA (result cleaner only)
	AddResultCleaner(0xe415ec5c, ResultCleaner<float>);

	// STREAMING/GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME (result cleaner only)
	AddResultCleaner(0x5B48A06DD0E792A5, ResultCleaner<int>);

	// STREAMING/GET_PLAYER_SWITCH_INTERP_OUT_DURATION (result cleaner only)
	AddResultCleaner(0x08C2D6C52A3104BB, ResultCleaner<int>);

	// STREAMING/GET_PLAYER_SWITCH_JUMP_CUT_INDEX (result cleaner only)
	AddResultCleaner(0x78C0D93253149435, ResultCleaner<int>);

	// STREAMING/GET_PLAYER_SWITCH_STATE (result cleaner only)
	AddResultCleaner(0x470555300D10B2A5, ResultCleaner<int>);

	// STREAMING/GET_PLAYER_SWITCH_TYPE (result cleaner only)
	AddResultCleaner(0xB3C94A90D9FC9E62, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_TARGET_ENTITY
	static auto nh_0x13EDE1A5DBF797C9 = rage::scrEngine::GetNativeHandler(0x13EDE1A5DBF797C9);
	rage::scrEngine::RegisterNativeHandler(0x13EDE1A5DBF797C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x13EDE1A5DBF797C9(cxt);
	});
	        
	AddResultCleaner(0x13EDE1A5DBF797C9, ResultCleaner<bool>);

	// PLAYER/GET_PLAYER_TEAM (result cleaner only)
	AddResultCleaner(0x37039302F4E0A008, ResultCleaner<int>);

	// PLAYER/GET_PLAYER_UNDERWATER_TIME_REMAINING (result cleaner only)
	AddResultCleaner(0xA1FCF8E6AF40B731, ResultCleaner<float>);

	// CFX/GET_PLAYER_VEHICLE_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x78f27b1f, ResultCleaner<float>);

	// CFX/GET_PLAYER_VEHICLE_DEFENSE_MODIFIER (result cleaner only)
	AddResultCleaner(0x8326e7cd, ResultCleaner<float>);

	// PLAYER/GET_PLAYER_WANTED_LEVEL (result cleaner only)
	AddResultCleaner(0xE28E54788CE8F12D, ResultCleaner<int>);

	// CFX/GET_PLAYER_WEAPON_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x2a3d7cda, ResultCleaner<float>);

	// CFX/GET_PLAYER_WEAPON_DEFENSE_MODIFIER (result cleaner only)
	AddResultCleaner(0xf1543251, ResultCleaner<float>);

	// CFX/GET_PLAYER_WEAPON_DEFENSE_MODIFIER_2 (result cleaner only)
	AddResultCleaner(0x986b65ff, ResultCleaner<float>);

	// VEHICLE/GET_POSITION_IN_RECORDING (result cleaner only)
	AddResultCleaner(0x2DACD605FC681475, ResultCleaner<float>);

	// VEHICLE/GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME
	static auto nh_0xD242728AA6F0FBA2 = rage::scrEngine::GetNativeHandler(0xD242728AA6F0FBA2);
	rage::scrEngine::RegisterNativeHandler(0xD242728AA6F0FBA2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD242728AA6F0FBA2(cxt);
	});
	        
	// CLOCK/GET_POSIX_TIME
	static auto nh_0xDA488F299A5B164E = rage::scrEngine::GetNativeHandler(0xDA488F299A5B164E);
	rage::scrEngine::RegisterNativeHandler(0xDA488F299A5B164E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xDA488F299A5B164E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/GET_PREV_WEATHER_TYPE_HASH_NAME (result cleaner only)
	AddResultCleaner(0x564B884A05EC45A3, ResultCleaner<int>);

	// MISC/GET_PROFILE_SETTING (result cleaner only)
	AddResultCleaner(0xC488FF2356EA7791, ResultCleaner<int>);

	// AUDIO/GET_RADIO_STATION_NAME (result cleaner only)
	AddResultCleaner(0xB28ECA15046CA8B9, ResultCleaner<char*>);

	// MISC/GET_RAIN_LEVEL (result cleaner only)
	AddResultCleaner(0x96695E368AD855F3, ResultCleaner<float>);

	// MISC/GET_RANDOM_EVENT_FLAG (result cleaner only)
	AddResultCleaner(0xD2D57F1D764117B1, ResultCleaner<bool>);

	// MISC/GET_RANDOM_FLOAT_IN_RANGE (result cleaner only)
	AddResultCleaner(0x313CE5879CEB6FCD, ResultCleaner<float>);

	// MISC/GET_RANDOM_INT_IN_RANGE (result cleaner only)
	AddResultCleaner(0xD53343AA4FB7DD28, ResultCleaner<int>);

	// PED/GET_RANDOM_PED_AT_COORD (result cleaner only)
	AddResultCleaner(0x876046A8E3A4B71C, ResultCleaner<int>);

	// VEHICLE/GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE (result cleaner only)
	AddResultCleaner(0xB50807EABE20A8DC, ResultCleaner<int>);

	// CFX/GET_RANDOM_VEHICLE_DENSITY_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x7b0d00c5, ResultCleaner<float>);

	// VEHICLE/GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE (result cleaner only)
	AddResultCleaner(0xC5574E0AEB86BA68, ResultCleaner<int>);

	// VEHICLE/GET_RANDOM_VEHICLE_IN_SPHERE (result cleaner only)
	AddResultCleaner(0x386F6CE5BAF6091C, ResultCleaner<int>);

	// VEHICLE/GET_RANDOM_VEHICLE_MODEL_IN_MEMORY
	static auto nh_0x055BF0AC0C34F4FD = rage::scrEngine::GetNativeHandler(0x055BF0AC0C34F4FD);
	rage::scrEngine::RegisterNativeHandler(0x055BF0AC0C34F4FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x055BF0AC0C34F4FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/GET_RANDOM_VEHICLE_NODE
	static auto nh_0x93E0DB8440B73A7D = rage::scrEngine::GetNativeHandler(0x93E0DB8440B73A7D);
	rage::scrEngine::RegisterNativeHandler(0x93E0DB8440B73A7D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x93E0DB8440B73A7D(cxt);
	});
	        
	AddResultCleaner(0x93E0DB8440B73A7D, ResultCleaner<bool>);

	// OBJECT/GET_RAYFIRE_MAP_OBJECT
	static auto nh_0xB48FCED898292E52 = rage::scrEngine::GetNativeHandler(0xB48FCED898292E52);
	rage::scrEngine::RegisterNativeHandler(0xB48FCED898292E52, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xB48FCED898292E52(cxt);
	});
	        
	AddResultCleaner(0xB48FCED898292E52, ResultCleaner<int>);

	// OBJECT/GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE (result cleaner only)
	AddResultCleaner(0x260EE4FDBDF4DB01, ResultCleaner<float>);

	// PED/GET_RELATIONSHIP_BETWEEN_GROUPS (result cleaner only)
	AddResultCleaner(0x9E6B70061662AE5C, ResultCleaner<int>);

	// PED/GET_RELATIONSHIP_BETWEEN_PEDS (result cleaner only)
	AddResultCleaner(0xEBA5AD3A0EAF7121, ResultCleaner<int>);

	// HUD/GET_RENDERED_CHARACTER_HEIGHT (result cleaner only)
	AddResultCleaner(0xDB88A37483346780, ResultCleaner<float>);

	// CAM/GET_RENDERING_CAM (result cleaner only)
	AddResultCleaner(0x5234F9F10919EABA, ResultCleaner<int>);

	// MISC/GET_REPLAY_STAT_AT_INDEX (result cleaner only)
	AddResultCleaner(0x8098C8D6597AAE18, ResultCleaner<int>);

	// MISC/GET_REPLAY_STAT_COUNT (result cleaner only)
	AddResultCleaner(0xDC9274A7EF6B2867, ResultCleaner<int>);

	// MISC/GET_REPLAY_STAT_MISSION_TYPE (result cleaner only)
	AddResultCleaner(0x2B626A0150E4D449, ResultCleaner<int>);

	// GRAPHICS/GET_REQUESTINGNIGHTVISION (result cleaner only)
	AddResultCleaner(0x35FB78DC42B7BD21, ResultCleaner<bool>);

	// CFX/GET_RESOURCE_BY_FIND_INDEX (result cleaner only)
	AddResultCleaner(0x387246b7, ResultCleaner<char*>);

	// CFX/GET_RESOURCE_KVP_FLOAT
	static auto nh_0x35bdceea = rage::scrEngine::GetNativeHandler(0x35bdceea);
	rage::scrEngine::RegisterNativeHandler(0x35bdceea, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x35bdceea(cxt);
	});
	        
	AddResultCleaner(0x35bdceea, ResultCleaner<float>);

	// CFX/GET_RESOURCE_KVP_INT
	static auto nh_0x557b586a = rage::scrEngine::GetNativeHandler(0x557b586a);
	rage::scrEngine::RegisterNativeHandler(0x557b586a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x557b586a(cxt);
	});
	        
	AddResultCleaner(0x557b586a, ResultCleaner<int>);

	// CFX/GET_RESOURCE_KVP_STRING
	static auto nh_0x5240da5a = rage::scrEngine::GetNativeHandler(0x5240da5a);
	rage::scrEngine::RegisterNativeHandler(0x5240da5a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5240da5a(cxt);
	});
	        
	AddResultCleaner(0x5240da5a, ResultCleaner<char*>);

	// CFX/GET_RESOURCE_METADATA
	static auto nh_0x964bab1d = rage::scrEngine::GetNativeHandler(0x964bab1d);
	rage::scrEngine::RegisterNativeHandler(0x964bab1d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x964bab1d(cxt);
	});
	        
	AddResultCleaner(0x964bab1d, ResultCleaner<char*>);

	// CFX/GET_RESOURCE_STATE
	static auto nh_0x4039b485 = rage::scrEngine::GetNativeHandler(0x4039b485);
	rage::scrEngine::RegisterNativeHandler(0x4039b485, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4039b485(cxt);
	});
	        
	AddResultCleaner(0x4039b485, ResultCleaner<char*>);

	// PATHFIND/GET_ROAD_BOUNDARY_USING_HEADING
	static auto nh_0xA0F8A7517A273C05 = rage::scrEngine::GetNativeHandler(0xA0F8A7517A273C05);
	rage::scrEngine::RegisterNativeHandler(0xA0F8A7517A273C05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xA0F8A7517A273C05(cxt);
	});
	        
	AddResultCleaner(0xA0F8A7517A273C05, ResultCleaner<bool>);

	// INTERIOR/GET_ROOM_KEY_FOR_GAME_VIEWPORT (result cleaner only)
	AddResultCleaner(0xA6575914D2A0B450, ResultCleaner<int>);

	// INTERIOR/GET_ROOM_KEY_FROM_ENTITY (result cleaner only)
	AddResultCleaner(0x47C2A06D4F5F424B, ResultCleaner<int>);

	// CFX/GET_ROPE_FLAGS (result cleaner only)
	AddResultCleaner(0xa80ffe99, ResultCleaner<int>);

	// CFX/GET_ROPE_LENGTH_CHANGE_RATE (result cleaner only)
	AddResultCleaner(0x66d70ea3, ResultCleaner<float>);

	// CFX/GET_ROPE_TIME_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xf341e6ca, ResultCleaner<float>);

	// CFX/GET_ROPE_UPDATE_ORDER (result cleaner only)
	AddResultCleaner(0x2ab2e0f6, ResultCleaner<int>);

	// PHYSICS/GET_ROPE_VERTEX_COUNT (result cleaner only)
	AddResultCleaner(0x3655F544CD30F0B5, ResultCleaner<int>);

	// VEHICLE/GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME
	static auto nh_0x2058206FBE79A8AD = rage::scrEngine::GetNativeHandler(0x2058206FBE79A8AD);
	rage::scrEngine::RegisterNativeHandler(0x2058206FBE79A8AD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2058206FBE79A8AD(cxt);
	});
	        
	// CFX/GET_RUNTIME_TEXTURE_HEIGHT (result cleaner only)
	AddResultCleaner(0x3574aace, ResultCleaner<int>);

	// CFX/GET_RUNTIME_TEXTURE_PITCH (result cleaner only)
	AddResultCleaner(0xca0a085f, ResultCleaner<int>);

	// CFX/GET_RUNTIME_TEXTURE_WIDTH (result cleaner only)
	AddResultCleaner(0xc9f55558, ResultCleaner<int>);

	// PATHFIND/GET_SAFE_COORD_FOR_PED
	static auto nh_0xB61C8E878A4199CA = rage::scrEngine::GetNativeHandler(0xB61C8E878A4199CA);
	rage::scrEngine::RegisterNativeHandler(0xB61C8E878A4199CA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xB61C8E878A4199CA(cxt);
	});
	        
	AddResultCleaner(0xB61C8E878A4199CA, ResultCleaner<bool>);

	// GRAPHICS/GET_SAFE_ZONE_SIZE (result cleaner only)
	AddResultCleaner(0xBAF107B6BB2C97F0, ResultCleaner<float>);

	// GRAPHICS/GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT (result cleaner only)
	AddResultCleaner(0x2DE7EFA66B906036, ResultCleaner<int>);

	// GRAPHICS/GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING (result cleaner only)
	AddResultCleaner(0xE1E258829A885245, ResultCleaner<char*>);

	// CFX/GET_SCENARIO_PED_DENSITY_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x77c598b2, ResultCleaner<float>);

	// GRAPHICS/GET_SCREENBLUR_FADE_CURRENT_TIME (result cleaner only)
	AddResultCleaner(0x5CCABFFCA31DDE33, ResultCleaner<float>);

	// GRAPHICS/GET_SCREEN_COORD_FROM_WORLD_COORD
	static auto nh_0x34E82F05DF2974F5 = rage::scrEngine::GetNativeHandler(0x34E82F05DF2974F5);
	rage::scrEngine::RegisterNativeHandler(0x34E82F05DF2974F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x34E82F05DF2974F5(cxt);
	});
	        
	AddResultCleaner(0x34E82F05DF2974F5, ResultCleaner<bool>);

	// GRAPHICS/GET_SCREEN_RESOLUTION
	static auto nh_0x888D57E407E63624 = rage::scrEngine::GetNativeHandler(0x888D57E407E63624);
	rage::scrEngine::RegisterNativeHandler(0x888D57E407E63624, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x888D57E407E63624(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/GET_SCRIPT_TASK_STATUS (result cleaner only)
	AddResultCleaner(0x77F1BEB8863288D5, ResultCleaner<int>);

	// PED/GET_SEAT_PED_IS_TRYING_TO_ENTER (result cleaner only)
	AddResultCleaner(0x6F4C85ACD641BCD2, ResultCleaner<int>);

	// WEAPON/GET_SELECTED_PED_WEAPON (result cleaner only)
	AddResultCleaner(0x0A6DB4965674D243, ResultCleaner<int>);

	// TASK/GET_SEQUENCE_PROGRESS (result cleaner only)
	AddResultCleaner(0x00A9010CFE1E3533, ResultCleaner<int>);

	// SHAPETEST/GET_SHAPE_TEST_RESULT
	static auto nh_0x3D87450E15D98694 = rage::scrEngine::GetNativeHandler(0x3D87450E15D98694);
	rage::scrEngine::RegisterNativeHandler(0x3D87450E15D98694, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x3D87450E15D98694(cxt);
	});
	        
	AddResultCleaner(0x3D87450E15D98694, ResultCleaner<int>);

	// SHAPETEST/GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL
	static auto nh_0x65287525D951F6BE = rage::scrEngine::GetNativeHandler(0x65287525D951F6BE);
	rage::scrEngine::RegisterNativeHandler(0x65287525D951F6BE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x65287525D951F6BE(cxt);
	});
	        
	AddResultCleaner(0x65287525D951F6BE, ResultCleaner<int>);

	// FILES/GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT (result cleaner only)
	AddResultCleaner(0xC6B9DB42C04DD8C3, ResultCleaner<int>);

	// FILES/GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT (result cleaner only)
	AddResultCleaner(0x017568A8182D98A6, ResultCleaner<int>);

	// FILES/GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT (result cleaner only)
	AddResultCleaner(0xC17AD0E5752BECDA, ResultCleaner<int>);

	// FILES/GET_SHOP_PED_COMPONENT
	static auto nh_0x74C0E2A57EC66760 = rage::scrEngine::GetNativeHandler(0x74C0E2A57EC66760);
	rage::scrEngine::RegisterNativeHandler(0x74C0E2A57EC66760, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x74C0E2A57EC66760(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_SHOP_PED_OUTFIT
	static auto nh_0xB7952076E444979D = rage::scrEngine::GetNativeHandler(0xB7952076E444979D);
	rage::scrEngine::RegisterNativeHandler(0xB7952076E444979D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB7952076E444979D(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT
	static auto nh_0x19F2A026EDF0013F = rage::scrEngine::GetNativeHandler(0x19F2A026EDF0013F);
	rage::scrEngine::RegisterNativeHandler(0x19F2A026EDF0013F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x19F2A026EDF0013F(cxt);
	});
	        
	AddResultCleaner(0x19F2A026EDF0013F, ResultCleaner<bool>);

	// FILES/GET_SHOP_PED_OUTFIT_LOCATE
	static auto nh_0x073CA26B079F956E = rage::scrEngine::GetNativeHandler(0x073CA26B079F956E);
	rage::scrEngine::RegisterNativeHandler(0x073CA26B079F956E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x073CA26B079F956E(cxt);
	});
	        
	AddResultCleaner(0x073CA26B079F956E, ResultCleaner<int>);

	// FILES/GET_SHOP_PED_OUTFIT_PROP_VARIANT
	static auto nh_0xA9F9C2E0FDE11CBB = rage::scrEngine::GetNativeHandler(0xA9F9C2E0FDE11CBB);
	rage::scrEngine::RegisterNativeHandler(0xA9F9C2E0FDE11CBB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA9F9C2E0FDE11CBB(cxt);
	});
	        
	AddResultCleaner(0xA9F9C2E0FDE11CBB, ResultCleaner<bool>);

	// FILES/GET_SHOP_PED_PROP
	static auto nh_0x5D5CAFF661DDF6FC = rage::scrEngine::GetNativeHandler(0x5D5CAFF661DDF6FC);
	rage::scrEngine::RegisterNativeHandler(0x5D5CAFF661DDF6FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5D5CAFF661DDF6FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_SHOP_PED_QUERY_COMPONENT
	static auto nh_0x249E310B2D920699 = rage::scrEngine::GetNativeHandler(0x249E310B2D920699);
	rage::scrEngine::RegisterNativeHandler(0x249E310B2D920699, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x249E310B2D920699(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_SHOP_PED_QUERY_OUTFIT
	static auto nh_0x6D793F03A631FE56 = rage::scrEngine::GetNativeHandler(0x6D793F03A631FE56);
	rage::scrEngine::RegisterNativeHandler(0x6D793F03A631FE56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6D793F03A631FE56(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_SHOP_PED_QUERY_PROP
	static auto nh_0xDE44A00999B2837D = rage::scrEngine::GetNativeHandler(0xDE44A00999B2837D);
	rage::scrEngine::RegisterNativeHandler(0xDE44A00999B2837D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDE44A00999B2837D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/GET_SIZE_OF_SAVE_DATA (result cleaner only)
	AddResultCleaner(0xA09F896CE912481F, ResultCleaner<int>);

	// MISC/GET_SNOW_LEVEL (result cleaner only)
	AddResultCleaner(0xC5868A966E5BE3AE, ResultCleaner<float>);

	// AUDIO/GET_SOUND_ID (result cleaner only)
	AddResultCleaner(0x430386FE9BF80B45, ResultCleaner<int>);

	// AUDIO/GET_SOUND_ID_FROM_NETWORK_ID (result cleaner only)
	AddResultCleaner(0x75262FD12D0A1C84, ResultCleaner<int>);

	// HUD/GET_STANDARD_BLIP_ENUM_ID (result cleaner only)
	AddResultCleaner(0x4A9923385BDB9DAD, ResultCleaner<int>);

	// CFX/GET_STATE_BAG_KEYS
	static auto nh_0x78d864c7 = rage::scrEngine::GetNativeHandler(0x78d864c7);
	rage::scrEngine::RegisterNativeHandler(0x78d864c7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x78d864c7(cxt);
	});
	        
	// CFX/GET_STATE_BAG_VALUE
	static auto nh_0x637f4c75 = rage::scrEngine::GetNativeHandler(0x637f4c75);
	rage::scrEngine::RegisterNativeHandler(0x637f4c75, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x637f4c75(cxt);
	});
	        
	// OBJECT/GET_STATE_OF_CLOSEST_DOOR_OF_TYPE
	static auto nh_0xEDC1A5B84AEF33FF = rage::scrEngine::GetNativeHandler(0xEDC1A5B84AEF33FF);
	rage::scrEngine::RegisterNativeHandler(0xEDC1A5B84AEF33FF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xEDC1A5B84AEF33FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/GET_STATE_OF_RAYFIRE_MAP_OBJECT (result cleaner only)
	AddResultCleaner(0x899BA936634A322E, ResultCleaner<int>);

	// GRAPHICS/GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
	static auto nh_0x1670F8D05056F257 = rage::scrEngine::GetNativeHandler(0x1670F8D05056F257);
	rage::scrEngine::RegisterNativeHandler(0x1670F8D05056F257, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1670F8D05056F257(cxt);
	});
	        
	AddResultCleaner(0x1670F8D05056F257, ResultCleaner<int>);

	// MISC/GET_STATUS_OF_MISSION_REPEAT_SAVE (result cleaner only)
	AddResultCleaner(0x2B5E102E4A42F2BF, ResultCleaner<int>);

	// GRAPHICS/GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO (result cleaner only)
	AddResultCleaner(0x0C0C4E81E1AC60A0, ResultCleaner<int>);

	// GRAPHICS/GET_STATUS_OF_SORTED_LIST_OPERATION (result cleaner only)
	AddResultCleaner(0xF5BED327CEA362B1, ResultCleaner<int>);

	// GRAPHICS/GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO (result cleaner only)
	AddResultCleaner(0x0D6CA79EEEBD8CA3, ResultCleaner<int>);

	// GRAPHICS/GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO (result cleaner only)
	AddResultCleaner(0x90A78ECAA4E78453, ResultCleaner<int>);

	// NETWORK/GET_STATUS_OF_TEXTURE_DOWNLOAD (result cleaner only)
	AddResultCleaner(0x8BD6C6DEA20E82C6, ResultCleaner<int>);

	// AUDIO/GET_STREAM_PLAY_TIME (result cleaner only)
	AddResultCleaner(0x4E72BBDBCA58A3DB, ResultCleaner<int>);

	// PATHFIND/GET_STREET_NAME_AT_COORD
	static auto nh_0x2EB41072B4C1E4C0 = rage::scrEngine::GetNativeHandler(0x2EB41072B4C1E4C0);
	rage::scrEngine::RegisterNativeHandler(0x2EB41072B4C1E4C0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2EB41072B4C1E4C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/GET_STREET_NAME_FROM_HASH_KEY (result cleaner only)
	AddResultCleaner(0xD0EF8A959B8A4CB9, ResultCleaner<char*>);

	// VEHICLE/GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH (result cleaner only)
	AddResultCleaner(0x3E71D0B300B7AA79, ResultCleaner<bool>);

	// VEHICLE/GET_SUBMARINE_NUMBER_OF_AIR_LEAKS (result cleaner only)
	AddResultCleaner(0x093D6DDCA5B8FBAE, ResultCleaner<int>);

	// PED/GET_SYNCHRONIZED_SCENE_PHASE (result cleaner only)
	AddResultCleaner(0xE4A310B1D7FA73CC, ResultCleaner<float>);

	// PED/GET_SYNCHRONIZED_SCENE_RATE (result cleaner only)
	AddResultCleaner(0xD80932D577274D40, ResultCleaner<float>);

	// TASK/GET_TASK_MOVE_NETWORK_EVENT
	static auto nh_0xB4F47213DF45A64C = rage::scrEngine::GetNativeHandler(0xB4F47213DF45A64C);
	rage::scrEngine::RegisterNativeHandler(0xB4F47213DF45A64C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB4F47213DF45A64C(cxt);
	});
	        
	AddResultCleaner(0xB4F47213DF45A64C, ResultCleaner<bool>);

	// TASK/GET_TASK_MOVE_NETWORK_SIGNAL_BOOL
	static auto nh_0xA7FFBA498E4AAF67 = rage::scrEngine::GetNativeHandler(0xA7FFBA498E4AAF67);
	rage::scrEngine::RegisterNativeHandler(0xA7FFBA498E4AAF67, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA7FFBA498E4AAF67(cxt);
	});
	        
	AddResultCleaner(0xA7FFBA498E4AAF67, ResultCleaner<bool>);

	// TASK/GET_TASK_MOVE_NETWORK_STATE (result cleaner only)
	AddResultCleaner(0x717E4D1F2048376D, ResultCleaner<char*>);

	// FILES/GET_TATTOO_SHOP_DLC_ITEM_DATA
	static auto nh_0xFF56381874F82086 = rage::scrEngine::GetNativeHandler(0xFF56381874F82086);
	rage::scrEngine::RegisterNativeHandler(0xFF56381874F82086, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xFF56381874F82086(cxt);
	});
	        
	AddResultCleaner(0xFF56381874F82086, ResultCleaner<bool>);

	// FILES/GET_TATTOO_SHOP_DLC_ITEM_INDEX (result cleaner only)
	AddResultCleaner(0x10144267DD22866C, ResultCleaner<int>);

	// MISC/GET_TENNIS_SWING_ANIM_COMPLETE (result cleaner only)
	AddResultCleaner(0x17DF68D720AA77F8, ResultCleaner<bool>);

	// GRAPHICS/GET_TEXTURE_RESOLUTION
	static auto nh_0x35736EE65BD00C11 = rage::scrEngine::GetNativeHandler(0x35736EE65BD00C11);
	rage::scrEngine::RegisterNativeHandler(0x35736EE65BD00C11, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x35736EE65BD00C11(cxt);
	});
	        
	// SCRIPT/GET_THIS_SCRIPT_NAME (result cleaner only)
	AddResultCleaner(0x442E0A7EDE4A738A, ResultCleaner<char*>);

	// CFX/GET_TIMECYCLE_MODIFIER_COUNT (result cleaner only)
	AddResultCleaner(0xfe2a1d4d, ResultCleaner<int>);

	// GRAPHICS/GET_TIMECYCLE_MODIFIER_INDEX (result cleaner only)
	AddResultCleaner(0xFDF3D97C674AFB66, ResultCleaner<int>);

	// CFX/GET_TIMECYCLE_MODIFIER_INDEX_BY_NAME
	static auto nh_0x5f4cd0e2 = rage::scrEngine::GetNativeHandler(0x5f4cd0e2);
	rage::scrEngine::RegisterNativeHandler(0x5f4cd0e2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5f4cd0e2(cxt);
	});
	        
	AddResultCleaner(0x5f4cd0e2, ResultCleaner<int>);

	// CFX/GET_TIMECYCLE_MODIFIER_NAME_BY_INDEX (result cleaner only)
	AddResultCleaner(0x28cb8608, ResultCleaner<char*>);

	// CFX/GET_TIMECYCLE_MODIFIER_STRENGTH (result cleaner only)
	AddResultCleaner(0xbe54124a, ResultCleaner<float>);

	// CFX/GET_TIMECYCLE_MODIFIER_VAR
	static auto nh_0xa7109e12 = rage::scrEngine::GetNativeHandler(0xa7109e12);
	rage::scrEngine::RegisterNativeHandler(0xa7109e12, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xa7109e12(cxt);
	});
	        
	AddResultCleaner(0xa7109e12, ResultCleaner<bool>);

	// CFX/GET_TIMECYCLE_MODIFIER_VAR_COUNT
	static auto nh_0x60fb60fe = rage::scrEngine::GetNativeHandler(0x60fb60fe);
	rage::scrEngine::RegisterNativeHandler(0x60fb60fe, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x60fb60fe(cxt);
	});
	        
	AddResultCleaner(0x60fb60fe, ResultCleaner<int>);

	// CFX/GET_TIMECYCLE_MODIFIER_VAR_NAME_BY_INDEX
	static auto nh_0xe874ab1d = rage::scrEngine::GetNativeHandler(0xe874ab1d);
	rage::scrEngine::RegisterNativeHandler(0xe874ab1d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xe874ab1d(cxt);
	});
	        
	AddResultCleaner(0xe874ab1d, ResultCleaner<char*>);

	// GRAPHICS/GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX (result cleaner only)
	AddResultCleaner(0x459FD2C8D0AB78BC, ResultCleaner<int>);

	// CFX/GET_TIMECYCLE_VAR_COUNT (result cleaner only)
	AddResultCleaner(0x838b34d8, ResultCleaner<int>);

	// CFX/GET_TIMECYCLE_VAR_DEFAULT_VALUE_BY_INDEX (result cleaner only)
	AddResultCleaner(0x3b90238, ResultCleaner<float>);

	// CFX/GET_TIMECYCLE_VAR_NAME_BY_INDEX (result cleaner only)
	AddResultCleaner(0xc6c55aaf, ResultCleaner<char*>);

	// NETWORK/GET_TIME_AS_STRING (result cleaner only)
	AddResultCleaner(0x9E23B1777A927DAD, ResultCleaner<char*>);

	// NETWORK/GET_TIME_DIFFERENCE (result cleaner only)
	AddResultCleaner(0xA2C6FC031D46FFF0, ResultCleaner<int>);

	// NETWORK/GET_TIME_OFFSET (result cleaner only)
	AddResultCleaner(0x017008CCDAD48503, ResultCleaner<int>);

	// VEHICLE/GET_TIME_POSITION_IN_RECORDING (result cleaner only)
	AddResultCleaner(0x5746F3A7AB7FE544, ResultCleaner<float>);

	// PLAYER/GET_TIME_SINCE_LAST_ARREST (result cleaner only)
	AddResultCleaner(0x5063F92F07C2A316, ResultCleaner<int>);

	// PLAYER/GET_TIME_SINCE_LAST_DEATH (result cleaner only)
	AddResultCleaner(0xC7034807558DDFCA, ResultCleaner<int>);

	// PLAYER/GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC (result cleaner only)
	AddResultCleaner(0xDB89591E290D9182, ResultCleaner<int>);

	// PLAYER/GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT (result cleaner only)
	AddResultCleaner(0xD559D2BE9E37853B, ResultCleaner<int>);

	// PLAYER/GET_TIME_SINCE_PLAYER_HIT_PED (result cleaner only)
	AddResultCleaner(0xE36A25322DC35F42, ResultCleaner<int>);

	// PLAYER/GET_TIME_SINCE_PLAYER_HIT_VEHICLE (result cleaner only)
	AddResultCleaner(0x5D35ECF3A81A0EE0, ResultCleaner<int>);

	// GRAPHICS/GET_TOGGLE_PAUSED_RENDERPHASES_STATUS (result cleaner only)
	AddResultCleaner(0xEB3DAC2C86001E5E, ResultCleaner<bool>);

	// VEHICLE/GET_TOTAL_DURATION_OF_VEHICLE_RECORDING
	static auto nh_0x0E48D1C262390950 = rage::scrEngine::GetNativeHandler(0x0E48D1C262390950);
	rage::scrEngine::RegisterNativeHandler(0x0E48D1C262390950, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0E48D1C262390950(cxt);
	});
	        
	AddResultCleaner(0x0E48D1C262390950, ResultCleaner<float>);

	// VEHICLE/GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID (result cleaner only)
	AddResultCleaner(0x102D125411A7B6E6, ResultCleaner<float>);

	// MISC/GET_TOTAL_SUCCESSFUL_STUNT_JUMPS (result cleaner only)
	AddResultCleaner(0x6856EC3D35C81EA4, ResultCleaner<int>);

	// VEHICLE/GET_TRAIN_CARRIAGE (result cleaner only)
	AddResultCleaner(0x08AAFD0814722BC3, ResultCleaner<int>);

	// CFX/GET_TRAIN_CURRENT_TRACK_NODE (result cleaner only)
	AddResultCleaner(0xe015e854, ResultCleaner<int>);

	// CFX/GET_TRAIN_DOOR_COUNT (result cleaner only)
	AddResultCleaner(0x99974721, ResultCleaner<int>);

	// CFX/GET_TRAIN_DOOR_OPEN_RATIO (result cleaner only)
	AddResultCleaner(0x40b16551, ResultCleaner<float>);

	// GRAPHICS/GET_TV_CHANNEL (result cleaner only)
	AddResultCleaner(0xFC1E275A90D39995, ResultCleaner<int>);

	// GRAPHICS/GET_TV_VOLUME (result cleaner only)
	AddResultCleaner(0x2170813D3DD8661B, ResultCleaner<float>);

	// GRAPHICS/GET_USINGNIGHTVISION (result cleaner only)
	AddResultCleaner(0x2202A3F42C8E5F79, ResultCleaner<bool>);

	// GRAPHICS/GET_USINGSEETHROUGH (result cleaner only)
	AddResultCleaner(0x44B80ABAB9D80BD3, ResultCleaner<bool>);

	// CLOCK/GET_UTC_TIME
	static auto nh_0x8117E09A19EEF4D3 = rage::scrEngine::GetNativeHandler(0x8117E09A19EEF4D3);
	rage::scrEngine::RegisterNativeHandler(0x8117E09A19EEF4D3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x8117E09A19EEF4D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/GET_VARIANT_COMPONENT
	static auto nh_0x6E11F282F11863B6 = rage::scrEngine::GetNativeHandler(0x6E11F282F11863B6);
	rage::scrEngine::RegisterNativeHandler(0x6E11F282F11863B6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x6E11F282F11863B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE
	static auto nh_0xAA19F5572C38B564 = rage::scrEngine::GetNativeHandler(0xAA19F5572C38B564);
	rage::scrEngine::RegisterNativeHandler(0xAA19F5572C38B564, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAA19F5572C38B564(cxt);
	});
	        
	AddResultCleaner(0xAA19F5572C38B564, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_ACCELERATION (result cleaner only)
	AddResultCleaner(0x5DD35C8D074E57AE, ResultCleaner<float>);

	// CFX/GET_VEHICLE_ALARM_TIME_LEFT (result cleaner only)
	AddResultCleaner(0xc62aac98, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_ATTACHED_TO_CARGOBOB (result cleaner only)
	AddResultCleaner(0x873B82D42AC2B9E5, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_BODY_HEALTH (result cleaner only)
	AddResultCleaner(0xF271147EB7B40F12, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CAUSE_OF_DESTRUCTION (result cleaner only)
	AddResultCleaner(0xE495D1EF4C91FD20, ResultCleaner<int>);

	// CFX/GET_VEHICLE_CHEAT_POWER_INCREASE (result cleaner only)
	AddResultCleaner(0xc3c93f28, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CLASS (result cleaner only)
	AddResultCleaner(0x29439776AAA00A62, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED (result cleaner only)
	AddResultCleaner(0x00C09F246ABEDD82, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CLASS_FROM_NAME (result cleaner only)
	AddResultCleaner(0xDEDF1C8BD47C2200, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_CLASS_MAX_ACCELERATION (result cleaner only)
	AddResultCleaner(0x2F83E7E45D9EA7AE, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CLASS_MAX_AGILITY (result cleaner only)
	AddResultCleaner(0x4F930AD022D6DE3B, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CLASS_MAX_BRAKING (result cleaner only)
	AddResultCleaner(0x4BF54C16EC8FEC03, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CLASS_MAX_TRACTION (result cleaner only)
	AddResultCleaner(0xDBC86D85C5059461, ResultCleaner<float>);

	// CFX/GET_VEHICLE_CLUTCH (result cleaner only)
	AddResultCleaner(0x1dad4583, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_COLOR
	static auto nh_0xF3CC740D36221548 = rage::scrEngine::GetNativeHandler(0xF3CC740D36221548);
	rage::scrEngine::RegisterNativeHandler(0xF3CC740D36221548, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF3CC740D36221548(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_COLOURS
	static auto nh_0xA19435F193E081AC = rage::scrEngine::GetNativeHandler(0xA19435F193E081AC);
	rage::scrEngine::RegisterNativeHandler(0xA19435F193E081AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA19435F193E081AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_COLOUR_COMBINATION (result cleaner only)
	AddResultCleaner(0x6A842D197F845D56, ResultCleaner<int>);

	// GRAPHICS/GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE (result cleaner only)
	AddResultCleaner(0xFE26117A5841B2FF, ResultCleaner<int>);

	// CFX/GET_VEHICLE_CURRENT_GEAR (result cleaner only)
	AddResultCleaner(0xb4f4e566, ResultCleaner<int>);

	// CFX/GET_VEHICLE_CURRENT_RPM (result cleaner only)
	AddResultCleaner(0xe7b12b54, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_CUSTOM_PRIMARY_COLOUR
	static auto nh_0xB64CF2CCA9D95F52 = rage::scrEngine::GetNativeHandler(0xB64CF2CCA9D95F52);
	rage::scrEngine::RegisterNativeHandler(0xB64CF2CCA9D95F52, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xB64CF2CCA9D95F52(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_CUSTOM_SECONDARY_COLOUR
	static auto nh_0x8389CD56CA8072DC = rage::scrEngine::GetNativeHandler(0x8389CD56CA8072DC);
	rage::scrEngine::RegisterNativeHandler(0x8389CD56CA8072DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8389CD56CA8072DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/GET_VEHICLE_DASHBOARD_BOOST (result cleaner only)
	AddResultCleaner(0xdffaba2a, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_FUEL (result cleaner only)
	AddResultCleaner(0x19b0b2ce, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_LIGHTS (result cleaner only)
	AddResultCleaner(0x500ffe9d, ResultCleaner<int>);

	// CFX/GET_VEHICLE_DASHBOARD_OIL_PRESSURE (result cleaner only)
	AddResultCleaner(0x3856d767, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_OIL_TEMP (result cleaner only)
	AddResultCleaner(0x1f5996aa, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_RPM (result cleaner only)
	AddResultCleaner(0xf9716a11, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_SPEED (result cleaner only)
	AddResultCleaner(0x9aad420e, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_TEMP (result cleaner only)
	AddResultCleaner(0x6b6adafa, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_VACUUM (result cleaner only)
	AddResultCleaner(0xfabe67a9, ResultCleaner<float>);

	// CFX/GET_VEHICLE_DASHBOARD_WATER_TEMP (result cleaner only)
	AddResultCleaner(0x8e3b3e42, ResultCleaner<float>);

	// AUDIO/GET_VEHICLE_DEFAULT_HORN (result cleaner only)
	AddResultCleaner(0x02165D55000219AC, ResultCleaner<int>);

	// AUDIO/GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS (result cleaner only)
	AddResultCleaner(0xACB5DCCA1EC76840, ResultCleaner<int>);

	// CFX/GET_VEHICLE_DENSITY_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xef7c6538, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_DIRT_LEVEL (result cleaner only)
	AddResultCleaner(0x8F17BC8BA08DA62B, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0xF6AF6CB341349015, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_DOOR_ANGLE_RATIO (result cleaner only)
	AddResultCleaner(0xFE3F9C29F7B32BD5, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_DOOR_LOCK_STATUS (result cleaner only)
	AddResultCleaner(0x25BC98A59C2EA962, ResultCleaner<int>);

	// CFX/GET_VEHICLE_DRAWN_WHEEL_ANGLE_MULT (result cleaner only)
	AddResultCleaner(0x21c1da8e, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_ENGINE_HEALTH (result cleaner only)
	AddResultCleaner(0xC45D23BAF168AAB8, ResultCleaner<float>);

	// CFX/GET_VEHICLE_ENGINE_TEMPERATURE (result cleaner only)
	AddResultCleaner(0xf4f495cb, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_ENVEFF_SCALE (result cleaner only)
	AddResultCleaner(0xA82819CAC9C4C403, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_ESTIMATED_MAX_SPEED (result cleaner only)
	AddResultCleaner(0x53AF99BAA671CA47, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_EXTRA_COLOURS
	static auto nh_0x3BC4245933A166F7 = rage::scrEngine::GetNativeHandler(0x3BC4245933A166F7);
	rage::scrEngine::RegisterNativeHandler(0x3BC4245933A166F7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3BC4245933A166F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_FLIGHT_NOZZLE_POSITION (result cleaner only)
	AddResultCleaner(0xDA62027C8BDB326E, ResultCleaner<float>);

	// CFX/GET_VEHICLE_FUEL_LEVEL (result cleaner only)
	AddResultCleaner(0x5f739bb8, ResultCleaner<float>);

	// CFX/GET_VEHICLE_GEAR_RATIO (result cleaner only)
	AddResultCleaner(0x82e794b7, ResultCleaner<float>);

	// CFX/GET_VEHICLE_GRAVITY_AMOUNT (result cleaner only)
	AddResultCleaner(0xb48a1292, ResultCleaner<float>);

	// CFX/GET_VEHICLE_HANDBRAKE (result cleaner only)
	AddResultCleaner(0x483b013c, ResultCleaner<bool>);

	// CFX/GET_VEHICLE_HANDLING_FLOAT
	static auto nh_0x642fc12f = rage::scrEngine::GetNativeHandler(0x642fc12f);
	rage::scrEngine::RegisterNativeHandler(0x642fc12f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x642fc12f(cxt);
	});
	        
	AddResultCleaner(0x642fc12f, ResultCleaner<float>);

	// CFX/GET_VEHICLE_HANDLING_INT
	static auto nh_0x27396c75 = rage::scrEngine::GetNativeHandler(0x27396c75);
	rage::scrEngine::RegisterNativeHandler(0x27396c75, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x27396c75(cxt);
	});
	        
	AddResultCleaner(0x27396c75, ResultCleaner<int>);

	// CFX/GET_VEHICLE_HANDLING_VECTOR
	static auto nh_0xfb341304 = rage::scrEngine::GetNativeHandler(0xfb341304);
	rage::scrEngine::RegisterNativeHandler(0xfb341304, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xfb341304(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_HAS_KERS (result cleaner only)
	AddResultCleaner(0x50634E348C8D44EF, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_HEALTH_PERCENTAGE (result cleaner only)
	AddResultCleaner(0xB8EF61207C2393A9, ResultCleaner<float>);

	// CFX/GET_VEHICLE_HIGH_GEAR (result cleaner only)
	AddResultCleaner(0xf1d1d689, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_HOMING_LOCKON_STATE (result cleaner only)
	AddResultCleaner(0xE6B0E8CFC3633BF0, ResultCleaner<int>);

	// AUDIO/GET_VEHICLE_HORN_SOUND_INDEX (result cleaner only)
	AddResultCleaner(0xD53F3A29BCE2580E, ResultCleaner<int>);

	// ENTITY/GET_VEHICLE_INDEX_FROM_ENTITY_INDEX (result cleaner only)
	AddResultCleaner(0x4B53F92932ADFAC0, ResultCleaner<int>);

	// CFX/GET_VEHICLE_INDICATOR_LIGHTS (result cleaner only)
	AddResultCleaner(0x83070354, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS (result cleaner only)
	AddResultCleaner(0xCA4AC3EAAE46EC7B, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_IS_MERCENARY (result cleaner only)
	AddResultCleaner(0xD4C4642CB7F50B5D, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_LAYOUT_HASH (result cleaner only)
	AddResultCleaner(0x28D37D4F71AC5C58, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_LIGHTS_STATE
	static auto nh_0xB91B4C20085BD12F = rage::scrEngine::GetNativeHandler(0xB91B4C20085BD12F);
	rage::scrEngine::RegisterNativeHandler(0xB91B4C20085BD12F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB91B4C20085BD12F(cxt);
	});
	        
	AddResultCleaner(0xB91B4C20085BD12F, ResultCleaner<bool>);

	// CFX/GET_VEHICLE_LIGHT_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x7e6e219c, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_LIVERY (result cleaner only)
	AddResultCleaner(0x2BB9230590DA5E8A, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_LIVERY_COUNT (result cleaner only)
	AddResultCleaner(0x87B63E25A529D526, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_LOCK_ON_TARGET
	static auto nh_0x8F5EBAB1F260CFCE = rage::scrEngine::GetNativeHandler(0x8F5EBAB1F260CFCE);
	rage::scrEngine::RegisterNativeHandler(0x8F5EBAB1F260CFCE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8F5EBAB1F260CFCE(cxt);
	});
	        
	AddResultCleaner(0x8F5EBAB1F260CFCE, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_MAX_BRAKING (result cleaner only)
	AddResultCleaner(0xAD7E85FC227197C4, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS (result cleaner only)
	AddResultCleaner(0xA7C4F2C6E744A550, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MAX_TRACTION (result cleaner only)
	AddResultCleaner(0xA132FB5370554DB0, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MOD (result cleaner only)
	AddResultCleaner(0x772960298DA26FDB, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MODEL_ACCELERATION (result cleaner only)
	AddResultCleaner(0x8C044C5C84505B6A, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED (result cleaner only)
	AddResultCleaner(0xF417C2502FFFED43, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MODEL_MAX_BRAKING (result cleaner only)
	AddResultCleaner(0xDC53FD41B4ED944C, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS (result cleaner only)
	AddResultCleaner(0xBFBA3BA79CFF7EBF, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MODEL_MAX_TRACTION (result cleaner only)
	AddResultCleaner(0x539DE94D44FDFD0D, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_MODEL_NUMBER_OF_SEATS (result cleaner only)
	AddResultCleaner(0x2AD93716F184EDA4, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MODEL_VALUE (result cleaner only)
	AddResultCleaner(0x5873C14A52D74236, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MOD_COLOR_1
	static auto nh_0xE8D65CA700C9A693 = rage::scrEngine::GetNativeHandler(0xE8D65CA700C9A693);
	rage::scrEngine::RegisterNativeHandler(0xE8D65CA700C9A693, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE8D65CA700C9A693(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_MOD_COLOR_1_NAME (result cleaner only)
	AddResultCleaner(0xB45085B721EFD38C, ResultCleaner<char*>);

	// VEHICLE/GET_VEHICLE_MOD_COLOR_2
	static auto nh_0x81592BE4E3878728 = rage::scrEngine::GetNativeHandler(0x81592BE4E3878728);
	rage::scrEngine::RegisterNativeHandler(0x81592BE4E3878728, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x81592BE4E3878728(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/GET_VEHICLE_MOD_COLOR_2_NAME (result cleaner only)
	AddResultCleaner(0x4967A516ED23A5A1, ResultCleaner<char*>);

	// VEHICLE/GET_VEHICLE_MOD_IDENTIFIER_HASH (result cleaner only)
	AddResultCleaner(0x4593CF82AA179706, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MOD_KIT (result cleaner only)
	AddResultCleaner(0x6325D1A044AE510D, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MOD_KIT_TYPE (result cleaner only)
	AddResultCleaner(0xFC058F5121E54C32, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MOD_MODIFIER_VALUE (result cleaner only)
	AddResultCleaner(0x90A38E9838E0A8C1, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_MOD_VARIATION (result cleaner only)
	AddResultCleaner(0xB3924ECD70E095DC, ResultCleaner<bool>);

	// CFX/GET_VEHICLE_NEXT_GEAR (result cleaner only)
	AddResultCleaner(0xddb298ae, ResultCleaner<int>);

	// PATHFIND/GET_VEHICLE_NODE_IS_GPS_ALLOWED (result cleaner only)
	AddResultCleaner(0xA2AE5C478B96E3B6, ResultCleaner<bool>);

	// PATHFIND/GET_VEHICLE_NODE_IS_SWITCHED_OFF (result cleaner only)
	AddResultCleaner(0x4F5070AA58F69279, ResultCleaner<bool>);

	// PATHFIND/GET_VEHICLE_NODE_POSITION
	static auto nh_0x703123E5E7D429C2 = rage::scrEngine::GetNativeHandler(0x703123E5E7D429C2);
	rage::scrEngine::RegisterNativeHandler(0x703123E5E7D429C2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x703123E5E7D429C2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/GET_VEHICLE_NODE_PROPERTIES
	static auto nh_0x0568566ACBB5DEDC = rage::scrEngine::GetNativeHandler(0x0568566ACBB5DEDC);
	rage::scrEngine::RegisterNativeHandler(0x0568566ACBB5DEDC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x0568566ACBB5DEDC(cxt);
	});
	        
	AddResultCleaner(0x0568566ACBB5DEDC, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_NUMBER_OF_PASSENGERS (result cleaner only)
	AddResultCleaner(0x24CB2137731FFE89, ResultCleaner<int>);

	// CFX/GET_VEHICLE_NUMBER_OF_WHEELS (result cleaner only)
	AddResultCleaner(0xedf4b0fc, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_NUMBER_PLATE_TEXT (result cleaner only)
	AddResultCleaner(0x7CE1CCB9B293020E, ResultCleaner<char*>);

	// VEHICLE/GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX (result cleaner only)
	AddResultCleaner(0xF11BC2DD9A3E7195, ResultCleaner<int>);

	// CFX/GET_VEHICLE_OIL_LEVEL (result cleaner only)
	AddResultCleaner(0xfc7f8ef4, ResultCleaner<float>);

	// PED/GET_VEHICLE_PED_IS_ENTERING (result cleaner only)
	AddResultCleaner(0xF92691AED837A5FC, ResultCleaner<int>);

	// PED/GET_VEHICLE_PED_IS_IN (result cleaner only)
	AddResultCleaner(0x9A9112A0FE9A4713, ResultCleaner<int>);

	// PED/GET_VEHICLE_PED_IS_TRYING_TO_ENTER (result cleaner only)
	AddResultCleaner(0x814FA8BE5449445D, ResultCleaner<int>);

	// PED/GET_VEHICLE_PED_IS_USING (result cleaner only)
	AddResultCleaner(0x6094AD011A2EA87D, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_PETROL_TANK_HEALTH (result cleaner only)
	AddResultCleaner(0x7D5DABE888D2D074, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_PLATE_TYPE (result cleaner only)
	AddResultCleaner(0x9CCC9525BF2408E0, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_RECORDING_ID
	static auto nh_0x21543C612379DB3C = rage::scrEngine::GetNativeHandler(0x21543C612379DB3C);
	rage::scrEngine::RegisterNativeHandler(0x21543C612379DB3C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x21543C612379DB3C(cxt);
	});
	        
	AddResultCleaner(0x21543C612379DB3C, ResultCleaner<int>);

	// CFX/GET_VEHICLE_STEERING_ANGLE (result cleaner only)
	AddResultCleaner(0x1382fcea, ResultCleaner<float>);

	// CFX/GET_VEHICLE_STEERING_SCALE (result cleaner only)
	AddResultCleaner(0x954465de, ResultCleaner<float>);

	// CFX/GET_VEHICLE_THROTTLE_OFFSET (result cleaner only)
	AddResultCleaner(0xd1d07351, ResultCleaner<float>);

	// CFX/GET_VEHICLE_TOP_SPEED_MODIFIER (result cleaner only)
	AddResultCleaner(0x998b7fee, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_TRAILER_VEHICLE
	static auto nh_0x1CDD6BADC297830D = rage::scrEngine::GetNativeHandler(0x1CDD6BADC297830D);
	rage::scrEngine::RegisterNativeHandler(0x1CDD6BADC297830D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1CDD6BADC297830D(cxt);
	});
	        
	AddResultCleaner(0x1CDD6BADC297830D, ResultCleaner<bool>);

	// CFX/GET_VEHICLE_TURBO_PRESSURE (result cleaner only)
	AddResultCleaner(0xe02b51d7, ResultCleaner<float>);

	// CFX/GET_VEHICLE_TYPE (result cleaner only)
	AddResultCleaner(0xa273060e, ResultCleaner<char*>);

	// CFX/GET_VEHICLE_TYPE_RAW (result cleaner only)
	AddResultCleaner(0xde73bc10, ResultCleaner<int>);

	// VEHICLE/GET_VEHICLE_TYRES_CAN_BURST (result cleaner only)
	AddResultCleaner(0x678B9BB8C3F58FEB, ResultCleaner<bool>);

	// VEHICLE/GET_VEHICLE_TYRE_SMOKE_COLOR
	static auto nh_0xB635392A4938B3C3 = rage::scrEngine::GetNativeHandler(0xB635392A4938B3C3);
	rage::scrEngine::RegisterNativeHandler(0xB635392A4938B3C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xB635392A4938B3C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/GET_VEHICLE_WAYPOINT_PROGRESS (result cleaner only)
	AddResultCleaner(0x9824CFF8FC66E159, ResultCleaner<int>);

	// TASK/GET_VEHICLE_WAYPOINT_TARGET_POINT (result cleaner only)
	AddResultCleaner(0x416B62AC8B9E5BBD, ResultCleaner<int>);

	// CFX/GET_VEHICLE_WHEELIE_STATE (result cleaner only)
	AddResultCleaner(0x137260d1, ResultCleaner<int>);

	// CFX/GET_VEHICLE_WHEEL_BRAKE_PRESSURE (result cleaner only)
	AddResultCleaner(0x70fe2eff, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_FLAGS (result cleaner only)
	AddResultCleaner(0xc70fa0c7, ResultCleaner<int>);

	// CFX/GET_VEHICLE_WHEEL_HEALTH (result cleaner only)
	AddResultCleaner(0x54a677f5, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_IS_POWERED (result cleaner only)
	AddResultCleaner(0x3ccf1b49, ResultCleaner<bool>);

	// CFX/GET_VEHICLE_WHEEL_POWER (result cleaner only)
	AddResultCleaner(0xd203287, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_RIM_COLLIDER_SIZE (result cleaner only)
	AddResultCleaner(0xcee21ab2, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_ROTATION_SPEED (result cleaner only)
	AddResultCleaner(0xea1859e5, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_SIZE (result cleaner only)
	AddResultCleaner(0x4046b66, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_SPEED (result cleaner only)
	AddResultCleaner(0x149c9da0, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_STEERING_ANGLE (result cleaner only)
	AddResultCleaner(0xa0867448, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_SURFACE_MATERIAL (result cleaner only)
	AddResultCleaner(0xa7f04022, ResultCleaner<int>);

	// CFX/GET_VEHICLE_WHEEL_SUSPENSION_COMPRESSION (result cleaner only)
	AddResultCleaner(0x2b48175b, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_TIRE_COLLIDER_SIZE (result cleaner only)
	AddResultCleaner(0xe0ba9fe6, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_TIRE_COLLIDER_WIDTH (result cleaner only)
	AddResultCleaner(0xef65929c, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_TRACTION_VECTOR_LENGTH (result cleaner only)
	AddResultCleaner(0x3bcfee14, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_WHEEL_TYPE (result cleaner only)
	AddResultCleaner(0xB3ED1BFB4BE636DC, ResultCleaner<int>);

	// CFX/GET_VEHICLE_WHEEL_WIDTH (result cleaner only)
	AddResultCleaner(0x9c7b59f9, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_X_OFFSET (result cleaner only)
	AddResultCleaner(0xcc90cbca, ResultCleaner<float>);

	// CFX/GET_VEHICLE_WHEEL_Y_ROTATION (result cleaner only)
	AddResultCleaner(0x2ea4affe, ResultCleaner<float>);

	// VEHICLE/GET_VEHICLE_WINDOW_TINT (result cleaner only)
	AddResultCleaner(0x0EE21293DAD47C95, ResultCleaner<int>);

	// CFX/GET_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR
	static auto nh_0xc715f730 = rage::scrEngine::GetNativeHandler(0xc715f730);
	rage::scrEngine::RegisterNativeHandler(0xc715f730, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xc715f730(cxt);
	});
	        
	AddResultCleaner(0xc715f730, ResultCleaner<bool>);

	// PLAYER/GET_WANTED_LEVEL_RADIUS (result cleaner only)
	AddResultCleaner(0x085DEB493BE80812, ResultCleaner<float>);

	// PLAYER/GET_WANTED_LEVEL_THRESHOLD (result cleaner only)
	AddResultCleaner(0xFDD179EAF45B556C, ResultCleaner<int>);

	// WATER/GET_WATER_HEIGHT
	static auto nh_0xF6829842C06AE524 = rage::scrEngine::GetNativeHandler(0xF6829842C06AE524);
	rage::scrEngine::RegisterNativeHandler(0xF6829842C06AE524, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF6829842C06AE524(cxt);
	});
	        
	AddResultCleaner(0xF6829842C06AE524, ResultCleaner<bool>);

	// WATER/GET_WATER_HEIGHT_NO_WAVES
	static auto nh_0x8EE6B53CE13A9794 = rage::scrEngine::GetNativeHandler(0x8EE6B53CE13A9794);
	rage::scrEngine::RegisterNativeHandler(0x8EE6B53CE13A9794, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8EE6B53CE13A9794(cxt);
	});
	        
	AddResultCleaner(0x8EE6B53CE13A9794, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_ALPHA
	static auto nh_0x14088095 = rage::scrEngine::GetNativeHandler(0x14088095);
	rage::scrEngine::RegisterNativeHandler(0x14088095, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x14088095(cxt);
	});
	        
	AddResultCleaner(0x14088095, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_AT_COORDS (result cleaner only)
	AddResultCleaner(0x17321452, ResultCleaner<int>);

	// CFX/GET_WATER_QUAD_AT_COORDS_3D (result cleaner only)
	AddResultCleaner(0xf8e03db8, ResultCleaner<int>);

	// CFX/GET_WATER_QUAD_BOUNDS
	static auto nh_0x42e9a06a = rage::scrEngine::GetNativeHandler(0x42e9a06a);
	rage::scrEngine::RegisterNativeHandler(0x42e9a06a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x42e9a06a(cxt);
	});
	        
	AddResultCleaner(0x42e9a06a, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_COUNT (result cleaner only)
	AddResultCleaner(0xb1884159, ResultCleaner<int>);

	// CFX/GET_WATER_QUAD_HAS_LIMITED_DEPTH
	static auto nh_0x22ea3bd8 = rage::scrEngine::GetNativeHandler(0x22ea3bd8);
	rage::scrEngine::RegisterNativeHandler(0x22ea3bd8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x22ea3bd8(cxt);
	});
	        
	AddResultCleaner(0x22ea3bd8, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_IS_INVISIBLE
	static auto nh_0x1dedbd77 = rage::scrEngine::GetNativeHandler(0x1dedbd77);
	rage::scrEngine::RegisterNativeHandler(0x1dedbd77, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1dedbd77(cxt);
	});
	        
	AddResultCleaner(0x1dedbd77, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_LEVEL
	static auto nh_0x6523816b = rage::scrEngine::GetNativeHandler(0x6523816b);
	rage::scrEngine::RegisterNativeHandler(0x6523816b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6523816b(cxt);
	});
	        
	AddResultCleaner(0x6523816b, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_NO_STENCIL
	static auto nh_0x6f4acba = rage::scrEngine::GetNativeHandler(0x6f4acba);
	rage::scrEngine::RegisterNativeHandler(0x6f4acba, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6f4acba(cxt);
	});
	        
	AddResultCleaner(0x6f4acba, ResultCleaner<bool>);

	// CFX/GET_WATER_QUAD_TYPE
	static auto nh_0xe2501b8b = rage::scrEngine::GetNativeHandler(0xe2501b8b);
	rage::scrEngine::RegisterNativeHandler(0xe2501b8b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xe2501b8b(cxt);
	});
	        
	AddResultCleaner(0xe2501b8b, ResultCleaner<bool>);

	// CFX/GET_WAVE_QUAD_AMPLITUDE
	static auto nh_0x865139a3 = rage::scrEngine::GetNativeHandler(0x865139a3);
	rage::scrEngine::RegisterNativeHandler(0x865139a3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x865139a3(cxt);
	});
	        
	AddResultCleaner(0x865139a3, ResultCleaner<bool>);

	// CFX/GET_WAVE_QUAD_AT_COORDS (result cleaner only)
	AddResultCleaner(0x3f5a61a7, ResultCleaner<int>);

	// CFX/GET_WAVE_QUAD_BOUNDS
	static auto nh_0xf86136db = rage::scrEngine::GetNativeHandler(0xf86136db);
	rage::scrEngine::RegisterNativeHandler(0xf86136db, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xf86136db(cxt);
	});
	        
	AddResultCleaner(0xf86136db, ResultCleaner<bool>);

	// CFX/GET_WAVE_QUAD_COUNT (result cleaner only)
	AddResultCleaner(0x9250c76, ResultCleaner<int>);

	// CFX/GET_WAVE_QUAD_DIRECTION
	static auto nh_0xcce49a1c = rage::scrEngine::GetNativeHandler(0xcce49a1c);
	rage::scrEngine::RegisterNativeHandler(0xcce49a1c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xcce49a1c(cxt);
	});
	        
	AddResultCleaner(0xcce49a1c, ResultCleaner<bool>);

	// HUD/GET_WAYPOINT_BLIP_ENUM_ID (result cleaner only)
	AddResultCleaner(0x186E5D252FA50E7D, ResultCleaner<int>);

	// TASK/GET_WAYPOINT_DISTANCE_ALONG_ROUTE
	static auto nh_0xA5B769058763E497 = rage::scrEngine::GetNativeHandler(0xA5B769058763E497);
	rage::scrEngine::RegisterNativeHandler(0xA5B769058763E497, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA5B769058763E497(cxt);
	});
	        
	AddResultCleaner(0xA5B769058763E497, ResultCleaner<float>);

	// WEAPON/GET_WEAPONTYPE_GROUP (result cleaner only)
	AddResultCleaner(0xC3287EE3050FB74C, ResultCleaner<int>);

	// WEAPON/GET_WEAPONTYPE_MODEL (result cleaner only)
	AddResultCleaner(0xF46CDC33180FDA94, ResultCleaner<int>);

	// WEAPON/GET_WEAPONTYPE_SLOT (result cleaner only)
	AddResultCleaner(0x4215460B9B8B7FA0, ResultCleaner<int>);

	// CFX/GET_WEAPON_ANIMATION_OVERRIDE (result cleaner only)
	AddResultCleaner(0x63ed2e7, ResultCleaner<int>);

	// WEAPON/GET_WEAPON_CLIP_SIZE (result cleaner only)
	AddResultCleaner(0x583BE370B1EC6EB4, ResultCleaner<int>);

	// CFX/GET_WEAPON_COMPONENT_ACCURACY_MODIFIER (result cleaner only)
	AddResultCleaner(0xc693e278, ResultCleaner<float>);

	// CFX/GET_WEAPON_COMPONENT_CAMERA_HASH (result cleaner only)
	AddResultCleaner(0xacb7e68f, ResultCleaner<int>);

	// CFX/GET_WEAPON_COMPONENT_CLIP_SIZE (result cleaner only)
	AddResultCleaner(0xe14cf665, ResultCleaner<int>);

	// CFX/GET_WEAPON_COMPONENT_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x4a0e3855, ResultCleaner<float>);

	// WEAPON/GET_WEAPON_COMPONENT_HUD_STATS
	static auto nh_0xB3CAF387AE12E9F8 = rage::scrEngine::GetNativeHandler(0xB3CAF387AE12E9F8);
	rage::scrEngine::RegisterNativeHandler(0xB3CAF387AE12E9F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB3CAF387AE12E9F8(cxt);
	});
	        
	AddResultCleaner(0xB3CAF387AE12E9F8, ResultCleaner<bool>);

	// CFX/GET_WEAPON_COMPONENT_RANGE_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0xe134fb8d, ResultCleaner<float>);

	// CFX/GET_WEAPON_COMPONENT_RANGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x2fd0bc1b, ResultCleaner<float>);

	// CFX/GET_WEAPON_COMPONENT_RETICULE_HASH (result cleaner only)
	AddResultCleaner(0xf9ab9297, ResultCleaner<int>);

	// WEAPON/GET_WEAPON_COMPONENT_TYPE_MODEL (result cleaner only)
	AddResultCleaner(0x0DB57B41EC1DB083, ResultCleaner<int>);

	// WEAPON/GET_WEAPON_DAMAGE (result cleaner only)
	AddResultCleaner(0x3133B907D8B32053, ResultCleaner<float>);

	// CFX/GET_WEAPON_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0xd979143, ResultCleaner<float>);

	// WEAPON/GET_WEAPON_DAMAGE_TYPE (result cleaner only)
	AddResultCleaner(0x3BE0BB12D25FB305, ResultCleaner<int>);

	// WEAPON/GET_WEAPON_HUD_STATS
	static auto nh_0xD92C739EE34C9EBA = rage::scrEngine::GetNativeHandler(0xD92C739EE34C9EBA);
	rage::scrEngine::RegisterNativeHandler(0xD92C739EE34C9EBA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD92C739EE34C9EBA(cxt);
	});
	        
	AddResultCleaner(0xD92C739EE34C9EBA, ResultCleaner<bool>);

	// WEAPON/GET_WEAPON_OBJECT_FROM_PED (result cleaner only)
	AddResultCleaner(0xCAE1DC9A0E22A16D, ResultCleaner<int>);

	// WEAPON/GET_WEAPON_OBJECT_TINT_INDEX (result cleaner only)
	AddResultCleaner(0xCD183314F7CD2E57, ResultCleaner<int>);

	// CFX/GET_WEAPON_RECOIL_SHAKE_AMPLITUDE (result cleaner only)
	AddResultCleaner(0x5e1af5f, ResultCleaner<float>);

	// WEAPON/GET_WEAPON_TINT_COUNT (result cleaner only)
	AddResultCleaner(0x5DCF6C5CAB2E9BF7, ResultCleaner<int>);

	// OBJECT/GET_WEAPON_TYPE_FROM_PICKUP_TYPE (result cleaner only)
	AddResultCleaner(0x08F96CA6C551AD51, ResultCleaner<int>);

	// MISC/GET_WIND_SPEED (result cleaner only)
	AddResultCleaner(0xA8CF1CC0AFCD3F12, ResultCleaner<float>);

	// CFX/GET_WORLD_COORD_FROM_SCREEN_COORD
	static auto nh_0xc81d0659 = rage::scrEngine::GetNativeHandler(0xc81d0659);
	rage::scrEngine::RegisterNativeHandler(0xc81d0659, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xc81d0659(cxt);
		NullifyVoid(cxt);
	});
	        
	// ZONE/GET_ZONE_AT_COORDS (result cleaner only)
	AddResultCleaner(0x27040C25DE6CB2F4, ResultCleaner<int>);

	// ZONE/GET_ZONE_FROM_NAME_ID
	static auto nh_0x98CD1D2934B76CC1 = rage::scrEngine::GetNativeHandler(0x98CD1D2934B76CC1);
	rage::scrEngine::RegisterNativeHandler(0x98CD1D2934B76CC1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x98CD1D2934B76CC1(cxt);
	});
	        
	AddResultCleaner(0x98CD1D2934B76CC1, ResultCleaner<int>);

	// ZONE/GET_ZONE_POPSCHEDULE (result cleaner only)
	AddResultCleaner(0x4334BC40AA0CB4BB, ResultCleaner<int>);

	// ZONE/GET_ZONE_SCUMMINESS (result cleaner only)
	AddResultCleaner(0x5F7B268D15BA0739, ResultCleaner<int>);

	// PLAYER/GIVE_ACHIEVEMENT_TO_PLAYER (result cleaner only)
	AddResultCleaner(0xBEC7076D64130195, ResultCleaner<bool>);

	// WEAPON/GIVE_DELAYED_WEAPON_TO_PED
	static auto nh_0xB282DC6EBD803C75 = rage::scrEngine::GetNativeHandler(0xB282DC6EBD803C75);
	rage::scrEngine::RegisterNativeHandler(0xB282DC6EBD803C75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB282DC6EBD803C75(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/GIVE_PED_HELMET
	static auto nh_0x54C7C4A94367717E = rage::scrEngine::GetNativeHandler(0x54C7C4A94367717E);
	rage::scrEngine::RegisterNativeHandler(0x54C7C4A94367717E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x54C7C4A94367717E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/GIVE_PED_NM_MESSAGE
	static auto nh_0xB158DFCCC56E5C5B = rage::scrEngine::GetNativeHandler(0xB158DFCCC56E5C5B);
	rage::scrEngine::RegisterNativeHandler(0xB158DFCCC56E5C5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB158DFCCC56E5C5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/GIVE_PED_TO_PAUSE_MENU
	static auto nh_0xAC0BFBDC3BE00E14 = rage::scrEngine::GetNativeHandler(0xAC0BFBDC3BE00E14);
	rage::scrEngine::RegisterNativeHandler(0xAC0BFBDC3BE00E14, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC0BFBDC3BE00E14(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/GIVE_PLAYER_RAGDOLL_CONTROL
	static auto nh_0x3C49C870E66F0A28 = rage::scrEngine::GetNativeHandler(0x3C49C870E66F0A28);
	rage::scrEngine::RegisterNativeHandler(0x3C49C870E66F0A28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C49C870E66F0A28(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/GIVE_WEAPON_COMPONENT_TO_PED
	static auto nh_0xD966D51AA5B28BB9 = rage::scrEngine::GetNativeHandler(0xD966D51AA5B28BB9);
	rage::scrEngine::RegisterNativeHandler(0xD966D51AA5B28BB9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD966D51AA5B28BB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT
	static auto nh_0x33E179436C0B31DB = rage::scrEngine::GetNativeHandler(0x33E179436C0B31DB);
	rage::scrEngine::RegisterNativeHandler(0x33E179436C0B31DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33E179436C0B31DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/GIVE_WEAPON_OBJECT_TO_PED
	static auto nh_0xB1FA61371AF7C4B7 = rage::scrEngine::GetNativeHandler(0xB1FA61371AF7C4B7);
	rage::scrEngine::RegisterNativeHandler(0xB1FA61371AF7C4B7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1FA61371AF7C4B7(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/GIVE_WEAPON_TO_PED
	static auto nh_0xBF0FD6E56C964FCB = rage::scrEngine::GetNativeHandler(0xBF0FD6E56C964FCB);
	rage::scrEngine::RegisterNativeHandler(0xBF0FD6E56C964FCB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF0FD6E56C964FCB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_GET_MAX_HEIGHT (result cleaner only)
	AddResultCleaner(0xA4819F5E23E2FFAD, ResultCleaner<float>);

	// GRAPHICS/GOLF_TRAIL_SET_COLOUR
	static auto nh_0x12995F2E53FFA601 = rage::scrEngine::GetNativeHandler(0x12995F2E53FFA601);
	rage::scrEngine::RegisterNativeHandler(0x12995F2E53FFA601, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x12995F2E53FFA601(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_ENABLED
	static auto nh_0xA51C4B86B71652AE = rage::scrEngine::GetNativeHandler(0xA51C4B86B71652AE);
	rage::scrEngine::RegisterNativeHandler(0xA51C4B86B71652AE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA51C4B86B71652AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_FACING
	static auto nh_0x06F761EA47C1D3ED = rage::scrEngine::GetNativeHandler(0x06F761EA47C1D3ED);
	rage::scrEngine::RegisterNativeHandler(0x06F761EA47C1D3ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06F761EA47C1D3ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_FIXED_CONTROL_POINT
	static auto nh_0xB1BB03742917A5D6 = rage::scrEngine::GetNativeHandler(0xB1BB03742917A5D6);
	rage::scrEngine::RegisterNativeHandler(0xB1BB03742917A5D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1BB03742917A5D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_PATH
	static auto nh_0x312342E1A4874F3F = rage::scrEngine::GetNativeHandler(0x312342E1A4874F3F);
	rage::scrEngine::RegisterNativeHandler(0x312342E1A4874F3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x312342E1A4874F3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_RADIUS
	static auto nh_0x2485D34E50A22E84 = rage::scrEngine::GetNativeHandler(0x2485D34E50A22E84);
	rage::scrEngine::RegisterNativeHandler(0x2485D34E50A22E84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2485D34E50A22E84(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_SHADER_PARAMS
	static auto nh_0x9CFDD90B2B844BF7 = rage::scrEngine::GetNativeHandler(0x9CFDD90B2B844BF7);
	rage::scrEngine::RegisterNativeHandler(0x9CFDD90B2B844BF7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9CFDD90B2B844BF7(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/GOLF_TRAIL_SET_TESSELLATION
	static auto nh_0xDBAA5EC848BA2D46 = rage::scrEngine::GetNativeHandler(0xDBAA5EC848BA2D46);
	rage::scrEngine::RegisterNativeHandler(0xDBAA5EC848BA2D46, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBAA5EC848BA2D46(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/HAS_ACHIEVEMENT_BEEN_PASSED (result cleaner only)
	AddResultCleaner(0x867365E111A3B6EB, ResultCleaner<bool>);

	// PED/HAS_ACTION_MODE_ASSET_LOADED
	static auto nh_0xE4B5F4BF2CB24E65 = rage::scrEngine::GetNativeHandler(0xE4B5F4BF2CB24E65);
	rage::scrEngine::RegisterNativeHandler(0xE4B5F4BF2CB24E65, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE4B5F4BF2CB24E65(cxt);
	});
	        
	AddResultCleaner(0xE4B5F4BF2CB24E65, ResultCleaner<bool>);

	// HUD/HAS_ADDITIONAL_TEXT_LOADED (result cleaner only)
	AddResultCleaner(0x02245FE4BED318B8, ResultCleaner<bool>);

	// STREAMING/HAS_ANIM_DICT_LOADED
	static auto nh_0xD031A9162D01088C = rage::scrEngine::GetNativeHandler(0xD031A9162D01088C);
	rage::scrEngine::RegisterNativeHandler(0xD031A9162D01088C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD031A9162D01088C(cxt);
	});
	        
	AddResultCleaner(0xD031A9162D01088C, ResultCleaner<bool>);

	// ENTITY/HAS_ANIM_EVENT_FIRED (result cleaner only)
	AddResultCleaner(0xEAF4CD9EA3E7E922, ResultCleaner<bool>);

	// STREAMING/HAS_ANIM_SET_LOADED
	static auto nh_0xC4EA073D86FB29B0 = rage::scrEngine::GetNativeHandler(0xC4EA073D86FB29B0);
	rage::scrEngine::RegisterNativeHandler(0xC4EA073D86FB29B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC4EA073D86FB29B0(cxt);
	});
	        
	AddResultCleaner(0xC4EA073D86FB29B0, ResultCleaner<bool>);

	// MISC/HAS_BULLET_IMPACTED_IN_AREA (result cleaner only)
	AddResultCleaner(0x9870ACFB89A90995, ResultCleaner<bool>);

	// MISC/HAS_BULLET_IMPACTED_IN_BOX (result cleaner only)
	AddResultCleaner(0xDC8C5D7CFEAB8394, ResultCleaner<bool>);

	// STREAMING/HAS_CLIP_SET_LOADED
	static auto nh_0x318234F4F3738AF3 = rage::scrEngine::GetNativeHandler(0x318234F4F3738AF3);
	rage::scrEngine::RegisterNativeHandler(0x318234F4F3738AF3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x318234F4F3738AF3(cxt);
	});
	        
	AddResultCleaner(0x318234F4F3738AF3, ResultCleaner<bool>);

	// OBJECT/HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN
	static auto nh_0x761B0E69AC4D007E = rage::scrEngine::GetNativeHandler(0x761B0E69AC4D007E);
	rage::scrEngine::RegisterNativeHandler(0x761B0E69AC4D007E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x761B0E69AC4D007E(cxt);
	});
	        
	AddResultCleaner(0x761B0E69AC4D007E, ResultCleaner<bool>);

	// OBJECT/HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED (result cleaner only)
	AddResultCleaner(0x46494A2475701343, ResultCleaner<bool>);

	// DLC/HAS_CLOUD_REQUESTS_FINISHED
	static auto nh_0x46E2B844905BC5F0 = rage::scrEngine::GetNativeHandler(0x46E2B844905BC5F0);
	rage::scrEngine::RegisterNativeHandler(0x46E2B844905BC5F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x46E2B844905BC5F0(cxt);
	});
	        
	AddResultCleaner(0x46E2B844905BC5F0, ResultCleaner<bool>);

	// STREAMING/HAS_COLLISION_FOR_MODEL_LOADED (result cleaner only)
	AddResultCleaner(0x22CCA434E368F03A, ResultCleaner<bool>);

	// ENTITY/HAS_COLLISION_LOADED_AROUND_ENTITY (result cleaner only)
	AddResultCleaner(0xE9676F61BC0B3321, ResultCleaner<bool>);

	// CUTSCENE/HAS_CUTSCENE_CUT_THIS_FRAME (result cleaner only)
	AddResultCleaner(0x708BDD8CD795B043, ResultCleaner<bool>);

	// CUTSCENE/HAS_CUTSCENE_FINISHED (result cleaner only)
	AddResultCleaner(0x7C0A893088881D57, ResultCleaner<bool>);

	// CUTSCENE/HAS_CUTSCENE_LOADED (result cleaner only)
	AddResultCleaner(0xC59F528E9AB9F339, ResultCleaner<bool>);

	// CUTSCENE/HAS_CUT_FILE_LOADED
	static auto nh_0xA1C996C2A744262E = rage::scrEngine::GetNativeHandler(0xA1C996C2A744262E);
	rage::scrEngine::RegisterNativeHandler(0xA1C996C2A744262E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA1C996C2A744262E(cxt);
	});
	        
	AddResultCleaner(0xA1C996C2A744262E, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_ANIM_FINISHED
	static auto nh_0x20B711662962B472 = rage::scrEngine::GetNativeHandler(0x20B711662962B472);
	rage::scrEngine::RegisterNativeHandler(0x20B711662962B472, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x20B711662962B472(cxt);
	});
	        
	AddResultCleaner(0x20B711662962B472, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT (result cleaner only)
	AddResultCleaner(0x95EB9964FF5C5C65, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED (result cleaner only)
	AddResultCleaner(0x605F5A140F202491, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE (result cleaner only)
	AddResultCleaner(0xDFD5033FDBA0A9C8, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY (result cleaner only)
	AddResultCleaner(0xC86D67D52A707CF8, ResultCleaner<bool>);

	// WEAPON/HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON (result cleaner only)
	AddResultCleaner(0x131D401334815E94, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_CLEAR_LOS_TO_ENTITY (result cleaner only)
	AddResultCleaner(0xFCDFF7B72D23A1AC, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT (result cleaner only)
	AddResultCleaner(0x0267D00AF114F17A, ResultCleaner<bool>);

	// ENTITY/HAS_ENTITY_COLLIDED_WITH_ANYTHING (result cleaner only)
	AddResultCleaner(0x8BAD02F0368D9E14, ResultCleaner<bool>);

	// PLAYER/HAS_FORCE_CLEANUP_OCCURRED (result cleaner only)
	AddResultCleaner(0xC968670BFACE42D9, ResultCleaner<bool>);

	// AUDIO/HAS_LOADED_MP_DATA_SET (result cleaner only)
	AddResultCleaner(0x544810ED9DB6BBE6, ResultCleaner<bool>);

	// AUDIO/HAS_LOADED_SP_DATA_SET (result cleaner only)
	AddResultCleaner(0x5B50ABB1FE3746F4, ResultCleaner<bool>);

	// CFX/HAS_MINIMAP_OVERLAY_LOADED (result cleaner only)
	AddResultCleaner(0xf7535f32, ResultCleaner<bool>);

	// STREAMING/HAS_MODEL_LOADED (result cleaner only)
	AddResultCleaner(0x98A4EB5D89A0C952, ResultCleaner<bool>);

	// STREAMING/HAS_NAMED_PTFX_ASSET_LOADED
	static auto nh_0x8702416E512EC454 = rage::scrEngine::GetNativeHandler(0x8702416E512EC454);
	rage::scrEngine::RegisterNativeHandler(0x8702416E512EC454, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8702416E512EC454(cxt);
	});
	        
	AddResultCleaner(0x8702416E512EC454, ResultCleaner<bool>);

	// NETWORK/HAS_NETWORK_TIME_STARTED (result cleaner only)
	AddResultCleaner(0x46718ACEEDEAFC84, ResultCleaner<bool>);

	// OBJECT/HAS_OBJECT_BEEN_BROKEN (result cleaner only)
	AddResultCleaner(0x8ABFB70C49CC43E2, ResultCleaner<bool>);

	// PED/HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED (result cleaner only)
	AddResultCleaner(0x876928DDDFCCC9CD, ResultCleaner<bool>);

	// PED/HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED (result cleaner only)
	AddResultCleaner(0xE8A169E666CBC541, ResultCleaner<bool>);

	// WEAPON/HAS_PED_BEEN_DAMAGED_BY_WEAPON (result cleaner only)
	AddResultCleaner(0x2D343D2219CD027A, ResultCleaner<bool>);

	// WEAPON/HAS_PED_GOT_WEAPON (result cleaner only)
	AddResultCleaner(0x8DECB02F88F428BC, ResultCleaner<bool>);

	// WEAPON/HAS_PED_GOT_WEAPON_COMPONENT (result cleaner only)
	AddResultCleaner(0xC593212475FAE340, ResultCleaner<bool>);

	// PED/HAS_PED_HEAD_BLEND_FINISHED (result cleaner only)
	AddResultCleaner(0x654CD0A825161131, ResultCleaner<bool>);

	// PED/HAS_PED_PRELOAD_PROP_DATA_FINISHED (result cleaner only)
	AddResultCleaner(0x784002A632822099, ResultCleaner<bool>);

	// PED/HAS_PED_PRELOAD_VARIATION_DATA_FINISHED (result cleaner only)
	AddResultCleaner(0x66680A92700F43DF, ResultCleaner<bool>);

	// PED/HAS_PED_RECEIVED_EVENT (result cleaner only)
	AddResultCleaner(0x8507BCB710FA6DC0, ResultCleaner<bool>);

	// OBJECT/HAS_PICKUP_BEEN_COLLECTED (result cleaner only)
	AddResultCleaner(0x80EC48E6679313F9, ResultCleaner<bool>);

	// PLAYER/HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE (result cleaner only)
	AddResultCleaner(0xD705740BB0A1CF4C, ResultCleaner<bool>);

	// PLAYER/HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED (result cleaner only)
	AddResultCleaner(0xE4B90F367BD81752, ResultCleaner<bool>);

	// PLAYER/HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED (result cleaner only)
	AddResultCleaner(0x20CE80B0C2BF4ACC, ResultCleaner<bool>);

	// PLAYER/HAS_PLAYER_LEFT_THE_WORLD (result cleaner only)
	AddResultCleaner(0xD55DDFB47991A294, ResultCleaner<bool>);

	// VEHICLE/HAS_PRELOAD_MODS_FINISHED
	static auto nh_0x06F43E5175EB6D96 = rage::scrEngine::GetNativeHandler(0x06F43E5175EB6D96);
	rage::scrEngine::RegisterNativeHandler(0x06F43E5175EB6D96, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x06F43E5175EB6D96(cxt);
	});
	        
	AddResultCleaner(0x06F43E5175EB6D96, ResultCleaner<bool>);

	// STREAMING/HAS_PTFX_ASSET_LOADED (result cleaner only)
	AddResultCleaner(0xCA7D9B86ECA7481B, ResultCleaner<bool>);

	// GRAPHICS/HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT (result cleaner only)
	AddResultCleaner(0x8217150E1217EBFD, ResultCleaner<bool>);

	// GRAPHICS/HAS_SCALEFORM_MOVIE_FILENAME_LOADED
	static auto nh_0x0C1C5D756FB5F337 = rage::scrEngine::GetNativeHandler(0x0C1C5D756FB5F337);
	rage::scrEngine::RegisterNativeHandler(0x0C1C5D756FB5F337, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0C1C5D756FB5F337(cxt);
	});
	        
	AddResultCleaner(0x0C1C5D756FB5F337, ResultCleaner<bool>);

	// GRAPHICS/HAS_SCALEFORM_MOVIE_LOADED (result cleaner only)
	AddResultCleaner(0x85F01B8D5B90570E, ResultCleaner<bool>);

	// GRAPHICS/HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED (result cleaner only)
	AddResultCleaner(0xDF6E5987D2B4D140, ResultCleaner<bool>);

	// SCRIPT/HAS_SCRIPT_LOADED
	static auto nh_0xE6CC9F3BA0FB9EF1 = rage::scrEngine::GetNativeHandler(0xE6CC9F3BA0FB9EF1);
	rage::scrEngine::RegisterNativeHandler(0xE6CC9F3BA0FB9EF1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE6CC9F3BA0FB9EF1(cxt);
	});
	        
	AddResultCleaner(0xE6CC9F3BA0FB9EF1, ResultCleaner<bool>);

	// SCRIPT/HAS_SCRIPT_WITH_NAME_HASH_LOADED (result cleaner only)
	AddResultCleaner(0x5F0F0C783EB16C04, ResultCleaner<bool>);

	// AUDIO/HAS_SOUND_FINISHED (result cleaner only)
	AddResultCleaner(0xFCBDCE714A7C88E5, ResultCleaner<bool>);

	// PED/HAS_STEALTH_MODE_ASSET_LOADED
	static auto nh_0xE977FC5B08AF3441 = rage::scrEngine::GetNativeHandler(0xE977FC5B08AF3441);
	rage::scrEngine::RegisterNativeHandler(0xE977FC5B08AF3441, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE977FC5B08AF3441(cxt);
	});
	        
	AddResultCleaner(0xE977FC5B08AF3441, ResultCleaner<bool>);

	// GRAPHICS/HAS_STREAMED_TEXTURE_DICT_LOADED
	static auto nh_0x0145F696AAAAD2E4 = rage::scrEngine::GetNativeHandler(0x0145F696AAAAD2E4);
	rage::scrEngine::RegisterNativeHandler(0x0145F696AAAAD2E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0145F696AAAAD2E4(cxt);
	});
	        
	AddResultCleaner(0x0145F696AAAAD2E4, ResultCleaner<bool>);

	// HUD/HAS_THIS_ADDITIONAL_TEXT_LOADED
	static auto nh_0xADBF060E2B30C5BC = rage::scrEngine::GetNativeHandler(0xADBF060E2B30C5BC);
	rage::scrEngine::RegisterNativeHandler(0xADBF060E2B30C5BC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xADBF060E2B30C5BC(cxt);
	});
	        
	AddResultCleaner(0xADBF060E2B30C5BC, ResultCleaner<bool>);

	// CUTSCENE/HAS_THIS_CUTSCENE_LOADED
	static auto nh_0x228D3D94F8A11C3C = rage::scrEngine::GetNativeHandler(0x228D3D94F8A11C3C);
	rage::scrEngine::RegisterNativeHandler(0x228D3D94F8A11C3C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x228D3D94F8A11C3C(cxt);
	});
	        
	AddResultCleaner(0x228D3D94F8A11C3C, ResultCleaner<bool>);

	// VEHICLE/HAS_VEHICLE_ASSET_LOADED (result cleaner only)
	AddResultCleaner(0x1BBE0523B8DB9A21, ResultCleaner<bool>);

	// WEAPON/HAS_VEHICLE_GOT_PROJECTILE_ATTACHED
	static auto nh_0x717C8481234E3B88 = rage::scrEngine::GetNativeHandler(0x717C8481234E3B88);
	rage::scrEngine::RegisterNativeHandler(0x717C8481234E3B88, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x717C8481234E3B88(cxt);
	});
	        
	AddResultCleaner(0x717C8481234E3B88, ResultCleaner<bool>);

	// VEHICLE/HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE (result cleaner only)
	AddResultCleaner(0x6ADAABD3068C5235, ResultCleaner<bool>);

	// VEHICLE/HAS_VEHICLE_RECORDING_BEEN_LOADED
	static auto nh_0x300D614A4C785FC4 = rage::scrEngine::GetNativeHandler(0x300D614A4C785FC4);
	rage::scrEngine::RegisterNativeHandler(0x300D614A4C785FC4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x300D614A4C785FC4(cxt);
	});
	        
	AddResultCleaner(0x300D614A4C785FC4, ResultCleaner<bool>);

	// WEAPON/HAS_WEAPON_ASSET_LOADED (result cleaner only)
	AddResultCleaner(0x36E353271F0E90EE, ResultCleaner<bool>);

	// WEAPON/HAS_WEAPON_GOT_WEAPON_COMPONENT (result cleaner only)
	AddResultCleaner(0x76A18844E743BF91, ResultCleaner<bool>);

	// PED/HAVE_ALL_STREAMING_REQUESTS_COMPLETED (result cleaner only)
	AddResultCleaner(0x7350823473013C02, ResultCleaner<bool>);

	// MISC/HAVE_CREDITS_REACHED_END (result cleaner only)
	AddResultCleaner(0x075F1D57402C93BA, ResultCleaner<bool>);

	// VEHICLE/HAVE_VEHICLE_MODS_STREAMED_IN (result cleaner only)
	AddResultCleaner(0x9A83F5F9963775EF, ResultCleaner<bool>);

	// HUD/HIDE_HELP_TEXT_THIS_FRAME
	static auto nh_0xD46923FC481CA285 = rage::scrEngine::GetNativeHandler(0xD46923FC481CA285);
	rage::scrEngine::RegisterNativeHandler(0xD46923FC481CA285, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD46923FC481CA285(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_HUD_AND_RADAR_THIS_FRAME
	static auto nh_0x719FF505F097FD20 = rage::scrEngine::GetNativeHandler(0x719FF505F097FD20);
	rage::scrEngine::RegisterNativeHandler(0x719FF505F097FD20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x719FF505F097FD20(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_HUD_COMPONENT_THIS_FRAME
	static auto nh_0x6806C51AD12B83B8 = rage::scrEngine::GetNativeHandler(0x6806C51AD12B83B8);
	rage::scrEngine::RegisterNativeHandler(0x6806C51AD12B83B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6806C51AD12B83B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_LOADING_ON_FADE_THIS_FRAME
	static auto nh_0x4B0311D3CDC4648F = rage::scrEngine::GetNativeHandler(0x4B0311D3CDC4648F);
	rage::scrEngine::RegisterNativeHandler(0x4B0311D3CDC4648F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4B0311D3CDC4648F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME
	static auto nh_0x5FBAE526203990C9 = rage::scrEngine::GetNativeHandler(0x5FBAE526203990C9);
	rage::scrEngine::RegisterNativeHandler(0x5FBAE526203990C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FBAE526203990C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME
	static auto nh_0x20FE7FDFEEAD38C0 = rage::scrEngine::GetNativeHandler(0x20FE7FDFEEAD38C0);
	rage::scrEngine::RegisterNativeHandler(0x20FE7FDFEEAD38C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x20FE7FDFEEAD38C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_NUMBER_ON_BLIP
	static auto nh_0x532CFF637EF80148 = rage::scrEngine::GetNativeHandler(0x532CFF637EF80148);
	rage::scrEngine::RegisterNativeHandler(0x532CFF637EF80148, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x532CFF637EF80148(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/HIDE_PED_BLOOD_DAMAGE_BY_ZONE
	static auto nh_0x62AB793144DE75DC = rage::scrEngine::GetNativeHandler(0x62AB793144DE75DC);
	rage::scrEngine::RegisterNativeHandler(0x62AB793144DE75DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x62AB793144DE75DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE
	static auto nh_0x6F6981D2253C208F = rage::scrEngine::GetNativeHandler(0x6F6981D2253C208F);
	rage::scrEngine::RegisterNativeHandler(0x6F6981D2253C208F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F6981D2253C208F(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/HIDE_PORTABLE_PICKUP_WHEN_DETACHED
	static auto nh_0x867458251D47CCB2 = rage::scrEngine::GetNativeHandler(0x867458251D47CCB2);
	rage::scrEngine::RegisterNativeHandler(0x867458251D47CCB2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x867458251D47CCB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME
	static auto nh_0xE374C498D8BADC14 = rage::scrEngine::GetNativeHandler(0xE374C498D8BADC14);
	rage::scrEngine::RegisterNativeHandler(0xE374C498D8BADC14, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE374C498D8BADC14(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/HINT_AMBIENT_AUDIO_BANK
	static auto nh_0x8F8C0E370AE62F5C = rage::scrEngine::GetNativeHandler(0x8F8C0E370AE62F5C);
	rage::scrEngine::RegisterNativeHandler(0x8F8C0E370AE62F5C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8F8C0E370AE62F5C(cxt);
	});
	        
	AddResultCleaner(0x8F8C0E370AE62F5C, ResultCleaner<bool>);

	// AUDIO/HINT_MISSION_AUDIO_BANK
	static auto nh_0x40763EA7B9B783E7 = rage::scrEngine::GetNativeHandler(0x40763EA7B9B783E7);
	rage::scrEngine::RegisterNativeHandler(0x40763EA7B9B783E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x40763EA7B9B783E7(cxt);
	});
	        
	AddResultCleaner(0x40763EA7B9B783E7, ResultCleaner<bool>);

	// AUDIO/HINT_SCRIPT_AUDIO_BANK
	static auto nh_0xFB380A29641EC31A = rage::scrEngine::GetNativeHandler(0xFB380A29641EC31A);
	rage::scrEngine::RegisterNativeHandler(0xFB380A29641EC31A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFB380A29641EC31A(cxt);
	});
	        
	AddResultCleaner(0xFB380A29641EC31A, ResultCleaner<bool>);

	// HUD/HUD_FORCE_WEAPON_WHEEL
	static auto nh_0xEB354E5376BC81A7 = rage::scrEngine::GetNativeHandler(0xEB354E5376BC81A7);
	rage::scrEngine::RegisterNativeHandler(0xEB354E5376BC81A7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB354E5376BC81A7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/HUD_SET_WEAPON_WHEEL_TOP_SLOT
	static auto nh_0x72C1056D678BB7D8 = rage::scrEngine::GetNativeHandler(0x72C1056D678BB7D8);
	rage::scrEngine::RegisterNativeHandler(0x72C1056D678BB7D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72C1056D678BB7D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/IGNORE_NEXT_RESTART
	static auto nh_0x21FFB63D8C615361 = rage::scrEngine::GetNativeHandler(0x21FFB63D8C615361);
	rage::scrEngine::RegisterNativeHandler(0x21FFB63D8C615361, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21FFB63D8C615361(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/INIT_CREATOR_BUDGET
	static auto nh_0xB5A4DB34FE89B88A = rage::scrEngine::GetNativeHandler(0xB5A4DB34FE89B88A);
	rage::scrEngine::RegisterNativeHandler(0xB5A4DB34FE89B88A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB5A4DB34FE89B88A(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/INIT_SHOP_PED_COMPONENT
	static auto nh_0x1E8C308FD312C036 = rage::scrEngine::GetNativeHandler(0x1E8C308FD312C036);
	rage::scrEngine::RegisterNativeHandler(0x1E8C308FD312C036, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1E8C308FD312C036(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/INIT_SHOP_PED_PROP
	static auto nh_0xEB0A2B758F7B850F = rage::scrEngine::GetNativeHandler(0xEB0A2B758F7B850F);
	rage::scrEngine::RegisterNativeHandler(0xEB0A2B758F7B850F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEB0A2B758F7B850F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY
	static auto nh_0x950A154B8DAB6185 = rage::scrEngine::GetNativeHandler(0x950A154B8DAB6185);
	rage::scrEngine::RegisterNativeHandler(0x950A154B8DAB6185, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x950A154B8DAB6185(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/INIT_SYNCH_SCENE_AUDIO_WITH_POSITION
	static auto nh_0xC8EDE9BDBCCBA6D4 = rage::scrEngine::GetNativeHandler(0xC8EDE9BDBCCBA6D4);
	rage::scrEngine::RegisterNativeHandler(0xC8EDE9BDBCCBA6D4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC8EDE9BDBCCBA6D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/INSTANTLY_FILL_PED_POPULATION
	static auto nh_0x4759CC730F947C81 = rage::scrEngine::GetNativeHandler(0x4759CC730F947C81);
	rage::scrEngine::RegisterNativeHandler(0x4759CC730F947C81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4759CC730F947C81(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/INSTANTLY_FILL_VEHICLE_POPULATION
	static auto nh_0x48ADC8A773564670 = rage::scrEngine::GetNativeHandler(0x48ADC8A773564670);
	rage::scrEngine::RegisterNativeHandler(0x48ADC8A773564670, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48ADC8A773564670(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/INTERRUPT_CONVERSATION
	static auto nh_0xA018A12E5C5C2FA6 = rage::scrEngine::GetNativeHandler(0xA018A12E5C5C2FA6);
	rage::scrEngine::RegisterNativeHandler(0xA018A12E5C5C2FA6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA018A12E5C5C2FA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/INTERRUPT_CONVERSATION_AND_PAUSE
	static auto nh_0x8A694D7A68F8DC38 = rage::scrEngine::GetNativeHandler(0x8A694D7A68F8DC38);
	rage::scrEngine::RegisterNativeHandler(0x8A694D7A68F8DC38, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8A694D7A68F8DC38(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/INT_TO_PARTICIPANTINDEX (result cleaner only)
	AddResultCleaner(0x9EC6603812C24710, ResultCleaner<int>);

	// PLAYER/INT_TO_PLAYERINDEX (result cleaner only)
	AddResultCleaner(0x41BD2A6B006AF756, ResultCleaner<int>);

	// CAM/INVALIDATE_IDLE_CAM
	static auto nh_0xF4F2C0D4EE209E20 = rage::scrEngine::GetNativeHandler(0xF4F2C0D4EE209E20);
	rage::scrEngine::RegisterNativeHandler(0xF4F2C0D4EE209E20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4F2C0D4EE209E20(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/IS_ACE_ALLOWED
	static auto nh_0x7ebb9929 = rage::scrEngine::GetNativeHandler(0x7ebb9929);
	rage::scrEngine::RegisterNativeHandler(0x7ebb9929, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7ebb9929(cxt);
	});
	        
	AddResultCleaner(0x7ebb9929, ResultCleaner<bool>);

	// CAM/IS_AIM_CAM_ACTIVE (result cleaner only)
	AddResultCleaner(0x68EDDA28A5976D07, ResultCleaner<bool>);

	// AUDIO/IS_ALARM_PLAYING
	static auto nh_0x226435CB96CCFC8C = rage::scrEngine::GetNativeHandler(0x226435CB96CCFC8C);
	rage::scrEngine::RegisterNativeHandler(0x226435CB96CCFC8C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x226435CB96CCFC8C(cxt);
	});
	        
	AddResultCleaner(0x226435CB96CCFC8C, ResultCleaner<bool>);

	// AUDIO/IS_AMBIENT_SPEECH_DISABLED (result cleaner only)
	AddResultCleaner(0x932C2D096A2C3FFF, ResultCleaner<bool>);

	// AUDIO/IS_AMBIENT_SPEECH_PLAYING (result cleaner only)
	AddResultCleaner(0x9072C8B49907BFAD, ResultCleaner<bool>);

	// AUDIO/IS_AMBIENT_ZONE_ENABLED
	static auto nh_0x01E2817A479A7F9B = rage::scrEngine::GetNativeHandler(0x01E2817A479A7F9B);
	rage::scrEngine::RegisterNativeHandler(0x01E2817A479A7F9B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x01E2817A479A7F9B(cxt);
	});
	        
	AddResultCleaner(0x01E2817A479A7F9B, ResultCleaner<bool>);

	// AUDIO/IS_ANIMAL_VOCALIZATION_PLAYING (result cleaner only)
	AddResultCleaner(0xC265DF9FB44A9FBD, ResultCleaner<bool>);

	// VEHICLE/IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME (result cleaner only)
	AddResultCleaner(0x62CA17B74C435651, ResultCleaner<bool>);

	// OBJECT/IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE
	static auto nh_0x673ED815D6E323B7 = rage::scrEngine::GetNativeHandler(0x673ED815D6E323B7);
	rage::scrEngine::RegisterNativeHandler(0x673ED815D6E323B7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x673ED815D6E323B7(cxt);
	});
	        
	AddResultCleaner(0x673ED815D6E323B7, ResultCleaner<bool>);

	// PED/IS_ANY_HOSTILE_PED_NEAR_POINT (result cleaner only)
	AddResultCleaner(0x68772DB2B2526F9F, ResultCleaner<bool>);

	// OBJECT/IS_ANY_OBJECT_NEAR_POINT (result cleaner only)
	AddResultCleaner(0x397DC58FF00298D1, ResultCleaner<bool>);

	// PED/IS_ANY_PED_NEAR_POINT (result cleaner only)
	AddResultCleaner(0x083961498679DC9F, ResultCleaner<bool>);

	// VEHICLE/IS_ANY_PED_RAPPELLING_FROM_HELI (result cleaner only)
	AddResultCleaner(0x291E373D483E7EE7, ResultCleaner<bool>);

	// PED/IS_ANY_PED_SHOOTING_IN_AREA (result cleaner only)
	AddResultCleaner(0xA0D3D71EA1086C55, ResultCleaner<bool>);

	// AUDIO/IS_ANY_POSITIONAL_SPEECH_PLAYING (result cleaner only)
	AddResultCleaner(0x30CA2EF91D15ADF8, ResultCleaner<bool>);

	// AUDIO/IS_ANY_SPEECH_PLAYING (result cleaner only)
	AddResultCleaner(0x729072355FA39EC9, ResultCleaner<bool>);

	// VEHICLE/IS_ANY_VEHICLE_NEAR_POINT (result cleaner only)
	AddResultCleaner(0x61E1DD6125A3EEE6, ResultCleaner<bool>);

	// ENTITY/IS_AN_ENTITY (result cleaner only)
	AddResultCleaner(0x731EC8A916BD11A1, ResultCleaner<bool>);

	// MISC/IS_AREA_OCCUPIED
	static auto nh_0xA61B4DF533DCB56E = rage::scrEngine::GetNativeHandler(0xA61B4DF533DCB56E);
	rage::scrEngine::RegisterNativeHandler(0xA61B4DF533DCB56E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0xA61B4DF533DCB56E(cxt);
	});
	        
	AddResultCleaner(0xA61B4DF533DCB56E, ResultCleaner<bool>);

	// AUDIO/IS_AUDIO_SCENE_ACTIVE
	static auto nh_0xB65B60556E2A9225 = rage::scrEngine::GetNativeHandler(0xB65B60556E2A9225);
	rage::scrEngine::RegisterNativeHandler(0xB65B60556E2A9225, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB65B60556E2A9225(cxt);
	});
	        
	AddResultCleaner(0xB65B60556E2A9225, ResultCleaner<bool>);

	// MISC/IS_AUSSIE_VERSION (result cleaner only)
	AddResultCleaner(0x9F1935CA1F724008, ResultCleaner<bool>);

	// MISC/IS_AUTO_SAVE_IN_PROGRESS (result cleaner only)
	AddResultCleaner(0x69240733738C19A0, ResultCleaner<bool>);

	// CFX/IS_BIGMAP_ACTIVE (result cleaner only)
	AddResultCleaner(0xfff65c63, ResultCleaner<bool>);

	// CFX/IS_BIGMAP_FULL (result cleaner only)
	AddResultCleaner(0x66ee14b2, ResultCleaner<bool>);

	// VEHICLE/IS_BIG_VEHICLE (result cleaner only)
	AddResultCleaner(0x9F243D3919F442FE, ResultCleaner<bool>);

	// MISC/IS_BIT_SET (result cleaner only)
	AddResultCleaner(0xA921AA820C25702F, ResultCleaner<bool>);

	// HUD/IS_BLIP_FLASHING (result cleaner only)
	AddResultCleaner(0xA5E41FD83AD6CEF0, ResultCleaner<bool>);

	// HUD/IS_BLIP_ON_MINIMAP (result cleaner only)
	AddResultCleaner(0xE41CA53051197A27, ResultCleaner<bool>);

	// HUD/IS_BLIP_SHORT_RANGE (result cleaner only)
	AddResultCleaner(0xDA5F8727EB75B926, ResultCleaner<bool>);

	// CAM/IS_BONNET_CINEMATIC_CAM_RENDERING (result cleaner only)
	AddResultCleaner(0xD7360051C885628B, ResultCleaner<bool>);

	// MISC/IS_BULLET_IN_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0x1A8B5F3C01E2B477, ResultCleaner<bool>);

	// MISC/IS_BULLET_IN_AREA (result cleaner only)
	AddResultCleaner(0x3F2023999AD51C1F, ResultCleaner<bool>);

	// MISC/IS_BULLET_IN_BOX (result cleaner only)
	AddResultCleaner(0xDE0F6D7450D37351, ResultCleaner<bool>);

	// CAM/IS_CAM_ACTIVE (result cleaner only)
	AddResultCleaner(0xDFB2B516207D3534, ResultCleaner<bool>);

	// CAM/IS_CAM_INTERPOLATING (result cleaner only)
	AddResultCleaner(0x036F97C908C2B52C, ResultCleaner<bool>);

	// CAM/IS_CAM_PLAYING_ANIM
	static auto nh_0xC90621D8A0CEECF2 = rage::scrEngine::GetNativeHandler(0xC90621D8A0CEECF2);
	rage::scrEngine::RegisterNativeHandler(0xC90621D8A0CEECF2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC90621D8A0CEECF2(cxt);
	});
	        
	AddResultCleaner(0xC90621D8A0CEECF2, ResultCleaner<bool>);

	// CAM/IS_CAM_RENDERING (result cleaner only)
	AddResultCleaner(0x02EC0AF5C5A49B7A, ResultCleaner<bool>);

	// CAM/IS_CAM_SHAKING (result cleaner only)
	AddResultCleaner(0x6B24BFE83A2BE47B, ResultCleaner<bool>);

	// CAM/IS_CAM_SPLINE_PAUSED
	static auto nh_0x0290F35C0AD97864 = rage::scrEngine::GetNativeHandler(0x0290F35C0AD97864);
	rage::scrEngine::RegisterNativeHandler(0x0290F35C0AD97864, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0290F35C0AD97864(cxt);
	});
	        
	AddResultCleaner(0x0290F35C0AD97864, ResultCleaner<bool>);

	// CAM/IS_CINEMATIC_CAM_INPUT_ACTIVE (result cleaner only)
	AddResultCleaner(0xF5F1E89A970B7796, ResultCleaner<bool>);

	// CAM/IS_CINEMATIC_CAM_RENDERING (result cleaner only)
	AddResultCleaner(0xB15162CB5826E9E8, ResultCleaner<bool>);

	// CAM/IS_CINEMATIC_CAM_SHAKING (result cleaner only)
	AddResultCleaner(0xBBC08F6B4CB8FF0A, ResultCleaner<bool>);

	// CAM/IS_CINEMATIC_IDLE_CAM_RENDERING (result cleaner only)
	AddResultCleaner(0xCA9D2AA3E326D720, ResultCleaner<bool>);

	// CAM/IS_CINEMATIC_SHOT_ACTIVE
	static auto nh_0xCC9F3371A7C28BC9 = rage::scrEngine::GetNativeHandler(0xCC9F3371A7C28BC9);
	rage::scrEngine::RegisterNativeHandler(0xCC9F3371A7C28BC9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCC9F3371A7C28BC9(cxt);
	});
	        
	AddResultCleaner(0xCC9F3371A7C28BC9, ResultCleaner<bool>);

	// INTERIOR/IS_COLLISION_MARKED_OUTSIDE (result cleaner only)
	AddResultCleaner(0xEEA5AC2EDA7C33E8, ResultCleaner<bool>);

	// NETWORK/IS_COMMERCE_DATA_VALID (result cleaner only)
	AddResultCleaner(0xEA14EEF5B7CD2C30, ResultCleaner<bool>);

	// NETWORK/IS_COMMERCE_STORE_OPEN (result cleaner only)
	AddResultCleaner(0x2EAC52B4019E2782, ResultCleaner<bool>);

	// FILES/IS_CONTENT_ITEM_LOCKED (result cleaner only)
	AddResultCleaner(0xD4D7B033C3AA243C, ResultCleaner<bool>);

	// PAD/IS_CONTROL_ENABLED (result cleaner only)
	AddResultCleaner(0x1CEA6BFDF248E5D9, ResultCleaner<bool>);

	// PAD/IS_CONTROL_JUST_PRESSED (result cleaner only)
	AddResultCleaner(0x580417101DDB492F, ResultCleaner<bool>);

	// PAD/IS_CONTROL_JUST_RELEASED (result cleaner only)
	AddResultCleaner(0x50F940259D3841E6, ResultCleaner<bool>);

	// PAD/IS_CONTROL_PRESSED (result cleaner only)
	AddResultCleaner(0xF3A21BCD95725A4A, ResultCleaner<bool>);

	// PAD/IS_CONTROL_RELEASED (result cleaner only)
	AddResultCleaner(0x648EE3E7F38877DD, ResultCleaner<bool>);

	// PED/IS_CONVERSATION_PED_DEAD (result cleaner only)
	AddResultCleaner(0xE0A0AEC214B1FABA, ResultCleaner<bool>);

	// PED/IS_COP_PED_IN_AREA_3D (result cleaner only)
	AddResultCleaner(0x16EC4839969F9F5E, ResultCleaner<bool>);

	// VEHICLE/IS_COP_VEHICLE_IN_AREA_3D (result cleaner only)
	AddResultCleaner(0x7EEF65D5F153E26A, ResultCleaner<bool>);

	// CUTSCENE/IS_CUTSCENE_ACTIVE (result cleaner only)
	AddResultCleaner(0x991251AFC3981F84, ResultCleaner<bool>);

	// CUTSCENE/IS_CUTSCENE_PLAYBACK_FLAG_SET (result cleaner only)
	AddResultCleaner(0x71B74D2AE19338D0, ResultCleaner<bool>);

	// CUTSCENE/IS_CUTSCENE_PLAYING (result cleaner only)
	AddResultCleaner(0xD3C2E180A40F031E, ResultCleaner<bool>);

	// NETWORK/IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID (result cleaner only)
	AddResultCleaner(0x6E192E33AD436366, ResultCleaner<bool>);

	// GRAPHICS/IS_DECAL_ALIVE (result cleaner only)
	AddResultCleaner(0xC694D74949CAFD0C, ResultCleaner<bool>);

	// PAD/IS_DISABLED_CONTROL_JUST_PRESSED (result cleaner only)
	AddResultCleaner(0x91AEF906BCA88877, ResultCleaner<bool>);

	// PAD/IS_DISABLED_CONTROL_JUST_RELEASED (result cleaner only)
	AddResultCleaner(0x305C8DCD79DA8B0F, ResultCleaner<bool>);

	// PAD/IS_DISABLED_CONTROL_PRESSED (result cleaner only)
	AddResultCleaner(0xE2587F8CBBD87B1D, ResultCleaner<bool>);

	// DLC/IS_DLC_PRESENT (result cleaner only)
	AddResultCleaner(0x812595A0644CE1DE, ResultCleaner<bool>);

	// FILES/IS_DLC_VEHICLE_MOD (result cleaner only)
	AddResultCleaner(0x0564B9FF9631B82C, ResultCleaner<bool>);

	// OBJECT/IS_DOOR_CLOSED (result cleaner only)
	AddResultCleaner(0xC531EE8A1145A149, ResultCleaner<bool>);

	// OBJECT/IS_DOOR_REGISTERED_WITH_SYSTEM (result cleaner only)
	AddResultCleaner(0xC153C43EA202C8C1, ResultCleaner<bool>);

	// TASK/IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK (result cleaner only)
	AddResultCleaner(0x8785E6E40C7A8818, ResultCleaner<bool>);

	// CFX/IS_DUI_AVAILABLE (result cleaner only)
	AddResultCleaner(0x7aac3b4c, ResultCleaner<bool>);

	// CFX/IS_DUPLICITY_VERSION (result cleaner only)
	AddResultCleaner(0xcf24c52e, ResultCleaner<bool>);

	// MISC/IS_DURANGO_VERSION (result cleaner only)
	AddResultCleaner(0x4D982ADB1978442D, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_AN_OBJECT (result cleaner only)
	AddResultCleaner(0x8D68C8FD0FACA94E, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ATTACHED (result cleaner only)
	AddResultCleaner(0xB346476EF1A64897, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ATTACHED_TO_ANY_OBJECT (result cleaner only)
	AddResultCleaner(0xCF511840CEEDE0CC, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ATTACHED_TO_ANY_PED (result cleaner only)
	AddResultCleaner(0xB1632E9A5F988D11, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ATTACHED_TO_ANY_VEHICLE (result cleaner only)
	AddResultCleaner(0x26AA915AD89BFB4B, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ATTACHED_TO_ENTITY (result cleaner only)
	AddResultCleaner(0xEFBE71898A993728, ResultCleaner<bool>);

	// VEHICLE/IS_ENTITY_ATTACHED_TO_HANDLER_FRAME (result cleaner only)
	AddResultCleaner(0x57715966069157AD, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_AT_COORD (result cleaner only)
	AddResultCleaner(0x20B60995556D004F, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_AT_ENTITY (result cleaner only)
	AddResultCleaner(0x751B70C3D034E187, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_A_MISSION_ENTITY (result cleaner only)
	AddResultCleaner(0x0A7B270912999B3C, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_A_PED (result cleaner only)
	AddResultCleaner(0x524AC5ECEA15343E, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_A_VEHICLE (result cleaner only)
	AddResultCleaner(0x6AC7003FA6E5575E, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_DEAD (result cleaner only)
	AddResultCleaner(0x5F9532F3B5CC2551, ResultCleaner<bool>);

	// STREAMING/IS_ENTITY_FOCUS (result cleaner only)
	AddResultCleaner(0x2DDFF3FB9075D747, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_IN_AIR (result cleaner only)
	AddResultCleaner(0x886E37EC497200B6, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_IN_ANGLED_AREA
	static auto nh_0x51210CED3DA1C78A = rage::scrEngine::GetNativeHandler(0x51210CED3DA1C78A);
	rage::scrEngine::RegisterNativeHandler(0x51210CED3DA1C78A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0x51210CED3DA1C78A(cxt);
	});
	        
	AddResultCleaner(0x51210CED3DA1C78A, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_IN_AREA
	static auto nh_0x54736AA40E271165 = rage::scrEngine::GetNativeHandler(0x54736AA40E271165);
	rage::scrEngine::RegisterNativeHandler(0x54736AA40E271165, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x54736AA40E271165(cxt);
	});
	        
	AddResultCleaner(0x54736AA40E271165, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_IN_WATER (result cleaner only)
	AddResultCleaner(0xCFB0A0D8EDD145A3, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_IN_ZONE
	static auto nh_0xB6463CF6AF527071 = rage::scrEngine::GetNativeHandler(0xB6463CF6AF527071);
	rage::scrEngine::RegisterNativeHandler(0xB6463CF6AF527071, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB6463CF6AF527071(cxt);
	});
	        
	AddResultCleaner(0xB6463CF6AF527071, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_OCCLUDED (result cleaner only)
	AddResultCleaner(0xE31C2C72B8692B64, ResultCleaner<bool>);

	// FIRE/IS_ENTITY_ON_FIRE (result cleaner only)
	AddResultCleaner(0x28D3FED7190D3A0B, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_ON_SCREEN (result cleaner only)
	AddResultCleaner(0xE659E47AF827484B, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_PLAYING_ANIM
	static auto nh_0x1F0B79228E461EC9 = rage::scrEngine::GetNativeHandler(0x1F0B79228E461EC9);
	rage::scrEngine::RegisterNativeHandler(0x1F0B79228E461EC9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x1F0B79228E461EC9(cxt);
	});
	        
	AddResultCleaner(0x1F0B79228E461EC9, ResultCleaner<bool>);

	// CFX/IS_ENTITY_POSITION_FROZEN (result cleaner only)
	AddResultCleaner(0xedbe6add, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_STATIC (result cleaner only)
	AddResultCleaner(0x1218E6886D3D8327, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_TOUCHING_ENTITY (result cleaner only)
	AddResultCleaner(0x17FFC1B2BA35A494, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_TOUCHING_MODEL (result cleaner only)
	AddResultCleaner(0x0F42323798A58C8C, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_UPRIGHT (result cleaner only)
	AddResultCleaner(0x5333F526F6AB19AA, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_UPSIDEDOWN (result cleaner only)
	AddResultCleaner(0x1DBD58820FA61D71, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_VISIBLE (result cleaner only)
	AddResultCleaner(0x47D6F43D77935C75, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_VISIBLE_TO_SCRIPT (result cleaner only)
	AddResultCleaner(0xD796CB5BA8F20E32, ResultCleaner<bool>);

	// ENTITY/IS_ENTITY_WAITING_FOR_WORLD_COLLISION (result cleaner only)
	AddResultCleaner(0xD05BFF0C0A12C68F, ResultCleaner<bool>);

	// FIRE/IS_EXPLOSION_ACTIVE_IN_AREA (result cleaner only)
	AddResultCleaner(0x6070104B699B2EF4, ResultCleaner<bool>);

	// FIRE/IS_EXPLOSION_IN_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0xA079A6C51525DC4B, ResultCleaner<bool>);

	// FIRE/IS_EXPLOSION_IN_AREA (result cleaner only)
	AddResultCleaner(0x2E2EBA0EE7CED0E0, ResultCleaner<bool>);

	// FIRE/IS_EXPLOSION_IN_SPHERE (result cleaner only)
	AddResultCleaner(0xAB0F816885B0E483, ResultCleaner<bool>);

	// CAM/IS_FIRST_PERSON_AIM_CAM_ACTIVE (result cleaner only)
	AddResultCleaner(0x5E346D934122613F, ResultCleaner<bool>);

	// WEAPON/IS_FLASH_LIGHT_ON (result cleaner only)
	AddResultCleaner(0x4B7620C47217126C, ResultCleaner<bool>);

	// HUD/IS_FLOATING_HELP_TEXT_ON_SCREEN (result cleaner only)
	AddResultCleaner(0x2432784ACA090DA4, ResultCleaner<bool>);

	// CAM/IS_FOLLOW_PED_CAM_ACTIVE (result cleaner only)
	AddResultCleaner(0xC6D3D26810C8E0F9, ResultCleaner<bool>);

	// CAM/IS_FOLLOW_VEHICLE_CAM_ACTIVE (result cleaner only)
	AddResultCleaner(0xCBBDE6D335D6D496, ResultCleaner<bool>);

	// MISC/IS_FRONTEND_FADING (result cleaner only)
	AddResultCleaner(0x7EA2B6AF97ECA6ED, ResultCleaner<bool>);

	// HUD/IS_FRONTEND_READY_FOR_CONTROL (result cleaner only)
	AddResultCleaner(0x3BAB9A4E4F2FF5C7, ResultCleaner<bool>);

	// CAM/IS_GAMEPLAY_CAM_LOOKING_BEHIND (result cleaner only)
	AddResultCleaner(0x70FDA869F3317EA9, ResultCleaner<bool>);

	// CAM/IS_GAMEPLAY_CAM_RENDERING (result cleaner only)
	AddResultCleaner(0x39B5D1B10383F0C8, ResultCleaner<bool>);

	// CAM/IS_GAMEPLAY_CAM_SHAKING (result cleaner only)
	AddResultCleaner(0x016C090630DF1F89, ResultCleaner<bool>);

	// CAM/IS_GAMEPLAY_HINT_ACTIVE (result cleaner only)
	AddResultCleaner(0xE520FF1AD2785B40, ResultCleaner<bool>);

	// AUDIO/IS_GAME_IN_CONTROL_OF_MUSIC (result cleaner only)
	AddResultCleaner(0x6D28DC1671E334FD, ResultCleaner<bool>);

	// OBJECT/IS_GARAGE_EMPTY (result cleaner only)
	AddResultCleaner(0x90E47239EA1980B8, ResultCleaner<bool>);

	// VEHICLE/IS_HELI_LANDING_AREA_BLOCKED (result cleaner only)
	AddResultCleaner(0x634148744F385576, ResultCleaner<bool>);

	// VEHICLE/IS_HELI_PART_BROKEN (result cleaner only)
	AddResultCleaner(0xBC74B4BE25EB6C8A, ResultCleaner<bool>);

	// HUD/IS_HELP_MESSAGE_BEING_DISPLAYED (result cleaner only)
	AddResultCleaner(0x4D79439A6B55AC67, ResultCleaner<bool>);

	// HUD/IS_HELP_MESSAGE_FADING_OUT (result cleaner only)
	AddResultCleaner(0x327EDEEEAC55C369, ResultCleaner<bool>);

	// HUD/IS_HELP_MESSAGE_ON_SCREEN (result cleaner only)
	AddResultCleaner(0xDAD37F45428801AE, ResultCleaner<bool>);

	// AUDIO/IS_HORN_ACTIVE (result cleaner only)
	AddResultCleaner(0x9D6BFC12B05C6121, ResultCleaner<bool>);

	// HUD/IS_HOVERING_OVER_MISSION_CREATOR_BLIP (result cleaner only)
	AddResultCleaner(0x4167EFE0527D706E, ResultCleaner<bool>);

	// HUD/IS_HUD_COMPONENT_ACTIVE (result cleaner only)
	AddResultCleaner(0xBC4C9EA5391ECC0D, ResultCleaner<bool>);

	// HUD/IS_HUD_HIDDEN (result cleaner only)
	AddResultCleaner(0xA86478C6958735C5, ResultCleaner<bool>);

	// HUD/IS_HUD_PREFERENCE_SWITCHED_ON (result cleaner only)
	AddResultCleaner(0x1930DFA731813EC4, ResultCleaner<bool>);

	// MISC/IS_INCIDENT_VALID (result cleaner only)
	AddResultCleaner(0xC8BC6461E629BEAA, ResultCleaner<bool>);

	// INTERIOR/IS_INTERIOR_CAPPED (result cleaner only)
	AddResultCleaner(0x92BAC8ACF88CEC26, ResultCleaner<bool>);

	// INTERIOR/IS_INTERIOR_DISABLED (result cleaner only)
	AddResultCleaner(0xBC5115A5A939DD15, ResultCleaner<bool>);

	// INTERIOR/IS_INTERIOR_ENTITY_SET_ACTIVE
	static auto nh_0x35F7DD45E8C0A16D = rage::scrEngine::GetNativeHandler(0x35F7DD45E8C0A16D);
	rage::scrEngine::RegisterNativeHandler(0x35F7DD45E8C0A16D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x35F7DD45E8C0A16D(cxt);
	});
	        
	AddResultCleaner(0x35F7DD45E8C0A16D, ResultCleaner<bool>);

	// INTERIOR/IS_INTERIOR_READY (result cleaner only)
	AddResultCleaner(0x6726BDCCC1932F0E, ResultCleaner<bool>);

	// INTERIOR/IS_INTERIOR_SCENE (result cleaner only)
	AddResultCleaner(0xBC72B5D7A1CBD54D, ResultCleaner<bool>);

	// ITEMSET/IS_IN_ITEMSET
	static auto nh_0x2D0FC594D1E9C107 = rage::scrEngine::GetNativeHandler(0x2D0FC594D1E9C107);
	rage::scrEngine::RegisterNativeHandler(0x2D0FC594D1E9C107, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2D0FC594D1E9C107(cxt);
	});
	        
	AddResultCleaner(0x2D0FC594D1E9C107, ResultCleaner<bool>);

	// STREAMING/IS_IPL_ACTIVE
	static auto nh_0x88A741E44A2B3495 = rage::scrEngine::GetNativeHandler(0x88A741E44A2B3495);
	rage::scrEngine::RegisterNativeHandler(0x88A741E44A2B3495, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x88A741E44A2B3495(cxt);
	});
	        
	AddResultCleaner(0x88A741E44A2B3495, ResultCleaner<bool>);

	// ITEMSET/IS_ITEMSET_VALID
	static auto nh_0xB1B1EA596344DFAB = rage::scrEngine::GetNativeHandler(0xB1B1EA596344DFAB);
	rage::scrEngine::RegisterNativeHandler(0xB1B1EA596344DFAB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB1B1EA596344DFAB(cxt);
	});
	        
	AddResultCleaner(0xB1B1EA596344DFAB, ResultCleaner<bool>);

	// PAD/IS_LOOK_INVERTED (result cleaner only)
	AddResultCleaner(0x77B612531280010D, ResultCleaner<bool>);

	// MISC/IS_MEMORY_CARD_IN_USE (result cleaner only)
	AddResultCleaner(0x8A75CE2956274ADD, ResultCleaner<bool>);

	// HUD/IS_MESSAGE_BEING_DISPLAYED (result cleaner only)
	AddResultCleaner(0x7984C03AA5CC2F41, ResultCleaner<bool>);

	// MISC/IS_MINIGAME_IN_PROGRESS (result cleaner only)
	AddResultCleaner(0x2B4A15E44DE0F478, ResultCleaner<bool>);

	// HUD/IS_MINIMAP_RENDERING (result cleaner only)
	AddResultCleaner(0xAF754F20EB5CD51A, ResultCleaner<bool>);

	// AUDIO/IS_MISSION_COMPLETE_PLAYING (result cleaner only)
	AddResultCleaner(0x19A30C23F5827F8A, ResultCleaner<bool>);

	// AUDIO/IS_MISSION_COMPLETE_READY_FOR_UI (result cleaner only)
	AddResultCleaner(0x6F259F82D873B8B8, ResultCleaner<bool>);

	// HUD/IS_MISSION_CREATOR_BLIP (result cleaner only)
	AddResultCleaner(0x26F49BF3381D933D, ResultCleaner<bool>);

	// AUDIO/IS_MISSION_NEWS_STORY_UNLOCKED (result cleaner only)
	AddResultCleaner(0x66E49BF55B4B1874, ResultCleaner<bool>);

	// AUDIO/IS_MOBILE_INTERFERENCE_ACTIVE (result cleaner only)
	AddResultCleaner(0xC8B1B2425604CDD0, ResultCleaner<bool>);

	// AUDIO/IS_MOBILE_PHONE_CALL_ONGOING (result cleaner only)
	AddResultCleaner(0x7497D2CE2C30D24C, ResultCleaner<bool>);

	// AUDIO/IS_MOBILE_PHONE_RADIO_ACTIVE (result cleaner only)
	AddResultCleaner(0xB35CE999E8EF317E, ResultCleaner<bool>);

	// STREAMING/IS_MODEL_A_VEHICLE (result cleaner only)
	AddResultCleaner(0x19AAC8F07BFEC53E, ResultCleaner<bool>);

	// STREAMING/IS_MODEL_IN_CDIMAGE (result cleaner only)
	AddResultCleaner(0x35B9E0803292B641, ResultCleaner<bool>);

	// STREAMING/IS_MODEL_VALID (result cleaner only)
	AddResultCleaner(0xC0296A2EDF545E92, ResultCleaner<bool>);

	// TASK/IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK (result cleaner only)
	AddResultCleaner(0xA320EF046186FA3B, ResultCleaner<bool>);

	// TASK/IS_MOVE_BLEND_RATIO_RUNNING (result cleaner only)
	AddResultCleaner(0xD4D8636C0199A939, ResultCleaner<bool>);

	// TASK/IS_MOVE_BLEND_RATIO_SPRINTING (result cleaner only)
	AddResultCleaner(0x24A2AD74FA9814E2, ResultCleaner<bool>);

	// TASK/IS_MOVE_BLEND_RATIO_STILL (result cleaner only)
	AddResultCleaner(0x349CE7B56DAFD95C, ResultCleaner<bool>);

	// TASK/IS_MOVE_BLEND_RATIO_WALKING (result cleaner only)
	AddResultCleaner(0xF133BBBE91E1691F, ResultCleaner<bool>);

	// HUD/IS_MP_GAMER_TAG_ACTIVE (result cleaner only)
	AddResultCleaner(0x4E929E7A5796FD26, ResultCleaner<bool>);

	// HUD/IS_MP_GAMER_TAG_FREE (result cleaner only)
	AddResultCleaner(0x595B5178E412E199, ResultCleaner<bool>);

	// HUD/IS_MP_GAMER_TAG_MOVIE_ACTIVE (result cleaner only)
	AddResultCleaner(0x6E0EB3EB47C8D7AA, ResultCleaner<bool>);

	// AUDIO/IS_MUSIC_ONESHOT_PLAYING (result cleaner only)
	AddResultCleaner(0xA097AB275061FB21, ResultCleaner<bool>);

	// HUD/IS_NAMED_RENDERTARGET_LINKED (result cleaner only)
	AddResultCleaner(0x113750538FA31298, ResultCleaner<bool>);

	// HUD/IS_NAMED_RENDERTARGET_REGISTERED
	static auto nh_0x78DCDC15C9F116B4 = rage::scrEngine::GetNativeHandler(0x78DCDC15C9F116B4);
	rage::scrEngine::RegisterNativeHandler(0x78DCDC15C9F116B4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x78DCDC15C9F116B4(cxt);
	});
	        
	AddResultCleaner(0x78DCDC15C9F116B4, ResultCleaner<bool>);

	// HUD/IS_NAVIGATING_MENU_CONTENT (result cleaner only)
	AddResultCleaner(0x4E3CD0EF8A489541, ResultCleaner<int>);

	// PATHFIND/IS_NAVMESH_LOADED_IN_AREA (result cleaner only)
	AddResultCleaner(0xF813C7E63F9062A5, ResultCleaner<bool>);

	// NETWORK/IS_NETWORK_ID_OWNED_BY_PARTICIPANT (result cleaner only)
	AddResultCleaner(0xA1607996431332DF, ResultCleaner<bool>);

	// STREAMING/IS_NETWORK_LOADING_SCENE (result cleaner only)
	AddResultCleaner(0x41CA5A33160EA4AB, ResultCleaner<bool>);

	// STREAMING/IS_NEW_LOAD_SCENE_ACTIVE (result cleaner only)
	AddResultCleaner(0xA41A05B6CB741B85, ResultCleaner<bool>);

	// STREAMING/IS_NEW_LOAD_SCENE_LOADED (result cleaner only)
	AddResultCleaner(0x01B8247A7A8B9AD1, ResultCleaner<bool>);

	// MISC/IS_NEXT_WEATHER_TYPE
	static auto nh_0x2FAA3A30BEC0F25D = rage::scrEngine::GetNativeHandler(0x2FAA3A30BEC0F25D);
	rage::scrEngine::RegisterNativeHandler(0x2FAA3A30BEC0F25D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2FAA3A30BEC0F25D(cxt);
	});
	        
	AddResultCleaner(0x2FAA3A30BEC0F25D, ResultCleaner<bool>);

	// CFX/IS_NUI_FOCUSED (result cleaner only)
	AddResultCleaner(0x98545e6d, ResultCleaner<bool>);

	// CFX/IS_NUI_FOCUS_KEEPING_INPUT (result cleaner only)
	AddResultCleaner(0x39c9dc92, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_A_PICKUP (result cleaner only)
	AddResultCleaner(0xFC481C641EBBD27D, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_A_PORTABLE_PICKUP (result cleaner only)
	AddResultCleaner(0x0378C08504160D0D, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_ENTIRELY_INSIDE_GARAGE (result cleaner only)
	AddResultCleaner(0x372EF6699146A1E4, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_NEAR_POINT (result cleaner only)
	AddResultCleaner(0x8C90FE4B381BA60A, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_PARTIALLY_INSIDE_GARAGE (result cleaner only)
	AddResultCleaner(0xF0EED5A6BC7B237A, ResultCleaner<bool>);

	// OBJECT/IS_OBJECT_VISIBLE (result cleaner only)
	AddResultCleaner(0x8B32ACE6326A7546, ResultCleaner<bool>);

	// BRAIN/IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE (result cleaner only)
	AddResultCleaner(0xCCBA154209823057, ResultCleaner<bool>);

	// HUD/IS_ONLINE_POLICIES_MENU_ACTIVE (result cleaner only)
	AddResultCleaner(0x6F72CD94F7B5B68C, ResultCleaner<bool>);

	// MISC/IS_ORBIS_VERSION (result cleaner only)
	AddResultCleaner(0xA72BC0B675B1519E, ResultCleaner<bool>);

	// HUD/IS_PAUSEMAP_IN_INTERIOR_MODE (result cleaner only)
	AddResultCleaner(0x9049FE339D5F6F6F, ResultCleaner<bool>);

	// HUD/IS_PAUSE_MENU_ACTIVE (result cleaner only)
	AddResultCleaner(0xB0034A223497FFCB, ResultCleaner<bool>);

	// HUD/IS_PAUSE_MENU_RESTARTING (result cleaner only)
	AddResultCleaner(0x1C491717107431C7, ResultCleaner<bool>);

	// MISC/IS_PC_VERSION (result cleaner only)
	AddResultCleaner(0x48AF36444B965238, ResultCleaner<bool>);

	// PED/IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE (result cleaner only)
	AddResultCleaner(0xEBB376779A760AA8, ResultCleaner<bool>);

	// PED/IS_PEDHEADSHOT_READY (result cleaner only)
	AddResultCleaner(0x7085228842B13A67, ResultCleaner<bool>);

	// PED/IS_PEDHEADSHOT_VALID (result cleaner only)
	AddResultCleaner(0xA0A9668F158129A2, ResultCleaner<bool>);

	// TASK/IS_PED_ACTIVE_IN_SCENARIO (result cleaner only)
	AddResultCleaner(0xAA135F9482C82CC3, ResultCleaner<bool>);

	// PED/IS_PED_AIMING_FROM_COVER (result cleaner only)
	AddResultCleaner(0x3998B1276A3300E5, ResultCleaner<bool>);

	// WEAPON/IS_PED_ARMED (result cleaner only)
	AddResultCleaner(0x475768A975D5AD17, ResultCleaner<bool>);

	// PED/IS_PED_A_PLAYER (result cleaner only)
	AddResultCleaner(0x12534C348C6CB68B, ResultCleaner<bool>);

	// TASK/IS_PED_BEING_ARRESTED (result cleaner only)
	AddResultCleaner(0x90A09F3A45FED688, ResultCleaner<bool>);

	// PED/IS_PED_BEING_JACKED (result cleaner only)
	AddResultCleaner(0x9A497FE2DF198913, ResultCleaner<bool>);

	// PED/IS_PED_BEING_STEALTH_KILLED (result cleaner only)
	AddResultCleaner(0x863B23EFDE9C5DF2, ResultCleaner<bool>);

	// PED/IS_PED_BEING_STUNNED (result cleaner only)
	AddResultCleaner(0x4FBACCE3B4138EE8, ResultCleaner<bool>);

	// PED/IS_PED_CLIMBING (result cleaner only)
	AddResultCleaner(0x53E8CB4F48BFE623, ResultCleaner<bool>);

	// CFX/IS_PED_COLLECTION_COMPONENT_VARIATION_GEN9_EXCLUSIVE
	static auto nh_0x33b2afa2 = rage::scrEngine::GetNativeHandler(0x33b2afa2);
	rage::scrEngine::RegisterNativeHandler(0x33b2afa2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x33b2afa2(cxt);
	});
	        
	AddResultCleaner(0x33b2afa2, ResultCleaner<bool>);

	// CFX/IS_PED_COLLECTION_COMPONENT_VARIATION_VALID
	static auto nh_0xca63a52a = rage::scrEngine::GetNativeHandler(0xca63a52a);
	rage::scrEngine::RegisterNativeHandler(0xca63a52a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xca63a52a(cxt);
	});
	        
	AddResultCleaner(0xca63a52a, ResultCleaner<bool>);

	// CFX/IS_PED_COMPONENT_VARIATION_GEN9_EXCLUSIVE (result cleaner only)
	AddResultCleaner(0xc767b581, ResultCleaner<bool>);

	// PED/IS_PED_COMPONENT_VARIATION_VALID (result cleaner only)
	AddResultCleaner(0xE825F6B6CEA7671D, ResultCleaner<bool>);

	// TASK/IS_PED_CUFFED (result cleaner only)
	AddResultCleaner(0x74E559B3BC910685, ResultCleaner<bool>);

	// WEAPON/IS_PED_CURRENT_WEAPON_SILENCED (result cleaner only)
	AddResultCleaner(0x65F0C5AE05943EC7, ResultCleaner<bool>);

	// PED/IS_PED_DEAD_OR_DYING (result cleaner only)
	AddResultCleaner(0x3317DEDB88C95038, ResultCleaner<bool>);

	// PED/IS_PED_DEFENSIVE_AREA_ACTIVE (result cleaner only)
	AddResultCleaner(0xBA63D9FE45412247, ResultCleaner<bool>);

	// PED/IS_PED_DIVING (result cleaner only)
	AddResultCleaner(0x5527B8246FEF9B11, ResultCleaner<bool>);

	// PED/IS_PED_DOING_DRIVEBY (result cleaner only)
	AddResultCleaner(0xB2C086CC1BF8F2BF, ResultCleaner<bool>);

	// PED/IS_PED_DUCKING (result cleaner only)
	AddResultCleaner(0xD125AE748725C6BC, ResultCleaner<bool>);

	// PED/IS_PED_EVASIVE_DIVING
	static auto nh_0x414641C26E105898 = rage::scrEngine::GetNativeHandler(0x414641C26E105898);
	rage::scrEngine::RegisterNativeHandler(0x414641C26E105898, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x414641C26E105898(cxt);
	});
	        
	AddResultCleaner(0x414641C26E105898, ResultCleaner<bool>);

	// PED/IS_PED_FACING_PED (result cleaner only)
	AddResultCleaner(0xD71649DB0A545AA3, ResultCleaner<bool>);

	// PED/IS_PED_FALLING (result cleaner only)
	AddResultCleaner(0xFB92A102F1C4DFA3, ResultCleaner<bool>);

	// PED/IS_PED_FATALLY_INJURED (result cleaner only)
	AddResultCleaner(0xD839450756ED5A80, ResultCleaner<bool>);

	// PED/IS_PED_FLEEING (result cleaner only)
	AddResultCleaner(0xBBCCE00B381F8482, ResultCleaner<bool>);

	// PED/IS_PED_GETTING_INTO_A_VEHICLE (result cleaner only)
	AddResultCleaner(0xBB062B2B5722478E, ResultCleaner<bool>);

	// TASK/IS_PED_GETTING_UP (result cleaner only)
	AddResultCleaner(0x2A74E1D5F2F00EEC, ResultCleaner<bool>);

	// PED/IS_PED_GOING_INTO_COVER (result cleaner only)
	AddResultCleaner(0x9F65DBC537E59AD5, ResultCleaner<bool>);

	// PED/IS_PED_GROUP_MEMBER (result cleaner only)
	AddResultCleaner(0x9BB01E3834671191, ResultCleaner<bool>);

	// PED/IS_PED_HANGING_ON_TO_VEHICLE (result cleaner only)
	AddResultCleaner(0x1C86D8AEF8254B78, ResultCleaner<bool>);

	// PED/IS_PED_HEADING_TOWARDS_POSITION (result cleaner only)
	AddResultCleaner(0xFCF37A457CB96DC0, ResultCleaner<bool>);

	// PED/IS_PED_HEADTRACKING_ENTITY (result cleaner only)
	AddResultCleaner(0x813A0A7C9D2E831F, ResultCleaner<bool>);

	// PED/IS_PED_HEADTRACKING_PED (result cleaner only)
	AddResultCleaner(0x5CD3CB88A7F8850D, ResultCleaner<bool>);

	// PED/IS_PED_HUMAN (result cleaner only)
	AddResultCleaner(0xB980061DA992779D, ResultCleaner<bool>);

	// PED/IS_PED_HURT (result cleaner only)
	AddResultCleaner(0x5983BB449D7FDB12, ResultCleaner<bool>);

	// PED/IS_PED_INJURED (result cleaner only)
	AddResultCleaner(0x84A2DD9AC37C35C1, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_BOAT (result cleaner only)
	AddResultCleaner(0x2E0E1C2B4F6CB339, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_HELI (result cleaner only)
	AddResultCleaner(0x298B91AE825E5705, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_PLANE (result cleaner only)
	AddResultCleaner(0x5FFF4CFC74D8FB80, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_POLICE_VEHICLE (result cleaner only)
	AddResultCleaner(0x0BD04E29640C9C12, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_SUB (result cleaner only)
	AddResultCleaner(0xFBFC01CCFB35D99E, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_TAXI (result cleaner only)
	AddResultCleaner(0x6E575D6A898AB852, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_TRAIN (result cleaner only)
	AddResultCleaner(0x6F972C1AB75A1ED0, ResultCleaner<bool>);

	// PED/IS_PED_IN_ANY_VEHICLE (result cleaner only)
	AddResultCleaner(0x997ABD671D25CA0B, ResultCleaner<bool>);

	// PED/IS_PED_IN_COMBAT (result cleaner only)
	AddResultCleaner(0x4859F1FC66A6278E, ResultCleaner<bool>);

	// PED/IS_PED_IN_COVER (result cleaner only)
	AddResultCleaner(0x60DFD0691A170B88, ResultCleaner<bool>);

	// PED/IS_PED_IN_COVER_FACING_LEFT (result cleaner only)
	AddResultCleaner(0x845333B3150583AB, ResultCleaner<bool>);

	// AUDIO/IS_PED_IN_CURRENT_CONVERSATION (result cleaner only)
	AddResultCleaner(0x049E937F18F4020C, ResultCleaner<bool>);

	// PED/IS_PED_IN_FLYING_VEHICLE (result cleaner only)
	AddResultCleaner(0x9134873537FA419C, ResultCleaner<bool>);

	// PED/IS_PED_IN_GROUP (result cleaner only)
	AddResultCleaner(0x5891CAC5D4ACFF74, ResultCleaner<bool>);

	// PED/IS_PED_IN_HIGH_COVER (result cleaner only)
	AddResultCleaner(0x6A03BF943D767C93, ResultCleaner<bool>);

	// PED/IS_PED_IN_MELEE_COMBAT (result cleaner only)
	AddResultCleaner(0x4E209B2C1EAD5159, ResultCleaner<bool>);

	// PED/IS_PED_IN_MODEL (result cleaner only)
	AddResultCleaner(0x796D90EFB19AA332, ResultCleaner<bool>);

	// PED/IS_PED_IN_PARACHUTE_FREE_FALL (result cleaner only)
	AddResultCleaner(0x7DCE8BDA0F1C1200, ResultCleaner<bool>);

	// PED/IS_PED_IN_VEHICLE (result cleaner only)
	AddResultCleaner(0xA3EE4A07279BB9DB, ResultCleaner<bool>);

	// TASK/IS_PED_IN_WRITHE (result cleaner only)
	AddResultCleaner(0xDEB6D52126E7D640, ResultCleaner<bool>);

	// PED/IS_PED_JACKING (result cleaner only)
	AddResultCleaner(0x4AE4FF911DFB61DA, ResultCleaner<bool>);

	// PED/IS_PED_JUMPING (result cleaner only)
	AddResultCleaner(0xCEDABC5900A0BF97, ResultCleaner<bool>);

	// PED/IS_PED_JUMPING_OUT_OF_VEHICLE (result cleaner only)
	AddResultCleaner(0x433DDFFE2044B636, ResultCleaner<bool>);

	// PED/IS_PED_MALE (result cleaner only)
	AddResultCleaner(0x6D9F5FAA7488BA46, ResultCleaner<bool>);

	// PED/IS_PED_MODEL (result cleaner only)
	AddResultCleaner(0xC9D55B1A358A5BF7, ResultCleaner<bool>);

	// PED/IS_PED_ON_ANY_BIKE (result cleaner only)
	AddResultCleaner(0x94495889E22C6479, ResultCleaner<bool>);

	// PED/IS_PED_ON_FOOT (result cleaner only)
	AddResultCleaner(0x01FEE67DB37F59B2, ResultCleaner<bool>);

	// PED/IS_PED_ON_MOUNT (result cleaner only)
	AddResultCleaner(0x460BC76A0E10655E, ResultCleaner<bool>);

	// PED/IS_PED_ON_SPECIFIC_VEHICLE (result cleaner only)
	AddResultCleaner(0xEC5F66E459AF3BB2, ResultCleaner<bool>);

	// PED/IS_PED_ON_VEHICLE (result cleaner only)
	AddResultCleaner(0x67722AEB798E5FAB, ResultCleaner<bool>);

	// PED/IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT (result cleaner only)
	AddResultCleaner(0xEBD0EDBA5BE957CF, ResultCleaner<bool>);

	// PED/IS_PED_PERFORMING_MELEE_ACTION (result cleaner only)
	AddResultCleaner(0xDCCA191DF9980FD7, ResultCleaner<bool>);

	// PED/IS_PED_PERFORMING_STEALTH_KILL (result cleaner only)
	AddResultCleaner(0xFD4CCDBCC59941B7, ResultCleaner<bool>);

	// PED/IS_PED_PLANTING_BOMB (result cleaner only)
	AddResultCleaner(0xC70B5FAE151982D8, ResultCleaner<bool>);

	// TASK/IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO (result cleaner only)
	AddResultCleaner(0x621C6E4729388E41, ResultCleaner<bool>);

	// PED/IS_PED_PRONE (result cleaner only)
	AddResultCleaner(0xD6A86331A537A7B9, ResultCleaner<bool>);

	// PED/IS_PED_RAGDOLL (result cleaner only)
	AddResultCleaner(0x47E4E977581C5B55, ResultCleaner<bool>);

	// PED/IS_PED_RELOADING (result cleaner only)
	AddResultCleaner(0x24B100C68C645951, ResultCleaner<bool>);

	// PED/IS_PED_RESPONDING_TO_EVENT
	static auto nh_0x625B774D75C87068 = rage::scrEngine::GetNativeHandler(0x625B774D75C87068);
	rage::scrEngine::RegisterNativeHandler(0x625B774D75C87068, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x625B774D75C87068(cxt);
	});
	        
	AddResultCleaner(0x625B774D75C87068, ResultCleaner<bool>);

	// AUDIO/IS_PED_RINGTONE_PLAYING (result cleaner only)
	AddResultCleaner(0x1E8E5E20937E3137, ResultCleaner<bool>);

	// TASK/IS_PED_RUNNING (result cleaner only)
	AddResultCleaner(0xC5286FFC176F28A2, ResultCleaner<bool>);

	// TASK/IS_PED_RUNNING_ARREST_TASK (result cleaner only)
	AddResultCleaner(0x3DC52677769B4AE0, ResultCleaner<bool>);

	// PED/IS_PED_RUNNING_MELEE_TASK (result cleaner only)
	AddResultCleaner(0xD1871251F3B5ACD7, ResultCleaner<bool>);

	// PED/IS_PED_RUNNING_MOBILE_PHONE_TASK (result cleaner only)
	AddResultCleaner(0x2AFE52F782F25775, ResultCleaner<bool>);

	// PED/IS_PED_RUNNING_RAGDOLL_TASK (result cleaner only)
	AddResultCleaner(0xE3B6097CC25AA69E, ResultCleaner<bool>);

	// PED/IS_PED_SHOOTING (result cleaner only)
	AddResultCleaner(0x34616828CD07F1A1, ResultCleaner<bool>);

	// PED/IS_PED_SHOOTING_IN_AREA (result cleaner only)
	AddResultCleaner(0x7E9DFE24AC1E58EF, ResultCleaner<bool>);

	// PED/IS_PED_SITTING_IN_ANY_VEHICLE (result cleaner only)
	AddResultCleaner(0x826AA586EDB9FEF8, ResultCleaner<bool>);

	// PED/IS_PED_SITTING_IN_VEHICLE (result cleaner only)
	AddResultCleaner(0xA808AA1D79230FC2, ResultCleaner<bool>);

	// TASK/IS_PED_SPRINTING (result cleaner only)
	AddResultCleaner(0x57E457CD2C0FC168, ResultCleaner<bool>);

	// TASK/IS_PED_STILL (result cleaner only)
	AddResultCleaner(0xAC29253EEF8F0180, ResultCleaner<bool>);

	// PED/IS_PED_STOPPED (result cleaner only)
	AddResultCleaner(0x530944F6F4B8A214, ResultCleaner<bool>);

	// TASK/IS_PED_STRAFING (result cleaner only)
	AddResultCleaner(0xE45B7F222DE47E09, ResultCleaner<bool>);

	// PED/IS_PED_SWIMMING (result cleaner only)
	AddResultCleaner(0x9DE327631295B4C2, ResultCleaner<bool>);

	// PED/IS_PED_SWIMMING_UNDER_WATER (result cleaner only)
	AddResultCleaner(0xC024869A53992F34, ResultCleaner<bool>);

	// PED/IS_PED_TAKING_OFF_HELMET (result cleaner only)
	AddResultCleaner(0x14590DDBEDB1EC85, ResultCleaner<bool>);

	// PED/IS_PED_TRACKED (result cleaner only)
	AddResultCleaner(0x4C5E1F087CD10BB7, ResultCleaner<bool>);

	// PED/IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE (result cleaner only)
	AddResultCleaner(0x44D28D5DDFE5F68C, ResultCleaner<bool>);

	// PED/IS_PED_USING_ACTION_MODE (result cleaner only)
	AddResultCleaner(0x00E73468D085F745, ResultCleaner<bool>);

	// PED/IS_PED_USING_ANY_SCENARIO (result cleaner only)
	AddResultCleaner(0x57AB4A3080F85143, ResultCleaner<bool>);

	// PED/IS_PED_USING_SCENARIO
	static auto nh_0x1BF094736DD62C2E = rage::scrEngine::GetNativeHandler(0x1BF094736DD62C2E);
	rage::scrEngine::RegisterNativeHandler(0x1BF094736DD62C2E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1BF094736DD62C2E(cxt);
	});
	        
	AddResultCleaner(0x1BF094736DD62C2E, ResultCleaner<bool>);

	// PED/IS_PED_VAULTING (result cleaner only)
	AddResultCleaner(0x117C70D1F5730B5E, ResultCleaner<bool>);

	// TASK/IS_PED_WALKING (result cleaner only)
	AddResultCleaner(0xDE4C184B2B9B071A, ResultCleaner<bool>);

	// WEAPON/IS_PED_WEAPON_COMPONENT_ACTIVE (result cleaner only)
	AddResultCleaner(0x0D78DE0572D3969E, ResultCleaner<bool>);

	// WEAPON/IS_PED_WEAPON_READY_TO_SHOOT (result cleaner only)
	AddResultCleaner(0xB80CA294F2F26749, ResultCleaner<bool>);

	// PED/IS_PED_WEARING_HELMET (result cleaner only)
	AddResultCleaner(0xF33BDFE19B309B19, ResultCleaner<bool>);

	// OBJECT/IS_PICKUP_WEAPON_OBJECT_VALID (result cleaner only)
	AddResultCleaner(0x11D1E53A726891FE, ResultCleaner<bool>);

	// VEHICLE/IS_PLANE_LANDING_GEAR_INTACT (result cleaner only)
	AddResultCleaner(0x4198AB0022B15F87, ResultCleaner<bool>);

	// VEHICLE/IS_PLAYBACK_GOING_ON_FOR_VEHICLE (result cleaner only)
	AddResultCleaner(0x1C8A4C2C19E68EEC, ResultCleaner<bool>);

	// VEHICLE/IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE (result cleaner only)
	AddResultCleaner(0xAEA8FD591FAD4106, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_BATTLE_AWARE (result cleaner only)
	AddResultCleaner(0x38D28DA81E4E9BF9, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_BEING_ARRESTED (result cleaner only)
	AddResultCleaner(0x388A47C51ABDAC8E, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_BLUETOOTH_ENABLE (result cleaner only)
	AddResultCleaner(0x65FAEE425DE637B0, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_CLIMBING (result cleaner only)
	AddResultCleaner(0x95E8F73DC65EFB9C, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_CONTROL_ON (result cleaner only)
	AddResultCleaner(0x49C32D60007AFA47, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_DEAD (result cleaner only)
	AddResultCleaner(0x424D4687FA1E5652, ResultCleaner<bool>);

	// OBJECT/IS_PLAYER_ENTIRELY_INSIDE_GARAGE (result cleaner only)
	AddResultCleaner(0x024A60DEB0EA69F0, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_FREE_AIMING (result cleaner only)
	AddResultCleaner(0x2E397FD2ECD37C87, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_FREE_AIMING_AT_ENTITY (result cleaner only)
	AddResultCleaner(0x3C06B5C839B38F7B, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_FREE_FOR_AMBIENT_TASK (result cleaner only)
	AddResultCleaner(0xDCCFD3F106C36AB4, ResultCleaner<bool>);

	// NETWORK/IS_PLAYER_IN_CUTSCENE (result cleaner only)
	AddResultCleaner(0xE73092F4157CD126, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_LOGGING_IN_NP (result cleaner only)
	AddResultCleaner(0x74556E1420867ECA, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_ONLINE (result cleaner only)
	AddResultCleaner(0xF25D331DC2627BBC, ResultCleaner<bool>);

	// OBJECT/IS_PLAYER_PARTIALLY_INSIDE_GARAGE (result cleaner only)
	AddResultCleaner(0x1761DC5D8471CBAA, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_PLAYING (result cleaner only)
	AddResultCleaner(0x5E9564D8246B909A, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_PRESSING_HORN (result cleaner only)
	AddResultCleaner(0xFA1E2BF8B10598F9, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_READY_FOR_CUTSCENE (result cleaner only)
	AddResultCleaner(0x908CBECC2CAA3690, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_RIDING_TRAIN (result cleaner only)
	AddResultCleaner(0x4EC12697209F2196, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_SCRIPT_CONTROL_ON (result cleaner only)
	AddResultCleaner(0x8A876A65283DD7D7, ResultCleaner<bool>);

	// STREAMING/IS_PLAYER_SWITCH_IN_PROGRESS (result cleaner only)
	AddResultCleaner(0xD9D2CFFF49FAB35F, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_TARGETTING_ANYTHING (result cleaner only)
	AddResultCleaner(0x78CFE51896B6B8A4, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_TARGETTING_ENTITY (result cleaner only)
	AddResultCleaner(0x7912F7FC4F6264B6, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_TELEPORT_ACTIVE (result cleaner only)
	AddResultCleaner(0x02B15662D7F8886F, ResultCleaner<bool>);

	// AUDIO/IS_PLAYER_VEH_RADIO_ENABLE (result cleaner only)
	AddResultCleaner(0x5F43D83FD6738741, ResultCleaner<bool>);

	// PLAYER/IS_PLAYER_WANTED_LEVEL_GREATER (result cleaner only)
	AddResultCleaner(0x238DB2A2C23EE9EF, ResultCleaner<bool>);

	// TASK/IS_PLAYING_PHONE_GESTURE_ANIM (result cleaner only)
	AddResultCleaner(0xB8EBB1E9D3588C10, ResultCleaner<bool>);

	// OBJECT/IS_POINT_IN_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0x2A70BAE8883E4C81, ResultCleaner<bool>);

	// MISC/IS_POINT_OBSCURED_BY_A_MISSION_ENTITY
	static auto nh_0xE54E209C35FFA18D = rage::scrEngine::GetNativeHandler(0xE54E209C35FFA18D);
	rage::scrEngine::RegisterNativeHandler(0xE54E209C35FFA18D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xE54E209C35FFA18D(cxt);
	});
	        
	AddResultCleaner(0xE54E209C35FFA18D, ResultCleaner<bool>);

	// PATHFIND/IS_POINT_ON_ROAD (result cleaner only)
	AddResultCleaner(0x125BF4ABFC536B09, ResultCleaner<bool>);

	// MISC/IS_POSITION_OCCUPIED (result cleaner only)
	AddResultCleaner(0xADCDE75E1C60F32D, ResultCleaner<bool>);

	// MISC/IS_PREV_WEATHER_TYPE
	static auto nh_0x44F28F86433B10A9 = rage::scrEngine::GetNativeHandler(0x44F28F86433B10A9);
	rage::scrEngine::RegisterNativeHandler(0x44F28F86433B10A9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x44F28F86433B10A9(cxt);
	});
	        
	AddResultCleaner(0x44F28F86433B10A9, ResultCleaner<bool>);

	// CFX/IS_PRINCIPAL_ACE_ALLOWED
	static auto nh_0x37cf52ce = rage::scrEngine::GetNativeHandler(0x37cf52ce);
	rage::scrEngine::RegisterNativeHandler(0x37cf52ce, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x37cf52ce(cxt);
	});
	        
	AddResultCleaner(0x37cf52ce, ResultCleaner<bool>);

	// MISC/IS_PROJECTILE_IN_AREA (result cleaner only)
	AddResultCleaner(0x5270A8FBC098C3F8, ResultCleaner<bool>);

	// MISC/IS_PROJECTILE_TYPE_IN_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0xF0BC12401061DEA0, ResultCleaner<bool>);

	// MISC/IS_PROJECTILE_TYPE_IN_AREA (result cleaner only)
	AddResultCleaner(0x2E0DC353342C4A6D, ResultCleaner<bool>);

	// MISC/IS_PROJECTILE_TYPE_WITHIN_DISTANCE (result cleaner only)
	AddResultCleaner(0x34318593248C8FB2, ResultCleaner<bool>);

	// MISC/IS_PS3_VERSION (result cleaner only)
	AddResultCleaner(0xCCA1072C29D096C2, ResultCleaner<bool>);

	// HUD/IS_RADAR_HIDDEN (result cleaner only)
	AddResultCleaner(0x157F93B036700462, ResultCleaner<bool>);

	// HUD/IS_RADAR_PREFERENCE_SWITCHED_ON (result cleaner only)
	AddResultCleaner(0x9EB6522EA68F22FE, ResultCleaner<bool>);

	// AUDIO/IS_RADIO_FADED_OUT (result cleaner only)
	AddResultCleaner(0x0626A247D2405330, ResultCleaner<bool>);

	// AUDIO/IS_RADIO_RETUNING (result cleaner only)
	AddResultCleaner(0xA151A7394A214E65, ResultCleaner<bool>);

	// AUDIO/IS_RADIO_STATION_FAVOURITED
	static auto nh_0x2B1784DB08AFEA79 = rage::scrEngine::GetNativeHandler(0x2B1784DB08AFEA79);
	rage::scrEngine::RegisterNativeHandler(0x2B1784DB08AFEA79, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2B1784DB08AFEA79(cxt);
	});
	        
	AddResultCleaner(0x2B1784DB08AFEA79, ResultCleaner<bool>);

	// HUD/IS_REPORTUGC_MENU_OPEN (result cleaner only)
	AddResultCleaner(0x9135584D09A3437E, ResultCleaner<bool>);

	// GRAPHICS/IS_SCALEFORM_MOVIE_DELETING (result cleaner only)
	AddResultCleaner(0x86255B1FC929E33E, ResultCleaner<bool>);

	// GRAPHICS/IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY (result cleaner only)
	AddResultCleaner(0x768FF8961BA904D6, ResultCleaner<bool>);

	// TASK/IS_SCENARIO_GROUP_ENABLED
	static auto nh_0x367A09DED4E05B99 = rage::scrEngine::GetNativeHandler(0x367A09DED4E05B99);
	rage::scrEngine::RegisterNativeHandler(0x367A09DED4E05B99, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x367A09DED4E05B99(cxt);
	});
	        
	AddResultCleaner(0x367A09DED4E05B99, ResultCleaner<bool>);

	// TASK/IS_SCENARIO_OCCUPIED (result cleaner only)
	AddResultCleaner(0x788756D73AC2E07C, ResultCleaner<bool>);

	// TASK/IS_SCENARIO_TYPE_ENABLED
	static auto nh_0x3A815DB3EA088722 = rage::scrEngine::GetNativeHandler(0x3A815DB3EA088722);
	rage::scrEngine::RegisterNativeHandler(0x3A815DB3EA088722, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3A815DB3EA088722(cxt);
	});
	        
	AddResultCleaner(0x3A815DB3EA088722, ResultCleaner<bool>);

	// GRAPHICS/IS_SCREENBLUR_FADE_RUNNING (result cleaner only)
	AddResultCleaner(0x7B226C785A52A0A9, ResultCleaner<bool>);

	// CAM/IS_SCREEN_FADED_IN (result cleaner only)
	AddResultCleaner(0x5A859503B0C08678, ResultCleaner<bool>);

	// CAM/IS_SCREEN_FADED_OUT (result cleaner only)
	AddResultCleaner(0xB16FCE9DDC7BA182, ResultCleaner<bool>);

	// CAM/IS_SCREEN_FADING_IN (result cleaner only)
	AddResultCleaner(0x5C544BC6C57AC575, ResultCleaner<bool>);

	// CAM/IS_SCREEN_FADING_OUT (result cleaner only)
	AddResultCleaner(0x797AC7CB535BA28F, ResultCleaner<bool>);

	// AUDIO/IS_SCRIPTED_CONVERSATION_LOADED (result cleaner only)
	AddResultCleaner(0xDF0D54BE7A776737, ResultCleaner<bool>);

	// AUDIO/IS_SCRIPTED_CONVERSATION_ONGOING (result cleaner only)
	AddResultCleaner(0x16754C556D2EDE3D, ResultCleaner<bool>);

	// HUD/IS_SCRIPTED_HUD_COMPONENT_ACTIVE (result cleaner only)
	AddResultCleaner(0xDD100EB17A94FF65, ResultCleaner<bool>);

	// HUD/IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME (result cleaner only)
	AddResultCleaner(0x09C0403ED9A751C2, ResultCleaner<bool>);

	// PED/IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM
	static auto nh_0x6EC47A344923E1ED = rage::scrEngine::GetNativeHandler(0x6EC47A344923E1ED);
	rage::scrEngine::RegisterNativeHandler(0x6EC47A344923E1ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6EC47A344923E1ED(cxt);
	});
	        
	AddResultCleaner(0x6EC47A344923E1ED, ResultCleaner<bool>);

	// AUDIO/IS_SCRIPTED_SPEECH_PLAYING (result cleaner only)
	AddResultCleaner(0xCC9AA18DCC7084F4, ResultCleaner<bool>);

	// CAM/IS_SCRIPT_GLOBAL_SHAKING (result cleaner only)
	AddResultCleaner(0xC912AF078AF19212, ResultCleaner<bool>);

	// VEHICLE/IS_SEAT_WARP_ONLY (result cleaner only)
	AddResultCleaner(0xF7F203E31F96F6A1, ResultCleaner<bool>);

	// EVENT/IS_SHOCKING_EVENT_IN_SPHERE (result cleaner only)
	AddResultCleaner(0x1374ABB7C15BAB92, ResultCleaner<bool>);

	// MISC/IS_SNIPER_BULLET_IN_AREA (result cleaner only)
	AddResultCleaner(0xFEFCF11B01287125, ResultCleaner<bool>);

	// MISC/IS_SNIPER_INVERTED (result cleaner only)
	AddResultCleaner(0x61A23B7EDA9BDA24, ResultCleaner<bool>);

	// HUD/IS_SOCIAL_CLUB_ACTIVE (result cleaner only)
	AddResultCleaner(0xC406BE343FC4B9AF, ResultCleaner<bool>);

	// PLAYER/IS_SPECIAL_ABILITY_ACTIVE (result cleaner only)
	AddResultCleaner(0x3E5F7FC85D854E15, ResultCleaner<bool>);

	// PLAYER/IS_SPECIAL_ABILITY_ENABLED (result cleaner only)
	AddResultCleaner(0xB1D200FE26AEF3CB, ResultCleaner<bool>);

	// PLAYER/IS_SPECIAL_ABILITY_METER_FULL (result cleaner only)
	AddResultCleaner(0x05A1FE504B7F2587, ResultCleaner<bool>);

	// PLAYER/IS_SPECIAL_ABILITY_UNLOCKED (result cleaner only)
	AddResultCleaner(0xC6017F6A6CDFA694, ResultCleaner<bool>);

	// CAM/IS_SPHERE_VISIBLE (result cleaner only)
	AddResultCleaner(0xE33D59DA70B58FDF, ResultCleaner<bool>);

	// NETWORK/IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE (result cleaner only)
	AddResultCleaner(0xD82CF8E64C8729D8, ResultCleaner<bool>);

	// NETWORK/IS_SPHERE_VISIBLE_TO_PLAYER
	static auto nh_0xDC3A310219E5DA62 = rage::scrEngine::GetNativeHandler(0xDC3A310219E5DA62);
	rage::scrEngine::RegisterNativeHandler(0xDC3A310219E5DA62, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDC3A310219E5DA62(cxt);
	});
	        
	AddResultCleaner(0xDC3A310219E5DA62, ResultCleaner<bool>);

	// STREAMING/IS_SRL_LOADED (result cleaner only)
	AddResultCleaner(0xD0263801A4C5B0BB, ResultCleaner<bool>);

	// NETWORK/IS_STORE_AVAILABLE_TO_USER (result cleaner only)
	AddResultCleaner(0x883D79C4071E18B3, ResultCleaner<bool>);

	// HUD/IS_STREAMING_ADDITIONAL_TEXT (result cleaner only)
	AddResultCleaner(0x8B6817B71B85EBF0, ResultCleaner<bool>);

	// CFX/IS_STREAMING_FILE_READY
	static auto nh_0xa194934d = rage::scrEngine::GetNativeHandler(0xa194934d);
	rage::scrEngine::RegisterNativeHandler(0xa194934d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xa194934d(cxt);
	});
	        
	AddResultCleaner(0xa194934d, ResultCleaner<bool>);

	// STREAMING/IS_STREAMVOL_ACTIVE (result cleaner only)
	AddResultCleaner(0xBC9823AB80A3DCAC, ResultCleaner<bool>);

	// AUDIO/IS_STREAM_PLAYING (result cleaner only)
	AddResultCleaner(0xD11FA52EB849D978, ResultCleaner<bool>);

	// MISC/IS_STRING_NULL
	static auto nh_0xF22B6C47C6EAB066 = rage::scrEngine::GetNativeHandler(0xF22B6C47C6EAB066);
	rage::scrEngine::RegisterNativeHandler(0xF22B6C47C6EAB066, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF22B6C47C6EAB066(cxt);
	});
	        
	AddResultCleaner(0xF22B6C47C6EAB066, ResultCleaner<bool>);

	// MISC/IS_STRING_NULL_OR_EMPTY
	static auto nh_0xCA042B6957743895 = rage::scrEngine::GetNativeHandler(0xCA042B6957743895);
	rage::scrEngine::RegisterNativeHandler(0xCA042B6957743895, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCA042B6957743895(cxt);
	});
	        
	AddResultCleaner(0xCA042B6957743895, ResultCleaner<bool>);

	// MISC/IS_STUNT_JUMP_IN_PROGRESS (result cleaner only)
	AddResultCleaner(0x7A3F19700A4D0525, ResultCleaner<bool>);

	// MISC/IS_STUNT_JUMP_MESSAGE_SHOWING (result cleaner only)
	AddResultCleaner(0x2272B0A1343129F4, ResultCleaner<bool>);

	// HUD/IS_SUBTITLE_PREFERENCE_SWITCHED_ON (result cleaner only)
	AddResultCleaner(0xAD6DACA4BA53E0A4, ResultCleaner<bool>);

	// STREAMING/IS_SWITCH_READY_FOR_DESCENT (result cleaner only)
	AddResultCleaner(0xDFA80CB25D0A19B3, ResultCleaner<bool>);

	// STREAMING/IS_SWITCH_SKIPPING_DESCENT (result cleaner only)
	AddResultCleaner(0x5B74EA8CFD5E3E7E, ResultCleaner<bool>);

	// PED/IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME (result cleaner only)
	AddResultCleaner(0x7F2F4F13AC5257EF, ResultCleaner<bool>);

	// PED/IS_SYNCHRONIZED_SCENE_LOOPED (result cleaner only)
	AddResultCleaner(0x62522002E0C391BA, ResultCleaner<bool>);

	// PED/IS_SYNCHRONIZED_SCENE_RUNNING (result cleaner only)
	AddResultCleaner(0x25D39B935A038A26, ResultCleaner<bool>);

	// PLAYER/IS_SYSTEM_UI_BEING_DISPLAYED (result cleaner only)
	AddResultCleaner(0x5D511E3867C87139, ResultCleaner<bool>);

	// TASK/IS_TASK_MOVE_NETWORK_ACTIVE (result cleaner only)
	AddResultCleaner(0x921CE12C489C4C41, ResultCleaner<bool>);

	// TASK/IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION (result cleaner only)
	AddResultCleaner(0x30ED88D5E0C56A37, ResultCleaner<bool>);

	// VEHICLE/IS_TAXI_LIGHT_ON (result cleaner only)
	AddResultCleaner(0x7504C0F113AB50FC, ResultCleaner<bool>);

	// MISC/IS_TENNIS_MODE (result cleaner only)
	AddResultCleaner(0x5D5479D115290C3F, ResultCleaner<bool>);

	// MISC/IS_THIS_A_MINIGAME_SCRIPT (result cleaner only)
	AddResultCleaner(0x7B30F65D7B710098, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_BICYCLE (result cleaner only)
	AddResultCleaner(0xBF94DD42F63BDED2, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_BIKE (result cleaner only)
	AddResultCleaner(0xB50C0B0CEDC6CE84, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_BOAT (result cleaner only)
	AddResultCleaner(0x45A9187928F4B9E3, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_CAR (result cleaner only)
	AddResultCleaner(0x7F6DB52EEFC96DF8, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_HELI (result cleaner only)
	AddResultCleaner(0xDCE4334788AF94EA, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_PLANE (result cleaner only)
	AddResultCleaner(0xA0948AB42D7BA0DE, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_QUADBIKE (result cleaner only)
	AddResultCleaner(0x39DAC362EE65FA28, ResultCleaner<bool>);

	// VEHICLE/IS_THIS_MODEL_A_TRAIN (result cleaner only)
	AddResultCleaner(0xAB935175B22E822B, ResultCleaner<bool>);

	// SCRIPT/IS_THREAD_ACTIVE (result cleaner only)
	AddResultCleaner(0x46E9AE36D8FA6417, ResultCleaner<bool>);

	// NETWORK/IS_TIME_EQUAL_TO (result cleaner only)
	AddResultCleaner(0xF5BC95857BD6D512, ResultCleaner<bool>);

	// NETWORK/IS_TIME_LESS_THAN (result cleaner only)
	AddResultCleaner(0xCB2CF5148012C8D0, ResultCleaner<bool>);

	// NETWORK/IS_TIME_MORE_THAN (result cleaner only)
	AddResultCleaner(0xDE350F8651E4346C, ResultCleaner<bool>);

	// VEHICLE/IS_TOGGLE_MOD_ON (result cleaner only)
	AddResultCleaner(0x84B233A8C8FC8AE7, ResultCleaner<bool>);

	// PED/IS_TRACKED_PED_VISIBLE (result cleaner only)
	AddResultCleaner(0x91C8E617F64188AC, ResultCleaner<bool>);

	// GRAPHICS/IS_TRACKED_POINT_VISIBLE (result cleaner only)
	AddResultCleaner(0xC45CCDAAC9221CA8, ResultCleaner<bool>);

	// VEHICLE/IS_TURRET_SEAT (result cleaner only)
	AddResultCleaner(0xE33FFA906CE74880, ResultCleaner<bool>);

	// INTERIOR/IS_VALID_INTERIOR (result cleaner only)
	AddResultCleaner(0x26B0E73D7EAAF4D3, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_ALARM_ACTIVATED (result cleaner only)
	AddResultCleaner(0x4319E335B71FFF34, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_ALARM_SET (result cleaner only)
	AddResultCleaner(0xdc921211, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_ATTACHED_TO_CARGOBOB (result cleaner only)
	AddResultCleaner(0xD40148F22E81A1D9, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_ATTACHED_TO_TOW_TRUCK (result cleaner only)
	AddResultCleaner(0x146DF9EC4C4B9FD4, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_ATTACHED_TO_TRAILER (result cleaner only)
	AddResultCleaner(0xE7CF3C4F9F489F0C, ResultCleaner<bool>);

	// AUDIO/IS_VEHICLE_AUDIBLY_DAMAGED (result cleaner only)
	AddResultCleaner(0x5DB8010EE71FDEF2, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_A_CONVERTIBLE (result cleaner only)
	AddResultCleaner(0x52F357A30698BCCE, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_BUMPER_BOUNCING (result cleaner only)
	AddResultCleaner(0x27B926779DEB502D, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_BUMPER_BROKEN_OFF (result cleaner only)
	AddResultCleaner(0x468056A6BB6F3846, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_DOOR_DAMAGED (result cleaner only)
	AddResultCleaner(0xB8E181E559464527, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_DOOR_FULLY_OPEN (result cleaner only)
	AddResultCleaner(0x3E933CFF7B111C22, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_DRIVEABLE (result cleaner only)
	AddResultCleaner(0x4C241E39B23DF959, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_ENGINE_STARTING (result cleaner only)
	AddResultCleaner(0xbb340d04, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_EXTRA_TURNED_ON (result cleaner only)
	AddResultCleaner(0xD2E6822DBFD6C8BD, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_HIGH_DETAIL (result cleaner only)
	AddResultCleaner(0x1F25887F3C104278, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_INTERIOR_LIGHT_ON (result cleaner only)
	AddResultCleaner(0xa411f72c, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_IN_BURNOUT (result cleaner only)
	AddResultCleaner(0x1297A88E081430EB, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_IN_GARAGE_AREA
	static auto nh_0xCEE4490CD57BB3C2 = rage::scrEngine::GetNativeHandler(0xCEE4490CD57BB3C2);
	rage::scrEngine::RegisterNativeHandler(0xCEE4490CD57BB3C2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCEE4490CD57BB3C2(cxt);
	});
	        
	AddResultCleaner(0xCEE4490CD57BB3C2, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_IN_SUBMARINE_MODE (result cleaner only)
	AddResultCleaner(0xA77DC70BD689A1E5, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_MODEL (result cleaner only)
	AddResultCleaner(0x423E8DE37D934D89, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_NEEDS_TO_BE_HOTWIRED (result cleaner only)
	AddResultCleaner(0xf9933bf4, ResultCleaner<bool>);

	// PATHFIND/IS_VEHICLE_NODE_ID_VALID (result cleaner only)
	AddResultCleaner(0x1EAF30FCFBF5AF74, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_ON_ALL_WHEELS (result cleaner only)
	AddResultCleaner(0xB104CD1BABF302E2, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_PREVIOUSLY_OWNED_BY_PLAYER (result cleaner only)
	AddResultCleaner(0xf849ed67, ResultCleaner<bool>);

	// AUDIO/IS_VEHICLE_RADIO_ON (result cleaner only)
	AddResultCleaner(0x0BE4BE946463F917, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_SEARCHLIGHT_ON (result cleaner only)
	AddResultCleaner(0xC0F97FCE55094987, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_SEAT_FREE (result cleaner only)
	AddResultCleaner(0x22AC59A870E6A669, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_SIREN_AUDIO_ON (result cleaner only)
	AddResultCleaner(0xB5CC40FBCB586380, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_SIREN_ON (result cleaner only)
	AddResultCleaner(0x4C9BF537BE2634B2, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_SPRAYABLE (result cleaner only)
	AddResultCleaner(0x8D474C8FAEFF6CDE, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_STOLEN (result cleaner only)
	AddResultCleaner(0x4AF9BD80EEBEB453, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_STOPPED (result cleaner only)
	AddResultCleaner(0x5721B434AD84D57A, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS (result cleaner only)
	AddResultCleaner(0x2959F696AE390A99, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_STUCK_ON_ROOF (result cleaner only)
	AddResultCleaner(0xB497F06B288DCFDF, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_STUCK_TIMER_UP (result cleaner only)
	AddResultCleaner(0x679BE1DAF71DA874, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_TYRE_BURST (result cleaner only)
	AddResultCleaner(0xBA291848A0815CA9, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_VISIBLE (result cleaner only)
	AddResultCleaner(0xAA0A52D24FB98293, ResultCleaner<bool>);

	// CFX/IS_VEHICLE_WANTED (result cleaner only)
	AddResultCleaner(0xa7daf7c, ResultCleaner<bool>);

	// VEHICLE/IS_VEHICLE_WINDOW_INTACT (result cleaner only)
	AddResultCleaner(0x46E571A0E20D01F1, ResultCleaner<bool>);

	// HUD/IS_WARNING_MESSAGE_ACTIVE (result cleaner only)
	AddResultCleaner(0xE18B138FABC53103, ResultCleaner<bool>);

	// HUD/IS_WAYPOINT_ACTIVE (result cleaner only)
	AddResultCleaner(0x1DD1F58F493F1DA5, ResultCleaner<bool>);

	// TASK/IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED
	static auto nh_0xE03B3F2D3DC59B64 = rage::scrEngine::GetNativeHandler(0xE03B3F2D3DC59B64);
	rage::scrEngine::RegisterNativeHandler(0xE03B3F2D3DC59B64, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE03B3F2D3DC59B64(cxt);
	});
	        
	AddResultCleaner(0xE03B3F2D3DC59B64, ResultCleaner<bool>);

	// TASK/IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE (result cleaner only)
	AddResultCleaner(0xF5134943EA29868C, ResultCleaner<bool>);

	// WEAPON/IS_WEAPON_VALID (result cleaner only)
	AddResultCleaner(0x937C71165CF334B3, ResultCleaner<bool>);

	// BRAIN/IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE (result cleaner only)
	AddResultCleaner(0xC5042CC6F5E3D450, ResultCleaner<bool>);

	// MISC/IS_XBOX360_VERSION (result cleaner only)
	AddResultCleaner(0xF6201B4DAF662A9D, ResultCleaner<bool>);

	// PED/KNOCK_OFF_PED_PROP
	static auto nh_0x6FD7816A36615F48 = rage::scrEngine::GetNativeHandler(0x6FD7816A36615F48);
	rage::scrEngine::RegisterNativeHandler(0x6FD7816A36615F48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6FD7816A36615F48(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/KNOCK_PED_OFF_VEHICLE
	static auto nh_0x45BBCBA77C29A841 = rage::scrEngine::GetNativeHandler(0x45BBCBA77C29A841);
	rage::scrEngine::RegisterNativeHandler(0x45BBCBA77C29A841, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45BBCBA77C29A841(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/LEADERBOARDS2_READ_BY_HANDLE
	static auto nh_0xC30713A383BFBF0E = rage::scrEngine::GetNativeHandler(0xC30713A383BFBF0E);
	rage::scrEngine::RegisterNativeHandler(0xC30713A383BFBF0E, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC30713A383BFBF0E(cxt);
	});
	        
	AddResultCleaner(0xC30713A383BFBF0E, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_BY_RADIUS
	static auto nh_0x5CE587FB5A42C8C4 = rage::scrEngine::GetNativeHandler(0x5CE587FB5A42C8C4);
	rage::scrEngine::RegisterNativeHandler(0x5CE587FB5A42C8C4, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x5CE587FB5A42C8C4(cxt);
	});
	        
	AddResultCleaner(0x5CE587FB5A42C8C4, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_BY_RANK
	static auto nh_0xBA2C7DB0C129449A = rage::scrEngine::GetNativeHandler(0xBA2C7DB0C129449A);
	rage::scrEngine::RegisterNativeHandler(0xBA2C7DB0C129449A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBA2C7DB0C129449A(cxt);
	});
	        
	AddResultCleaner(0xBA2C7DB0C129449A, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_BY_ROW
	static auto nh_0xA9CDB1E3F0A49883 = rage::scrEngine::GetNativeHandler(0xA9CDB1E3F0A49883);
	rage::scrEngine::RegisterNativeHandler(0xA9CDB1E3F0A49883, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		NullifyAny(cxt->GetArgument<void*>(5)); // Any* p5
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xA9CDB1E3F0A49883(cxt);
	});
	        
	AddResultCleaner(0xA9CDB1E3F0A49883, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_BY_SCORE_FLOAT
	static auto nh_0xE662C8B759D08F3C = rage::scrEngine::GetNativeHandler(0xE662C8B759D08F3C);
	rage::scrEngine::RegisterNativeHandler(0xE662C8B759D08F3C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE662C8B759D08F3C(cxt);
	});
	        
	AddResultCleaner(0xE662C8B759D08F3C, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_BY_SCORE_INT
	static auto nh_0x7EEC7E4F6984A16A = rage::scrEngine::GetNativeHandler(0x7EEC7E4F6984A16A);
	rage::scrEngine::RegisterNativeHandler(0x7EEC7E4F6984A16A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7EEC7E4F6984A16A(cxt);
	});
	        
	AddResultCleaner(0x7EEC7E4F6984A16A, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_FRIENDS_BY_ROW
	static auto nh_0x918B101666F9CB83 = rage::scrEngine::GetNativeHandler(0x918B101666F9CB83);
	rage::scrEngine::RegisterNativeHandler(0x918B101666F9CB83, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x918B101666F9CB83(cxt);
	});
	        
	AddResultCleaner(0x918B101666F9CB83, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_READ_RANK_PREDICTION
	static auto nh_0xC38DC1E90D22547C = rage::scrEngine::GetNativeHandler(0xC38DC1E90D22547C);
	rage::scrEngine::RegisterNativeHandler(0xC38DC1E90D22547C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC38DC1E90D22547C(cxt);
	});
	        
	AddResultCleaner(0xC38DC1E90D22547C, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_WRITE_DATA
	static auto nh_0xAE2206545888AE49 = rage::scrEngine::GetNativeHandler(0xAE2206545888AE49);
	rage::scrEngine::RegisterNativeHandler(0xAE2206545888AE49, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAE2206545888AE49(cxt);
	});
	        
	AddResultCleaner(0xAE2206545888AE49, ResultCleaner<bool>);

	// STATS/LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE
	static auto nh_0xC980E62E33DF1D5C = rage::scrEngine::GetNativeHandler(0xC980E62E33DF1D5C);
	rage::scrEngine::RegisterNativeHandler(0xC980E62E33DF1D5C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC980E62E33DF1D5C(cxt);
	});
	        
	AddResultCleaner(0xC980E62E33DF1D5C, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_CACHE_DATA_ROW
	static auto nh_0xB9BB18E2C40142ED = rage::scrEngine::GetNativeHandler(0xB9BB18E2C40142ED);
	rage::scrEngine::RegisterNativeHandler(0xB9BB18E2C40142ED, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB9BB18E2C40142ED(cxt);
	});
	        
	AddResultCleaner(0xB9BB18E2C40142ED, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_CLEAR_CACHE_DATA
	static auto nh_0xD4B02A6B476E1FDC = rage::scrEngine::GetNativeHandler(0xD4B02A6B476E1FDC);
	rage::scrEngine::RegisterNativeHandler(0xD4B02A6B476E1FDC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4B02A6B476E1FDC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/LEADERBOARDS_GET_CACHE_DATA_ROW
	static auto nh_0x9120E8DBA3D69273 = rage::scrEngine::GetNativeHandler(0x9120E8DBA3D69273);
	rage::scrEngine::RegisterNativeHandler(0x9120E8DBA3D69273, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x9120E8DBA3D69273(cxt);
	});
	        
	AddResultCleaner(0x9120E8DBA3D69273, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_GET_CACHE_EXISTS
	static auto nh_0x9C51349BE6CDFE2C = rage::scrEngine::GetNativeHandler(0x9C51349BE6CDFE2C);
	rage::scrEngine::RegisterNativeHandler(0x9C51349BE6CDFE2C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9C51349BE6CDFE2C(cxt);
	});
	        
	AddResultCleaner(0x9C51349BE6CDFE2C, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS
	static auto nh_0x58A651CD201D89AD = rage::scrEngine::GetNativeHandler(0x58A651CD201D89AD);
	rage::scrEngine::RegisterNativeHandler(0x58A651CD201D89AD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x58A651CD201D89AD(cxt);
	});
	        
	AddResultCleaner(0x58A651CD201D89AD, ResultCleaner<int>);

	// STATS/LEADERBOARDS_GET_CACHE_TIME
	static auto nh_0xF04C1C27DA35F6C8 = rage::scrEngine::GetNativeHandler(0xF04C1C27DA35F6C8);
	rage::scrEngine::RegisterNativeHandler(0xF04C1C27DA35F6C8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF04C1C27DA35F6C8(cxt);
	});
	        
	AddResultCleaner(0xF04C1C27DA35F6C8, ResultCleaner<int>);

	// STATS/LEADERBOARDS_GET_COLUMN_ID
	static auto nh_0xC4B5467A1886EA7E = rage::scrEngine::GetNativeHandler(0xC4B5467A1886EA7E);
	rage::scrEngine::RegisterNativeHandler(0xC4B5467A1886EA7E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC4B5467A1886EA7E(cxt);
	});
	        
	AddResultCleaner(0xC4B5467A1886EA7E, ResultCleaner<int>);

	// STATS/LEADERBOARDS_GET_COLUMN_TYPE
	static auto nh_0xBF4FEF46DB7894D3 = rage::scrEngine::GetNativeHandler(0xBF4FEF46DB7894D3);
	rage::scrEngine::RegisterNativeHandler(0xBF4FEF46DB7894D3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBF4FEF46DB7894D3(cxt);
	});
	        
	AddResultCleaner(0xBF4FEF46DB7894D3, ResultCleaner<int>);

	// STATS/LEADERBOARDS_GET_NUMBER_OF_COLUMNS
	static auto nh_0x117B45156D7EFF2E = rage::scrEngine::GetNativeHandler(0x117B45156D7EFF2E);
	rage::scrEngine::RegisterNativeHandler(0x117B45156D7EFF2E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x117B45156D7EFF2E(cxt);
	});
	        
	AddResultCleaner(0x117B45156D7EFF2E, ResultCleaner<int>);

	// STATS/LEADERBOARDS_READ_ANY_PENDING (result cleaner only)
	AddResultCleaner(0xA31FD15197B192BD, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_READ_CLEAR
	static auto nh_0x7CCE5C737A665701 = rage::scrEngine::GetNativeHandler(0x7CCE5C737A665701);
	rage::scrEngine::RegisterNativeHandler(0x7CCE5C737A665701, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7CCE5C737A665701(cxt);
	});
	        
	AddResultCleaner(0x7CCE5C737A665701, ResultCleaner<int>);

	// STATS/LEADERBOARDS_READ_CLEAR_ALL (result cleaner only)
	AddResultCleaner(0xA34CB6E6F0DF4A0B, ResultCleaner<int>);

	// STATS/LEADERBOARDS_READ_PENDING
	static auto nh_0xAC392C8483342AC2 = rage::scrEngine::GetNativeHandler(0xAC392C8483342AC2);
	rage::scrEngine::RegisterNativeHandler(0xAC392C8483342AC2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xAC392C8483342AC2(cxt);
	});
	        
	AddResultCleaner(0xAC392C8483342AC2, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_READ_SUCCESSFUL
	static auto nh_0x2FB19228983E832C = rage::scrEngine::GetNativeHandler(0x2FB19228983E832C);
	rage::scrEngine::RegisterNativeHandler(0x2FB19228983E832C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2FB19228983E832C(cxt);
	});
	        
	AddResultCleaner(0x2FB19228983E832C, ResultCleaner<bool>);

	// STATS/LEADERBOARDS_WRITE_ADD_COLUMN
	static auto nh_0x0BCA1D2C47B0D269 = rage::scrEngine::GetNativeHandler(0x0BCA1D2C47B0D269);
	rage::scrEngine::RegisterNativeHandler(0x0BCA1D2C47B0D269, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0BCA1D2C47B0D269(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/LEADERBOARDS_WRITE_ADD_COLUMN_LONG
	static auto nh_0x2E65248609523599 = rage::scrEngine::GetNativeHandler(0x2E65248609523599);
	rage::scrEngine::RegisterNativeHandler(0x2E65248609523599, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2E65248609523599(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/LEAVE_CURSOR_MODE
	static auto nh_0xadecf19e = rage::scrEngine::GetNativeHandler(0xadecf19e);
	rage::scrEngine::RegisterNativeHandler(0xadecf19e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xadecf19e(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/LINK_NAMED_RENDERTARGET
	static auto nh_0xF6C09E276AEB3F2D = rage::scrEngine::GetNativeHandler(0xF6C09E276AEB3F2D);
	rage::scrEngine::RegisterNativeHandler(0xF6C09E276AEB3F2D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF6C09E276AEB3F2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/LINK_STATIC_EMITTER_TO_ENTITY
	static auto nh_0x651D3228960D08AF = rage::scrEngine::GetNativeHandler(0x651D3228960D08AF);
	rage::scrEngine::RegisterNativeHandler(0x651D3228960D08AF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x651D3228960D08AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/LOAD_ALL_OBJECTS_NOW
	static auto nh_0xBD6E84632DD4CB3F = rage::scrEngine::GetNativeHandler(0xBD6E84632DD4CB3F);
	rage::scrEngine::RegisterNativeHandler(0xBD6E84632DD4CB3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD6E84632DD4CB3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/LOAD_ALL_PATH_NODES (result cleaner only)
	AddResultCleaner(0x80E4A6EDDB0BE8D9, ResultCleaner<bool>);

	// MISC/LOAD_CLOUD_HAT
	static auto nh_0xFC4842A34657BFCB = rage::scrEngine::GetNativeHandler(0xFC4842A34657BFCB);
	rage::scrEngine::RegisterNativeHandler(0xFC4842A34657BFCB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFC4842A34657BFCB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/LOAD_MISSION_CREATOR_PHOTO
	static auto nh_0x4862437A486F91B0 = rage::scrEngine::GetNativeHandler(0x4862437A486F91B0);
	rage::scrEngine::RegisterNativeHandler(0x4862437A486F91B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x4862437A486F91B0(cxt);
	});
	        
	AddResultCleaner(0x4862437A486F91B0, ResultCleaner<bool>);

	// GRAPHICS/LOAD_MOVIE_MESH_SET
	static auto nh_0xB66064452270E8F1 = rage::scrEngine::GetNativeHandler(0xB66064452270E8F1);
	rage::scrEngine::RegisterNativeHandler(0xB66064452270E8F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB66064452270E8F1(cxt);
	});
	        
	AddResultCleaner(0xB66064452270E8F1, ResultCleaner<int>);

	// CFX/LOAD_RESOURCE_FILE
	static auto nh_0x76a9ee1f = rage::scrEngine::GetNativeHandler(0x76a9ee1f);
	rage::scrEngine::RegisterNativeHandler(0x76a9ee1f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x76a9ee1f(cxt);
	});
	        
	AddResultCleaner(0x76a9ee1f, ResultCleaner<char*>);

	// PHYSICS/LOAD_ROPE_DATA
	static auto nh_0xCBB203C04D1ABD27 = rage::scrEngine::GetNativeHandler(0xCBB203C04D1ABD27);
	rage::scrEngine::RegisterNativeHandler(0xCBB203C04D1ABD27, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCBB203C04D1ABD27(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/LOAD_SCENE
	static auto nh_0x4448EB75B4904BDB = rage::scrEngine::GetNativeHandler(0x4448EB75B4904BDB);
	rage::scrEngine::RegisterNativeHandler(0x4448EB75B4904BDB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4448EB75B4904BDB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/LOAD_STREAM
	static auto nh_0x1F1F957154EC51DF = rage::scrEngine::GetNativeHandler(0x1F1F957154EC51DF);
	rage::scrEngine::RegisterNativeHandler(0x1F1F957154EC51DF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1F1F957154EC51DF(cxt);
	});
	        
	AddResultCleaner(0x1F1F957154EC51DF, ResultCleaner<bool>);

	// AUDIO/LOAD_STREAM_WITH_START_OFFSET
	static auto nh_0x59C16B79F53B3712 = rage::scrEngine::GetNativeHandler(0x59C16B79F53B3712);
	rage::scrEngine::RegisterNativeHandler(0x59C16B79F53B3712, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x59C16B79F53B3712(cxt);
	});
	        
	AddResultCleaner(0x59C16B79F53B3712, ResultCleaner<bool>);

	// CFX/LOAD_WATER_FROM_PATH
	static auto nh_0xf5102568 = rage::scrEngine::GetNativeHandler(0xf5102568);
	rage::scrEngine::RegisterNativeHandler(0xf5102568, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xf5102568(cxt);
	});
	        
	AddResultCleaner(0xf5102568, ResultCleaner<bool>);

	// HUD/LOCK_MINIMAP_ANGLE
	static auto nh_0x299FAEBB108AE05B = rage::scrEngine::GetNativeHandler(0x299FAEBB108AE05B);
	rage::scrEngine::RegisterNativeHandler(0x299FAEBB108AE05B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x299FAEBB108AE05B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/LOCK_MINIMAP_POSITION
	static auto nh_0x1279E861A329E73F = rage::scrEngine::GetNativeHandler(0x1279E861A329E73F);
	rage::scrEngine::RegisterNativeHandler(0x1279E861A329E73F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1279E861A329E73F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/LOCK_RADIO_STATION
	static auto nh_0x477D9DB48F889591 = rage::scrEngine::GetNativeHandler(0x477D9DB48F889591);
	rage::scrEngine::RegisterNativeHandler(0x477D9DB48F889591, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x477D9DB48F889591(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/LOCK_RADIO_STATION_TRACK_LIST
	static auto nh_0xFF5E5EA2DCEEACF3 = rage::scrEngine::GetNativeHandler(0xFF5E5EA2DCEEACF3);
	rage::scrEngine::RegisterNativeHandler(0xFF5E5EA2DCEEACF3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFF5E5EA2DCEEACF3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/LOWER_CONVERTIBLE_ROOF
	static auto nh_0xDED51F703D0FA83D = rage::scrEngine::GetNativeHandler(0xDED51F703D0FA83D);
	rage::scrEngine::RegisterNativeHandler(0xDED51F703D0FA83D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDED51F703D0FA83D(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/MAKE_PED_RELOAD (result cleaner only)
	AddResultCleaner(0x20AE33F3AC9C0033, ResultCleaner<bool>);

	// VEHICLE/MODIFY_VEHICLE_TOP_SPEED
	static auto nh_0x93A3996368C94158 = rage::scrEngine::GetNativeHandler(0x93A3996368C94158);
	rage::scrEngine::RegisterNativeHandler(0x93A3996368C94158, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93A3996368C94158(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/MODIFY_WATER
	static auto nh_0xC443FD757C3BA637 = rage::scrEngine::GetNativeHandler(0xC443FD757C3BA637);
	rage::scrEngine::RegisterNativeHandler(0xC443FD757C3BA637, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC443FD757C3BA637(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/MOVE_VEHICLE_DECALS
	static auto nh_0x84C8D7C2D30D3280 = rage::scrEngine::GetNativeHandler(0x84C8D7C2D30D3280);
	rage::scrEngine::RegisterNativeHandler(0x84C8D7C2D30D3280, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x84C8D7C2D30D3280(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_ADD_VOICE_CHANNEL_LISTEN
	static auto nh_0xc79f44bf = rage::scrEngine::GetNativeHandler(0xc79f44bf);
	rage::scrEngine::RegisterNativeHandler(0xc79f44bf, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xc79f44bf(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_ADD_VOICE_TARGET_CHANNEL
	static auto nh_0x4d386c9e = rage::scrEngine::GetNativeHandler(0x4d386c9e);
	rage::scrEngine::RegisterNativeHandler(0x4d386c9e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4d386c9e(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_ADD_VOICE_TARGET_PLAYER
	static auto nh_0x32c5355a = rage::scrEngine::GetNativeHandler(0x32c5355a);
	rage::scrEngine::RegisterNativeHandler(0x32c5355a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x32c5355a(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID
	static auto nh_0x25f2b65f = rage::scrEngine::GetNativeHandler(0x25f2b65f);
	rage::scrEngine::RegisterNativeHandler(0x25f2b65f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25f2b65f(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_CLEAR_VOICE_CHANNEL
	static auto nh_0xbf847807 = rage::scrEngine::GetNativeHandler(0xbf847807);
	rage::scrEngine::RegisterNativeHandler(0xbf847807, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xbf847807(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_CLEAR_VOICE_TARGET
	static auto nh_0x8555dcba = rage::scrEngine::GetNativeHandler(0x8555dcba);
	rage::scrEngine::RegisterNativeHandler(0x8555dcba, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8555dcba(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_CLEAR_VOICE_TARGET_CHANNELS
	static auto nh_0x5ea72e76 = rage::scrEngine::GetNativeHandler(0x5ea72e76);
	rage::scrEngine::RegisterNativeHandler(0x5ea72e76, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5ea72e76(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_CLEAR_VOICE_TARGET_PLAYERS
	static auto nh_0x912e21da = rage::scrEngine::GetNativeHandler(0x912e21da);
	rage::scrEngine::RegisterNativeHandler(0x912e21da, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x912e21da(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_DOES_CHANNEL_EXIST (result cleaner only)
	AddResultCleaner(0xcc8ca25, ResultCleaner<bool>);

	// CFX/MUMBLE_GET_TALKER_PROXIMITY (result cleaner only)
	AddResultCleaner(0x84e02a32, ResultCleaner<float>);

	// CFX/MUMBLE_GET_VOICE_CHANNEL_FROM_SERVER_ID (result cleaner only)
	AddResultCleaner(0x221c09f1, ResultCleaner<int>);

	// CFX/MUMBLE_IS_ACTIVE (result cleaner only)
	AddResultCleaner(0xe820bc10, ResultCleaner<bool>);

	// CFX/MUMBLE_IS_CONNECTED (result cleaner only)
	AddResultCleaner(0xb816370a, ResultCleaner<bool>);

	// CFX/MUMBLE_IS_PLAYER_TALKING (result cleaner only)
	AddResultCleaner(0x33eef97f, ResultCleaner<bool>);

	// CFX/MUMBLE_REMOVE_VOICE_CHANNEL_LISTEN
	static auto nh_0x231523b7 = rage::scrEngine::GetNativeHandler(0x231523b7);
	rage::scrEngine::RegisterNativeHandler(0x231523b7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x231523b7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_REMOVE_VOICE_TARGET_CHANNEL
	static auto nh_0x268db867 = rage::scrEngine::GetNativeHandler(0x268db867);
	rage::scrEngine::RegisterNativeHandler(0x268db867, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x268db867(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_REMOVE_VOICE_TARGET_PLAYER
	static auto nh_0x88cd646f = rage::scrEngine::GetNativeHandler(0x88cd646f);
	rage::scrEngine::RegisterNativeHandler(0x88cd646f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88cd646f(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_REMOVE_VOICE_TARGET_PLAYER_BY_SERVER_ID
	static auto nh_0x930bd34b = rage::scrEngine::GetNativeHandler(0x930bd34b);
	rage::scrEngine::RegisterNativeHandler(0x930bd34b, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x930bd34b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_ACTIVE
	static auto nh_0xd932a3f3 = rage::scrEngine::GetNativeHandler(0xd932a3f3);
	rage::scrEngine::RegisterNativeHandler(0xd932a3f3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd932a3f3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_AUDIO_INPUT_DISTANCE
	static auto nh_0x1b1052e2 = rage::scrEngine::GetNativeHandler(0x1b1052e2);
	rage::scrEngine::RegisterNativeHandler(0x1b1052e2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1b1052e2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_AUDIO_INPUT_INTENT
	static auto nh_0x6383526b = rage::scrEngine::GetNativeHandler(0x6383526b);
	rage::scrEngine::RegisterNativeHandler(0x6383526b, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6383526b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_AUDIO_OUTPUT_DISTANCE
	static auto nh_0x74c597d9 = rage::scrEngine::GetNativeHandler(0x74c597d9);
	rage::scrEngine::RegisterNativeHandler(0x74c597d9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74c597d9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_SERVER_ADDRESS
	static auto nh_0xe6eb2cd8 = rage::scrEngine::GetNativeHandler(0xe6eb2cd8);
	rage::scrEngine::RegisterNativeHandler(0xe6eb2cd8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xe6eb2cd8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_SUBMIX_FOR_SERVER_ID
	static auto nh_0xfe3a3054 = rage::scrEngine::GetNativeHandler(0xfe3a3054);
	rage::scrEngine::RegisterNativeHandler(0xfe3a3054, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xfe3a3054(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_TALKER_PROXIMITY
	static auto nh_0x74e927b0 = rage::scrEngine::GetNativeHandler(0x74e927b0);
	rage::scrEngine::RegisterNativeHandler(0x74e927b0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74e927b0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_VOICE_CHANNEL
	static auto nh_0x8737eee8 = rage::scrEngine::GetNativeHandler(0x8737eee8);
	rage::scrEngine::RegisterNativeHandler(0x8737eee8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8737eee8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_VOICE_TARGET
	static auto nh_0x960a4a95 = rage::scrEngine::GetNativeHandler(0x960a4a95);
	rage::scrEngine::RegisterNativeHandler(0x960a4a95, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x960a4a95(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_VOLUME_OVERRIDE
	static auto nh_0x61c309e3 = rage::scrEngine::GetNativeHandler(0x61c309e3);
	rage::scrEngine::RegisterNativeHandler(0x61c309e3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x61c309e3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/MUMBLE_SET_VOLUME_OVERRIDE_BY_SERVER_ID
	static auto nh_0xce8e25b4 = rage::scrEngine::GetNativeHandler(0xce8e25b4);
	rage::scrEngine::RegisterNativeHandler(0xce8e25b4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xce8e25b4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ACCEPT_PRESENCE_INVITE
	static auto nh_0xFA91550DF9318B22 = rage::scrEngine::GetNativeHandler(0xFA91550DF9318B22);
	rage::scrEngine::RegisterNativeHandler(0xFA91550DF9318B22, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFA91550DF9318B22(cxt);
	});
	        
	AddResultCleaner(0xFA91550DF9318B22, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_BOOL
	static auto nh_0xAA6A47A573ABB75A = rage::scrEngine::GetNativeHandler(0xAA6A47A573ABB75A);
	rage::scrEngine::RegisterNativeHandler(0xAA6A47A573ABB75A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAA6A47A573ABB75A(cxt);
	});
	        
	AddResultCleaner(0xAA6A47A573ABB75A, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_BOOL_HASH (result cleaner only)
	AddResultCleaner(0xEA16B69D93D71A45, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_FLOAT
	static auto nh_0xE5608CA7BC163A5F = rage::scrEngine::GetNativeHandler(0xE5608CA7BC163A5F);
	rage::scrEngine::RegisterNativeHandler(0xE5608CA7BC163A5F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE5608CA7BC163A5F(cxt);
	});
	        
	AddResultCleaner(0xE5608CA7BC163A5F, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_FLOAT_HASH
	static auto nh_0x972BC203BBC4C4D5 = rage::scrEngine::GetNativeHandler(0x972BC203BBC4C4D5);
	rage::scrEngine::RegisterNativeHandler(0x972BC203BBC4C4D5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x972BC203BBC4C4D5(cxt);
	});
	        
	AddResultCleaner(0x972BC203BBC4C4D5, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_INT
	static auto nh_0x8BE1146DFD5D4468 = rage::scrEngine::GetNativeHandler(0x8BE1146DFD5D4468);
	rage::scrEngine::RegisterNativeHandler(0x8BE1146DFD5D4468, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8BE1146DFD5D4468(cxt);
	});
	        
	AddResultCleaner(0x8BE1146DFD5D4468, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACCESS_TUNABLE_INT_HASH
	static auto nh_0x40FCE03E50E8DBE8 = rage::scrEngine::GetNativeHandler(0x40FCE03E50E8DBE8);
	rage::scrEngine::RegisterNativeHandler(0x40FCE03E50E8DBE8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x40FCE03E50E8DBE8(cxt);
	});
	        
	AddResultCleaner(0x40FCE03E50E8DBE8, ResultCleaner<bool>);

	// NETWORK/NETWORK_ACTION_FOLLOW_INVITE (result cleaner only)
	AddResultCleaner(0xC88156EBB786F8D5, ResultCleaner<int>);

	// NETWORK/NETWORK_ADD_ENTITY_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0x376C6375BA60293A, ResultCleaner<int>);

	// NETWORK/NETWORK_ADD_ENTITY_AREA (result cleaner only)
	AddResultCleaner(0x494C8FB299290269, ResultCleaner<int>);

	// NETWORK/NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES (result cleaner only)
	AddResultCleaner(0x25B99872D588A101, ResultCleaner<int>);

	// NETWORK/NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE
	static auto nh_0xF2404D68CBC855FA = rage::scrEngine::GetNativeHandler(0xF2404D68CBC855FA);
	rage::scrEngine::RegisterNativeHandler(0xF2404D68CBC855FA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF2404D68CBC855FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ADD_FOLLOWERS
	static auto nh_0x236406F60CF216D6 = rage::scrEngine::GetNativeHandler(0x236406F60CF216D6);
	rage::scrEngine::RegisterNativeHandler(0x236406F60CF216D6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x236406F60CF216D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ADD_FRIEND
	static auto nh_0x8E02D73914064223 = rage::scrEngine::GetNativeHandler(0x8E02D73914064223);
	rage::scrEngine::RegisterNativeHandler(0x8E02D73914064223, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8E02D73914064223(cxt);
	});
	        
	AddResultCleaner(0x8E02D73914064223, ResultCleaner<bool>);

	// NETWORK/NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE
	static auto nh_0x45F35C0EDC33B03B = rage::scrEngine::GetNativeHandler(0x45F35C0EDC33B03B);
	rage::scrEngine::RegisterNativeHandler(0x45F35C0EDC33B03B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x45F35C0EDC33B03B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE
	static auto nh_0x742A637471BCECD9 = rage::scrEngine::GetNativeHandler(0x742A637471BCECD9);
	rage::scrEngine::RegisterNativeHandler(0x742A637471BCECD9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x742A637471BCECD9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK
	static auto nh_0xA5EAFE473E45C442 = rage::scrEngine::GetNativeHandler(0xA5EAFE473E45C442);
	rage::scrEngine::RegisterNativeHandler(0xA5EAFE473E45C442, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA5EAFE473E45C442(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA
	static auto nh_0xCF8BD3B0BD6D42D7 = rage::scrEngine::GetNativeHandler(0xCF8BD3B0BD6D42D7);
	rage::scrEngine::RegisterNativeHandler(0xCF8BD3B0BD6D42D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xCF8BD3B0BD6D42D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION
	static auto nh_0x267C78C60E806B9A = rage::scrEngine::GetNativeHandler(0x267C78C60E806B9A);
	rage::scrEngine::RegisterNativeHandler(0x267C78C60E806B9A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x267C78C60E806B9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_AM_I_BLOCKED_BY_GAMER
	static auto nh_0x15337C7C268A27B2 = rage::scrEngine::GetNativeHandler(0x15337C7C268A27B2);
	rage::scrEngine::RegisterNativeHandler(0x15337C7C268A27B2, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x15337C7C268A27B2(cxt);
	});
	        
	AddResultCleaner(0x15337C7C268A27B2, ResultCleaner<bool>);

	// NETWORK/NETWORK_AM_I_BLOCKED_BY_PLAYER (result cleaner only)
	AddResultCleaner(0x87F395D957D4353D, ResultCleaner<bool>);

	// NETWORK/NETWORK_AM_I_MUTED_BY_GAMER
	static auto nh_0xDF02A2C93F1F26DA = rage::scrEngine::GetNativeHandler(0xDF02A2C93F1F26DA);
	rage::scrEngine::RegisterNativeHandler(0xDF02A2C93F1F26DA, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDF02A2C93F1F26DA(cxt);
	});
	        
	AddResultCleaner(0xDF02A2C93F1F26DA, ResultCleaner<bool>);

	// NETWORK/NETWORK_AM_I_MUTED_BY_PLAYER (result cleaner only)
	AddResultCleaner(0x9D6981DFC91A8604, ResultCleaner<bool>);

	// NETWORK/NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA (result cleaner only)
	AddResultCleaner(0x99B72C7ABDE5C910, ResultCleaner<bool>);

	// NETWORK/NETWORK_APPLY_PED_SCAR_DATA
	static auto nh_0xE66C690248F11150 = rage::scrEngine::GetNativeHandler(0xE66C690248F11150);
	rage::scrEngine::RegisterNativeHandler(0xE66C690248F11150, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE66C690248F11150(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_APPLY_TRANSITION_PARAMETER
	static auto nh_0x521638ADA1BA0D18 = rage::scrEngine::GetNativeHandler(0x521638ADA1BA0D18);
	rage::scrEngine::RegisterNativeHandler(0x521638ADA1BA0D18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x521638ADA1BA0D18(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_APPLY_TRANSITION_PARAMETER_STRING
	static auto nh_0xEBEFC2E77084F599 = rage::scrEngine::GetNativeHandler(0xEBEFC2E77084F599);
	rage::scrEngine::RegisterNativeHandler(0xEBEFC2E77084F599, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEBEFC2E77084F599(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE
	static auto nh_0xDBD2056652689917 = rage::scrEngine::GetNativeHandler(0xDBD2056652689917);
	rage::scrEngine::RegisterNativeHandler(0xDBD2056652689917, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBD2056652689917(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ARE_HANDLES_THE_SAME
	static auto nh_0x57DBA049E110F217 = rage::scrEngine::GetNativeHandler(0x57DBA049E110F217);
	rage::scrEngine::RegisterNativeHandler(0x57DBA049E110F217, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x57DBA049E110F217(cxt);
	});
	        
	AddResultCleaner(0x57DBA049E110F217, ResultCleaner<bool>);

	// NETWORK/NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT (result cleaner only)
	AddResultCleaner(0xBA9775570DB788CF, ResultCleaner<bool>);

	// NETWORK/NETWORK_ARE_TRANSITION_DETAILS_VALID
	static auto nh_0x2615AA2A695930C1 = rage::scrEngine::GetNativeHandler(0x2615AA2A695930C1);
	rage::scrEngine::RegisterNativeHandler(0x2615AA2A695930C1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2615AA2A695930C1(cxt);
	});
	        
	AddResultCleaner(0x2615AA2A695930C1, ResultCleaner<bool>);

	// NETWORK/NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY
	static auto nh_0x478DCBD2A98B705A = rage::scrEngine::GetNativeHandler(0x478DCBD2A98B705A);
	rage::scrEngine::RegisterNativeHandler(0x478DCBD2A98B705A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x478DCBD2A98B705A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_BAIL
	static auto nh_0x95914459A87EBA28 = rage::scrEngine::GetNativeHandler(0x95914459A87EBA28);
	rage::scrEngine::RegisterNativeHandler(0x95914459A87EBA28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95914459A87EBA28(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_BAIL_TRANSITION
	static auto nh_0xEAA572036990CD1B = rage::scrEngine::GetNativeHandler(0xEAA572036990CD1B);
	rage::scrEngine::RegisterNativeHandler(0xEAA572036990CD1B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEAA572036990CD1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_BLOCK_INVITES
	static auto nh_0x34F9E9049454A7A0 = rage::scrEngine::GetNativeHandler(0x34F9E9049454A7A0);
	rage::scrEngine::RegisterNativeHandler(0x34F9E9049454A7A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x34F9E9049454A7A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_BLOCK_JOIN_QUEUE_INVITES
	static auto nh_0xCFEB8AF24FC1D0BB = rage::scrEngine::GetNativeHandler(0xCFEB8AF24FC1D0BB);
	rage::scrEngine::RegisterNativeHandler(0xCFEB8AF24FC1D0BB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFEB8AF24FC1D0BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_AIRSTRIKE
	static auto nh_0x763B4BD305338F19 = rage::scrEngine::GetNativeHandler(0x763B4BD305338F19);
	rage::scrEngine::RegisterNativeHandler(0x763B4BD305338F19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x763B4BD305338F19(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_BACKUP_GANG
	static auto nh_0xA3EDDAA42411D3B9 = rage::scrEngine::GetNativeHandler(0xA3EDDAA42411D3B9);
	rage::scrEngine::RegisterNativeHandler(0xA3EDDAA42411D3B9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA3EDDAA42411D3B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_BOUNTY
	static auto nh_0x7B718E197453F2D9 = rage::scrEngine::GetNativeHandler(0x7B718E197453F2D9);
	rage::scrEngine::RegisterNativeHandler(0x7B718E197453F2D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7B718E197453F2D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_FAIRGROUND_RIDE
	static auto nh_0x8A7B3952DD64D2B5 = rage::scrEngine::GetNativeHandler(0x8A7B3952DD64D2B5);
	rage::scrEngine::RegisterNativeHandler(0x8A7B3952DD64D2B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8A7B3952DD64D2B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_HEALTHCARE
	static auto nh_0xD9B067E55253E3DD = rage::scrEngine::GetNativeHandler(0xD9B067E55253E3DD);
	rage::scrEngine::RegisterNativeHandler(0xD9B067E55253E3DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9B067E55253E3DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_HELI_STRIKE
	static auto nh_0x81AA4610E3FD3A69 = rage::scrEngine::GetNativeHandler(0x81AA4610E3FD3A69);
	rage::scrEngine::RegisterNativeHandler(0x81AA4610E3FD3A69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81AA4610E3FD3A69(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_ITEM
	static auto nh_0xF0077C797F66A355 = rage::scrEngine::GetNativeHandler(0xF0077C797F66A355);
	rage::scrEngine::RegisterNativeHandler(0xF0077C797F66A355, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xF0077C797F66A355(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_LOTTERY_TICKET
	static auto nh_0xD987F2489969668C = rage::scrEngine::GetNativeHandler(0xD987F2489969668C);
	rage::scrEngine::RegisterNativeHandler(0xD987F2489969668C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD987F2489969668C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_PROPERTY
	static auto nh_0x650A08A280870AF6 = rage::scrEngine::GetNativeHandler(0x650A08A280870AF6);
	rage::scrEngine::RegisterNativeHandler(0x650A08A280870AF6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x650A08A280870AF6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_BUY_SMOKES
	static auto nh_0x75AF80E61248EEBD = rage::scrEngine::GetNativeHandler(0x75AF80E61248EEBD);
	rage::scrEngine::RegisterNativeHandler(0x75AF80E61248EEBD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75AF80E61248EEBD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA
	static auto nh_0xBD0BE0BFC927EAC1 = rage::scrEngine::GetNativeHandler(0xBD0BE0BFC927EAC1);
	rage::scrEngine::RegisterNativeHandler(0xBD0BE0BFC927EAC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD0BE0BFC927EAC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CANCEL_RESPAWN_SEARCH
	static auto nh_0xFB8F2A6F3DF08CBE = rage::scrEngine::GetNativeHandler(0xFB8F2A6F3DF08CBE);
	rage::scrEngine::RegisterNativeHandler(0xFB8F2A6F3DF08CBE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFB8F2A6F3DF08CBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CAN_ACCESS_MULTIPLAYER
	static auto nh_0xAF50DA1A3F8B1BA4 = rage::scrEngine::GetNativeHandler(0xAF50DA1A3F8B1BA4);
	rage::scrEngine::RegisterNativeHandler(0xAF50DA1A3F8B1BA4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAF50DA1A3F8B1BA4(cxt);
	});
	        
	AddResultCleaner(0xAF50DA1A3F8B1BA4, ResultCleaner<bool>);

	// NETWORK/NETWORK_CAN_BAIL (result cleaner only)
	AddResultCleaner(0x580CE4438479CC61, ResultCleaner<bool>);

	// MONEY/NETWORK_CAN_BET (result cleaner only)
	AddResultCleaner(0x3A54E33660DED67F, ResultCleaner<bool>);

	// MONEY/NETWORK_CAN_BUY_LOTTERY_TICKET (result cleaner only)
	AddResultCleaner(0xC62DD18375C99130, ResultCleaner<bool>);

	// NETWORK/NETWORK_CAN_COMMUNICATE_WITH_GAMER
	static auto nh_0xA150A4F065806B1F = rage::scrEngine::GetNativeHandler(0xA150A4F065806B1F);
	rage::scrEngine::RegisterNativeHandler(0xA150A4F065806B1F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA150A4F065806B1F(cxt);
	});
	        
	AddResultCleaner(0xA150A4F065806B1F, ResultCleaner<bool>);

	// NETWORK/NETWORK_CAN_ENTER_MULTIPLAYER (result cleaner only)
	AddResultCleaner(0x7E782A910C362C25, ResultCleaner<bool>);

	// MONEY/NETWORK_CAN_RECEIVE_PLAYER_CASH
	static auto nh_0x5D17BE59D2123284 = rage::scrEngine::GetNativeHandler(0x5D17BE59D2123284);
	rage::scrEngine::RegisterNativeHandler(0x5D17BE59D2123284, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x5D17BE59D2123284(cxt);
	});
	        
	AddResultCleaner(0x5D17BE59D2123284, ResultCleaner<bool>);

	// NETWORK/NETWORK_CAN_SESSION_END (result cleaner only)
	AddResultCleaner(0x4EEBC3694E49C572, ResultCleaner<bool>);

	// NETWORK/NETWORK_CAN_SET_WAYPOINT (result cleaner only)
	AddResultCleaner(0xC927EC229934AF60, ResultCleaner<bool>);

	// MONEY/NETWORK_CAN_SHARE_JOB_CASH (result cleaner only)
	AddResultCleaner(0x1C2473301B1C66BA, ResultCleaner<bool>);

	// MONEY/NETWORK_CAN_SPEND_MONEY
	static auto nh_0xAB3CAA6B422164DA = rage::scrEngine::GetNativeHandler(0xAB3CAA6B422164DA);
	rage::scrEngine::RegisterNativeHandler(0xAB3CAA6B422164DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xAB3CAA6B422164DA(cxt);
	});
	        
	AddResultCleaner(0xAB3CAA6B422164DA, ResultCleaner<bool>);

	// NETWORK/NETWORK_CHANGE_TRANSITION_SLOTS
	static auto nh_0xEEEDA5E6D7080987 = rage::scrEngine::GetNativeHandler(0xEEEDA5E6D7080987);
	rage::scrEngine::RegisterNativeHandler(0xEEEDA5E6D7080987, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEEEDA5E6D7080987(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CHECK_COMMUNICATION_PRIVILEGES (result cleaner only)
	AddResultCleaner(0x83F28CE49FBBFFBA, ResultCleaner<bool>);

	// NETWORK/NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE
	static auto nh_0x44B37CDCAE765AAE = rage::scrEngine::GetNativeHandler(0x44B37CDCAE765AAE);
	rage::scrEngine::RegisterNativeHandler(0x44B37CDCAE765AAE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x44B37CDCAE765AAE(cxt);
	});
	        
	AddResultCleaner(0x44B37CDCAE765AAE, ResultCleaner<bool>);

	// NETWORK/NETWORK_CHECK_USER_CONTENT_PRIVILEGES (result cleaner only)
	AddResultCleaner(0x595F028698072DD9, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING (result cleaner only)
	AddResultCleaner(0xB3F64A6A91432477, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_DOWNLOAD_MEMBERSHIP
	static auto nh_0xA989044E70010ABE = rage::scrEngine::GetNativeHandler(0xA989044E70010ABE);
	rage::scrEngine::RegisterNativeHandler(0xA989044E70010ABE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA989044E70010ABE(cxt);
	});
	        
	AddResultCleaner(0xA989044E70010ABE, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING
	static auto nh_0x5B9E023DC6EBEDC0 = rage::scrEngine::GetNativeHandler(0x5B9E023DC6EBEDC0);
	rage::scrEngine::RegisterNativeHandler(0x5B9E023DC6EBEDC0, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5B9E023DC6EBEDC0(cxt);
	});
	        
	AddResultCleaner(0x5B9E023DC6EBEDC0, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_GET_EMBLEM_TXD_NAME
	static auto nh_0x5835D9CD92E83184 = rage::scrEngine::GetNativeHandler(0x5835D9CD92E83184);
	rage::scrEngine::RegisterNativeHandler(0x5835D9CD92E83184, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* netHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5835D9CD92E83184(cxt);
	});
	        
	AddResultCleaner(0x5835D9CD92E83184, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT (result cleaner only)
	AddResultCleaner(0x1F471B79ACC90BEF, ResultCleaner<int>);

	// NETWORK/NETWORK_CLAN_GET_MEMBERSHIP
	static auto nh_0xC8BC2011F67B3411 = rage::scrEngine::GetNativeHandler(0xC8BC2011F67B3411);
	rage::scrEngine::RegisterNativeHandler(0xC8BC2011F67B3411, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC8BC2011F67B3411(cxt);
	});
	        
	AddResultCleaner(0xC8BC2011F67B3411, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_GET_MEMBERSHIP_COUNT
	static auto nh_0xAAB11F6C4ADBC2C1 = rage::scrEngine::GetNativeHandler(0xAAB11F6C4ADBC2C1);
	rage::scrEngine::RegisterNativeHandler(0xAAB11F6C4ADBC2C1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAAB11F6C4ADBC2C1(cxt);
	});
	        
	AddResultCleaner(0xAAB11F6C4ADBC2C1, ResultCleaner<int>);

	// NETWORK/NETWORK_CLAN_GET_MEMBERSHIP_DESC
	static auto nh_0x48DE78AF2C8885B8 = rage::scrEngine::GetNativeHandler(0x48DE78AF2C8885B8);
	rage::scrEngine::RegisterNativeHandler(0x48DE78AF2C8885B8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x48DE78AF2C8885B8(cxt);
	});
	        
	AddResultCleaner(0x48DE78AF2C8885B8, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_GET_MEMBERSHIP_VALID
	static auto nh_0x48A59CF88D43DF0E = rage::scrEngine::GetNativeHandler(0x48A59CF88D43DF0E);
	rage::scrEngine::RegisterNativeHandler(0x48A59CF88D43DF0E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x48A59CF88D43DF0E(cxt);
	});
	        
	AddResultCleaner(0x48A59CF88D43DF0E, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_GET_UI_FORMATTED_TAG
	static auto nh_0xF45352426FF3A4F0 = rage::scrEngine::GetNativeHandler(0xF45352426FF3A4F0);
	rage::scrEngine::RegisterNativeHandler(0xF45352426FF3A4F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF45352426FF3A4F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLAN_IS_EMBLEM_READY
	static auto nh_0xA134777FF7F33331 = rage::scrEngine::GetNativeHandler(0xA134777FF7F33331);
	rage::scrEngine::RegisterNativeHandler(0xA134777FF7F33331, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA134777FF7F33331(cxt);
	});
	        
	AddResultCleaner(0xA134777FF7F33331, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_IS_ROCKSTAR_CLAN
	static auto nh_0x7543BB439F63792B = rage::scrEngine::GetNativeHandler(0x7543BB439F63792B);
	rage::scrEngine::RegisterNativeHandler(0x7543BB439F63792B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7543BB439F63792B(cxt);
	});
	        
	AddResultCleaner(0x7543BB439F63792B, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_JOIN (result cleaner only)
	AddResultCleaner(0x9FAAA4F4FC71F87F, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_PLAYER_GET_DESC
	static auto nh_0xEEE6EACBE8874FBA = rage::scrEngine::GetNativeHandler(0xEEE6EACBE8874FBA);
	rage::scrEngine::RegisterNativeHandler(0xEEE6EACBE8874FBA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEEE6EACBE8874FBA(cxt);
	});
	        
	AddResultCleaner(0xEEE6EACBE8874FBA, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_PLAYER_IS_ACTIVE
	static auto nh_0xB124B57F571D8F18 = rage::scrEngine::GetNativeHandler(0xB124B57F571D8F18);
	rage::scrEngine::RegisterNativeHandler(0xB124B57F571D8F18, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB124B57F571D8F18(cxt);
	});
	        
	AddResultCleaner(0xB124B57F571D8F18, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_RELEASE_EMBLEM
	static auto nh_0x113E6E3E50E286B0 = rage::scrEngine::GetNativeHandler(0x113E6E3E50E286B0);
	rage::scrEngine::RegisterNativeHandler(0x113E6E3E50E286B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x113E6E3E50E286B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE
	static auto nh_0xBB6E6FEE99D866B2 = rage::scrEngine::GetNativeHandler(0xBB6E6FEE99D866B2);
	rage::scrEngine::RegisterNativeHandler(0xBB6E6FEE99D866B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBB6E6FEE99D866B2(cxt);
	});
	        
	AddResultCleaner(0xBB6E6FEE99D866B2, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_REQUEST_EMBLEM
	static auto nh_0x13518FF1C6B28938 = rage::scrEngine::GetNativeHandler(0x13518FF1C6B28938);
	rage::scrEngine::RegisterNativeHandler(0x13518FF1C6B28938, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x13518FF1C6B28938(cxt);
	});
	        
	AddResultCleaner(0x13518FF1C6B28938, ResultCleaner<bool>);

	// NETWORK/NETWORK_CLAN_SERVICE_IS_VALID (result cleaner only)
	AddResultCleaner(0x579CCED0265D4896, ResultCleaner<bool>);

	// MONEY/NETWORK_CLEAR_CHARACTER_WALLET
	static auto nh_0xA921DED15FDF28F5 = rage::scrEngine::GetNativeHandler(0xA921DED15FDF28F5);
	rage::scrEngine::RegisterNativeHandler(0xA921DED15FDF28F5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA921DED15FDF28F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_CLOCK_TIME_OVERRIDE
	static auto nh_0xD972DF67326F966E = rage::scrEngine::GetNativeHandler(0xD972DF67326F966E);
	rage::scrEngine::RegisterNativeHandler(0xD972DF67326F966E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD972DF67326F966E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_FOLLOWERS
	static auto nh_0x058F43EC59A8631A = rage::scrEngine::GetNativeHandler(0x058F43EC59A8631A);
	rage::scrEngine::RegisterNativeHandler(0x058F43EC59A8631A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x058F43EC59A8631A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_FOLLOW_INVITE (result cleaner only)
	AddResultCleaner(0x439BFDE3CD0610F6, ResultCleaner<int>);

	// NETWORK/NETWORK_CLEAR_FOUND_GAMERS
	static auto nh_0x6D14CCEE1B40381A = rage::scrEngine::GetNativeHandler(0x6D14CCEE1B40381A);
	rage::scrEngine::RegisterNativeHandler(0x6D14CCEE1B40381A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D14CCEE1B40381A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_GET_GAMER_STATUS
	static auto nh_0x86E0660E4F5C956D = rage::scrEngine::GetNativeHandler(0x86E0660E4F5C956D);
	rage::scrEngine::RegisterNativeHandler(0x86E0660E4F5C956D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x86E0660E4F5C956D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_GROUP_ACTIVITY
	static auto nh_0x1888694923EF4591 = rage::scrEngine::GetNativeHandler(0x1888694923EF4591);
	rage::scrEngine::RegisterNativeHandler(0x1888694923EF4591, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1888694923EF4591(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_PROPERTY_ID
	static auto nh_0xC2B82527CA77053E = rage::scrEngine::GetNativeHandler(0xC2B82527CA77053E);
	rage::scrEngine::RegisterNativeHandler(0xC2B82527CA77053E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC2B82527CA77053E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE
	static auto nh_0xFB3272229A82C759 = rage::scrEngine::GetNativeHandler(0xFB3272229A82C759);
	rage::scrEngine::RegisterNativeHandler(0xFB3272229A82C759, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFB3272229A82C759(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_VOICE_CHANNEL
	static auto nh_0xE036A705F989E049 = rage::scrEngine::GetNativeHandler(0xE036A705F989E049);
	rage::scrEngine::RegisterNativeHandler(0xE036A705F989E049, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE036A705F989E049(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE
	static auto nh_0xF03755696450470C = rage::scrEngine::GetNativeHandler(0xF03755696450470C);
	rage::scrEngine::RegisterNativeHandler(0xF03755696450470C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF03755696450470C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CLOSE_TRANSITION_MATCHMAKING
	static auto nh_0x43F4DBA69710E01E = rage::scrEngine::GetNativeHandler(0x43F4DBA69710E01E);
	rage::scrEngine::RegisterNativeHandler(0x43F4DBA69710E01E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43F4DBA69710E01E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CONCEAL_PLAYER
	static auto nh_0xBBDF066252829606 = rage::scrEngine::GetNativeHandler(0xBBDF066252829606);
	rage::scrEngine::RegisterNativeHandler(0xBBDF066252829606, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBBDF066252829606(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_CREATE_SYNCHRONISED_SCENE (result cleaner only)
	AddResultCleaner(0x7CD6BC4C2BBDD526, ResultCleaner<int>);

	// MONEY/NETWORK_DELETE_CHARACTER
	static auto nh_0x05A50AF38947EB8D = rage::scrEngine::GetNativeHandler(0x05A50AF38947EB8D);
	rage::scrEngine::RegisterNativeHandler(0x05A50AF38947EB8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x05A50AF38947EB8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_DID_FIND_GAMERS_SUCCEED (result cleaner only)
	AddResultCleaner(0xF9B83B77929D8863, ResultCleaner<bool>);

	// NETWORK/NETWORK_DID_GET_GAMER_STATUS_SUCCEED (result cleaner only)
	AddResultCleaner(0x5AE17C6B0134B7F1, ResultCleaner<bool>);

	// NETWORK/NETWORK_DISABLE_INVINCIBLE_FLASHING
	static auto nh_0x9DD368BF06983221 = rage::scrEngine::GetNativeHandler(0x9DD368BF06983221);
	rage::scrEngine::RegisterNativeHandler(0x9DD368BF06983221, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9DD368BF06983221(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND
	static auto nh_0xC505036A35AFD01B = rage::scrEngine::GetNativeHandler(0xC505036A35AFD01B);
	rage::scrEngine::RegisterNativeHandler(0xC505036A35AFD01B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC505036A35AFD01B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_DISABLE_PROXIMITY_MIGRATION
	static auto nh_0x407091CF6037118E = rage::scrEngine::GetNativeHandler(0x407091CF6037118E);
	rage::scrEngine::RegisterNativeHandler(0x407091CF6037118E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x407091CF6037118E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID (result cleaner only)
	AddResultCleaner(0x18A47D074708FD68, ResultCleaner<bool>);

	// NETWORK/NETWORK_DOES_NETWORK_ID_EXIST (result cleaner only)
	AddResultCleaner(0x38CE16C96BD11344, ResultCleaner<bool>);

	// NETWORK/NETWORK_DOES_TUNABLE_EXIST
	static auto nh_0x85E5F8B9B898B20A = rage::scrEngine::GetNativeHandler(0x85E5F8B9B898B20A);
	rage::scrEngine::RegisterNativeHandler(0x85E5F8B9B898B20A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x85E5F8B9B898B20A(cxt);
	});
	        
	AddResultCleaner(0x85E5F8B9B898B20A, ResultCleaner<bool>);

	// NETWORK/NETWORK_DOES_TUNABLE_EXIST_HASH (result cleaner only)
	AddResultCleaner(0xE4E53E1419D81127, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_QUICKMATCH
	static auto nh_0x71FB0EBCD4915D56 = rage::scrEngine::GetNativeHandler(0x71FB0EBCD4915D56);
	rage::scrEngine::RegisterNativeHandler(0x71FB0EBCD4915D56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x71FB0EBCD4915D56(cxt);
	});
	        
	AddResultCleaner(0x71FB0EBCD4915D56, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC
	static auto nh_0xA091A5E44F0072E5 = rage::scrEngine::GetNativeHandler(0xA091A5E44F0072E5);
	rage::scrEngine::RegisterNativeHandler(0xA091A5E44F0072E5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA091A5E44F0072E5(cxt);
	});
	        
	AddResultCleaner(0xA091A5E44F0072E5, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP
	static auto nh_0x9C4AB58491FDC98A = rage::scrEngine::GetNativeHandler(0x9C4AB58491FDC98A);
	rage::scrEngine::RegisterNativeHandler(0x9C4AB58491FDC98A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x9C4AB58491FDC98A(cxt);
	});
	        
	AddResultCleaner(0x9C4AB58491FDC98A, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_TO_FREEMODE
	static auto nh_0x3AAD8B2FCA1E289F = rage::scrEngine::GetNativeHandler(0x3AAD8B2FCA1E289F);
	rage::scrEngine::RegisterNativeHandler(0x3AAD8B2FCA1E289F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3AAD8B2FCA1E289F(cxt);
	});
	        
	AddResultCleaner(0x3AAD8B2FCA1E289F, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_TO_GAME (result cleaner only)
	AddResultCleaner(0x3E9BB38102A589B0, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_TO_NEW_FREEMODE
	static auto nh_0x9E80A5BA8109F974 = rage::scrEngine::GetNativeHandler(0x9E80A5BA8109F974);
	rage::scrEngine::RegisterNativeHandler(0x9E80A5BA8109F974, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9E80A5BA8109F974(cxt);
	});
	        
	AddResultCleaner(0x9E80A5BA8109F974, ResultCleaner<bool>);

	// NETWORK/NETWORK_DO_TRANSITION_TO_NEW_GAME (result cleaner only)
	AddResultCleaner(0x4665F51EFED00034, ResultCleaner<bool>);

	// MONEY/NETWORK_EARN_FROM_AI_TARGET_KILL
	static auto nh_0x515B4A22E4D3C6D7 = rage::scrEngine::GetNativeHandler(0x515B4A22E4D3C6D7);
	rage::scrEngine::RegisterNativeHandler(0x515B4A22E4D3C6D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x515B4A22E4D3C6D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_AMBIENT_JOB
	static auto nh_0xFB6DB092FBAE29E6 = rage::scrEngine::GetNativeHandler(0xFB6DB092FBAE29E6);
	rage::scrEngine::RegisterNativeHandler(0xFB6DB092FBAE29E6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xFB6DB092FBAE29E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_BEND_JOB
	static auto nh_0x61326EE6DF15B0CA = rage::scrEngine::GetNativeHandler(0x61326EE6DF15B0CA);
	rage::scrEngine::RegisterNativeHandler(0x61326EE6DF15B0CA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x61326EE6DF15B0CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_BETTING
	static auto nh_0x827A5BA1A44ACA6D = rage::scrEngine::GetNativeHandler(0x827A5BA1A44ACA6D);
	rage::scrEngine::RegisterNativeHandler(0x827A5BA1A44ACA6D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x827A5BA1A44ACA6D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_BOUNTY
	static auto nh_0x131BB5DA15453ACF = rage::scrEngine::GetNativeHandler(0x131BB5DA15453ACF);
	rage::scrEngine::RegisterNativeHandler(0x131BB5DA15453ACF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x131BB5DA15453ACF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_CHALLENGE_WIN
	static auto nh_0x2B171E6B2F64D8DF = rage::scrEngine::GetNativeHandler(0x2B171E6B2F64D8DF);
	rage::scrEngine::RegisterNativeHandler(0x2B171E6B2F64D8DF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2B171E6B2F64D8DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_CRATE_DROP
	static auto nh_0xB1CC1B9EC3007A2A = rage::scrEngine::GetNativeHandler(0xB1CC1B9EC3007A2A);
	rage::scrEngine::RegisterNativeHandler(0xB1CC1B9EC3007A2A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1CC1B9EC3007A2A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_DAILY_OBJECTIVES
	static auto nh_0x6EA318C91C1A8786 = rage::scrEngine::GetNativeHandler(0x6EA318C91C1A8786);
	rage::scrEngine::RegisterNativeHandler(0x6EA318C91C1A8786, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6EA318C91C1A8786(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_HOLDUPS
	static auto nh_0x45B8154E077D9E4D = rage::scrEngine::GetNativeHandler(0x45B8154E077D9E4D);
	rage::scrEngine::RegisterNativeHandler(0x45B8154E077D9E4D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45B8154E077D9E4D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_IMPORT_EXPORT
	static auto nh_0xF92A014A634442D6 = rage::scrEngine::GetNativeHandler(0xF92A014A634442D6);
	rage::scrEngine::RegisterNativeHandler(0xF92A014A634442D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF92A014A634442D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_JOB
	static auto nh_0xB2CC4836834E8A98 = rage::scrEngine::GetNativeHandler(0xB2CC4836834E8A98);
	rage::scrEngine::RegisterNativeHandler(0xB2CC4836834E8A98, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB2CC4836834E8A98(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_JOB_BONUS
	static auto nh_0x6816FB4416760775 = rage::scrEngine::GetNativeHandler(0x6816FB4416760775);
	rage::scrEngine::RegisterNativeHandler(0x6816FB4416760775, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6816FB4416760775(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_NOT_BADSPORT
	static auto nh_0x4337511FA8221D36 = rage::scrEngine::GetNativeHandler(0x4337511FA8221D36);
	rage::scrEngine::RegisterNativeHandler(0x4337511FA8221D36, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4337511FA8221D36(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_PERSONAL_VEHICLE
	static auto nh_0x3F4D00167E41E0AD = rage::scrEngine::GetNativeHandler(0x3F4D00167E41E0AD);
	rage::scrEngine::RegisterNativeHandler(0x3F4D00167E41E0AD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x3F4D00167E41E0AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_PICKUP
	static auto nh_0xED1517D3AF17C698 = rage::scrEngine::GetNativeHandler(0xED1517D3AF17C698);
	rage::scrEngine::RegisterNativeHandler(0xED1517D3AF17C698, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED1517D3AF17C698(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_PROPERTY
	static auto nh_0x849648349D77F5C5 = rage::scrEngine::GetNativeHandler(0x849648349D77F5C5);
	rage::scrEngine::RegisterNativeHandler(0x849648349D77F5C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x849648349D77F5C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_ROCKSTAR
	static auto nh_0x02CE1D6AC0FC73EA = rage::scrEngine::GetNativeHandler(0x02CE1D6AC0FC73EA);
	rage::scrEngine::RegisterNativeHandler(0x02CE1D6AC0FC73EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02CE1D6AC0FC73EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_EARN_FROM_VEHICLE
	static auto nh_0xB539BD8A4C1EECF8 = rage::scrEngine::GetNativeHandler(0xB539BD8A4C1EECF8);
	rage::scrEngine::RegisterNativeHandler(0xB539BD8A4C1EECF8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xB539BD8A4C1EECF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_END_TUTORIAL_SESSION
	static auto nh_0xD0AFAFF5A51D72F7 = rage::scrEngine::GetNativeHandler(0xD0AFAFF5A51D72F7);
	rage::scrEngine::RegisterNativeHandler(0xD0AFAFF5A51D72F7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD0AFAFF5A51D72F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_ENTITY_AREA_DOES_EXIST (result cleaner only)
	AddResultCleaner(0xE64A3CA08DFA37A9, ResultCleaner<bool>);

	// NETWORK/NETWORK_ENTITY_AREA_IS_OCCUPIED (result cleaner only)
	AddResultCleaner(0x4A2D4E8BF4265B0F, ResultCleaner<bool>);

	// NETWORK/NETWORK_EXPLODE_HELI
	static auto nh_0x2A5E0621DD815A9A = rage::scrEngine::GetNativeHandler(0x2A5E0621DD815A9A);
	rage::scrEngine::RegisterNativeHandler(0x2A5E0621DD815A9A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A5E0621DD815A9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_EXPLODE_VEHICLE
	static auto nh_0x301A42153C9AD707 = rage::scrEngine::GetNativeHandler(0x301A42153C9AD707);
	rage::scrEngine::RegisterNativeHandler(0x301A42153C9AD707, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x301A42153C9AD707(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_FADE_IN_ENTITY
	static auto nh_0x1F4ED342ACEFE62D = rage::scrEngine::GetNativeHandler(0x1F4ED342ACEFE62D);
	rage::scrEngine::RegisterNativeHandler(0x1F4ED342ACEFE62D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F4ED342ACEFE62D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_FADE_OUT_ENTITY
	static auto nh_0xDE564951F95E09ED = rage::scrEngine::GetNativeHandler(0xDE564951F95E09ED);
	rage::scrEngine::RegisterNativeHandler(0xDE564951F95E09ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDE564951F95E09ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_FIND_GAMERS_IN_CREW
	static auto nh_0xE532D6811B3A4D2A = rage::scrEngine::GetNativeHandler(0xE532D6811B3A4D2A);
	rage::scrEngine::RegisterNativeHandler(0xE532D6811B3A4D2A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE532D6811B3A4D2A(cxt);
	});
	        
	AddResultCleaner(0xE532D6811B3A4D2A, ResultCleaner<bool>);

	// NETWORK/NETWORK_FIND_MATCHED_GAMERS
	static auto nh_0xF7B2CFDE5C9F700D = rage::scrEngine::GetNativeHandler(0xF7B2CFDE5C9F700D);
	rage::scrEngine::RegisterNativeHandler(0xF7B2CFDE5C9F700D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF7B2CFDE5C9F700D(cxt);
	});
	        
	AddResultCleaner(0xF7B2CFDE5C9F700D, ResultCleaner<bool>);

	// NETWORK/NETWORK_FINISH_BROADCASTING_DATA
	static auto nh_0x64F62AFB081E260D = rage::scrEngine::GetNativeHandler(0x64F62AFB081E260D);
	rage::scrEngine::RegisterNativeHandler(0x64F62AFB081E260D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x64F62AFB081E260D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA
	static auto nh_0xC9B43A33D09CADA7 = rage::scrEngine::GetNativeHandler(0xC9B43A33D09CADA7);
	rage::scrEngine::RegisterNativeHandler(0xC9B43A33D09CADA7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9B43A33D09CADA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_GAMERTAG_FROM_HANDLE_PENDING (result cleaner only)
	AddResultCleaner(0xB071E27958EF4CF0, ResultCleaner<bool>);

	// NETWORK/NETWORK_GAMERTAG_FROM_HANDLE_START
	static auto nh_0x9F0C0A981D73FA56 = rage::scrEngine::GetNativeHandler(0x9F0C0A981D73FA56);
	rage::scrEngine::RegisterNativeHandler(0x9F0C0A981D73FA56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9F0C0A981D73FA56(cxt);
	});
	        
	AddResultCleaner(0x9F0C0A981D73FA56, ResultCleaner<bool>);

	// NETWORK/NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED (result cleaner only)
	AddResultCleaner(0xFD00798DBA7523DD, ResultCleaner<bool>);

	// NETWORK/NETWORK_GAMER_HAS_HEADSET
	static auto nh_0xF2FD55CB574BCC55 = rage::scrEngine::GetNativeHandler(0xF2FD55CB574BCC55);
	rage::scrEngine::RegisterNativeHandler(0xF2FD55CB574BCC55, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF2FD55CB574BCC55(cxt);
	});
	        
	AddResultCleaner(0xF2FD55CB574BCC55, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_ACTIVITY_PLAYER_NUM (result cleaner only)
	AddResultCleaner(0x73E2B500410DA5A2, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_AGE_GROUP (result cleaner only)
	AddResultCleaner(0x9614B71F8ADB982B, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS
	static auto nh_0x97A770BEEF227E2B = rage::scrEngine::GetNativeHandler(0x97A770BEEF227E2B);
	rage::scrEngine::RegisterNativeHandler(0x97A770BEEF227E2B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x97A770BEEF227E2B(cxt);
	});
	        
	AddResultCleaner(0x97A770BEEF227E2B, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_CONTENT_MODIFIER_LIST_ID (result cleaner only)
	AddResultCleaner(0x187382F8A3E0A6C3, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
	static auto nh_0x74881E6BCAE2327C = rage::scrEngine::GetNativeHandler(0x74881E6BCAE2327C);
	rage::scrEngine::RegisterNativeHandler(0x74881E6BCAE2327C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x74881E6BCAE2327C(cxt);
	});
	        
	AddResultCleaner(0x74881E6BCAE2327C, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_DESTROYER_OF_NETWORK_ID
	static auto nh_0x7A1ADEEF01740A24 = rage::scrEngine::GetNativeHandler(0x7A1ADEEF01740A24);
	rage::scrEngine::RegisterNativeHandler(0x7A1ADEEF01740A24, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7A1ADEEF01740A24(cxt);
	});
	        
	AddResultCleaner(0x7A1ADEEF01740A24, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_ENTITY_FROM_NETWORK_ID (result cleaner only)
	AddResultCleaner(0xCE4E5D9B0A4FF560, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_ENTITY_IS_LOCAL (result cleaner only)
	AddResultCleaner(0x0991549DE4D64762, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_ENTITY_IS_NETWORKED (result cleaner only)
	AddResultCleaner(0xC7827959479DCC78, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_ENTITY_KILLER_OF_PLAYER
	static auto nh_0x42B2DAA6B596F5F8 = rage::scrEngine::GetNativeHandler(0x42B2DAA6B596F5F8);
	rage::scrEngine::RegisterNativeHandler(0x42B2DAA6B596F5F8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x42B2DAA6B596F5F8(cxt);
	});
	        
	AddResultCleaner(0x42B2DAA6B596F5F8, ResultCleaner<int>);

	// CFX/NETWORK_GET_ENTITY_OWNER (result cleaner only)
	AddResultCleaner(0x526fee31, ResultCleaner<int>);

	// MONEY/NETWORK_GET_EVC_BALANCE (result cleaner only)
	AddResultCleaner(0x5D1E75F91C07DEE5, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_FOUND_GAMER
	static auto nh_0x9DCFF2AFB68B3476 = rage::scrEngine::GetNativeHandler(0x9DCFF2AFB68B3476);
	rage::scrEngine::RegisterNativeHandler(0x9DCFF2AFB68B3476, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9DCFF2AFB68B3476(cxt);
	});
	        
	AddResultCleaner(0x9DCFF2AFB68B3476, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_FRIEND_COUNT (result cleaner only)
	AddResultCleaner(0x203F1CFD823B27A4, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_FRIEND_NAME (result cleaner only)
	AddResultCleaner(0xE11EBBB2A783FE8B, ResultCleaner<char*>);

	// NETWORK/NETWORK_GET_GAMERTAG_FROM_HANDLE
	static auto nh_0x426141162EBE5CDB = rage::scrEngine::GetNativeHandler(0x426141162EBE5CDB);
	rage::scrEngine::RegisterNativeHandler(0x426141162EBE5CDB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x426141162EBE5CDB(cxt);
	});
	        
	AddResultCleaner(0x426141162EBE5CDB, ResultCleaner<char*>);

	// NETWORK/NETWORK_GET_GAMER_STATUS_FROM_QUEUE (result cleaner only)
	AddResultCleaner(0x2CC848A861D01493, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_GAMER_STATUS_RESULT
	static auto nh_0x02A8BEC6FD9AF660 = rage::scrEngine::GetNativeHandler(0x02A8BEC6FD9AF660);
	rage::scrEngine::RegisterNativeHandler(0x02A8BEC6FD9AF660, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x02A8BEC6FD9AF660(cxt);
	});
	        
	AddResultCleaner(0x02A8BEC6FD9AF660, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK
	static auto nh_0x6D03BFBD643B2A02 = rage::scrEngine::GetNativeHandler(0x6D03BFBD643B2A02);
	rage::scrEngine::RegisterNativeHandler(0x6D03BFBD643B2A02, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6D03BFBD643B2A02(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_GET_HOST_OF_SCRIPT
	static auto nh_0x1D6A14F1F9A736FC = rage::scrEngine::GetNativeHandler(0x1D6A14F1F9A736FC);
	rage::scrEngine::RegisterNativeHandler(0x1D6A14F1F9A736FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1D6A14F1F9A736FC(cxt);
	});
	        
	AddResultCleaner(0x1D6A14F1F9A736FC, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_HOST_OF_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0xC7B4D79B01FA7A5C, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0x638A3A81733086DB, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_LOCAL_HANDLE
	static auto nh_0xE86051786B66CD8E = rage::scrEngine::GetNativeHandler(0xE86051786B66CD8E);
	rage::scrEngine::RegisterNativeHandler(0xE86051786B66CD8E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE86051786B66CD8E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID (result cleaner only)
	AddResultCleaner(0x02C40BF885C567B6, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_MAX_FRIENDS (result cleaner only)
	AddResultCleaner(0xAFEBB0D5D8F687D2, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_MAX_NUM_PARTICIPANTS (result cleaner only)
	AddResultCleaner(0xA6C90FBC38E395EE, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NETWORK_ID_FROM_ENTITY (result cleaner only)
	AddResultCleaner(0xA11700682F3AD45C, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NUM_CONNECTED_PLAYERS (result cleaner only)
	AddResultCleaner(0xA4A79DD2D9600654, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NUM_FOUND_GAMERS (result cleaner only)
	AddResultCleaner(0xA1B043EE79A916FB, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NUM_PARTICIPANTS (result cleaner only)
	AddResultCleaner(0x18D0456E86604654, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NUM_PRESENCE_INVITES (result cleaner only)
	AddResultCleaner(0xCEFA968912D0F78D, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_NUM_SCRIPT_PARTICIPANTS
	static auto nh_0x3658E8CD94FC121A = rage::scrEngine::GetNativeHandler(0x3658E8CD94FC121A);
	rage::scrEngine::RegisterNativeHandler(0x3658E8CD94FC121A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3658E8CD94FC121A(cxt);
	});
	        
	AddResultCleaner(0x3658E8CD94FC121A, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PARTICIPANT_INDEX (result cleaner only)
	AddResultCleaner(0x1B84DF6AF2A46938, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PLATFORM_PARTY_MEMBERS
	static auto nh_0x120364DE2845DAF8 = rage::scrEngine::GetNativeHandler(0x120364DE2845DAF8);
	rage::scrEngine::RegisterNativeHandler(0x120364DE2845DAF8, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x120364DE2845DAF8(cxt);
	});
	        
	AddResultCleaner(0x120364DE2845DAF8, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PLAYER_FROM_GAMER_HANDLE
	static auto nh_0xCE5F689CF5A0A49D = rage::scrEngine::GetNativeHandler(0xCE5F689CF5A0A49D);
	rage::scrEngine::RegisterNativeHandler(0xCE5F689CF5A0A49D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCE5F689CF5A0A49D(cxt);
	});
	        
	AddResultCleaner(0xCE5F689CF5A0A49D, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PLAYER_INDEX (result cleaner only)
	AddResultCleaner(0x24FB80D107371267, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PLAYER_INDEX_FROM_PED (result cleaner only)
	AddResultCleaner(0x6C0E2E0125610278, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PLAYER_LOUDNESS (result cleaner only)
	AddResultCleaner(0x21A1684A25C2867F, ResultCleaner<float>);

	// NETWORK/NETWORK_GET_PLAYER_OWNS_WAYPOINT (result cleaner only)
	AddResultCleaner(0x82377B65E943F72D, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE (result cleaner only)
	AddResultCleaner(0x3B39236746714134, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_CONTENT_ID
	static auto nh_0x24409FC4C55CB22D = rage::scrEngine::GetNativeHandler(0x24409FC4C55CB22D);
	rage::scrEngine::RegisterNativeHandler(0x24409FC4C55CB22D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x24409FC4C55CB22D(cxt);
	});
	        
	AddResultCleaner(0x24409FC4C55CB22D, ResultCleaner<char*>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN
	static auto nh_0x3DBF2DF0AEB7D289 = rage::scrEngine::GetNativeHandler(0x3DBF2DF0AEB7D289);
	rage::scrEngine::RegisterNativeHandler(0x3DBF2DF0AEB7D289, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3DBF2DF0AEB7D289(cxt);
	});
	        
	AddResultCleaner(0x3DBF2DF0AEB7D289, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_HANDLE
	static auto nh_0x38D5B0FEBB086F75 = rage::scrEngine::GetNativeHandler(0x38D5B0FEBB086F75);
	rage::scrEngine::RegisterNativeHandler(0x38D5B0FEBB086F75, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x38D5B0FEBB086F75(cxt);
	});
	        
	AddResultCleaner(0x38D5B0FEBB086F75, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_ID
	static auto nh_0xDFF09646E12EC386 = rage::scrEngine::GetNativeHandler(0xDFF09646E12EC386);
	rage::scrEngine::RegisterNativeHandler(0xDFF09646E12EC386, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFF09646E12EC386(cxt);
	});
	        
	AddResultCleaner(0xDFF09646E12EC386, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_INVITER (result cleaner only)
	AddResultCleaner(0x4962CC4AA2F345B7, ResultCleaner<char*>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT
	static auto nh_0x8806CEBFABD3CE05 = rage::scrEngine::GetNativeHandler(0x8806CEBFABD3CE05);
	rage::scrEngine::RegisterNativeHandler(0x8806CEBFABD3CE05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8806CEBFABD3CE05(cxt);
	});
	        
	AddResultCleaner(0x8806CEBFABD3CE05, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT
	static auto nh_0x728C4CC7920CD102 = rage::scrEngine::GetNativeHandler(0x728C4CC7920CD102);
	rage::scrEngine::RegisterNativeHandler(0x728C4CC7920CD102, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x728C4CC7920CD102(cxt);
	});
	        
	AddResultCleaner(0x728C4CC7920CD102, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH
	static auto nh_0xD39B3FFF8FFDD5BF = rage::scrEngine::GetNativeHandler(0xD39B3FFF8FFDD5BF);
	rage::scrEngine::RegisterNativeHandler(0xD39B3FFF8FFDD5BF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD39B3FFF8FFDD5BF(cxt);
	});
	        
	AddResultCleaner(0xD39B3FFF8FFDD5BF, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRESENCE_INVITE_SESSION_ID (result cleaner only)
	AddResultCleaner(0x26E1CD96B0903D60, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL
	static auto nh_0x042E4B70B93E6054 = rage::scrEngine::GetNativeHandler(0x042E4B70B93E6054);
	rage::scrEngine::RegisterNativeHandler(0x042E4B70B93E6054, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x042E4B70B93E6054(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR (result cleaner only)
	AddResultCleaner(0x9AA46BADAD0E27ED, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_NEW
	static auto nh_0xC080FF658B2E41DA = rage::scrEngine::GetNativeHandler(0xC080FF658B2E41DA);
	rage::scrEngine::RegisterNativeHandler(0xC080FF658B2E41DA, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC080FF658B2E41DA(cxt);
	});
	        
	AddResultCleaner(0xC080FF658B2E41DA, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_PENDING (result cleaner only)
	AddResultCleaner(0xB5074DB804E28CE7, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_START
	static auto nh_0xCE86D8191B762107 = rage::scrEngine::GetNativeHandler(0xCE86D8191B762107);
	rage::scrEngine::RegisterNativeHandler(0xCE86D8191B762107, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCE86D8191B762107(cxt);
	});
	        
	AddResultCleaner(0xCE86D8191B762107, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS (result cleaner only)
	AddResultCleaner(0x5B4F04F19376A0BA, ResultCleaner<int>);

	// MONEY/NETWORK_GET_PVC_BALANCE (result cleaner only)
	AddResultCleaner(0x4F54F3B6C202FB4E, ResultCleaner<int>);

	// MONEY/NETWORK_GET_PVC_TRANSFER_BALANCE (result cleaner only)
	AddResultCleaner(0x13A8DE2FD77D04F3, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_RANDOM_INT (result cleaner only)
	AddResultCleaner(0x599E4FA1F87EB5FF, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_RANDOM_INT_RANGED (result cleaner only)
	AddResultCleaner(0xE30CF56F1EFA5F43, ResultCleaner<int>);

	// MONEY/NETWORK_GET_REMAINING_TRANSFER_BALANCE (result cleaner only)
	AddResultCleaner(0xEA560AC9EEB1E19B, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_RESPAWN_RESULT
	static auto nh_0x371EA43692861CF1 = rage::scrEngine::GetNativeHandler(0x371EA43692861CF1);
	rage::scrEngine::RegisterNativeHandler(0x371EA43692861CF1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x371EA43692861CF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_GET_RESPAWN_RESULT_FLAGS
	static auto nh_0x6C34F1208B8923FD = rage::scrEngine::GetNativeHandler(0x6C34F1208B8923FD);
	rage::scrEngine::RegisterNativeHandler(0x6C34F1208B8923FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6C34F1208B8923FD(cxt);
	});
	        
	AddResultCleaner(0x6C34F1208B8923FD, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_SCRIPT_STATUS (result cleaner only)
	AddResultCleaner(0x57D158647A6BFABF, ResultCleaner<int>);

	// MONEY/NETWORK_GET_STRING_BANK_BALANCE (result cleaner only)
	AddResultCleaner(0xA6FA3979BED01B81, ResultCleaner<char*>);

	// MONEY/NETWORK_GET_STRING_BANK_WALLET_BALANCE (result cleaner only)
	AddResultCleaner(0x700AF71AE615E6DD, ResultCleaner<char*>);

	// MONEY/NETWORK_GET_STRING_WALLET_BALANCE (result cleaner only)
	AddResultCleaner(0xF9B10B529DCFB33B, ResultCleaner<char*>);

	// NETWORK/NETWORK_GET_TALKER_PROXIMITY (result cleaner only)
	AddResultCleaner(0x84F0F13120B4E098, ResultCleaner<float>);

	// NETWORK/NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT (result cleaner only)
	AddResultCleaner(0x2910669969E9535E, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_TIMEOUT_TIME (result cleaner only)
	AddResultCleaner(0x5ED0356A0CE3A34F, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_TOTAL_NUM_PLAYERS (result cleaner only)
	AddResultCleaner(0xCF61D4B4702EE9EB, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_TRANSITION_HOST
	static auto nh_0x65042B9774C4435E = rage::scrEngine::GetNativeHandler(0x65042B9774C4435E);
	rage::scrEngine::RegisterNativeHandler(0x65042B9774C4435E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x65042B9774C4435E(cxt);
	});
	        
	AddResultCleaner(0x65042B9774C4435E, ResultCleaner<bool>);

	// NETWORK/NETWORK_GET_TRANSITION_MEMBERS
	static auto nh_0x73B000F7FBC55829 = rage::scrEngine::GetNativeHandler(0x73B000F7FBC55829);
	rage::scrEngine::RegisterNativeHandler(0x73B000F7FBC55829, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x73B000F7FBC55829(cxt);
	});
	        
	AddResultCleaner(0x73B000F7FBC55829, ResultCleaner<int>);

	// NETWORK/NETWORK_GET_TUNABLE_CLOUD_CRC (result cleaner only)
	AddResultCleaner(0x10BD227A753B0D84, ResultCleaner<int>);

	// MONEY/NETWORK_GET_VC_BALANCE (result cleaner only)
	AddResultCleaner(0x5CBAD97E059E1B94, ResultCleaner<int>);

	// MONEY/NETWORK_GET_VC_BANK_BALANCE (result cleaner only)
	AddResultCleaner(0x76EF28DA05EA395A, ResultCleaner<int>);

	// MONEY/NETWORK_GET_VC_WALLET_BALANCE (result cleaner only)
	AddResultCleaner(0xA40F9C2623F6A8B5, ResultCleaner<int>);

	// MONEY/NETWORK_GIVE_PLAYER_JOBSHARE_CASH
	static auto nh_0xFB18DF9CB95E0105 = rage::scrEngine::GetNativeHandler(0xFB18DF9CB95E0105);
	rage::scrEngine::RegisterNativeHandler(0xFB18DF9CB95E0105, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFB18DF9CB95E0105(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_HANDLE_FROM_FRIEND
	static auto nh_0xD45CB817D7E177D2 = rage::scrEngine::GetNativeHandler(0xD45CB817D7E177D2);
	rage::scrEngine::RegisterNativeHandler(0xD45CB817D7E177D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD45CB817D7E177D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_HANDLE_FROM_MEMBER_ID
	static auto nh_0xA0FD21BED61E5C4C = rage::scrEngine::GetNativeHandler(0xA0FD21BED61E5C4C);
	rage::scrEngine::RegisterNativeHandler(0xA0FD21BED61E5C4C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA0FD21BED61E5C4C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_HANDLE_FROM_PLAYER
	static auto nh_0x388EB2B86C73B6B3 = rage::scrEngine::GetNativeHandler(0x388EB2B86C73B6B3);
	rage::scrEngine::RegisterNativeHandler(0x388EB2B86C73B6B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x388EB2B86C73B6B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_HANDLE_FROM_USER_ID
	static auto nh_0xDCD51DD8F87AEC5C = rage::scrEngine::GetNativeHandler(0xDCD51DD8F87AEC5C);
	rage::scrEngine::RegisterNativeHandler(0xDCD51DD8F87AEC5C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDCD51DD8F87AEC5C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_HASH_FROM_GAMER_HANDLE
	static auto nh_0x58575AC3CF2CA8EC = rage::scrEngine::GetNativeHandler(0x58575AC3CF2CA8EC);
	rage::scrEngine::RegisterNativeHandler(0x58575AC3CF2CA8EC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x58575AC3CF2CA8EC(cxt);
	});
	        
	AddResultCleaner(0x58575AC3CF2CA8EC, ResultCleaner<int>);

	// NETWORK/NETWORK_HASH_FROM_PLAYER_HANDLE (result cleaner only)
	AddResultCleaner(0xBC1D768F2F5D6C05, ResultCleaner<int>);

	// NETWORK/NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA (result cleaner only)
	AddResultCleaner(0x237D5336A9A54108, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_CONTROL_OF_DOOR (result cleaner only)
	AddResultCleaner(0xCB3C68ADB06195DF, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_CONTROL_OF_ENTITY (result cleaner only)
	AddResultCleaner(0x01BF60A500E28887, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_CONTROL_OF_NETWORK_ID (result cleaner only)
	AddResultCleaner(0x4D36070FE0215186, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_CONTROL_OF_PICKUP (result cleaner only)
	AddResultCleaner(0x5BC9495F0B3B6FA6, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD (result cleaner only)
	AddResultCleaner(0xB07D3185E11657A5, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_FOLLOW_INVITE (result cleaner only)
	AddResultCleaner(0x76D9B976C4C09FDE, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_HEADSET (result cleaner only)
	AddResultCleaner(0xE870F9F1F7B4F1FA, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_INVITED_GAMER
	static auto nh_0x4D86CD31E8976ECE = rage::scrEngine::GetNativeHandler(0x4D86CD31E8976ECE);
	rage::scrEngine::RegisterNativeHandler(0x4D86CD31E8976ECE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4D86CD31E8976ECE(cxt);
	});
	        
	AddResultCleaner(0x4D86CD31E8976ECE, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_INVITED_GAMER_TO_TRANSITION
	static auto nh_0x7284A47B3540E6CF = rage::scrEngine::GetNativeHandler(0x7284A47B3540E6CF);
	rage::scrEngine::RegisterNativeHandler(0x7284A47B3540E6CF, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7284A47B3540E6CF(cxt);
	});
	        
	AddResultCleaner(0x7284A47B3540E6CF, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_INVITE_BEEN_ACKED
	static auto nh_0x71DC455F5CD1C2B1 = rage::scrEngine::GetNativeHandler(0x71DC455F5CD1C2B1);
	rage::scrEngine::RegisterNativeHandler(0x71DC455F5CD1C2B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x71DC455F5CD1C2B1(cxt);
	});
	        
	AddResultCleaner(0x71DC455F5CD1C2B1, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_PENDING_INVITE (result cleaner only)
	AddResultCleaner(0xAC8C7B9B88C4A668, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_PLAYER_STARTED_TRANSITION (result cleaner only)
	AddResultCleaner(0x9AC9CCBFA8C29795, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA (result cleaner only)
	AddResultCleaner(0x5D10B3795F3FC886, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_ROS_PRIVILEGE (result cleaner only)
	AddResultCleaner(0xA699957E60D80214, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_ROS_PRIVILEGE_END_DATE
	static auto nh_0xC22912B1D85F26B1 = rage::scrEngine::GetNativeHandler(0xC22912B1D85F26B1);
	rage::scrEngine::RegisterNativeHandler(0xC22912B1D85F26B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC22912B1D85F26B1(cxt);
	});
	        
	AddResultCleaner(0xC22912B1D85F26B1, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_SOCIAL_CLUB_ACCOUNT (result cleaner only)
	AddResultCleaner(0x67A5589628E0CFF6, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV (result cleaner only)
	AddResultCleaner(0x76BF03FADBF154F5, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED
	static auto nh_0x3F9990BF5F22759C = rage::scrEngine::GetNativeHandler(0x3F9990BF5F22759C);
	rage::scrEngine::RegisterNativeHandler(0x3F9990BF5F22759C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3F9990BF5F22759C(cxt);
	});
	        
	AddResultCleaner(0x3F9990BF5F22759C, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAS_VALID_ROS_CREDENTIALS (result cleaner only)
	AddResultCleaner(0x85443FF4C328F53B, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_COMMUNICATION_PRIVILEGES (result cleaner only)
	AddResultCleaner(0xAEEF48CDF5B6CE7C, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ONLINE_PRIVILEGES (result cleaner only)
	AddResultCleaner(0x25CB5A9F37BFD063, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ROS_BANNED_PRIV (result cleaner only)
	AddResultCleaner(0x8020A73847E0CA7D, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ROS_CREATE_TICKET_PRIV (result cleaner only)
	AddResultCleaner(0xA0AD7E2AF5349F61, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV (result cleaner only)
	AddResultCleaner(0x422D396F80A96547, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ROS_MULTIPLAYER_PRIV (result cleaner only)
	AddResultCleaner(0x5F91D5D0B36AA310, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV (result cleaner only)
	AddResultCleaner(0x606E4D3E3CCCF3EB, ResultCleaner<bool>);

	// NETWORK/NETWORK_HAVE_USER_CONTENT_PRIVILEGES (result cleaner only)
	AddResultCleaner(0x72D918C99BCACC54, ResultCleaner<bool>);

	// NETWORK/NETWORK_HOST_TRANSITION
	static auto nh_0xA60BB5CE242BB254 = rage::scrEngine::GetNativeHandler(0xA60BB5CE242BB254);
	rage::scrEngine::RegisterNativeHandler(0xA60BB5CE242BB254, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xA60BB5CE242BB254(cxt);
	});
	        
	AddResultCleaner(0xA60BB5CE242BB254, ResultCleaner<bool>);

	// MONEY/NETWORK_INITIALIZE_CASH
	static auto nh_0x3DA5ECD1A56CBA6D = rage::scrEngine::GetNativeHandler(0x3DA5ECD1A56CBA6D);
	rage::scrEngine::RegisterNativeHandler(0x3DA5ECD1A56CBA6D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3DA5ECD1A56CBA6D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_INVITE_GAMERS
	static auto nh_0x9D80CD1D0E6327DE = rage::scrEngine::GetNativeHandler(0x9D80CD1D0E6327DE);
	rage::scrEngine::RegisterNativeHandler(0x9D80CD1D0E6327DE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x9D80CD1D0E6327DE(cxt);
	});
	        
	AddResultCleaner(0x9D80CD1D0E6327DE, ResultCleaner<bool>);

	// NETWORK/NETWORK_INVITE_GAMERS_TO_TRANSITION
	static auto nh_0x4A595C32F77DFF76 = rage::scrEngine::GetNativeHandler(0x4A595C32F77DFF76);
	rage::scrEngine::RegisterNativeHandler(0x4A595C32F77DFF76, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4A595C32F77DFF76(cxt);
	});
	        
	AddResultCleaner(0x4A595C32F77DFF76, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_ACTIVITY_SESSION (result cleaner only)
	AddResultCleaner(0x05095437424397FA, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_ACTIVITY_SPECTATOR (result cleaner only)
	AddResultCleaner(0x12103B9E0C9F92FB, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE
	static auto nh_0x2763BBAA72A7BCB9 = rage::scrEngine::GetNativeHandler(0x2763BBAA72A7BCB9);
	rage::scrEngine::RegisterNativeHandler(0x2763BBAA72A7BCB9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2763BBAA72A7BCB9(cxt);
	});
	        
	AddResultCleaner(0x2763BBAA72A7BCB9, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_ADDING_FRIEND (result cleaner only)
	AddResultCleaner(0x6EA101606F6E4D81, ResultCleaner<int>);

	// NETWORK/NETWORK_IS_CABLE_CONNECTED (result cleaner only)
	AddResultCleaner(0xEFFB25453D8600F9, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_CHATTING_IN_PLATFORM_PARTY
	static auto nh_0x8DE9945BCC9AEC52 = rage::scrEngine::GetNativeHandler(0x8DE9945BCC9AEC52);
	rage::scrEngine::RegisterNativeHandler(0x8DE9945BCC9AEC52, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8DE9945BCC9AEC52(cxt);
	});
	        
	AddResultCleaner(0x8DE9945BCC9AEC52, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_CLOCK_TIME_OVERRIDDEN (result cleaner only)
	AddResultCleaner(0xD7C95D322FF57522, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_CLOUD_AVAILABLE (result cleaner only)
	AddResultCleaner(0x9A4CF4F48AD77302, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING (result cleaner only)
	AddResultCleaner(0x8132C0EB8B2B3293, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_DOOR_NETWORKED (result cleaner only)
	AddResultCleaner(0xC01E93FAC20C3346, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_ENTITY_FADING (result cleaner only)
	AddResultCleaner(0x422F32CC7E56ABAD, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FINDING_GAMERS (result cleaner only)
	AddResultCleaner(0xDDDF64C91BFCF0AA, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FRIEND
	static auto nh_0x1A24A179F9B31654 = rage::scrEngine::GetNativeHandler(0x1A24A179F9B31654);
	rage::scrEngine::RegisterNativeHandler(0x1A24A179F9B31654, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A24A179F9B31654(cxt);
	});
	        
	AddResultCleaner(0x1A24A179F9B31654, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FRIEND_INDEX_ONLINE (result cleaner only)
	AddResultCleaner(0xBAD8F2A42B844821, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FRIEND_IN_MULTIPLAYER
	static auto nh_0x57005C18827F3A28 = rage::scrEngine::GetNativeHandler(0x57005C18827F3A28);
	rage::scrEngine::RegisterNativeHandler(0x57005C18827F3A28, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x57005C18827F3A28(cxt);
	});
	        
	AddResultCleaner(0x57005C18827F3A28, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FRIEND_IN_SAME_TITLE
	static auto nh_0x2EA9A3BEDF3F17B8 = rage::scrEngine::GetNativeHandler(0x2EA9A3BEDF3F17B8);
	rage::scrEngine::RegisterNativeHandler(0x2EA9A3BEDF3F17B8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2EA9A3BEDF3F17B8(cxt);
	});
	        
	AddResultCleaner(0x2EA9A3BEDF3F17B8, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_FRIEND_ONLINE
	static auto nh_0x425A44533437B64D = rage::scrEngine::GetNativeHandler(0x425A44533437B64D);
	rage::scrEngine::RegisterNativeHandler(0x425A44533437B64D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x425A44533437B64D(cxt);
	});
	        
	AddResultCleaner(0x425A44533437B64D, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GAMER_BLOCKED_BY_ME
	static auto nh_0xE944C4F5AF1B5883 = rage::scrEngine::GetNativeHandler(0xE944C4F5AF1B5883);
	rage::scrEngine::RegisterNativeHandler(0xE944C4F5AF1B5883, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE944C4F5AF1B5883(cxt);
	});
	        
	AddResultCleaner(0xE944C4F5AF1B5883, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GAMER_IN_MY_SESSION
	static auto nh_0x0F10B05DDF8D16E9 = rage::scrEngine::GetNativeHandler(0x0F10B05DDF8D16E9);
	rage::scrEngine::RegisterNativeHandler(0x0F10B05DDF8D16E9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0F10B05DDF8D16E9(cxt);
	});
	        
	AddResultCleaner(0x0F10B05DDF8D16E9, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GAMER_MUTED_BY_ME
	static auto nh_0xCE60DE011B6C7978 = rage::scrEngine::GetNativeHandler(0xCE60DE011B6C7978);
	rage::scrEngine::RegisterNativeHandler(0xCE60DE011B6C7978, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCE60DE011B6C7978(cxt);
	});
	        
	AddResultCleaner(0xCE60DE011B6C7978, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GAMER_TALKING
	static auto nh_0x71C33B22606CD88A = rage::scrEngine::GetNativeHandler(0x71C33B22606CD88A);
	rage::scrEngine::RegisterNativeHandler(0x71C33B22606CD88A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x71C33B22606CD88A(cxt);
	});
	        
	AddResultCleaner(0x71C33B22606CD88A, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GAME_IN_PROGRESS (result cleaner only)
	AddResultCleaner(0x10FAB35428CCC9D7, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_GETTING_GAMER_STATUS (result cleaner only)
	AddResultCleaner(0x94A8394D150B013A, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_HANDLE_VALID
	static auto nh_0x6F79B93B0A8E4133 = rage::scrEngine::GetNativeHandler(0x6F79B93B0A8E4133);
	rage::scrEngine::RegisterNativeHandler(0x6F79B93B0A8E4133, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6F79B93B0A8E4133(cxt);
	});
	        
	AddResultCleaner(0x6F79B93B0A8E4133, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_HOST (result cleaner only)
	AddResultCleaner(0x8DB296B814EDDA07, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_HOST_OF_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0x83CD99A1E6061AB5, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_INACTIVE_PROFILE
	static auto nh_0x7E58745504313A2E = rage::scrEngine::GetNativeHandler(0x7E58745504313A2E);
	rage::scrEngine::RegisterNativeHandler(0x7E58745504313A2E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7E58745504313A2E(cxt);
	});
	        
	AddResultCleaner(0x7E58745504313A2E, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_MP_CUTSCENE (result cleaner only)
	AddResultCleaner(0x6CC27C9FA2040220, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_PARTY (result cleaner only)
	AddResultCleaner(0x966C2BC2A7FE3F30, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_PLATFORM_PARTY (result cleaner only)
	AddResultCleaner(0x2FC5650B0271CB57, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_PLATFORM_PARTY_CHAT (result cleaner only)
	AddResultCleaner(0xFD8B834A8BA05048, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_SESSION (result cleaner only)
	AddResultCleaner(0xCA97246103B63917, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_SPECTATOR_MODE (result cleaner only)
	AddResultCleaner(0x048746E388762E11, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_TRANSITION (result cleaner only)
	AddResultCleaner(0x68049AEFF83D8F0A, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_IN_TUTORIAL_SESSION (result cleaner only)
	AddResultCleaner(0xADA24309FE08DACF, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_LOCAL_PLAYER_INVINCIBLE (result cleaner only)
	AddResultCleaner(0x8A8694B48715B000, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_LOCAL_TALKING (result cleaner only)
	AddResultCleaner(0xC0D2AF00BCC234CA, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_MULTIPLAYER_DISABLED (result cleaner only)
	AddResultCleaner(0x9747292807126EDA, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_OFFLINE_INVITE_PENDING (result cleaner only)
	AddResultCleaner(0x74698374C45701D2, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PARTICIPANT_ACTIVE (result cleaner only)
	AddResultCleaner(0x6FF8FF40B6357D45, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PARTY_MEMBER
	static auto nh_0x676ED266AADD31E0 = rage::scrEngine::GetNativeHandler(0x676ED266AADD31E0);
	rage::scrEngine::RegisterNativeHandler(0x676ED266AADD31E0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x676ED266AADD31E0(cxt);
	});
	        
	AddResultCleaner(0x676ED266AADD31E0, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PENDING_FRIEND
	static auto nh_0x0BE73DA6984A6E33 = rage::scrEngine::GetNativeHandler(0x0BE73DA6984A6E33);
	rage::scrEngine::RegisterNativeHandler(0x0BE73DA6984A6E33, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0BE73DA6984A6E33(cxt);
	});
	        
	AddResultCleaner(0x0BE73DA6984A6E33, ResultCleaner<int>);

	// NETWORK/NETWORK_IS_PLAYER_ACTIVE (result cleaner only)
	AddResultCleaner(0xB8DFD30D6973E135, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_A_PARTICIPANT (result cleaner only)
	AddResultCleaner(0x3CA58F6CB7CBD784, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT
	static auto nh_0x1AD5B71586B94820 = rage::scrEngine::GetNativeHandler(0x1AD5B71586B94820);
	rage::scrEngine::RegisterNativeHandler(0x1AD5B71586B94820, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1AD5B71586B94820(cxt);
	});
	        
	AddResultCleaner(0x1AD5B71586B94820, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_BLOCKED_BY_ME (result cleaner only)
	AddResultCleaner(0x57AF1F8E27483721, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_CONCEALED (result cleaner only)
	AddResultCleaner(0x919B3C98ED8292F9, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_CONNECTED (result cleaner only)
	AddResultCleaner(0x93DC1BE4E1ABE9D1, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_FADING (result cleaner only)
	AddResultCleaner(0x631DC5DFF4B110E3, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_IN_MP_CUTSCENE (result cleaner only)
	AddResultCleaner(0x63F9EE203C3619F2, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_MUTED_BY_ME (result cleaner only)
	AddResultCleaner(0x8C71288AE68EDE39, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_PLAYER_TALKING (result cleaner only)
	AddResultCleaner(0x031E11F3D447647E, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SCRIPT_ACTIVE
	static auto nh_0x9D40DF90FAD26098 = rage::scrEngine::GetNativeHandler(0x9D40DF90FAD26098);
	rage::scrEngine::RegisterNativeHandler(0x9D40DF90FAD26098, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x9D40DF90FAD26098(cxt);
	});
	        
	AddResultCleaner(0x9D40DF90FAD26098, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SESSION_ACTIVE (result cleaner only)
	AddResultCleaner(0xD83C2B94E7508980, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SESSION_BUSY (result cleaner only)
	AddResultCleaner(0xF4435D66A8E2905E, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SESSION_STARTED (result cleaner only)
	AddResultCleaner(0x9DE624D2FC4B603F, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SIGNED_IN (result cleaner only)
	AddResultCleaner(0x054354A99211EB96, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_SIGNED_ONLINE (result cleaner only)
	AddResultCleaner(0x1077788E268557C2, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_BUSY (result cleaner only)
	AddResultCleaner(0x520F3282A53D26B7, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_CLOSED_CREW (result cleaner only)
	AddResultCleaner(0x0DBD5D7E3C5BEC3B, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_CLOSED_FRIENDS (result cleaner only)
	AddResultCleaner(0x6512765E3BE78C50, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_HOST (result cleaner only)
	AddResultCleaner(0x0B824797C9BF2159, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_HOST_FROM_HANDLE
	static auto nh_0x6B5C83BA3EFE6A10 = rage::scrEngine::GetNativeHandler(0x6B5C83BA3EFE6A10);
	rage::scrEngine::RegisterNativeHandler(0x6B5C83BA3EFE6A10, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6B5C83BA3EFE6A10(cxt);
	});
	        
	AddResultCleaner(0x6B5C83BA3EFE6A10, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_MATCHMAKING (result cleaner only)
	AddResultCleaner(0x292564C735375EDF, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING (result cleaner only)
	AddResultCleaner(0x37A4494483B9F5C9, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_PRIVATE (result cleaner only)
	AddResultCleaner(0x5A6AA44FF8E931E6, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_SOLO (result cleaner only)
	AddResultCleaner(0x5DC577201723960A, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_STARTED (result cleaner only)
	AddResultCleaner(0x53FA83401D9C07FE, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_TO_GAME (result cleaner only)
	AddResultCleaner(0x9D7696D8F4FA6CB7, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TRANSITION_VISIBILITY_LOCKED (result cleaner only)
	AddResultCleaner(0xD0A484CB2F829FBE, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING (result cleaner only)
	AddResultCleaner(0x0467C11ED88B7D28, ResultCleaner<bool>);

	// NETWORK/NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING (result cleaner only)
	AddResultCleaner(0x35F0B98A8387274D, ResultCleaner<bool>);

	// NETWORK/NETWORK_JOIN_GROUP_ACTIVITY (result cleaner only)
	AddResultCleaner(0xA06509A691D12BE4, ResultCleaner<int>);

	// NETWORK/NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION (result cleaner only)
	AddResultCleaner(0x59DF79317F85A7E0, ResultCleaner<bool>);

	// NETWORK/NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION (result cleaner only)
	AddResultCleaner(0xFFE1E5B792D92B34, ResultCleaner<bool>);

	// NETWORK/NETWORK_JOIN_TRANSITION (result cleaner only)
	AddResultCleaner(0x9D060B08CD63321A, ResultCleaner<bool>);

	// NETWORK/NETWORK_LAUNCH_TRANSITION (result cleaner only)
	AddResultCleaner(0x2DCF46CB1A4F0884, ResultCleaner<bool>);

	// NETWORK/NETWORK_LEAVE_TRANSITION (result cleaner only)
	AddResultCleaner(0xD23A1A815D21DB19, ResultCleaner<bool>);

	// NETWORK/NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED
	static auto nh_0x5728BB6D63E3FF1D = rage::scrEngine::GetNativeHandler(0x5728BB6D63E3FF1D);
	rage::scrEngine::RegisterNativeHandler(0x5728BB6D63E3FF1D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5728BB6D63E3FF1D(cxt);
	});
	        
	AddResultCleaner(0x5728BB6D63E3FF1D, ResultCleaner<bool>);

	// NETWORK/NETWORK_MEMBER_ID_FROM_GAMER_HANDLE
	static auto nh_0xC82630132081BB6F = rage::scrEngine::GetNativeHandler(0xC82630132081BB6F);
	rage::scrEngine::RegisterNativeHandler(0xC82630132081BB6F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC82630132081BB6F(cxt);
	});
	        
	AddResultCleaner(0xC82630132081BB6F, ResultCleaner<char*>);

	// MONEY/NETWORK_MONEY_CAN_BET (result cleaner only)
	AddResultCleaner(0x81404F3DC124FE5B, ResultCleaner<bool>);

	// NETWORK/NETWORK_OPEN_TRANSITION_MATCHMAKING
	static auto nh_0x2B3A8F7CA3A38FDE = rage::scrEngine::GetNativeHandler(0x2B3A8F7CA3A38FDE);
	rage::scrEngine::RegisterNativeHandler(0x2B3A8F7CA3A38FDE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B3A8F7CA3A38FDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_CHAT_RESTRICTIONS
	static auto nh_0x3039AE5AD2C9C0C4 = rage::scrEngine::GetNativeHandler(0x3039AE5AD2C9C0C4);
	rage::scrEngine::RegisterNativeHandler(0x3039AE5AD2C9C0C4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3039AE5AD2C9C0C4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_CLOCK_TIME
	static auto nh_0xE679E3E06E363892 = rage::scrEngine::GetNativeHandler(0xE679E3E06E363892);
	rage::scrEngine::RegisterNativeHandler(0xE679E3E06E363892, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE679E3E06E363892(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_COORDS_AND_HEADING
	static auto nh_0xA7E30DE9272B6D49 = rage::scrEngine::GetNativeHandler(0xA7E30DE9272B6D49);
	rage::scrEngine::RegisterNativeHandler(0xA7E30DE9272B6D49, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7E30DE9272B6D49(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS
	static auto nh_0xDDF73E2B1FEC5AB4 = rage::scrEngine::GetNativeHandler(0xDDF73E2B1FEC5AB4);
	rage::scrEngine::RegisterNativeHandler(0xDDF73E2B1FEC5AB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDDF73E2B1FEC5AB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL
	static auto nh_0x0FF2862B61A58AF9 = rage::scrEngine::GetNativeHandler(0x0FF2862B61A58AF9);
	rage::scrEngine::RegisterNativeHandler(0x0FF2862B61A58AF9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0FF2862B61A58AF9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_SEND_RESTRICTIONS
	static auto nh_0x97DD4C5944CC2E6A = rage::scrEngine::GetNativeHandler(0x97DD4C5944CC2E6A);
	rage::scrEngine::RegisterNativeHandler(0x97DD4C5944CC2E6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97DD4C5944CC2E6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL
	static auto nh_0x57B192B4D4AD23D5 = rage::scrEngine::GetNativeHandler(0x57B192B4D4AD23D5);
	rage::scrEngine::RegisterNativeHandler(0x57B192B4D4AD23D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x57B192B4D4AD23D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_TEAM_RESTRICTIONS
	static auto nh_0x6F697A66CE78674E = rage::scrEngine::GetNativeHandler(0x6F697A66CE78674E);
	rage::scrEngine::RegisterNativeHandler(0x6F697A66CE78674E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F697A66CE78674E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_OVERRIDE_TRANSITION_CHAT
	static auto nh_0xAF66059A131AA269 = rage::scrEngine::GetNativeHandler(0xAF66059A131AA269);
	rage::scrEngine::RegisterNativeHandler(0xAF66059A131AA269, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAF66059A131AA269(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_PAY_EMPLOYEE_WAGE
	static auto nh_0x5FD5ED82CBBE9989 = rage::scrEngine::GetNativeHandler(0x5FD5ED82CBBE9989);
	rage::scrEngine::RegisterNativeHandler(0x5FD5ED82CBBE9989, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5FD5ED82CBBE9989(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_PAY_MATCH_ENTRY_FEE
	static auto nh_0x9346E14F2AF74D46 = rage::scrEngine::GetNativeHandler(0x9346E14F2AF74D46);
	rage::scrEngine::RegisterNativeHandler(0x9346E14F2AF74D46, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9346E14F2AF74D46(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_PAY_UTILITY_BILL
	static auto nh_0xAFE08B35EC0C9EAE = rage::scrEngine::GetNativeHandler(0xAFE08B35EC0C9EAE);
	rage::scrEngine::RegisterNativeHandler(0xAFE08B35EC0C9EAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAFE08B35EC0C9EAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_PLAYER_GET_CHEATER_REASON (result cleaner only)
	AddResultCleaner(0x172F75B6EE2233BA, ResultCleaner<int>);

	// NETWORK/NETWORK_PLAYER_GET_NAME (result cleaner only)
	AddResultCleaner(0x7718D2E2060837D2, ResultCleaner<char*>);

	// NETWORK/NETWORK_PLAYER_GET_USERID
	static auto nh_0x4927FC39CD0869A0 = rage::scrEngine::GetNativeHandler(0x4927FC39CD0869A0);
	rage::scrEngine::RegisterNativeHandler(0x4927FC39CD0869A0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4927FC39CD0869A0(cxt);
	});
	        
	AddResultCleaner(0x4927FC39CD0869A0, ResultCleaner<char*>);

	// NETWORK/NETWORK_PLAYER_HAS_HEADSET (result cleaner only)
	AddResultCleaner(0x3FB99A8B08D18FD6, ResultCleaner<bool>);

	// PLAYER/NETWORK_PLAYER_ID_TO_INT (result cleaner only)
	AddResultCleaner(0xEE68096F9F37341E, ResultCleaner<int>);

	// NETWORK/NETWORK_PLAYER_INDEX_IS_CHEATER (result cleaner only)
	AddResultCleaner(0x565E430DB3B05BEC, ResultCleaner<bool>);

	// NETWORK/NETWORK_PLAYER_IS_BADSPORT (result cleaner only)
	AddResultCleaner(0x19D8DA0E5A68045A, ResultCleaner<bool>);

	// NETWORK/NETWORK_PLAYER_IS_CHEATER (result cleaner only)
	AddResultCleaner(0x655B91F1495A9090, ResultCleaner<bool>);

	// NETWORK/NETWORK_PLAYER_IS_ROCKSTAR_DEV (result cleaner only)
	AddResultCleaner(0x544ABDDA3B409B6D, ResultCleaner<bool>);

	// NETWORK/NETWORK_QUERY_RESPAWN_RESULTS
	static auto nh_0x3C891A251567DFCE = rage::scrEngine::GetNativeHandler(0x3C891A251567DFCE);
	rage::scrEngine::RegisterNativeHandler(0x3C891A251567DFCE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3C891A251567DFCE(cxt);
	});
	        
	AddResultCleaner(0x3C891A251567DFCE, ResultCleaner<int>);

	// NETWORK/NETWORK_QUEUE_GAMER_FOR_STATUS
	static auto nh_0x85A0EF54A500882C = rage::scrEngine::GetNativeHandler(0x85A0EF54A500882C);
	rage::scrEngine::RegisterNativeHandler(0x85A0EF54A500882C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x85A0EF54A500882C(cxt);
	});
	        
	AddResultCleaner(0x85A0EF54A500882C, ResultCleaner<bool>);

	// NETWORK/NETWORK_QUIT_MP_TO_DESKTOP
	static auto nh_0x45A83257ED02D9BC = rage::scrEngine::GetNativeHandler(0x45A83257ED02D9BC);
	rage::scrEngine::RegisterNativeHandler(0x45A83257ED02D9BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45A83257ED02D9BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH
	static auto nh_0x56A3B51944C50598 = rage::scrEngine::GetNativeHandler(0x56A3B51944C50598);
	rage::scrEngine::RegisterNativeHandler(0x56A3B51944C50598, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x56A3B51944C50598(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_REFUND_CASH
	static auto nh_0xF9C812CD7C46E817 = rage::scrEngine::GetNativeHandler(0xF9C812CD7C46E817);
	rage::scrEngine::RegisterNativeHandler(0xF9C812CD7C46E817, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF9C812CD7C46E817(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REGISTER_ENTITY_AS_NETWORKED
	static auto nh_0x06FAACD625D80CAA = rage::scrEngine::GetNativeHandler(0x06FAACD625D80CAA);
	rage::scrEngine::RegisterNativeHandler(0x06FAACD625D80CAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06FAACD625D80CAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REGISTER_HOST_BROADCAST_VARIABLES
	static auto nh_0x3E9B2F01C50DF595 = rage::scrEngine::GetNativeHandler(0x3E9B2F01C50DF595);
	rage::scrEngine::RegisterNativeHandler(0x3E9B2F01C50DF595, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3E9B2F01C50DF595(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES
	static auto nh_0x3364AA97340CA215 = rage::scrEngine::GetNativeHandler(0x3364AA97340CA215);
	rage::scrEngine::RegisterNativeHandler(0x3364AA97340CA215, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3364AA97340CA215(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REMOVE_ALL_TRANSITION_INVITE
	static auto nh_0x726E0375C7A26368 = rage::scrEngine::GetNativeHandler(0x726E0375C7A26368);
	rage::scrEngine::RegisterNativeHandler(0x726E0375C7A26368, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x726E0375C7A26368(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REMOVE_ENTITY_AREA
	static auto nh_0x93CF869BAA0C4874 = rage::scrEngine::GetNativeHandler(0x93CF869BAA0C4874);
	rage::scrEngine::RegisterNativeHandler(0x93CF869BAA0C4874, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x93CF869BAA0C4874(cxt);
	});
	        
	AddResultCleaner(0x93CF869BAA0C4874, ResultCleaner<bool>);

	// NETWORK/NETWORK_REMOVE_PRESENCE_INVITE
	static auto nh_0xF0210268DB0974B1 = rage::scrEngine::GetNativeHandler(0xF0210268DB0974B1);
	rage::scrEngine::RegisterNativeHandler(0xF0210268DB0974B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF0210268DB0974B1(cxt);
	});
	        
	AddResultCleaner(0xF0210268DB0974B1, ResultCleaner<bool>);

	// NETWORK/NETWORK_REMOVE_TRANSITION_INVITE
	static auto nh_0x7524B431B2E6F7EE = rage::scrEngine::GetNativeHandler(0x7524B431B2E6F7EE);
	rage::scrEngine::RegisterNativeHandler(0x7524B431B2E6F7EE, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7524B431B2E6F7EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS (result cleaner only)
	AddResultCleaner(0x924426BFFD82E915, ResultCleaner<bool>);

	// NETWORK/NETWORK_REQUEST_CLOUD_TUNABLES
	static auto nh_0x42FB3B532D526E6C = rage::scrEngine::GetNativeHandler(0x42FB3B532D526E6C);
	rage::scrEngine::RegisterNativeHandler(0x42FB3B532D526E6C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42FB3B532D526E6C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_REQUEST_CONTROL_OF_DOOR (result cleaner only)
	AddResultCleaner(0x870DDFD5A4A796E4, ResultCleaner<bool>);

	// NETWORK/NETWORK_REQUEST_CONTROL_OF_ENTITY (result cleaner only)
	AddResultCleaner(0xB69317BF5E782347, ResultCleaner<bool>);

	// NETWORK/NETWORK_REQUEST_CONTROL_OF_NETWORK_ID (result cleaner only)
	AddResultCleaner(0xA670B3662FAFFBD0, ResultCleaner<bool>);

	// NETWORK/NETWORK_RESET_BODY_TRACKER
	static auto nh_0x72433699B4E6DD64 = rage::scrEngine::GetNativeHandler(0x72433699B4E6DD64);
	rage::scrEngine::RegisterNativeHandler(0x72433699B4E6DD64, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72433699B4E6DD64(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_RESURRECT_LOCAL_PLAYER
	static auto nh_0xEA23C49EAA83ACFB = rage::scrEngine::GetNativeHandler(0xEA23C49EAA83ACFB);
	rage::scrEngine::RegisterNativeHandler(0xEA23C49EAA83ACFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA23C49EAA83ACFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SEED_RANDOM_NUMBER_GENERATOR
	static auto nh_0xF1B84178F8674195 = rage::scrEngine::GetNativeHandler(0xF1B84178F8674195);
	rage::scrEngine::RegisterNativeHandler(0xF1B84178F8674195, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1B84178F8674195(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SEND_INVITE_VIA_PRESENCE
	static auto nh_0xC3C7A6AFDB244624 = rage::scrEngine::GetNativeHandler(0xC3C7A6AFDB244624);
	rage::scrEngine::RegisterNativeHandler(0xC3C7A6AFDB244624, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xC3C7A6AFDB244624(cxt);
	});
	        
	AddResultCleaner(0xC3C7A6AFDB244624, ResultCleaner<bool>);

	// NETWORK/NETWORK_SEND_TEXT_MESSAGE
	static auto nh_0x3A214F2EC889B100 = rage::scrEngine::GetNativeHandler(0x3A214F2EC889B100);
	rage::scrEngine::RegisterNativeHandler(0x3A214F2EC889B100, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3A214F2EC889B100(cxt);
	});
	        
	AddResultCleaner(0x3A214F2EC889B100, ResultCleaner<bool>);

	// NETWORK/NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION
	static auto nh_0x31D1D2B858D25E6B = rage::scrEngine::GetNativeHandler(0x31D1D2B858D25E6B);
	rage::scrEngine::RegisterNativeHandler(0x31D1D2B858D25E6B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x31D1D2B858D25E6B(cxt);
	});
	        
	AddResultCleaner(0x31D1D2B858D25E6B, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_ACTIVITY_QUICKMATCH
	static auto nh_0xBE3E347A87ACEB82 = rage::scrEngine::GetNativeHandler(0xBE3E347A87ACEB82);
	rage::scrEngine::RegisterNativeHandler(0xBE3E347A87ACEB82, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBE3E347A87ACEB82(cxt);
	});
	        
	AddResultCleaner(0xBE3E347A87ACEB82, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP
	static auto nh_0xCAE55F48D3D7875C = rage::scrEngine::GetNativeHandler(0xCAE55F48D3D7875C);
	rage::scrEngine::RegisterNativeHandler(0xCAE55F48D3D7875C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCAE55F48D3D7875C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_BLOCK_JOIN_REQUESTS
	static auto nh_0xA73667484D7037C3 = rage::scrEngine::GetNativeHandler(0xA73667484D7037C3);
	rage::scrEngine::RegisterNativeHandler(0xA73667484D7037C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA73667484D7037C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_CANCEL_INVITE
	static auto nh_0x2FBF47B1B36D36F9 = rage::scrEngine::GetNativeHandler(0x2FBF47B1B36D36F9);
	rage::scrEngine::RegisterNativeHandler(0x2FBF47B1B36D36F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2FBF47B1B36D36F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_CHANGE_SLOTS
	static auto nh_0xB4AB419E0D86ACAE = rage::scrEngine::GetNativeHandler(0xB4AB419E0D86ACAE);
	rage::scrEngine::RegisterNativeHandler(0xB4AB419E0D86ACAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB4AB419E0D86ACAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_CREW_MATCHMAKING (result cleaner only)
	AddResultCleaner(0x94BC51E9449D917F, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_END (result cleaner only)
	AddResultCleaner(0xA02E59562D711006, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_ENTER
	static auto nh_0x330ED4D05491934F = rage::scrEngine::GetNativeHandler(0x330ED4D05491934F);
	rage::scrEngine::RegisterNativeHandler(0x330ED4D05491934F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x330ED4D05491934F(cxt);
	});
	        
	AddResultCleaner(0x330ED4D05491934F, ResultCleaner<int>);

	// NETWORK/NETWORK_SESSION_FORCE_CANCEL_INVITE
	static auto nh_0xA29177F7703B5644 = rage::scrEngine::GetNativeHandler(0xA29177F7703B5644);
	rage::scrEngine::RegisterNativeHandler(0xA29177F7703B5644, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA29177F7703B5644(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_FRIEND_MATCHMAKING (result cleaner only)
	AddResultCleaner(0x2CFC76E0D087C994, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_GET_INVITER
	static auto nh_0xE57397B4A3429DD0 = rage::scrEngine::GetNativeHandler(0xE57397B4A3429DD0);
	rage::scrEngine::RegisterNativeHandler(0xE57397B4A3429DD0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE57397B4A3429DD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_GET_KICK_VOTE (result cleaner only)
	AddResultCleaner(0xD6D09A6F32F49EF1, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE (result cleaner only)
	AddResultCleaner(0x56CE820830EF040B, ResultCleaner<int>);

	// NETWORK/NETWORK_SESSION_GET_PRIVATE_SLOTS (result cleaner only)
	AddResultCleaner(0x53AFD64C6758F2F9, ResultCleaner<int>);

	// NETWORK/NETWORK_SESSION_HOST (result cleaner only)
	AddResultCleaner(0x6F3D4ED9BEE4E61D, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_HOST_CLOSED (result cleaner only)
	AddResultCleaner(0xED34C0C02C098BB7, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_HOST_FRIENDS_ONLY (result cleaner only)
	AddResultCleaner(0xB9CFD27A5D578D83, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_HOST_SINGLE_PLAYER
	static auto nh_0xC74C33FCA52856D5 = rage::scrEngine::GetNativeHandler(0xC74C33FCA52856D5);
	rage::scrEngine::RegisterNativeHandler(0xC74C33FCA52856D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC74C33FCA52856D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_IS_CLOSED_CREW (result cleaner only)
	AddResultCleaner(0x74732C6CA90DA2B4, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_CLOSED_FRIENDS (result cleaner only)
	AddResultCleaner(0xFBCFA2EA2E206890, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_IN_VOICE_SESSION (result cleaner only)
	AddResultCleaner(0x855BC38818F6F684, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_PRIVATE (result cleaner only)
	AddResultCleaner(0xCEF70AA5B3F89BA1, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_SOLO (result cleaner only)
	AddResultCleaner(0xF3929C2379B60CCE, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_VISIBLE (result cleaner only)
	AddResultCleaner(0xBA416D68C631496A, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_IS_VOICE_SESSION_BUSY (result cleaner only)
	AddResultCleaner(0xEF0912DDF7C4CB4B, ResultCleaner<bool>);

	// NETWORK/NETWORK_SESSION_JOIN_INVITE
	static auto nh_0xC6F8AB8A4189CF3A = rage::scrEngine::GetNativeHandler(0xC6F8AB8A4189CF3A);
	rage::scrEngine::RegisterNativeHandler(0xC6F8AB8A4189CF3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC6F8AB8A4189CF3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_KICK_PLAYER
	static auto nh_0xFA8904DC5F304220 = rage::scrEngine::GetNativeHandler(0xFA8904DC5F304220);
	rage::scrEngine::RegisterNativeHandler(0xFA8904DC5F304220, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA8904DC5F304220(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_LEAVE_SINGLE_PLAYER
	static auto nh_0x3442775428FD2DAA = rage::scrEngine::GetNativeHandler(0x3442775428FD2DAA);
	rage::scrEngine::RegisterNativeHandler(0x3442775428FD2DAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3442775428FD2DAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_MARK_VISIBLE
	static auto nh_0x271CC6AB59EBF9A5 = rage::scrEngine::GetNativeHandler(0x271CC6AB59EBF9A5);
	rage::scrEngine::RegisterNativeHandler(0x271CC6AB59EBF9A5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x271CC6AB59EBF9A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_SET_MATCHMAKING_GROUP
	static auto nh_0x49EC8030F5015F8B = rage::scrEngine::GetNativeHandler(0x49EC8030F5015F8B);
	rage::scrEngine::RegisterNativeHandler(0x49EC8030F5015F8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x49EC8030F5015F8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX
	static auto nh_0x8B6A4DD0AF9CE215 = rage::scrEngine::GetNativeHandler(0x8B6A4DD0AF9CE215);
	rage::scrEngine::RegisterNativeHandler(0x8B6A4DD0AF9CE215, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8B6A4DD0AF9CE215(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE
	static auto nh_0xF1EEA2DDA9FFA69D = rage::scrEngine::GetNativeHandler(0xF1EEA2DDA9FFA69D);
	rage::scrEngine::RegisterNativeHandler(0xF1EEA2DDA9FFA69D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF1EEA2DDA9FFA69D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID
	static auto nh_0x3F52E880AAF6C8CA = rage::scrEngine::GetNativeHandler(0x3F52E880AAF6C8CA);
	rage::scrEngine::RegisterNativeHandler(0x3F52E880AAF6C8CA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3F52E880AAF6C8CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VALIDATE_JOIN
	static auto nh_0xC19F6C8E7865A6FF = rage::scrEngine::GetNativeHandler(0xC19F6C8E7865A6FF);
	rage::scrEngine::RegisterNativeHandler(0xC19F6C8E7865A6FF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC19F6C8E7865A6FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER
	static auto nh_0xABD5E88B8A2D3DB2 = rage::scrEngine::GetNativeHandler(0xABD5E88B8A2D3DB2);
	rage::scrEngine::RegisterNativeHandler(0xABD5E88B8A2D3DB2, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* globalPtr
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xABD5E88B8A2D3DB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VOICE_HOST
	static auto nh_0x9C1556705F864230 = rage::scrEngine::GetNativeHandler(0x9C1556705F864230);
	rage::scrEngine::RegisterNativeHandler(0x9C1556705F864230, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C1556705F864230(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VOICE_LEAVE
	static auto nh_0x6793E42BE02B575D = rage::scrEngine::GetNativeHandler(0x6793E42BE02B575D);
	rage::scrEngine::RegisterNativeHandler(0x6793E42BE02B575D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6793E42BE02B575D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST
	static auto nh_0x7F8413B7FC2AA6B9 = rage::scrEngine::GetNativeHandler(0x7F8413B7FC2AA6B9);
	rage::scrEngine::RegisterNativeHandler(0x7F8413B7FC2AA6B9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F8413B7FC2AA6B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_VOICE_SET_TIMEOUT
	static auto nh_0x5B8ED3DB018927B1 = rage::scrEngine::GetNativeHandler(0x5B8ED3DB018927B1);
	rage::scrEngine::RegisterNativeHandler(0x5B8ED3DB018927B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B8ED3DB018927B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SESSION_WAS_INVITED (result cleaner only)
	AddResultCleaner(0x23DFB504655D0CE4, ResultCleaner<bool>);

	// NETWORK/NETWORK_SET_ACTIVITY_PLAYER_MAX
	static auto nh_0x0E4F77F7B9D74D84 = rage::scrEngine::GetNativeHandler(0x0E4F77F7B9D74D84);
	rage::scrEngine::RegisterNativeHandler(0x0E4F77F7B9D74D84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E4F77F7B9D74D84(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_ACTIVITY_SPECTATOR
	static auto nh_0x75138790B4359A74 = rage::scrEngine::GetNativeHandler(0x75138790B4359A74);
	rage::scrEngine::RegisterNativeHandler(0x75138790B4359A74, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75138790B4359A74(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_ACTIVITY_SPECTATOR_MAX
	static auto nh_0x9D277B76D1D12222 = rage::scrEngine::GetNativeHandler(0x9D277B76D1D12222);
	rage::scrEngine::RegisterNativeHandler(0x9D277B76D1D12222, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D277B76D1D12222(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_CHOICE_MIGRATE_OPTIONS
	static auto nh_0x5C707A667DF8B9FA = rage::scrEngine::GetNativeHandler(0x5C707A667DF8B9FA);
	rage::scrEngine::RegisterNativeHandler(0x5C707A667DF8B9FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C707A667DF8B9FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
	static auto nh_0x7206F674F2A3B1BB = rage::scrEngine::GetNativeHandler(0x7206F674F2A3B1BB);
	rage::scrEngine::RegisterNativeHandler(0x7206F674F2A3B1BB, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7206F674F2A3B1BB(cxt);
	});
	        
	AddResultCleaner(0x7206F674F2A3B1BB, ResultCleaner<bool>);

	// NETWORK/NETWORK_SET_ENTITY_CAN_BLEND
	static auto nh_0xD830567D88A1E873 = rage::scrEngine::GetNativeHandler(0xD830567D88A1E873);
	rage::scrEngine::RegisterNativeHandler(0xD830567D88A1E873, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD830567D88A1E873(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_FRIENDLY_FIRE_OPTION
	static auto nh_0xF808475FA571D823 = rage::scrEngine::GetNativeHandler(0xF808475FA571D823);
	rage::scrEngine::RegisterNativeHandler(0xF808475FA571D823, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF808475FA571D823(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_GAMER_INVITED_TO_TRANSITION
	static auto nh_0xCA2C8073411ECDB6 = rage::scrEngine::GetNativeHandler(0xCA2C8073411ECDB6);
	rage::scrEngine::RegisterNativeHandler(0xCA2C8073411ECDB6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCA2C8073411ECDB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU
	static auto nh_0x66F010A4B031A331 = rage::scrEngine::GetNativeHandler(0x66F010A4B031A331);
	rage::scrEngine::RegisterNativeHandler(0x66F010A4B031A331, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x66F010A4B031A331(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_IN_FREE_CAM_MODE
	static auto nh_0xFC18DB55AE19E046 = rage::scrEngine::GetNativeHandler(0xFC18DB55AE19E046);
	rage::scrEngine::RegisterNativeHandler(0xFC18DB55AE19E046, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC18DB55AE19E046(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_IN_MP_CUTSCENE
	static auto nh_0x9CA5DE655269FEC4 = rage::scrEngine::GetNativeHandler(0x9CA5DE655269FEC4);
	rage::scrEngine::RegisterNativeHandler(0x9CA5DE655269FEC4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9CA5DE655269FEC4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_IN_SPECTATOR_MODE
	static auto nh_0x423DE3854BB50894 = rage::scrEngine::GetNativeHandler(0x423DE3854BB50894);
	rage::scrEngine::RegisterNativeHandler(0x423DE3854BB50894, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x423DE3854BB50894(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED
	static auto nh_0x419594E137637120 = rage::scrEngine::GetNativeHandler(0x419594E137637120);
	rage::scrEngine::RegisterNativeHandler(0x419594E137637120, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x419594E137637120(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME
	static auto nh_0x2D95C7E2D7E07307 = rage::scrEngine::GetNativeHandler(0x2D95C7E2D7E07307);
	rage::scrEngine::RegisterNativeHandler(0x2D95C7E2D7E07307, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D95C7E2D7E07307(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT
	static auto nh_0x524FF0AEFF9C3973 = rage::scrEngine::GetNativeHandler(0x524FF0AEFF9C3973);
	rage::scrEngine::RegisterNativeHandler(0x524FF0AEFF9C3973, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x524FF0AEFF9C3973(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_MISSION_FINISHED
	static auto nh_0x3B3D11CD9FFCDFC9 = rage::scrEngine::GetNativeHandler(0x3B3D11CD9FFCDFC9);
	rage::scrEngine::RegisterNativeHandler(0x3B3D11CD9FFCDFC9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B3D11CD9FFCDFC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_NO_SPECTATOR_CHAT
	static auto nh_0xF46A1E03E8755980 = rage::scrEngine::GetNativeHandler(0xF46A1E03E8755980);
	rage::scrEngine::RegisterNativeHandler(0xF46A1E03E8755980, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF46A1E03E8755980(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_OVERRIDE_SPECTATOR_MODE
	static auto nh_0x70DA3BF8DACD3210 = rage::scrEngine::GetNativeHandler(0x70DA3BF8DACD3210);
	rage::scrEngine::RegisterNativeHandler(0x70DA3BF8DACD3210, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70DA3BF8DACD3210(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_PLAYER_IS_PASSIVE
	static auto nh_0x1B857666604B1A74 = rage::scrEngine::GetNativeHandler(0x1B857666604B1A74);
	rage::scrEngine::RegisterNativeHandler(0x1B857666604B1A74, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B857666604B1A74(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_PROPERTY_ID
	static auto nh_0x1775961C2FBBCB5C = rage::scrEngine::GetNativeHandler(0x1775961C2FBBCB5C);
	rage::scrEngine::RegisterNativeHandler(0x1775961C2FBBCB5C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1775961C2FBBCB5C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_RICH_PRESENCE
	static auto nh_0x1DCCACDCFC569362 = rage::scrEngine::GetNativeHandler(0x1DCCACDCFC569362);
	rage::scrEngine::RegisterNativeHandler(0x1DCCACDCFC569362, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x1DCCACDCFC569362(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_RICH_PRESENCE_STRING
	static auto nh_0x3E200C2BCF4164EB = rage::scrEngine::GetNativeHandler(0x3E200C2BCF4164EB);
	rage::scrEngine::RegisterNativeHandler(0x3E200C2BCF4164EB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3E200C2BCF4164EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME
	static auto nh_0x9243BAC96D64C050 = rage::scrEngine::GetNativeHandler(0x9243BAC96D64C050);
	rage::scrEngine::RegisterNativeHandler(0x9243BAC96D64C050, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9243BAC96D64C050(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_SCRIPT_READY_FOR_EVENTS
	static auto nh_0x7AC752103856FB20 = rage::scrEngine::GetNativeHandler(0x7AC752103856FB20);
	rage::scrEngine::RegisterNativeHandler(0x7AC752103856FB20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7AC752103856FB20(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_TALKER_PROXIMITY
	static auto nh_0xCBF12D65F95AD686 = rage::scrEngine::GetNativeHandler(0xCBF12D65F95AD686);
	rage::scrEngine::RegisterNativeHandler(0xCBF12D65F95AD686, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCBF12D65F95AD686(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_TEAM_ONLY_CHAT
	static auto nh_0xD5B4883AC32F24C3 = rage::scrEngine::GetNativeHandler(0xD5B4883AC32F24C3);
	rage::scrEngine::RegisterNativeHandler(0xD5B4883AC32F24C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD5B4883AC32F24C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT
	static auto nh_0x1CA59E306ECB80A5 = rage::scrEngine::GetNativeHandler(0x1CA59E306ECB80A5);
	rage::scrEngine::RegisterNativeHandler(0x1CA59E306ECB80A5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CA59E306ECB80A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_TRANSITION_ACTIVITY_ID
	static auto nh_0x30DE938B516F0AD2 = rage::scrEngine::GetNativeHandler(0x30DE938B516F0AD2);
	rage::scrEngine::RegisterNativeHandler(0x30DE938B516F0AD2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x30DE938B516F0AD2(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_TRANSITION_CREATOR_HANDLE
	static auto nh_0xEF26739BCD9907D5 = rage::scrEngine::GetNativeHandler(0xEF26739BCD9907D5);
	rage::scrEngine::RegisterNativeHandler(0xEF26739BCD9907D5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEF26739BCD9907D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_TRANSITION_VISIBILITY_LOCK
	static auto nh_0x0C978FDA19692C2C = rage::scrEngine::GetNativeHandler(0x0C978FDA19692C2C);
	rage::scrEngine::RegisterNativeHandler(0x0C978FDA19692C2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0C978FDA19692C2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_VOICE_ACTIVE
	static auto nh_0xBABEC9E69A91C57B = rage::scrEngine::GetNativeHandler(0xBABEC9E69A91C57B);
	rage::scrEngine::RegisterNativeHandler(0xBABEC9E69A91C57B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBABEC9E69A91C57B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SET_VOICE_CHANNEL
	static auto nh_0xEF6212C2EFEF1A23 = rage::scrEngine::GetNativeHandler(0xEF6212C2EFEF1A23);
	rage::scrEngine::RegisterNativeHandler(0xEF6212C2EFEF1A23, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEF6212C2EFEF1A23(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SHOW_PROFILE_UI
	static auto nh_0x859ED1CEA343FCA8 = rage::scrEngine::GetNativeHandler(0x859ED1CEA343FCA8);
	rage::scrEngine::RegisterNativeHandler(0x859ED1CEA343FCA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x859ED1CEA343FCA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_AMMO_DROP
	static auto nh_0xB162DC95C0A3317B = rage::scrEngine::GetNativeHandler(0xB162DC95C0A3317B);
	rage::scrEngine::RegisterNativeHandler(0xB162DC95C0A3317B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB162DC95C0A3317B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_ARREST_BAIL
	static auto nh_0x812F5488B1B2A299 = rage::scrEngine::GetNativeHandler(0x812F5488B1B2A299);
	rage::scrEngine::RegisterNativeHandler(0x812F5488B1B2A299, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x812F5488B1B2A299(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BANK_INTEREST
	static auto nh_0xCA230C9682556CF1 = rage::scrEngine::GetNativeHandler(0xCA230C9682556CF1);
	rage::scrEngine::RegisterNativeHandler(0xCA230C9682556CF1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCA230C9682556CF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BETTING
	static auto nh_0x1C436FD11FFA692F = rage::scrEngine::GetNativeHandler(0x1C436FD11FFA692F);
	rage::scrEngine::RegisterNativeHandler(0x1C436FD11FFA692F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x1C436FD11FFA692F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BOAT_PICKUP
	static auto nh_0x524EE43A37232C00 = rage::scrEngine::GetNativeHandler(0x524EE43A37232C00);
	rage::scrEngine::RegisterNativeHandler(0x524EE43A37232C00, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x524EE43A37232C00(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BOUNTY
	static auto nh_0x29B260B84947DFCC = rage::scrEngine::GetNativeHandler(0x29B260B84947DFCC);
	rage::scrEngine::RegisterNativeHandler(0x29B260B84947DFCC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x29B260B84947DFCC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BULL_SHARK
	static auto nh_0xA6DD8458CE24012C = rage::scrEngine::GetNativeHandler(0xA6DD8458CE24012C);
	rage::scrEngine::RegisterNativeHandler(0xA6DD8458CE24012C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA6DD8458CE24012C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BUY_OFFTHERADAR
	static auto nh_0xA628A745E2275C5D = rage::scrEngine::GetNativeHandler(0xA628A745E2275C5D);
	rage::scrEngine::RegisterNativeHandler(0xA628A745E2275C5D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA628A745E2275C5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BUY_PASSIVE_MODE
	static auto nh_0x6D3A430D1A809179 = rage::scrEngine::GetNativeHandler(0x6D3A430D1A809179);
	rage::scrEngine::RegisterNativeHandler(0x6D3A430D1A809179, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6D3A430D1A809179(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BUY_REVEAL_PLAYERS
	static auto nh_0x6E176F1B18BC0637 = rage::scrEngine::GetNativeHandler(0x6E176F1B18BC0637);
	rage::scrEngine::RegisterNativeHandler(0x6E176F1B18BC0637, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6E176F1B18BC0637(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_BUY_WANTEDLEVEL
	static auto nh_0xE1B13771A843C4F6 = rage::scrEngine::GetNativeHandler(0xE1B13771A843C4F6);
	rage::scrEngine::RegisterNativeHandler(0xE1B13771A843C4F6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE1B13771A843C4F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_CALL_PLAYER
	static auto nh_0xACDE7185B374177C = rage::scrEngine::GetNativeHandler(0xACDE7185B374177C);
	rage::scrEngine::RegisterNativeHandler(0xACDE7185B374177C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xACDE7185B374177C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_CARWASH
	static auto nh_0xEC03C719DB2F4306 = rage::scrEngine::GetNativeHandler(0xEC03C719DB2F4306);
	rage::scrEngine::RegisterNativeHandler(0xEC03C719DB2F4306, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEC03C719DB2F4306(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_CASH_DROP
	static auto nh_0x289016EC778D60E0 = rage::scrEngine::GetNativeHandler(0x289016EC778D60E0);
	rage::scrEngine::RegisterNativeHandler(0x289016EC778D60E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x289016EC778D60E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_CINEMA
	static auto nh_0x6B38ECB05A63A685 = rage::scrEngine::GetNativeHandler(0x6B38ECB05A63A685);
	rage::scrEngine::RegisterNativeHandler(0x6B38ECB05A63A685, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6B38ECB05A63A685(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_FROM_ROCKSTAR
	static auto nh_0x6A445B64ED7ABEB5 = rage::scrEngine::GetNativeHandler(0x6A445B64ED7ABEB5);
	rage::scrEngine::RegisterNativeHandler(0x6A445B64ED7ABEB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A445B64ED7ABEB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_HELI_PICKUP
	static auto nh_0x7BF1D73DB2ECA492 = rage::scrEngine::GetNativeHandler(0x7BF1D73DB2ECA492);
	rage::scrEngine::RegisterNativeHandler(0x7BF1D73DB2ECA492, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7BF1D73DB2ECA492(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_HIRE_MERCENARY
	static auto nh_0xE7B80E2BF9D80BD6 = rage::scrEngine::GetNativeHandler(0xE7B80E2BF9D80BD6);
	rage::scrEngine::RegisterNativeHandler(0xE7B80E2BF9D80BD6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE7B80E2BF9D80BD6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_HIRE_MUGGER
	static auto nh_0xE404BFB981665BF0 = rage::scrEngine::GetNativeHandler(0xE404BFB981665BF0);
	rage::scrEngine::RegisterNativeHandler(0xE404BFB981665BF0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE404BFB981665BF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_HOLDUPS
	static auto nh_0xD9B86B9872039763 = rage::scrEngine::GetNativeHandler(0xD9B86B9872039763);
	rage::scrEngine::RegisterNativeHandler(0xD9B86B9872039763, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD9B86B9872039763(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_IN_STRIPCLUB
	static auto nh_0xEE99784E4467689C = rage::scrEngine::GetNativeHandler(0xEE99784E4467689C);
	rage::scrEngine::RegisterNativeHandler(0xEE99784E4467689C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEE99784E4467689C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_NO_COPS
	static auto nh_0xD5BB406F4E04019F = rage::scrEngine::GetNativeHandler(0xD5BB406F4E04019F);
	rage::scrEngine::RegisterNativeHandler(0xD5BB406F4E04019F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD5BB406F4E04019F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM
	static auto nh_0x9FF28D88C766E3E8 = rage::scrEngine::GetNativeHandler(0x9FF28D88C766E3E8);
	rage::scrEngine::RegisterNativeHandler(0x9FF28D88C766E3E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x9FF28D88C766E3E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_PLAYER_HEALTHCARE
	static auto nh_0x7C99101F7FCE2EE5 = rage::scrEngine::GetNativeHandler(0x7C99101F7FCE2EE5);
	rage::scrEngine::RegisterNativeHandler(0x7C99101F7FCE2EE5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7C99101F7FCE2EE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_PROSTITUTES
	static auto nh_0xB21B89501CFAC79E = rage::scrEngine::GetNativeHandler(0xB21B89501CFAC79E);
	rage::scrEngine::RegisterNativeHandler(0xB21B89501CFAC79E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB21B89501CFAC79E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_REQUEST_HEIST
	static auto nh_0x9D26502BB97BFE62 = rage::scrEngine::GetNativeHandler(0x9D26502BB97BFE62);
	rage::scrEngine::RegisterNativeHandler(0x9D26502BB97BFE62, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9D26502BB97BFE62(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_REQUEST_JOB
	static auto nh_0x8204DA7934DF3155 = rage::scrEngine::GetNativeHandler(0x8204DA7934DF3155);
	rage::scrEngine::RegisterNativeHandler(0x8204DA7934DF3155, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8204DA7934DF3155(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_ROBBED_BY_MUGGER
	static auto nh_0x995A65F15F581359 = rage::scrEngine::GetNativeHandler(0x995A65F15F581359);
	rage::scrEngine::RegisterNativeHandler(0x995A65F15F581359, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x995A65F15F581359(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_TAXI
	static auto nh_0x17C3A7D31EAE39F9 = rage::scrEngine::GetNativeHandler(0x17C3A7D31EAE39F9);
	rage::scrEngine::RegisterNativeHandler(0x17C3A7D31EAE39F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17C3A7D31EAE39F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/NETWORK_SPENT_TELESCOPE
	static auto nh_0x7FE61782AD94CC09 = rage::scrEngine::GetNativeHandler(0x7FE61782AD94CC09);
	rage::scrEngine::RegisterNativeHandler(0x7FE61782AD94CC09, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7FE61782AD94CC09(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0x5A6FFA2433E2F14C, ResultCleaner<bool>);

	// NETWORK/NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0x4BA92A18502BCA61, ResultCleaner<bool>);

	// NETWORK/NETWORK_START_SOLO_TUTORIAL_SESSION
	static auto nh_0x17E0198B3882C2CB = rage::scrEngine::GetNativeHandler(0x17E0198B3882C2CB);
	rage::scrEngine::RegisterNativeHandler(0x17E0198B3882C2CB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17E0198B3882C2CB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_START_SYNCHRONISED_SCENE
	static auto nh_0x9A1B3FCDB36C8697 = rage::scrEngine::GetNativeHandler(0x9A1B3FCDB36C8697);
	rage::scrEngine::RegisterNativeHandler(0x9A1B3FCDB36C8697, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A1B3FCDB36C8697(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/NETWORK_STOP_LOAD_SCENE
	static auto nh_0x64E630FAF5F60F44 = rage::scrEngine::GetNativeHandler(0x64E630FAF5F60F44);
	rage::scrEngine::RegisterNativeHandler(0x64E630FAF5F60F44, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x64E630FAF5F60F44(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_STOP_SYNCHRONISED_SCENE
	static auto nh_0xC254481A4574CB2F = rage::scrEngine::GetNativeHandler(0xC254481A4574CB2F);
	rage::scrEngine::RegisterNativeHandler(0xC254481A4574CB2F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC254481A4574CB2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_SUPPRESS_INVITE
	static auto nh_0xA0682D67EF1FBA3D = rage::scrEngine::GetNativeHandler(0xA0682D67EF1FBA3D);
	rage::scrEngine::RegisterNativeHandler(0xA0682D67EF1FBA3D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA0682D67EF1FBA3D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH (result cleaner only)
	AddResultCleaner(0xC7420099936CE286, ResultCleaner<bool>);

	// NETWORK/NETWORK_UNREGISTER_NETWORKED_ENTITY
	static auto nh_0x7368E683BB9038D6 = rage::scrEngine::GetNativeHandler(0x7368E683BB9038D6);
	rage::scrEngine::RegisterNativeHandler(0x7368E683BB9038D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7368E683BB9038D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/NETWORK_UPDATE_LOAD_SCENE (result cleaner only)
	AddResultCleaner(0xC4582015556D1C46, ResultCleaner<bool>);

	// NETWORK/NETWORK_USE_HIGH_PRECISION_BLENDING
	static auto nh_0x2B1813ABA29016C5 = rage::scrEngine::GetNativeHandler(0x2B1813ABA29016C5);
	rage::scrEngine::RegisterNativeHandler(0x2B1813ABA29016C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B1813ABA29016C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME
	static auto nh_0xCD71A4ECAB22709E = rage::scrEngine::GetNativeHandler(0xCD71A4ECAB22709E);
	rage::scrEngine::RegisterNativeHandler(0xCD71A4ECAB22709E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD71A4ECAB22709E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/NET_TO_ENT (result cleaner only)
	AddResultCleaner(0xBFFEAB45A9A9094A, ResultCleaner<int>);

	// NETWORK/NET_TO_OBJ (result cleaner only)
	AddResultCleaner(0xD8515F5FEA14CB3F, ResultCleaner<int>);

	// NETWORK/NET_TO_PED (result cleaner only)
	AddResultCleaner(0xBDCD95FC216A8B3E, ResultCleaner<int>);

	// NETWORK/NET_TO_VEH (result cleaner only)
	AddResultCleaner(0x367B936610BA360C, ResultCleaner<int>);

	// STREAMING/NEW_LOAD_SCENE_START (result cleaner only)
	AddResultCleaner(0x212A8D0D2BABFAC2, ResultCleaner<bool>);

	// STREAMING/NEW_LOAD_SCENE_START_SPHERE
	static auto nh_0xACCFB4ACF53551B0 = rage::scrEngine::GetNativeHandler(0xACCFB4ACF53551B0);
	rage::scrEngine::RegisterNativeHandler(0xACCFB4ACF53551B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xACCFB4ACF53551B0(cxt);
	});
	        
	AddResultCleaner(0xACCFB4ACF53551B0, ResultCleaner<bool>);

	// STREAMING/NEW_LOAD_SCENE_STOP
	static auto nh_0xC197616D221FF4A4 = rage::scrEngine::GetNativeHandler(0xC197616D221FF4A4);
	rage::scrEngine::RegisterNativeHandler(0xC197616D221FF4A4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC197616D221FF4A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS
	static auto nh_0x3ED1438C1F5C6612 = rage::scrEngine::GetNativeHandler(0x3ED1438C1F5C6612);
	rage::scrEngine::RegisterNativeHandler(0x3ED1438C1F5C6612, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3ED1438C1F5C6612(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/OBJ_TO_NET (result cleaner only)
	AddResultCleaner(0x99BFDC94A603E541, ResultCleaner<int>);

	// DLC/ON_ENTER_MP
	static auto nh_0x0888C3502DBBEEF5 = rage::scrEngine::GetNativeHandler(0x0888C3502DBBEEF5);
	rage::scrEngine::RegisterNativeHandler(0x0888C3502DBBEEF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0888C3502DBBEEF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// DLC/ON_ENTER_SP
	static auto nh_0xD7C10C4A637992C9 = rage::scrEngine::GetNativeHandler(0xD7C10C4A637992C9);
	rage::scrEngine::RegisterNativeHandler(0xD7C10C4A637992C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7C10C4A637992C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/OPEN_BOMB_BAY_DOORS
	static auto nh_0x87E7F24270732CB1 = rage::scrEngine::GetNativeHandler(0x87E7F24270732CB1);
	rage::scrEngine::RegisterNativeHandler(0x87E7F24270732CB1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x87E7F24270732CB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/OPEN_COMMERCE_STORE
	static auto nh_0x58C21165F6545892 = rage::scrEngine::GetNativeHandler(0x58C21165F6545892);
	rage::scrEngine::RegisterNativeHandler(0x58C21165F6545892, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x58C21165F6545892(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/OPEN_ONLINE_POLICIES_MENU
	static auto nh_0x805D7CBB36FD6C4C = rage::scrEngine::GetNativeHandler(0x805D7CBB36FD6C4C);
	rage::scrEngine::RegisterNativeHandler(0x805D7CBB36FD6C4C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x805D7CBB36FD6C4C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/OPEN_PATROL_ROUTE
	static auto nh_0xA36BFB5EE89F3D82 = rage::scrEngine::GetNativeHandler(0xA36BFB5EE89F3D82);
	rage::scrEngine::RegisterNativeHandler(0xA36BFB5EE89F3D82, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA36BFB5EE89F3D82(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/OPEN_REPORTUGC_MENU
	static auto nh_0x523A590C1A3CC0D3 = rage::scrEngine::GetNativeHandler(0x523A590C1A3CC0D3);
	rage::scrEngine::RegisterNativeHandler(0x523A590C1A3CC0D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x523A590C1A3CC0D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/OPEN_SEQUENCE_TASK
	static auto nh_0xE8854A4326B9E12B = rage::scrEngine::GetNativeHandler(0xE8854A4326B9E12B);
	rage::scrEngine::RegisterNativeHandler(0xE8854A4326B9E12B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE8854A4326B9E12B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/OPEN_SOCIAL_CLUB_MENU
	static auto nh_0x75D3691713C3B05A = rage::scrEngine::GetNativeHandler(0x75D3691713C3B05A);
	rage::scrEngine::RegisterNativeHandler(0x75D3691713C3B05A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75D3691713C3B05A(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/OVERRIDE_CAM_SPLINE_MOTION_BLUR
	static auto nh_0x7DCF7C708D292D55 = rage::scrEngine::GetNativeHandler(0x7DCF7C708D292D55);
	rage::scrEngine::RegisterNativeHandler(0x7DCF7C708D292D55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7DCF7C708D292D55(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/OVERRIDE_CAM_SPLINE_VELOCITY
	static auto nh_0x40B62FA033EB0346 = rage::scrEngine::GetNativeHandler(0x40B62FA033EB0346);
	rage::scrEngine::RegisterNativeHandler(0x40B62FA033EB0346, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x40B62FA033EB0346(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/OVERRIDE_INTERIOR_SMOKE_END
	static auto nh_0xEFB55E7C25D3B3BE = rage::scrEngine::GetNativeHandler(0xEFB55E7C25D3B3BE);
	rage::scrEngine::RegisterNativeHandler(0xEFB55E7C25D3B3BE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFB55E7C25D3B3BE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/OVERRIDE_INTERIOR_SMOKE_LEVEL
	static auto nh_0x1600FD8CF72EBC12 = rage::scrEngine::GetNativeHandler(0x1600FD8CF72EBC12);
	rage::scrEngine::RegisterNativeHandler(0x1600FD8CF72EBC12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1600FD8CF72EBC12(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/OVERRIDE_INTERIOR_SMOKE_NAME
	static auto nh_0x2A2A52824DB96700 = rage::scrEngine::GetNativeHandler(0x2A2A52824DB96700);
	rage::scrEngine::RegisterNativeHandler(0x2A2A52824DB96700, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2A2A52824DB96700(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/OVERRIDE_LODSCALE_THIS_FRAME
	static auto nh_0xA76359FC80B2438E = rage::scrEngine::GetNativeHandler(0xA76359FC80B2438E);
	rage::scrEngine::RegisterNativeHandler(0xA76359FC80B2438E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA76359FC80B2438E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/OVERRIDE_MICROPHONE_SETTINGS
	static auto nh_0x75773E11BA459E90 = rage::scrEngine::GetNativeHandler(0x75773E11BA459E90);
	rage::scrEngine::RegisterNativeHandler(0x75773E11BA459E90, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75773E11BA459E90(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/OVERRIDE_PEDS_CAN_STAND_ON_TOP_FLAG
	static auto nh_0x90a9e0b2 = rage::scrEngine::GetNativeHandler(0x90a9e0b2);
	rage::scrEngine::RegisterNativeHandler(0x90a9e0b2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x90a9e0b2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/OVERRIDE_PEDS_USE_DEFAULT_DRIVE_BY_CLIPSET
	static auto nh_0xb14f8ead = rage::scrEngine::GetNativeHandler(0xb14f8ead);
	rage::scrEngine::RegisterNativeHandler(0xb14f8ead, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb14f8ead(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/OVERRIDE_PLAYER_GROUND_MATERIAL
	static auto nh_0xD2CC78CD3D0B50F9 = rage::scrEngine::GetNativeHandler(0xD2CC78CD3D0B50F9);
	rage::scrEngine::RegisterNativeHandler(0xD2CC78CD3D0B50F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2CC78CD3D0B50F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// ZONE/OVERRIDE_POPSCHEDULE_VEHICLE_MODEL
	static auto nh_0x5F7D596BAC2E7777 = rage::scrEngine::GetNativeHandler(0x5F7D596BAC2E7777);
	rage::scrEngine::RegisterNativeHandler(0x5F7D596BAC2E7777, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F7D596BAC2E7777(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/OVERRIDE_POP_GROUPS
	static auto nh_0xd3bc438f = rage::scrEngine::GetNativeHandler(0xd3bc438f);
	rage::scrEngine::RegisterNativeHandler(0xd3bc438f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xd3bc438f(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/OVERRIDE_SAVE_HOUSE
	static auto nh_0x1162EA8AE9D24EEA = rage::scrEngine::GetNativeHandler(0x1162EA8AE9D24EEA);
	rage::scrEngine::RegisterNativeHandler(0x1162EA8AE9D24EEA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x1162EA8AE9D24EEA(cxt);
	});
	        
	AddResultCleaner(0x1162EA8AE9D24EEA, ResultCleaner<bool>);

	// AUDIO/OVERRIDE_TREVOR_RAGE
	static auto nh_0x13AD665062541A7E = rage::scrEngine::GetNativeHandler(0x13AD665062541A7E);
	rage::scrEngine::RegisterNativeHandler(0x13AD665062541A7E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x13AD665062541A7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/OVERRIDE_UNDERWATER_STREAM
	static auto nh_0xF2A9CDABCEA04BD6 = rage::scrEngine::GetNativeHandler(0xF2A9CDABCEA04BD6);
	rage::scrEngine::RegisterNativeHandler(0xF2A9CDABCEA04BD6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF2A9CDABCEA04BD6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/OVERRIDE_VEHICLE_PEDS_CAN_STAND_ON_TOP_FLAG
	static auto nh_0x7fa03e76 = rage::scrEngine::GetNativeHandler(0x7fa03e76);
	rage::scrEngine::RegisterNativeHandler(0x7fa03e76, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7fa03e76(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/OVERRIDE_VEH_HORN
	static auto nh_0x3CDC1E622CCE0356 = rage::scrEngine::GetNativeHandler(0x3CDC1E622CCE0356);
	rage::scrEngine::RegisterNativeHandler(0x3CDC1E622CCE0356, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3CDC1E622CCE0356(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/PARTICIPANT_ID (result cleaner only)
	AddResultCleaner(0x90986E8876CE0A83, ResultCleaner<int>);

	// NETWORK/PARTICIPANT_ID_TO_INT (result cleaner only)
	AddResultCleaner(0x57A3BDDAD8E5AA0A, ResultCleaner<int>);

	// GRAPHICS/PASS_KEYBOARD_INPUT_TO_SCALEFORM (result cleaner only)
	AddResultCleaner(0xD1C7CB175E012964, ResultCleaner<bool>);

	// GRAPHICS/PATCH_DECAL_DIFFUSE_MAP
	static auto nh_0x8A35C742130C6080 = rage::scrEngine::GetNativeHandler(0x8A35C742130C6080);
	rage::scrEngine::RegisterNativeHandler(0x8A35C742130C6080, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8A35C742130C6080(cxt);
		NullifyVoid(cxt);
	});
	        
	// CLOCK/PAUSE_CLOCK
	static auto nh_0x4055E40BD2DBEC1D = rage::scrEngine::GetNativeHandler(0x4055E40BD2DBEC1D);
	rage::scrEngine::RegisterNativeHandler(0x4055E40BD2DBEC1D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4055E40BD2DBEC1D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/PAUSE_DEATH_ARREST_RESTART
	static auto nh_0x2C2B3493FBF51C71 = rage::scrEngine::GetNativeHandler(0x2C2B3493FBF51C71);
	rage::scrEngine::RegisterNativeHandler(0x2C2B3493FBF51C71, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C2B3493FBF51C71(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENUCEPTION_GO_DEEPER
	static auto nh_0x77F16B447824DA6C = rage::scrEngine::GetNativeHandler(0x77F16B447824DA6C);
	rage::scrEngine::RegisterNativeHandler(0x77F16B447824DA6C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77F16B447824DA6C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENUCEPTION_THE_KICK
	static auto nh_0xCDCA26E80FAECB8F = rage::scrEngine::GetNativeHandler(0xCDCA26E80FAECB8F);
	rage::scrEngine::RegisterNativeHandler(0xCDCA26E80FAECB8F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCDCA26E80FAECB8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENU_ACTIVATE_CONTEXT
	static auto nh_0xDD564BDD0472C936 = rage::scrEngine::GetNativeHandler(0xDD564BDD0472C936);
	rage::scrEngine::RegisterNativeHandler(0xDD564BDD0472C936, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD564BDD0472C936(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENU_DEACTIVATE_CONTEXT
	static auto nh_0x444D8CF241EC25C5 = rage::scrEngine::GetNativeHandler(0x444D8CF241EC25C5);
	rage::scrEngine::RegisterNativeHandler(0x444D8CF241EC25C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x444D8CF241EC25C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENU_IS_CONTEXT_ACTIVE (result cleaner only)
	AddResultCleaner(0x84698AB38D0C6636, ResultCleaner<bool>);

	// HUD/PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE (result cleaner only)
	AddResultCleaner(0x2A25ADC48F87841F, ResultCleaner<int>);

	// HUD/PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS
	static auto nh_0x4895BDEA16E7C080 = rage::scrEngine::GetNativeHandler(0x4895BDEA16E7C080);
	rage::scrEngine::RegisterNativeHandler(0x4895BDEA16E7C080, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4895BDEA16E7C080(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENU_SET_BUSY_SPINNER
	static auto nh_0xC78E239AC5B2DDB9 = rage::scrEngine::GetNativeHandler(0xC78E239AC5B2DDB9);
	rage::scrEngine::RegisterNativeHandler(0xC78E239AC5B2DDB9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC78E239AC5B2DDB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_MENU_SET_WARN_ON_TAB_CHANGE
	static auto nh_0xF06EBB91A81E09E3 = rage::scrEngine::GetNativeHandler(0xF06EBB91A81E09E3);
	rage::scrEngine::RegisterNativeHandler(0xF06EBB91A81E09E3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF06EBB91A81E09E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/PAUSE_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0x632A689BF42301B1 = rage::scrEngine::GetNativeHandler(0x632A689BF42301B1);
	rage::scrEngine::RegisterNativeHandler(0x632A689BF42301B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x632A689BF42301B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PAUSE_SCRIPTED_CONVERSATION
	static auto nh_0x8530AD776CD72B12 = rage::scrEngine::GetNativeHandler(0x8530AD776CD72B12);
	rage::scrEngine::RegisterNativeHandler(0x8530AD776CD72B12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8530AD776CD72B12(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PAUSE_TOGGLE_FULLSCREEN_MAP
	static auto nh_0x2DE6C5E2E996F178 = rage::scrEngine::GetNativeHandler(0x2DE6C5E2E996F178);
	rage::scrEngine::RegisterNativeHandler(0x2DE6C5E2E996F178, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2DE6C5E2E996F178(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/PED_HAS_USE_SCENARIO_TASK (result cleaner only)
	AddResultCleaner(0x295E3CCEC879CCD7, ResultCleaner<bool>);

	// NETWORK/PED_TO_NET (result cleaner only)
	AddResultCleaner(0x0EDEC3C276198689, ResultCleaner<int>);

	// INTERIOR/PIN_INTERIOR_IN_MEMORY
	static auto nh_0x2CA429C029CCF247 = rage::scrEngine::GetNativeHandler(0x2CA429C029CCF247);
	rage::scrEngine::RegisterNativeHandler(0x2CA429C029CCF247, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2CA429C029CCF247(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/PIN_ROPE_VERTEX
	static auto nh_0x2B320CF14146B69A = rage::scrEngine::GetNativeHandler(0x2B320CF14146B69A);
	rage::scrEngine::RegisterNativeHandler(0x2B320CF14146B69A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B320CF14146B69A(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/PLACE_OBJECT_ON_GROUND_PROPERLY (result cleaner only)
	AddResultCleaner(0x58A850EAEE20FAA3, ResultCleaner<bool>);

	// PLAYER/PLAYER_ATTACH_VIRTUAL_BOUND
	static auto nh_0xED51733DC73AED51 = rage::scrEngine::GetNativeHandler(0xED51733DC73AED51);
	rage::scrEngine::RegisterNativeHandler(0xED51733DC73AED51, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED51733DC73AED51(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/PLAYER_DETACH_VIRTUAL_BOUND
	static auto nh_0x1DD5897E2FA6E7C9 = rage::scrEngine::GetNativeHandler(0x1DD5897E2FA6E7C9);
	rage::scrEngine::RegisterNativeHandler(0x1DD5897E2FA6E7C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DD5897E2FA6E7C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/PLAYER_ID (result cleaner only)
	AddResultCleaner(0x4F8644AF03D0E0D6, ResultCleaner<int>);

	// PLAYER/PLAYER_PED_ID (result cleaner only)
	AddResultCleaner(0xD80958FC74E988A6, ResultCleaner<int>);

	// STATS/PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE
	static auto nh_0x79AB33F0FBFAC40C = rage::scrEngine::GetNativeHandler(0x79AB33F0FBFAC40C);
	rage::scrEngine::RegisterNativeHandler(0x79AB33F0FBFAC40C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x79AB33F0FBFAC40C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_ACTIVITY_DONE
	static auto nh_0xA071E0ED98F91286 = rage::scrEngine::GetNativeHandler(0xA071E0ED98F91286);
	rage::scrEngine::RegisterNativeHandler(0xA071E0ED98F91286, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA071E0ED98F91286(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_AWARD_XP
	static auto nh_0x46F917F6B4128FE4 = rage::scrEngine::GetNativeHandler(0x46F917F6B4128FE4);
	rage::scrEngine::RegisterNativeHandler(0x46F917F6B4128FE4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46F917F6B4128FE4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_BACKGROUND_SCRIPT_ACTION
	static auto nh_0x5009DFD741329729 = rage::scrEngine::GetNativeHandler(0x5009DFD741329729);
	rage::scrEngine::RegisterNativeHandler(0x5009DFD741329729, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5009DFD741329729(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_CHEAT_APPLIED
	static auto nh_0x6058665D72302D3F = rage::scrEngine::GetNativeHandler(0x6058665D72302D3F);
	rage::scrEngine::RegisterNativeHandler(0x6058665D72302D3F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6058665D72302D3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_CLOTH_CHANGE
	static auto nh_0x34B973047A2268B9 = rage::scrEngine::GetNativeHandler(0x34B973047A2268B9);
	rage::scrEngine::RegisterNativeHandler(0x34B973047A2268B9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x34B973047A2268B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_CRATE_CREATED
	static auto nh_0xAFC7E5E075A96F46 = rage::scrEngine::GetNativeHandler(0xAFC7E5E075A96F46);
	rage::scrEngine::RegisterNativeHandler(0xAFC7E5E075A96F46, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAFC7E5E075A96F46(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_CRATE_DROP_MISSION_DONE
	static auto nh_0x1CAE5D2E3F9A07F0 = rage::scrEngine::GetNativeHandler(0x1CAE5D2E3F9A07F0);
	rage::scrEngine::RegisterNativeHandler(0x1CAE5D2E3F9A07F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x1CAE5D2E3F9A07F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_FRIEND_ACTIVITY
	static auto nh_0x0F71DE29AB2258F1 = rage::scrEngine::GetNativeHandler(0x0F71DE29AB2258F1);
	rage::scrEngine::RegisterNativeHandler(0x0F71DE29AB2258F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0F71DE29AB2258F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_HEIST_SAVE_CHEAT
	static auto nh_0xF4FF020A08BC8863 = rage::scrEngine::GetNativeHandler(0xF4FF020A08BC8863);
	rage::scrEngine::RegisterNativeHandler(0xF4FF020A08BC8863, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4FF020A08BC8863(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_HOLD_UP_MISSION_DONE
	static auto nh_0xCB00196B31C39EB1 = rage::scrEngine::GetNativeHandler(0xCB00196B31C39EB1);
	rage::scrEngine::RegisterNativeHandler(0xCB00196B31C39EB1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xCB00196B31C39EB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_IDLE_KICK
	static auto nh_0x5DA3A8DE8CB6226F = rage::scrEngine::GetNativeHandler(0x5DA3A8DE8CB6226F);
	rage::scrEngine::RegisterNativeHandler(0x5DA3A8DE8CB6226F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5DA3A8DE8CB6226F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_IMPORT_EXPORT_MISSION_DONE
	static auto nh_0x2B69F5074C894811 = rage::scrEngine::GetNativeHandler(0x2B69F5074C894811);
	rage::scrEngine::RegisterNativeHandler(0x2B69F5074C894811, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2B69F5074C894811(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_JOB_BEND
	static auto nh_0xF5BB8DAC426A52C0 = rage::scrEngine::GetNativeHandler(0xF5BB8DAC426A52C0);
	rage::scrEngine::RegisterNativeHandler(0xF5BB8DAC426A52C0, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF5BB8DAC426A52C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_LEAVE_JOB_CHAIN
	static auto nh_0xC5BE134EC7BA96A0 = rage::scrEngine::GetNativeHandler(0xC5BE134EC7BA96A0);
	rage::scrEngine::RegisterNativeHandler(0xC5BE134EC7BA96A0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xC5BE134EC7BA96A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_MATCH_STARTED
	static auto nh_0xBC80E22DED931E3D = rage::scrEngine::GetNativeHandler(0xBC80E22DED931E3D);
	rage::scrEngine::RegisterNativeHandler(0xBC80E22DED931E3D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xBC80E22DED931E3D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_MISSION_CHECKPOINT
	static auto nh_0xC900596A63978C1D = rage::scrEngine::GetNativeHandler(0xC900596A63978C1D);
	rage::scrEngine::RegisterNativeHandler(0xC900596A63978C1D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xC900596A63978C1D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_MISSION_OVER
	static auto nh_0x7C4BB33A8CED7324 = rage::scrEngine::GetNativeHandler(0x7C4BB33A8CED7324);
	rage::scrEngine::RegisterNativeHandler(0x7C4BB33A8CED7324, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7C4BB33A8CED7324(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_MISSION_STARTED
	static auto nh_0xC19A2925C34D2231 = rage::scrEngine::GetNativeHandler(0xC19A2925C34D2231);
	rage::scrEngine::RegisterNativeHandler(0xC19A2925C34D2231, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC19A2925C34D2231(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_NPC_INVITE
	static auto nh_0x93054C88E6AA7C44 = rage::scrEngine::GetNativeHandler(0x93054C88E6AA7C44);
	rage::scrEngine::RegisterNativeHandler(0x93054C88E6AA7C44, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x93054C88E6AA7C44(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_ODDJOB_DONE
	static auto nh_0x69DEA3E9DB727B4C = rage::scrEngine::GetNativeHandler(0x69DEA3E9DB727B4C);
	rage::scrEngine::RegisterNativeHandler(0x69DEA3E9DB727B4C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x69DEA3E9DB727B4C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_PROP_CHANGE
	static auto nh_0xBA739D6D5A05D6E7 = rage::scrEngine::GetNativeHandler(0xBA739D6D5A05D6E7);
	rage::scrEngine::RegisterNativeHandler(0xBA739D6D5A05D6E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBA739D6D5A05D6E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_QUICKFIX_TOOL
	static auto nh_0x90D0622866E80445 = rage::scrEngine::GetNativeHandler(0x90D0622866E80445);
	rage::scrEngine::RegisterNativeHandler(0x90D0622866E80445, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x90D0622866E80445(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_RACE_CHECKPOINT
	static auto nh_0x9C375C315099DDE4 = rage::scrEngine::GetNativeHandler(0x9C375C315099DDE4);
	rage::scrEngine::RegisterNativeHandler(0x9C375C315099DDE4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x9C375C315099DDE4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_RACE_TO_POINT_MISSION_DONE
	static auto nh_0xADDD1C754E2E2914 = rage::scrEngine::GetNativeHandler(0xADDD1C754E2E2914);
	rage::scrEngine::RegisterNativeHandler(0xADDD1C754E2E2914, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0xADDD1C754E2E2914(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_RANDOM_MISSION_DONE
	static auto nh_0x71862B1D855F32E1 = rage::scrEngine::GetNativeHandler(0x71862B1D855F32E1);
	rage::scrEngine::RegisterNativeHandler(0x71862B1D855F32E1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x71862B1D855F32E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_RANK_UP
	static auto nh_0xC7F2DE41D102BFB4 = rage::scrEngine::GetNativeHandler(0xC7F2DE41D102BFB4);
	rage::scrEngine::RegisterNativeHandler(0xC7F2DE41D102BFB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7F2DE41D102BFB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_ROS_BET
	static auto nh_0x121FB4DDDC2D5291 = rage::scrEngine::GetNativeHandler(0x121FB4DDDC2D5291);
	rage::scrEngine::RegisterNativeHandler(0x121FB4DDDC2D5291, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x121FB4DDDC2D5291(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_SET_JOIN_TYPE
	static auto nh_0xD1032E482629049E = rage::scrEngine::GetNativeHandler(0xD1032E482629049E);
	rage::scrEngine::RegisterNativeHandler(0xD1032E482629049E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD1032E482629049E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_SHOP_ITEM
	static auto nh_0x176852ACAAC173D1 = rage::scrEngine::GetNativeHandler(0x176852ACAAC173D1);
	rage::scrEngine::RegisterNativeHandler(0x176852ACAAC173D1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x176852ACAAC173D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_WEAPON_MODE_CHANGE
	static auto nh_0xE95C8A1875A02CA4 = rage::scrEngine::GetNativeHandler(0xE95C8A1875A02CA4);
	rage::scrEngine::RegisterNativeHandler(0xE95C8A1875A02CA4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE95C8A1875A02CA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PLAYSTATS_WEBSITE_VISITED
	static auto nh_0xDDF24D535060F811 = rage::scrEngine::GetNativeHandler(0xDDF24D535060F811);
	rage::scrEngine::RegisterNativeHandler(0xDDF24D535060F811, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDDF24D535060F811(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE
	static auto nh_0xED640017ED337E45 = rage::scrEngine::GetNativeHandler(0xED640017ED337E45);
	rage::scrEngine::RegisterNativeHandler(0xED640017ED337E45, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xED640017ED337E45(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_ANIMAL_VOCALIZATION
	static auto nh_0xEE066C7006C49C0A = rage::scrEngine::GetNativeHandler(0xEE066C7006C49C0A);
	rage::scrEngine::RegisterNativeHandler(0xEE066C7006C49C0A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEE066C7006C49C0A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/PLAY_ANIM_ON_RUNNING_SCENARIO
	static auto nh_0x748040460F8DF5DC = rage::scrEngine::GetNativeHandler(0x748040460F8DF5DC);
	rage::scrEngine::RegisterNativeHandler(0x748040460F8DF5DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x748040460F8DF5DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/PLAY_CAM_ANIM
	static auto nh_0x9A2D0FB2E7852392 = rage::scrEngine::GetNativeHandler(0x9A2D0FB2E7852392);
	rage::scrEngine::RegisterNativeHandler(0x9A2D0FB2E7852392, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x9A2D0FB2E7852392(cxt);
	});
	        
	AddResultCleaner(0x9A2D0FB2E7852392, ResultCleaner<bool>);

	// AUDIO/PLAY_DEFERRED_SOUND_FRONTEND
	static auto nh_0xCADA5A0D0702381E = rage::scrEngine::GetNativeHandler(0xCADA5A0D0702381E);
	rage::scrEngine::RegisterNativeHandler(0xCADA5A0D0702381E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCADA5A0D0702381E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_END_CREDITS_MUSIC
	static auto nh_0xCD536C4D33DCC900 = rage::scrEngine::GetNativeHandler(0xCD536C4D33DCC900);
	rage::scrEngine::RegisterNativeHandler(0xCD536C4D33DCC900, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD536C4D33DCC900(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/PLAY_ENTITY_ANIM
	static auto nh_0x7FB218262B810701 = rage::scrEngine::GetNativeHandler(0x7FB218262B810701);
	rage::scrEngine::RegisterNativeHandler(0x7FB218262B810701, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x7FB218262B810701(cxt);
	});
	        
	AddResultCleaner(0x7FB218262B810701, ResultCleaner<bool>);

	// TASK/PLAY_ENTITY_SCRIPTED_ANIM
	static auto nh_0x77A1EEC547E7FCF1 = rage::scrEngine::GetNativeHandler(0x77A1EEC547E7FCF1);
	rage::scrEngine::RegisterNativeHandler(0x77A1EEC547E7FCF1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x77A1EEC547E7FCF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/PLAY_FACIAL_ANIM
	static auto nh_0xE1E65CA8AC9C00ED = rage::scrEngine::GetNativeHandler(0xE1E65CA8AC9C00ED);
	rage::scrEngine::RegisterNativeHandler(0xE1E65CA8AC9C00ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE1E65CA8AC9C00ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_MISSION_COMPLETE_AUDIO
	static auto nh_0xB138AAB8A70D3C69 = rage::scrEngine::GetNativeHandler(0xB138AAB8A70D3C69);
	rage::scrEngine::RegisterNativeHandler(0xB138AAB8A70D3C69, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB138AAB8A70D3C69(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_PAIN
	static auto nh_0xBC9AE166038A5CEC = rage::scrEngine::GetNativeHandler(0xBC9AE166038A5CEC);
	rage::scrEngine::RegisterNativeHandler(0xBC9AE166038A5CEC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC9AE166038A5CEC(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE
	static auto nh_0xC6941B4A3A8FBBB9 = rage::scrEngine::GetNativeHandler(0xC6941B4A3A8FBBB9);
	rage::scrEngine::RegisterNativeHandler(0xC6941B4A3A8FBBB9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC6941B4A3A8FBBB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_PED_AMBIENT_SPEECH_NATIVE
	static auto nh_0x8E04FEDD28D42462 = rage::scrEngine::GetNativeHandler(0x8E04FEDD28D42462);
	rage::scrEngine::RegisterNativeHandler(0x8E04FEDD28D42462, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8E04FEDD28D42462(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE
	static auto nh_0x3523634255FC3318 = rage::scrEngine::GetNativeHandler(0x3523634255FC3318);
	rage::scrEngine::RegisterNativeHandler(0x3523634255FC3318, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x3523634255FC3318(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_PED_RINGTONE
	static auto nh_0xF9E56683CA8E11A5 = rage::scrEngine::GetNativeHandler(0xF9E56683CA8E11A5);
	rage::scrEngine::RegisterNativeHandler(0xF9E56683CA8E11A5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF9E56683CA8E11A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_POLICE_REPORT
	static auto nh_0xDFEBD56D9BD1EB16 = rage::scrEngine::GetNativeHandler(0xDFEBD56D9BD1EB16);
	rage::scrEngine::RegisterNativeHandler(0xDFEBD56D9BD1EB16, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFEBD56D9BD1EB16(cxt);
	});
	        
	AddResultCleaner(0xDFEBD56D9BD1EB16, ResultCleaner<int>);

	// AUDIO/PLAY_SOUND
	static auto nh_0x7FF4944CC209192D = rage::scrEngine::GetNativeHandler(0x7FF4944CC209192D);
	rage::scrEngine::RegisterNativeHandler(0x7FF4944CC209192D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x7FF4944CC209192D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_SOUND_FROM_COORD
	static auto nh_0x8D8686B622B88120 = rage::scrEngine::GetNativeHandler(0x8D8686B622B88120);
	rage::scrEngine::RegisterNativeHandler(0x8D8686B622B88120, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x8D8686B622B88120(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_SOUND_FROM_ENTITY
	static auto nh_0xE65F427EB70AB1ED = rage::scrEngine::GetNativeHandler(0xE65F427EB70AB1ED);
	rage::scrEngine::RegisterNativeHandler(0xE65F427EB70AB1ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xE65F427EB70AB1ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_SOUND_FRONTEND
	static auto nh_0x67C540AA08E4A6F5 = rage::scrEngine::GetNativeHandler(0x67C540AA08E4A6F5);
	rage::scrEngine::RegisterNativeHandler(0x67C540AA08E4A6F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x67C540AA08E4A6F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_STREAM_FROM_OBJECT
	static auto nh_0xEBAA9B64D76356FD = rage::scrEngine::GetNativeHandler(0xEBAA9B64D76356FD);
	rage::scrEngine::RegisterNativeHandler(0xEBAA9B64D76356FD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEBAA9B64D76356FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_STREAM_FROM_PED
	static auto nh_0x89049DD63C08B5D1 = rage::scrEngine::GetNativeHandler(0x89049DD63C08B5D1);
	rage::scrEngine::RegisterNativeHandler(0x89049DD63C08B5D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x89049DD63C08B5D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_STREAM_FROM_POSITION
	static auto nh_0x21442F412E8DE56B = rage::scrEngine::GetNativeHandler(0x21442F412E8DE56B);
	rage::scrEngine::RegisterNativeHandler(0x21442F412E8DE56B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21442F412E8DE56B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_STREAM_FROM_VEHICLE
	static auto nh_0xB70374A758007DFA = rage::scrEngine::GetNativeHandler(0xB70374A758007DFA);
	rage::scrEngine::RegisterNativeHandler(0xB70374A758007DFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB70374A758007DFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_STREAM_FRONTEND
	static auto nh_0x58FCE43488F9F5F4 = rage::scrEngine::GetNativeHandler(0x58FCE43488F9F5F4);
	rage::scrEngine::RegisterNativeHandler(0x58FCE43488F9F5F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58FCE43488F9F5F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_SYNCHRONIZED_AUDIO_EVENT (result cleaner only)
	AddResultCleaner(0x8B2FD4560E55DD2D, ResultCleaner<bool>);

	// CAM/PLAY_SYNCHRONIZED_CAM_ANIM
	static auto nh_0xE32EFE9AB4A9AA0C = rage::scrEngine::GetNativeHandler(0xE32EFE9AB4A9AA0C);
	rage::scrEngine::RegisterNativeHandler(0xE32EFE9AB4A9AA0C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE32EFE9AB4A9AA0C(cxt);
	});
	        
	AddResultCleaner(0xE32EFE9AB4A9AA0C, ResultCleaner<bool>);

	// ENTITY/PLAY_SYNCHRONIZED_ENTITY_ANIM
	static auto nh_0xC77720A12FE14A86 = rage::scrEngine::GetNativeHandler(0xC77720A12FE14A86);
	rage::scrEngine::RegisterNativeHandler(0xC77720A12FE14A86, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC77720A12FE14A86(cxt);
	});
	        
	AddResultCleaner(0xC77720A12FE14A86, ResultCleaner<bool>);

	// ENTITY/PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM
	static auto nh_0xB9C54555ED30FBC4 = rage::scrEngine::GetNativeHandler(0xB9C54555ED30FBC4);
	rage::scrEngine::RegisterNativeHandler(0xB9C54555ED30FBC4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		NullifyAny(cxt->GetArgument<void*>(6)); // Any* p6
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		NullifyAny(cxt->GetArgument<void*>(7)); // Any* p7
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0xB9C54555ED30FBC4(cxt);
	});
	        
	AddResultCleaner(0xB9C54555ED30FBC4, ResultCleaner<bool>);

	// MISC/PLAY_TENNIS_DIVE_ANIM
	static auto nh_0x8FA9C42FC5D7C64B = rage::scrEngine::GetNativeHandler(0x8FA9C42FC5D7C64B);
	rage::scrEngine::RegisterNativeHandler(0x8FA9C42FC5D7C64B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8FA9C42FC5D7C64B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/PLAY_TENNIS_SWING_ANIM
	static auto nh_0xE266ED23311F24D4 = rage::scrEngine::GetNativeHandler(0xE266ED23311F24D4);
	rage::scrEngine::RegisterNativeHandler(0xE266ED23311F24D4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE266ED23311F24D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_VEHICLE_DOOR_CLOSE_SOUND
	static auto nh_0x62A456AA4769EF34 = rage::scrEngine::GetNativeHandler(0x62A456AA4769EF34);
	rage::scrEngine::RegisterNativeHandler(0x62A456AA4769EF34, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x62A456AA4769EF34(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PLAY_VEHICLE_DOOR_OPEN_SOUND
	static auto nh_0x3A539D52857EA82D = rage::scrEngine::GetNativeHandler(0x3A539D52857EA82D);
	rage::scrEngine::RegisterNativeHandler(0x3A539D52857EA82D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3A539D52857EA82D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/POINT_CAM_AT_COORD
	static auto nh_0xF75497BB865F0803 = rage::scrEngine::GetNativeHandler(0xF75497BB865F0803);
	rage::scrEngine::RegisterNativeHandler(0xF75497BB865F0803, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF75497BB865F0803(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/POINT_CAM_AT_ENTITY
	static auto nh_0x5640BFF86B16E8DC = rage::scrEngine::GetNativeHandler(0x5640BFF86B16E8DC);
	rage::scrEngine::RegisterNativeHandler(0x5640BFF86B16E8DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5640BFF86B16E8DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/POINT_CAM_AT_PED_BONE
	static auto nh_0x68B2B5F33BA63C41 = rage::scrEngine::GetNativeHandler(0x68B2B5F33BA63C41);
	rage::scrEngine::RegisterNativeHandler(0x68B2B5F33BA63C41, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x68B2B5F33BA63C41(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/POPULATE_NOW
	static auto nh_0x7472BB270D7B4F3E = rage::scrEngine::GetNativeHandler(0x7472BB270D7B4F3E);
	rage::scrEngine::RegisterNativeHandler(0x7472BB270D7B4F3E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7472BB270D7B4F3E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/POP_OUT_VEHICLE_WINDSCREEN
	static auto nh_0x6D645D59FB5F5AD3 = rage::scrEngine::GetNativeHandler(0x6D645D59FB5F5AD3);
	rage::scrEngine::RegisterNativeHandler(0x6D645D59FB5F5AD3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D645D59FB5F5AD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/POP_TIMECYCLE_MODIFIER
	static auto nh_0x3C8938D7D872211E = rage::scrEngine::GetNativeHandler(0x3C8938D7D872211E);
	rage::scrEngine::RegisterNativeHandler(0x3C8938D7D872211E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C8938D7D872211E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/POW (result cleaner only)
	AddResultCleaner(0xE3621CC40F31FE2E, ResultCleaner<float>);

	// STREAMING/PREFETCH_SRL
	static auto nh_0x3D245789CE12982C = rage::scrEngine::GetNativeHandler(0x3D245789CE12982C);
	rage::scrEngine::RegisterNativeHandler(0x3D245789CE12982C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3D245789CE12982C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/PRELOAD_BUSYSPINNER
	static auto nh_0xC65AB383CD91DF98 = rage::scrEngine::GetNativeHandler(0xC65AB383CD91DF98);
	rage::scrEngine::RegisterNativeHandler(0xC65AB383CD91DF98, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC65AB383CD91DF98(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/PRELOAD_CLOUD_HAT
	static auto nh_0x11B56FBBF7224868 = rage::scrEngine::GetNativeHandler(0x11B56FBBF7224868);
	rage::scrEngine::RegisterNativeHandler(0x11B56FBBF7224868, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x11B56FBBF7224868(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PRELOAD_SCRIPT_CONVERSATION
	static auto nh_0x3B3CAD6166916D87 = rage::scrEngine::GetNativeHandler(0x3B3CAD6166916D87);
	rage::scrEngine::RegisterNativeHandler(0x3B3CAD6166916D87, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B3CAD6166916D87(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PRELOAD_SCRIPT_PHONE_CONVERSATION
	static auto nh_0x6004BCB0E226AAEA = rage::scrEngine::GetNativeHandler(0x6004BCB0E226AAEA);
	rage::scrEngine::RegisterNativeHandler(0x6004BCB0E226AAEA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6004BCB0E226AAEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PRELOAD_VEHICLE_AUDIO_BANK
	static auto nh_0xCA4CEA6AE0000A7E = rage::scrEngine::GetNativeHandler(0xCA4CEA6AE0000A7E);
	rage::scrEngine::RegisterNativeHandler(0xCA4CEA6AE0000A7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCA4CEA6AE0000A7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/PRELOAD_VEHICLE_MOD
	static auto nh_0x758F49C24925568A = rage::scrEngine::GetNativeHandler(0x758F49C24925568A);
	rage::scrEngine::RegisterNativeHandler(0x758F49C24925568A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x758F49C24925568A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/PREPARE_ALARM
	static auto nh_0x9D74AE343DB65533 = rage::scrEngine::GetNativeHandler(0x9D74AE343DB65533);
	rage::scrEngine::RegisterNativeHandler(0x9D74AE343DB65533, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9D74AE343DB65533(cxt);
	});
	        
	AddResultCleaner(0x9D74AE343DB65533, ResultCleaner<bool>);

	// AUDIO/PREPARE_MUSIC_EVENT
	static auto nh_0x1E5185B72EF5158A = rage::scrEngine::GetNativeHandler(0x1E5185B72EF5158A);
	rage::scrEngine::RegisterNativeHandler(0x1E5185B72EF5158A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1E5185B72EF5158A(cxt);
	});
	        
	AddResultCleaner(0x1E5185B72EF5158A, ResultCleaner<bool>);

	// AUDIO/PREPARE_SYNCHRONIZED_AUDIO_EVENT
	static auto nh_0xC7ABCACA4985A766 = rage::scrEngine::GetNativeHandler(0xC7ABCACA4985A766);
	rage::scrEngine::RegisterNativeHandler(0xC7ABCACA4985A766, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC7ABCACA4985A766(cxt);
	});
	        
	AddResultCleaner(0xC7ABCACA4985A766, ResultCleaner<bool>);

	// AUDIO/PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE
	static auto nh_0x029FE7CD1B7E2E75 = rage::scrEngine::GetNativeHandler(0x029FE7CD1B7E2E75);
	rage::scrEngine::RegisterNativeHandler(0x029FE7CD1B7E2E75, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x029FE7CD1B7E2E75(cxt);
	});
	        
	AddResultCleaner(0x029FE7CD1B7E2E75, ResultCleaner<bool>);

	// STATS/PRESENCE_EVENT_UPDATESTAT_FLOAT
	static auto nh_0x30A6614C1F7799B8 = rage::scrEngine::GetNativeHandler(0x30A6614C1F7799B8);
	rage::scrEngine::RegisterNativeHandler(0x30A6614C1F7799B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x30A6614C1F7799B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/PRESENCE_EVENT_UPDATESTAT_INT
	static auto nh_0x11FF1C80276097ED = rage::scrEngine::GetNativeHandler(0x11FF1C80276097ED);
	rage::scrEngine::RegisterNativeHandler(0x11FF1C80276097ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11FF1C80276097ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/PRESET_INTERIOR_AMBIENT_CACHE
	static auto nh_0xD7021272EB0A451E = rage::scrEngine::GetNativeHandler(0xD7021272EB0A451E);
	rage::scrEngine::RegisterNativeHandler(0xD7021272EB0A451E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD7021272EB0A451E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/PREVENT_COLLECTION_OF_PORTABLE_PICKUP
	static auto nh_0x92AEFB5F6E294023 = rage::scrEngine::GetNativeHandler(0x92AEFB5F6E294023);
	rage::scrEngine::RegisterNativeHandler(0x92AEFB5F6E294023, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92AEFB5F6E294023(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/PROCESS_CASH_GIFT
	static auto nh_0x20194D48EAEC9A41 = rage::scrEngine::GetNativeHandler(0x20194D48EAEC9A41);
	rage::scrEngine::RegisterNativeHandler(0x20194D48EAEC9A41, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x20194D48EAEC9A41(cxt);
	});
	        
	AddResultCleaner(0x20194D48EAEC9A41, ResultCleaner<char*>);

	// ENTITY/PROCESS_ENTITY_ATTACHMENTS
	static auto nh_0xF4080490ADC51C6F = rage::scrEngine::GetNativeHandler(0xF4080490ADC51C6F);
	rage::scrEngine::RegisterNativeHandler(0xF4080490ADC51C6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4080490ADC51C6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/PROFILER_ENTER_SCOPE
	static auto nh_0xc795a4a9 = rage::scrEngine::GetNativeHandler(0xc795a4a9);
	rage::scrEngine::RegisterNativeHandler(0xc795a4a9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xc795a4a9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/PROFILER_EXIT_SCOPE
	static auto nh_0xb39ca35c = rage::scrEngine::GetNativeHandler(0xb39ca35c);
	rage::scrEngine::RegisterNativeHandler(0xb39ca35c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb39ca35c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/PROFILER_IS_RECORDING (result cleaner only)
	AddResultCleaner(0xf8b7d7bb, ResultCleaner<bool>);

	// HUD/PULSE_BLIP
	static auto nh_0x742D6FD43115AF73 = rage::scrEngine::GetNativeHandler(0x742D6FD43115AF73);
	rage::scrEngine::RegisterNativeHandler(0x742D6FD43115AF73, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x742D6FD43115AF73(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/PUSH_TIMECYCLE_MODIFIER
	static auto nh_0x58F735290861E6B4 = rage::scrEngine::GetNativeHandler(0x58F735290861E6B4);
	rage::scrEngine::RegisterNativeHandler(0x58F735290861E6B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58F735290861E6B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/QUERY_MOVIE_MESH_SET_STATE
	static auto nh_0x9B6E70C5CEEF4EEB = rage::scrEngine::GetNativeHandler(0x9B6E70C5CEEF4EEB);
	rage::scrEngine::RegisterNativeHandler(0x9B6E70C5CEEF4EEB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9B6E70C5CEEF4EEB(cxt);
	});
	        
	AddResultCleaner(0x9B6E70C5CEEF4EEB, ResultCleaner<int>);

	// MISC/QUEUE_MISSION_REPEAT_LOAD (result cleaner only)
	AddResultCleaner(0x72DE52178C291CB5, ResultCleaner<bool>);

	// MISC/QUEUE_MISSION_REPEAT_SAVE (result cleaner only)
	AddResultCleaner(0x44A0BDC559B35F6E, ResultCleaner<bool>);

	// GRAPHICS/QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS (result cleaner only)
	AddResultCleaner(0x2A893980E96B659A, ResultCleaner<bool>);

	// MISC/QUIT_GAME
	static auto nh_0xEB6891F03362FB12 = rage::scrEngine::GetNativeHandler(0xEB6891F03362FB12);
	rage::scrEngine::RegisterNativeHandler(0xEB6891F03362FB12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB6891F03362FB12(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/RAISE_CONVERTIBLE_ROOF
	static auto nh_0x8F5FB35D7E88FC70 = rage::scrEngine::GetNativeHandler(0x8F5FB35D7E88FC70);
	rage::scrEngine::RegisterNativeHandler(0x8F5FB35D7E88FC70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F5FB35D7E88FC70(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RECORD_BROKEN_GLASS
	static auto nh_0xFBE20329593DEC9D = rage::scrEngine::GetNativeHandler(0xFBE20329593DEC9D);
	rage::scrEngine::RegisterNativeHandler(0xFBE20329593DEC9D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFBE20329593DEC9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REFILL_AMMO_INSTANTLY (result cleaner only)
	AddResultCleaner(0x8C0D57EA686FAD87, ResultCleaner<bool>);

	// AUDIO/REFRESH_CLOSEST_OCEAN_SHORELINE
	static auto nh_0x5D2BFAAB8D956E0E = rage::scrEngine::GetNativeHandler(0x5D2BFAAB8D956E0E);
	rage::scrEngine::RegisterNativeHandler(0x5D2BFAAB8D956E0E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D2BFAAB8D956E0E(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/REFRESH_INTERIOR
	static auto nh_0x41F37C3427C75AE0 = rage::scrEngine::GetNativeHandler(0x41F37C3427C75AE0);
	rage::scrEngine::RegisterNativeHandler(0x41F37C3427C75AE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x41F37C3427C75AE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/REFRESH_PLAYER_LIST_STATS (result cleaner only)
	AddResultCleaner(0xE26CCFF8094D8C74, ResultCleaner<bool>);

	// HUD/REFRESH_WAYPOINT
	static auto nh_0x81FA173F170560D1 = rage::scrEngine::GetNativeHandler(0x81FA173F170560D1);
	rage::scrEngine::RegisterNativeHandler(0x81FA173F170560D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81FA173F170560D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_ARCHETYPES
	static auto nh_0x3c2f9037 = rage::scrEngine::GetNativeHandler(0x3c2f9037);
	rage::scrEngine::RegisterNativeHandler(0x3c2f9037, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3c2f9037(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_BOOL_TO_SAVE
	static auto nh_0xC8F4131414C835A1 = rage::scrEngine::GetNativeHandler(0xC8F4131414C835A1);
	rage::scrEngine::RegisterNativeHandler(0xC8F4131414C835A1, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC8F4131414C835A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_COMMAND
	static auto nh_0x5fa79b0f = rage::scrEngine::GetNativeHandler(0x5fa79b0f);
	rage::scrEngine::RegisterNativeHandler(0x5fa79b0f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5fa79b0f(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REGISTER_ENTITY_FOR_CUTSCENE
	static auto nh_0xE40C1C56DF95C2E8 = rage::scrEngine::GetNativeHandler(0xE40C1C56DF95C2E8);
	rage::scrEngine::RegisterNativeHandler(0xE40C1C56DF95C2E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE40C1C56DF95C2E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_ENUM_TO_SAVE
	static auto nh_0x10C2FA78D0E128A1 = rage::scrEngine::GetNativeHandler(0x10C2FA78D0E128A1);
	rage::scrEngine::RegisterNativeHandler(0x10C2FA78D0E128A1, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x10C2FA78D0E128A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_FLOAT_TO_SAVE
	static auto nh_0x7CAEC29ECB5DFEBB = rage::scrEngine::GetNativeHandler(0x7CAEC29ECB5DFEBB);
	rage::scrEngine::RegisterNativeHandler(0x7CAEC29ECB5DFEBB, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7CAEC29ECB5DFEBB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_FONT_FILE
	static auto nh_0x1b3a363 = rage::scrEngine::GetNativeHandler(0x1b3a363);
	rage::scrEngine::RegisterNativeHandler(0x1b3a363, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1b3a363(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_FONT_ID
	static auto nh_0xacf6d8ee = rage::scrEngine::GetNativeHandler(0xacf6d8ee);
	rage::scrEngine::RegisterNativeHandler(0xacf6d8ee, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xacf6d8ee(cxt);
	});
	        
	AddResultCleaner(0xacf6d8ee, ResultCleaner<int>);

	// PED/REGISTER_HATED_TARGETS_AROUND_PED
	static auto nh_0x9222F300BF8354FE = rage::scrEngine::GetNativeHandler(0x9222F300BF8354FE);
	rage::scrEngine::RegisterNativeHandler(0x9222F300BF8354FE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9222F300BF8354FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_INT_TO_SAVE
	static auto nh_0x34C9EE5986258415 = rage::scrEngine::GetNativeHandler(0x34C9EE5986258415);
	rage::scrEngine::RegisterNativeHandler(0x34C9EE5986258415, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x34C9EE5986258415(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_KEY_MAPPING
	static auto nh_0xd7664fd1 = rage::scrEngine::GetNativeHandler(0xd7664fd1);
	rage::scrEngine::RegisterNativeHandler(0xd7664fd1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xd7664fd1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REGISTER_NAMED_RENDERTARGET
	static auto nh_0x57D9C12635E25CE3 = rage::scrEngine::GetNativeHandler(0x57D9C12635E25CE3);
	rage::scrEngine::RegisterNativeHandler(0x57D9C12635E25CE3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x57D9C12635E25CE3(cxt);
	});
	        
	AddResultCleaner(0x57D9C12635E25CE3, ResultCleaner<bool>);

	// CFX/REGISTER_NUI_CALLBACK
	static auto nh_0xc59b980c = rage::scrEngine::GetNativeHandler(0xc59b980c);
	rage::scrEngine::RegisterNativeHandler(0xc59b980c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xc59b980c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_NUI_CALLBACK_TYPE
	static auto nh_0xcd03cda9 = rage::scrEngine::GetNativeHandler(0xcd03cda9);
	rage::scrEngine::RegisterNativeHandler(0xcd03cda9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xcd03cda9(cxt);
		NullifyVoid(cxt);
	});
	        
	// BRAIN/REGISTER_OBJECT_SCRIPT_BRAIN
	static auto nh_0x0BE84C318BA6EC22 = rage::scrEngine::GetNativeHandler(0x0BE84C318BA6EC22);
	rage::scrEngine::RegisterNativeHandler(0x0BE84C318BA6EC22, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0BE84C318BA6EC22(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REGISTER_PEDHEADSHOT (result cleaner only)
	AddResultCleaner(0x4462658788425076, ResultCleaner<int>);

	// PED/REGISTER_PEDHEADSHOT_TRANSPARENT (result cleaner only)
	AddResultCleaner(0x953563CE563143AF, ResultCleaner<int>);

	// CFX/REGISTER_RAW_NUI_CALLBACK
	static auto nh_0xa8ae9c2f = rage::scrEngine::GetNativeHandler(0xa8ae9c2f);
	rage::scrEngine::RegisterNativeHandler(0xa8ae9c2f, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xa8ae9c2f(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_RESOURCE_AS_EVENT_HANDLER
	static auto nh_0xd233a168 = rage::scrEngine::GetNativeHandler(0xd233a168);
	rage::scrEngine::RegisterNativeHandler(0xd233a168, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xd233a168(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_SAVE_HOUSE
	static auto nh_0xC0714D0A7EEECA54 = rage::scrEngine::GetNativeHandler(0xC0714D0A7EEECA54);
	rage::scrEngine::RegisterNativeHandler(0xC0714D0A7EEECA54, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC0714D0A7EEECA54(cxt);
	});
	        
	AddResultCleaner(0xC0714D0A7EEECA54, ResultCleaner<int>);

	// AUDIO/REGISTER_SCRIPT_WITH_AUDIO
	static auto nh_0xC6ED9D5092438D91 = rage::scrEngine::GetNativeHandler(0xC6ED9D5092438D91);
	rage::scrEngine::RegisterNativeHandler(0xC6ED9D5092438D91, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC6ED9D5092438D91(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_STREAMING_FILE_FROM_CACHE
	static auto nh_0xcead2d4b = rage::scrEngine::GetNativeHandler(0xcead2d4b);
	rage::scrEngine::RegisterNativeHandler(0xcead2d4b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xcead2d4b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_STREAMING_FILE_FROM_KVS
	static auto nh_0x1493dcc1 = rage::scrEngine::GetNativeHandler(0x1493dcc1);
	rage::scrEngine::RegisterNativeHandler(0x1493dcc1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1493dcc1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REGISTER_STREAMING_FILE_FROM_URL
	static auto nh_0xf44bfb95 = rage::scrEngine::GetNativeHandler(0xf44bfb95);
	rage::scrEngine::RegisterNativeHandler(0xf44bfb95, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xf44bfb95(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REGISTER_SYNCHRONISED_SCRIPT_SPEECH
	static auto nh_0x2131046957F31B04 = rage::scrEngine::GetNativeHandler(0x2131046957F31B04);
	rage::scrEngine::RegisterNativeHandler(0x2131046957F31B04, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2131046957F31B04(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REGISTER_TARGET
	static auto nh_0x2F25D9AEFA34FBA2 = rage::scrEngine::GetNativeHandler(0x2F25D9AEFA34FBA2);
	rage::scrEngine::RegisterNativeHandler(0x2F25D9AEFA34FBA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F25D9AEFA34FBA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REGISTER_TEXT_LABEL_TO_SAVE
	static auto nh_0xEDB1232C5BEAE62F = rage::scrEngine::GetNativeHandler(0xEDB1232C5BEAE62F);
	rage::scrEngine::RegisterNativeHandler(0xEDB1232C5BEAE62F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEDB1232C5BEAE62F(cxt);
		NullifyVoid(cxt);
	});
	        
	// BRAIN/REGISTER_WORLD_POINT_SCRIPT_BRAIN
	static auto nh_0x3CDC7136613284BD = rage::scrEngine::GetNativeHandler(0x3CDC7136613284BD);
	rage::scrEngine::RegisterNativeHandler(0x3CDC7136613284BD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3CDC7136613284BD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/RELEASE_ALL_COMMERCE_ITEM_IMAGES
	static auto nh_0x72D0706CD6CCDB58 = rage::scrEngine::GetNativeHandler(0x72D0706CD6CCDB58);
	rage::scrEngine::RegisterNativeHandler(0x72D0706CD6CCDB58, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72D0706CD6CCDB58(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RELEASE_AMBIENT_AUDIO_BANK
	static auto nh_0x65475A218FFAA93D = rage::scrEngine::GetNativeHandler(0x65475A218FFAA93D);
	rage::scrEngine::RegisterNativeHandler(0x65475A218FFAA93D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x65475A218FFAA93D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RELEASE_CONTROL_OF_FRONTEND
	static auto nh_0x14621BB1DF14E2B2 = rage::scrEngine::GetNativeHandler(0x14621BB1DF14E2B2);
	rage::scrEngine::RegisterNativeHandler(0x14621BB1DF14E2B2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14621BB1DF14E2B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RELEASE_MISSION_AUDIO_BANK
	static auto nh_0x0EC92A1BF0857187 = rage::scrEngine::GetNativeHandler(0x0EC92A1BF0857187);
	rage::scrEngine::RegisterNativeHandler(0x0EC92A1BF0857187, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0EC92A1BF0857187(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/RELEASE_MOVIE_MESH_SET
	static auto nh_0xEB119AA014E89183 = rage::scrEngine::GetNativeHandler(0xEB119AA014E89183);
	rage::scrEngine::RegisterNativeHandler(0xEB119AA014E89183, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB119AA014E89183(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RELEASE_NAMED_RENDERTARGET
	static auto nh_0xE9F6FFE837354DD4 = rage::scrEngine::GetNativeHandler(0xE9F6FFE837354DD4);
	rage::scrEngine::RegisterNativeHandler(0xE9F6FFE837354DD4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE9F6FFE837354DD4(cxt);
	});
	        
	AddResultCleaner(0xE9F6FFE837354DD4, ResultCleaner<bool>);

	// AUDIO/RELEASE_NAMED_SCRIPT_AUDIO_BANK
	static auto nh_0x77ED170667F50170 = rage::scrEngine::GetNativeHandler(0x77ED170667F50170);
	rage::scrEngine::RegisterNativeHandler(0x77ED170667F50170, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x77ED170667F50170(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RELEASE_PEDHEADSHOT_IMG_UPLOAD
	static auto nh_0x5D517B27CF6ECD04 = rage::scrEngine::GetNativeHandler(0x5D517B27CF6ECD04);
	rage::scrEngine::RegisterNativeHandler(0x5D517B27CF6ECD04, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D517B27CF6ECD04(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RELEASE_PED_PRELOAD_PROP_DATA
	static auto nh_0xF79F9DEF0AADE61A = rage::scrEngine::GetNativeHandler(0xF79F9DEF0AADE61A);
	rage::scrEngine::RegisterNativeHandler(0xF79F9DEF0AADE61A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF79F9DEF0AADE61A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RELEASE_PED_PRELOAD_VARIATION_DATA
	static auto nh_0x5AAB586FFEC0FD96 = rage::scrEngine::GetNativeHandler(0x5AAB586FFEC0FD96);
	rage::scrEngine::RegisterNativeHandler(0x5AAB586FFEC0FD96, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AAB586FFEC0FD96(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/RELEASE_PRELOAD_MODS
	static auto nh_0x445D79F995508307 = rage::scrEngine::GetNativeHandler(0x445D79F995508307);
	rage::scrEngine::RegisterNativeHandler(0x445D79F995508307, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x445D79F995508307(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RELEASE_SCRIPT_AUDIO_BANK
	static auto nh_0x7A2D8AD0A9EB9C3F = rage::scrEngine::GetNativeHandler(0x7A2D8AD0A9EB9C3F);
	rage::scrEngine::RegisterNativeHandler(0x7A2D8AD0A9EB9C3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A2D8AD0A9EB9C3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// SHAPETEST/RELEASE_SCRIPT_GUID_FROM_ENTITY
	static auto nh_0x2B3334BCA57CD799 = rage::scrEngine::GetNativeHandler(0x2B3334BCA57CD799);
	rage::scrEngine::RegisterNativeHandler(0x2B3334BCA57CD799, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B3334BCA57CD799(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RELEASE_SOUND_ID
	static auto nh_0x353FC880830B88FA = rage::scrEngine::GetNativeHandler(0x353FC880830B88FA);
	rage::scrEngine::RegisterNativeHandler(0x353FC880830B88FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x353FC880830B88FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RELEASE_WEAPON_AUDIO
	static auto nh_0xCE4AC0439F607045 = rage::scrEngine::GetNativeHandler(0xCE4AC0439F607045);
	rage::scrEngine::RegisterNativeHandler(0xCE4AC0439F607045, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCE4AC0439F607045(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RELOAD_MAP_MENU
	static auto nh_0x2916A928514C9827 = rage::scrEngine::GetNativeHandler(0x2916A928514C9827);
	rage::scrEngine::RegisterNativeHandler(0x2916A928514C9827, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2916A928514C9827(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_ACTION_MODE_ASSET
	static auto nh_0x13E940F88470FA51 = rage::scrEngine::GetNativeHandler(0x13E940F88470FA51);
	rage::scrEngine::RegisterNativeHandler(0x13E940F88470FA51, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x13E940F88470FA51(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/REMOVE_ALL_COVER_BLOCKING_AREAS
	static auto nh_0xDB6708C0B46F56D8 = rage::scrEngine::GetNativeHandler(0xDB6708C0B46F56D8);
	rage::scrEngine::RegisterNativeHandler(0xDB6708C0B46F56D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB6708C0B46F56D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_ALL_PED_WEAPONS
	static auto nh_0xF25DF915FA38C5F3 = rage::scrEngine::GetNativeHandler(0xF25DF915FA38C5F3);
	rage::scrEngine::RegisterNativeHandler(0xF25DF915FA38C5F3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF25DF915FA38C5F3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/REMOVE_ALL_PICKUPS_OF_TYPE
	static auto nh_0x27F9D613092159CF = rage::scrEngine::GetNativeHandler(0x27F9D613092159CF);
	rage::scrEngine::RegisterNativeHandler(0x27F9D613092159CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x27F9D613092159CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_ALL_PROJECTILES_OF_TYPE
	static auto nh_0xFC52E0F37E446528 = rage::scrEngine::GetNativeHandler(0xFC52E0F37E446528);
	rage::scrEngine::RegisterNativeHandler(0xFC52E0F37E446528, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC52E0F37E446528(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/REMOVE_ALL_SHOCKING_EVENTS
	static auto nh_0xEAABE8FDFA21274C = rage::scrEngine::GetNativeHandler(0xEAABE8FDFA21274C);
	rage::scrEngine::RegisterNativeHandler(0xEAABE8FDFA21274C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEAABE8FDFA21274C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY
	static auto nh_0x715135F4B82AC90D = rage::scrEngine::GetNativeHandler(0x715135F4B82AC90D);
	rage::scrEngine::RegisterNativeHandler(0x715135F4B82AC90D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x715135F4B82AC90D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_ANIM_DICT
	static auto nh_0xF66A602F829E2A06 = rage::scrEngine::GetNativeHandler(0xF66A602F829E2A06);
	rage::scrEngine::RegisterNativeHandler(0xF66A602F829E2A06, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF66A602F829E2A06(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_ANIM_SET
	static auto nh_0x16350528F93024B3 = rage::scrEngine::GetNativeHandler(0x16350528F93024B3);
	rage::scrEngine::RegisterNativeHandler(0x16350528F93024B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x16350528F93024B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REMOVE_BLIP
	static auto nh_0x86A652570E5F25DD = rage::scrEngine::GetNativeHandler(0x86A652570E5F25DD);
	rage::scrEngine::RegisterNativeHandler(0x86A652570E5F25DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x86A652570E5F25DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_CLIP_SET
	static auto nh_0x01F73A131C18CD94 = rage::scrEngine::GetNativeHandler(0x01F73A131C18CD94);
	rage::scrEngine::RegisterNativeHandler(0x01F73A131C18CD94, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x01F73A131C18CD94(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/REMOVE_COVER_POINT
	static auto nh_0xAE287C923D891715 = rage::scrEngine::GetNativeHandler(0xAE287C923D891715);
	rage::scrEngine::RegisterNativeHandler(0xAE287C923D891715, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE287C923D891715(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REMOVE_CUTSCENE
	static auto nh_0x440AF51A3462B86F = rage::scrEngine::GetNativeHandler(0x440AF51A3462B86F);
	rage::scrEngine::RegisterNativeHandler(0x440AF51A3462B86F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x440AF51A3462B86F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REMOVE_CUT_FILE
	static auto nh_0xD00D76A7DFC9D852 = rage::scrEngine::GetNativeHandler(0xD00D76A7DFC9D852);
	rage::scrEngine::RegisterNativeHandler(0xD00D76A7DFC9D852, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD00D76A7DFC9D852(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_DECAL
	static auto nh_0xED3F346429CCD659 = rage::scrEngine::GetNativeHandler(0xED3F346429CCD659);
	rage::scrEngine::RegisterNativeHandler(0xED3F346429CCD659, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED3F346429CCD659(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_DECALS_FROM_OBJECT
	static auto nh_0xCCF71CBDDF5B6CB9 = rage::scrEngine::GetNativeHandler(0xCCF71CBDDF5B6CB9);
	rage::scrEngine::RegisterNativeHandler(0xCCF71CBDDF5B6CB9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCCF71CBDDF5B6CB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_DECALS_FROM_OBJECT_FACING
	static auto nh_0xA6F6F70FDC6D144C = rage::scrEngine::GetNativeHandler(0xA6F6F70FDC6D144C);
	rage::scrEngine::RegisterNativeHandler(0xA6F6F70FDC6D144C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6F6F70FDC6D144C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_DECALS_FROM_VEHICLE
	static auto nh_0xE91F1B65F2B48D57 = rage::scrEngine::GetNativeHandler(0xE91F1B65F2B48D57);
	rage::scrEngine::RegisterNativeHandler(0xE91F1B65F2B48D57, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE91F1B65F2B48D57(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_DECALS_IN_RANGE
	static auto nh_0x5D6B2D4830A67C62 = rage::scrEngine::GetNativeHandler(0x5D6B2D4830A67C62);
	rage::scrEngine::RegisterNativeHandler(0x5D6B2D4830A67C62, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D6B2D4830A67C62(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
	static auto nh_0x264AC28B01B353A5 = rage::scrEngine::GetNativeHandler(0x264AC28B01B353A5);
	rage::scrEngine::RegisterNativeHandler(0x264AC28B01B353A5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x264AC28B01B353A5(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/REMOVE_DOOR_FROM_SYSTEM
	static auto nh_0x464D8E1427156FE4 = rage::scrEngine::GetNativeHandler(0x464D8E1427156FE4);
	rage::scrEngine::RegisterNativeHandler(0x464D8E1427156FE4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x464D8E1427156FE4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REMOVE_DRY_VOLUME
	static auto nh_0x7bcaa6e7 = rage::scrEngine::GetNativeHandler(0x7bcaa6e7);
	rage::scrEngine::RegisterNativeHandler(0x7bcaa6e7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7bcaa6e7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP
	static auto nh_0x18EB48CFC41F2EA0 = rage::scrEngine::GetNativeHandler(0x18EB48CFC41F2EA0);
	rage::scrEngine::RegisterNativeHandler(0x18EB48CFC41F2EA0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x18EB48CFC41F2EA0(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/REMOVE_FORCED_OBJECT
	static auto nh_0x61B6775E83C0DB6F = rage::scrEngine::GetNativeHandler(0x61B6775E83C0DB6F);
	rage::scrEngine::RegisterNativeHandler(0x61B6775E83C0DB6F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x61B6775E83C0DB6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ITEMSET/REMOVE_FROM_ITEMSET
	static auto nh_0x25E68244B0177686 = rage::scrEngine::GetNativeHandler(0x25E68244B0177686);
	rage::scrEngine::RegisterNativeHandler(0x25E68244B0177686, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x25E68244B0177686(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_GROUP
	static auto nh_0x8EB2F69076AF7053 = rage::scrEngine::GetNativeHandler(0x8EB2F69076AF7053);
	rage::scrEngine::RegisterNativeHandler(0x8EB2F69076AF7053, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8EB2F69076AF7053(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_IPL
	static auto nh_0xEE6C5AD3ECE0A82D = rage::scrEngine::GetNativeHandler(0xEE6C5AD3ECE0A82D);
	rage::scrEngine::RegisterNativeHandler(0xEE6C5AD3ECE0A82D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEE6C5AD3ECE0A82D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_MODEL_FROM_CREATOR_BUDGET
	static auto nh_0xF086AD9354FAC3A3 = rage::scrEngine::GetNativeHandler(0xF086AD9354FAC3A3);
	rage::scrEngine::RegisterNativeHandler(0xF086AD9354FAC3A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF086AD9354FAC3A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/REMOVE_MODEL_HIDE
	static auto nh_0xD9E3006FB3CBD765 = rage::scrEngine::GetNativeHandler(0xD9E3006FB3CBD765);
	rage::scrEngine::RegisterNativeHandler(0xD9E3006FB3CBD765, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9E3006FB3CBD765(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/REMOVE_MODEL_SWAP
	static auto nh_0x033C0F9A64E229AE = rage::scrEngine::GetNativeHandler(0x033C0F9A64E229AE);
	rage::scrEngine::RegisterNativeHandler(0x033C0F9A64E229AE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x033C0F9A64E229AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REMOVE_MP_GAMER_TAG
	static auto nh_0x31698AA80E0223F8 = rage::scrEngine::GetNativeHandler(0x31698AA80E0223F8);
	rage::scrEngine::RegisterNativeHandler(0x31698AA80E0223F8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31698AA80E0223F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REMOVE_MULTIPLAYER_BANK_CASH
	static auto nh_0xC7C6789AA1CFEDD0 = rage::scrEngine::GetNativeHandler(0xC7C6789AA1CFEDD0);
	rage::scrEngine::RegisterNativeHandler(0xC7C6789AA1CFEDD0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7C6789AA1CFEDD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REMOVE_MULTIPLAYER_HUD_CASH
	static auto nh_0x968F270E39141ECA = rage::scrEngine::GetNativeHandler(0x968F270E39141ECA);
	rage::scrEngine::RegisterNativeHandler(0x968F270E39141ECA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x968F270E39141ECA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REMOVE_MULTIPLAYER_WALLET_CASH
	static auto nh_0x95CF81BD06EE1887 = rage::scrEngine::GetNativeHandler(0x95CF81BD06EE1887);
	rage::scrEngine::RegisterNativeHandler(0x95CF81BD06EE1887, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95CF81BD06EE1887(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_NAMED_PTFX_ASSET
	static auto nh_0x5F61EBBE1A00F96D = rage::scrEngine::GetNativeHandler(0x5F61EBBE1A00F96D);
	rage::scrEngine::RegisterNativeHandler(0x5F61EBBE1A00F96D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5F61EBBE1A00F96D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/REMOVE_NAVMESH_BLOCKING_OBJECT
	static auto nh_0x46399A7895957C0E = rage::scrEngine::GetNativeHandler(0x46399A7895957C0E);
	rage::scrEngine::RegisterNativeHandler(0x46399A7895957C0E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x46399A7895957C0E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/REMOVE_NAVMESH_REQUIRED_REGIONS
	static auto nh_0x916F0A3CDEC3445E = rage::scrEngine::GetNativeHandler(0x916F0A3CDEC3445E);
	rage::scrEngine::RegisterNativeHandler(0x916F0A3CDEC3445E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x916F0A3CDEC3445E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/REMOVE_OBJECT_HIGH_DETAIL_MODEL
	static auto nh_0x4A39DB43E47CF3AA = rage::scrEngine::GetNativeHandler(0x4A39DB43E47CF3AA);
	rage::scrEngine::RegisterNativeHandler(0x4A39DB43E47CF3AA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A39DB43E47CF3AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_PARTICLE_FX
	static auto nh_0xC401503DFE8D53CF = rage::scrEngine::GetNativeHandler(0xC401503DFE8D53CF);
	rage::scrEngine::RegisterNativeHandler(0xC401503DFE8D53CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC401503DFE8D53CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_PARTICLE_FX_FROM_ENTITY
	static auto nh_0xB8FEAEEBCC127425 = rage::scrEngine::GetNativeHandler(0xB8FEAEEBCC127425);
	rage::scrEngine::RegisterNativeHandler(0xB8FEAEEBCC127425, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8FEAEEBCC127425(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_PARTICLE_FX_IN_RANGE
	static auto nh_0xDD19FA1C6D657305 = rage::scrEngine::GetNativeHandler(0xDD19FA1C6D657305);
	rage::scrEngine::RegisterNativeHandler(0xDD19FA1C6D657305, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD19FA1C6D657305(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_PED_DEFENSIVE_AREA
	static auto nh_0x74D4E028107450A9 = rage::scrEngine::GetNativeHandler(0x74D4E028107450A9);
	rage::scrEngine::RegisterNativeHandler(0x74D4E028107450A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74D4E028107450A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_PED_ELEGANTLY
	static auto nh_0xAC6D445B994DF95E = rage::scrEngine::GetNativeHandler(0xAC6D445B994DF95E);
	rage::scrEngine::RegisterNativeHandler(0xAC6D445B994DF95E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAC6D445B994DF95E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_PED_FROM_GROUP
	static auto nh_0xED74007FFB146BC2 = rage::scrEngine::GetNativeHandler(0xED74007FFB146BC2);
	rage::scrEngine::RegisterNativeHandler(0xED74007FFB146BC2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED74007FFB146BC2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_PED_HELMET
	static auto nh_0xA7B2458D0AD6DED8 = rage::scrEngine::GetNativeHandler(0xA7B2458D0AD6DED8);
	rage::scrEngine::RegisterNativeHandler(0xA7B2458D0AD6DED8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7B2458D0AD6DED8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_PED_PREFERRED_COVER_SET
	static auto nh_0xFDDB234CF74073D9 = rage::scrEngine::GetNativeHandler(0xFDDB234CF74073D9);
	rage::scrEngine::RegisterNativeHandler(0xFDDB234CF74073D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDDB234CF74073D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/REMOVE_PICKUP
	static auto nh_0x3288D8ACAECD2AB2 = rage::scrEngine::GetNativeHandler(0x3288D8ACAECD2AB2);
	rage::scrEngine::RegisterNativeHandler(0x3288D8ACAECD2AB2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3288D8ACAECD2AB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_PICK_UP_ROPE_FOR_CARGOBOB
	static auto nh_0x9768CF648F54C804 = rage::scrEngine::GetNativeHandler(0x9768CF648F54C804);
	rage::scrEngine::RegisterNativeHandler(0x9768CF648F54C804, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9768CF648F54C804(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/REMOVE_PLAYER_HELMET
	static auto nh_0xF3AC26D3CC576528 = rage::scrEngine::GetNativeHandler(0xF3AC26D3CC576528);
	rage::scrEngine::RegisterNativeHandler(0xF3AC26D3CC576528, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF3AC26D3CC576528(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REMOVE_POP_MULTIPLIER_AREA
	static auto nh_0xB129E447A2EDA4BF = rage::scrEngine::GetNativeHandler(0xB129E447A2EDA4BF);
	rage::scrEngine::RegisterNativeHandler(0xB129E447A2EDA4BF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB129E447A2EDA4BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/REMOVE_POP_MULTIPLIER_SPHERE
	static auto nh_0xE6869BECDD8F2403 = rage::scrEngine::GetNativeHandler(0xE6869BECDD8F2403);
	rage::scrEngine::RegisterNativeHandler(0xE6869BECDD8F2403, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6869BECDD8F2403(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/REMOVE_PORTAL_SETTINGS_OVERRIDE
	static auto nh_0xB4BBFD9CD8B3922B = rage::scrEngine::GetNativeHandler(0xB4BBFD9CD8B3922B);
	rage::scrEngine::RegisterNativeHandler(0xB4BBFD9CD8B3922B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB4BBFD9CD8B3922B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REMOVE_PTFX_ASSET
	static auto nh_0x88C6814073DD4A73 = rage::scrEngine::GetNativeHandler(0x88C6814073DD4A73);
	rage::scrEngine::RegisterNativeHandler(0x88C6814073DD4A73, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88C6814073DD4A73(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_RELATIONSHIP_GROUP
	static auto nh_0xB6BA2444AB393DA2 = rage::scrEngine::GetNativeHandler(0xB6BA2444AB393DA2);
	rage::scrEngine::RegisterNativeHandler(0xB6BA2444AB393DA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB6BA2444AB393DA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REMOVE_REPLACE_TEXTURE
	static auto nh_0xa896b20a = rage::scrEngine::GetNativeHandler(0xa896b20a);
	rage::scrEngine::RegisterNativeHandler(0xa896b20a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xa896b20a(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_ROAD_NODE_SPEED_ZONE (result cleaner only)
	AddResultCleaner(0x1033371FC8E842A7, ResultCleaner<bool>);

	// GRAPHICS/REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE
	static auto nh_0xF44A5456AC3F4F97 = rage::scrEngine::GetNativeHandler(0xF44A5456AC3F4F97);
	rage::scrEngine::RegisterNativeHandler(0xF44A5456AC3F4F97, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF44A5456AC3F4F97(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_SCENARIO_BLOCKING_AREA
	static auto nh_0x31D16B74C6E29D66 = rage::scrEngine::GetNativeHandler(0x31D16B74C6E29D66);
	rage::scrEngine::RegisterNativeHandler(0x31D16B74C6E29D66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31D16B74C6E29D66(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_SCENARIO_BLOCKING_AREAS
	static auto nh_0xD37401D78A929A49 = rage::scrEngine::GetNativeHandler(0xD37401D78A929A49);
	rage::scrEngine::RegisterNativeHandler(0xD37401D78A929A49, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD37401D78A929A49(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/REMOVE_SCRIPT_FIRE
	static auto nh_0x7FF548385680673F = rage::scrEngine::GetNativeHandler(0x7FF548385680673F);
	rage::scrEngine::RegisterNativeHandler(0x7FF548385680673F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7FF548385680673F(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/REMOVE_SHOCKING_EVENT (result cleaner only)
	AddResultCleaner(0x2CDA538C44C6CCE5, ResultCleaner<bool>);

	// EVENT/REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS
	static auto nh_0x340F1415B68AEADE = rage::scrEngine::GetNativeHandler(0x340F1415B68AEADE);
	rage::scrEngine::RegisterNativeHandler(0x340F1415B68AEADE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x340F1415B68AEADE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REMOVE_STATE_BAG_CHANGE_HANDLER
	static auto nh_0xd36be661 = rage::scrEngine::GetNativeHandler(0xd36be661);
	rage::scrEngine::RegisterNativeHandler(0xd36be661, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd36be661(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REMOVE_STEALTH_MODE_ASSET
	static auto nh_0x9219857D21F0E842 = rage::scrEngine::GetNativeHandler(0x9219857D21F0E842);
	rage::scrEngine::RegisterNativeHandler(0x9219857D21F0E842, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9219857D21F0E842(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_TCMODIFIER_OVERRIDE
	static auto nh_0x15E33297C3E8DC60 = rage::scrEngine::GetNativeHandler(0x15E33297C3E8DC60);
	rage::scrEngine::RegisterNativeHandler(0x15E33297C3E8DC60, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x15E33297C3E8DC60(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REMOVE_TIMECYCLE_MODIFIER
	static auto nh_0x36df8612 = rage::scrEngine::GetNativeHandler(0x36df8612);
	rage::scrEngine::RegisterNativeHandler(0x36df8612, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x36df8612(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REMOVE_TIMECYCLE_MODIFIER_VAR
	static auto nh_0x5a5e0d05 = rage::scrEngine::GetNativeHandler(0x5a5e0d05);
	rage::scrEngine::RegisterNativeHandler(0x5a5e0d05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5a5e0d05(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA
	static auto nh_0x46A1E1A299EC4BBA = rage::scrEngine::GetNativeHandler(0x46A1E1A299EC4BBA);
	rage::scrEngine::RegisterNativeHandler(0x46A1E1A299EC4BBA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x46A1E1A299EC4BBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_ASSET
	static auto nh_0xACE699C71AB9DEB5 = rage::scrEngine::GetNativeHandler(0xACE699C71AB9DEB5);
	rage::scrEngine::RegisterNativeHandler(0xACE699C71AB9DEB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xACE699C71AB9DEB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA
	static auto nh_0xE30524E1871F481D = rage::scrEngine::GetNativeHandler(0xE30524E1871F481D);
	rage::scrEngine::RegisterNativeHandler(0xE30524E1871F481D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE30524E1871F481D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REMOVE_VEHICLE_CREW_EMBLEM
	static auto nh_0xD2300034310557E4 = rage::scrEngine::GetNativeHandler(0xD2300034310557E4);
	rage::scrEngine::RegisterNativeHandler(0xD2300034310557E4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2300034310557E4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_HIGH_DETAIL_MODEL
	static auto nh_0x00689CDE5F7C6787 = rage::scrEngine::GetNativeHandler(0x00689CDE5F7C6787);
	rage::scrEngine::RegisterNativeHandler(0x00689CDE5F7C6787, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x00689CDE5F7C6787(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_MOD
	static auto nh_0x92D619E420858204 = rage::scrEngine::GetNativeHandler(0x92D619E420858204);
	rage::scrEngine::RegisterNativeHandler(0x92D619E420858204, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92D619E420858204(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_RECORDING
	static auto nh_0xF1160ACCF98A3FC8 = rage::scrEngine::GetNativeHandler(0xF1160ACCF98A3FC8);
	rage::scrEngine::RegisterNativeHandler(0xF1160ACCF98A3FC8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF1160ACCF98A3FC8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_STUCK_CHECK
	static auto nh_0x8386BFB614D06749 = rage::scrEngine::GetNativeHandler(0x8386BFB614D06749);
	rage::scrEngine::RegisterNativeHandler(0x8386BFB614D06749, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8386BFB614D06749(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_UPSIDEDOWN_CHECK
	static auto nh_0xC53EB42A499A7E90 = rage::scrEngine::GetNativeHandler(0xC53EB42A499A7E90);
	rage::scrEngine::RegisterNativeHandler(0xC53EB42A499A7E90, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC53EB42A499A7E90(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REMOVE_VEHICLE_WINDOW
	static auto nh_0xA711568EEDB43069 = rage::scrEngine::GetNativeHandler(0xA711568EEDB43069);
	rage::scrEngine::RegisterNativeHandler(0xA711568EEDB43069, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA711568EEDB43069(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/REMOVE_WAYPOINT_RECORDING
	static auto nh_0xFF1B8B4AA1C25DC8 = rage::scrEngine::GetNativeHandler(0xFF1B8B4AA1C25DC8);
	rage::scrEngine::RegisterNativeHandler(0xFF1B8B4AA1C25DC8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFF1B8B4AA1C25DC8(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_WEAPON_ASSET
	static auto nh_0xAA08EF13F341C8FC = rage::scrEngine::GetNativeHandler(0xAA08EF13F341C8FC);
	rage::scrEngine::RegisterNativeHandler(0xAA08EF13F341C8FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA08EF13F341C8FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_WEAPON_COMPONENT_FROM_PED
	static auto nh_0x1E8BE90C74FB4C09 = rage::scrEngine::GetNativeHandler(0x1E8BE90C74FB4C09);
	rage::scrEngine::RegisterNativeHandler(0x1E8BE90C74FB4C09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E8BE90C74FB4C09(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT
	static auto nh_0xF7D82B0D66777611 = rage::scrEngine::GetNativeHandler(0xF7D82B0D66777611);
	rage::scrEngine::RegisterNativeHandler(0xF7D82B0D66777611, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF7D82B0D66777611(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REMOVE_WEAPON_FROM_PED
	static auto nh_0x4899CB088EDF59B8 = rage::scrEngine::GetNativeHandler(0x4899CB088EDF59B8);
	rage::scrEngine::RegisterNativeHandler(0x4899CB088EDF59B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4899CB088EDF59B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/RENDER_FAKE_PICKUP_GLOW
	static auto nh_0x3430676B11CDF21D = rage::scrEngine::GetNativeHandler(0x3430676B11CDF21D);
	rage::scrEngine::RegisterNativeHandler(0x3430676B11CDF21D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3430676B11CDF21D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/RENDER_SCRIPT_CAMS
	static auto nh_0x07E5B515DB0636FC = rage::scrEngine::GetNativeHandler(0x07E5B515DB0636FC);
	rage::scrEngine::RegisterNativeHandler(0x07E5B515DB0636FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x07E5B515DB0636FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REPLACE_HUD_COLOUR
	static auto nh_0x1CCC708F0F850613 = rage::scrEngine::GetNativeHandler(0x1CCC708F0F850613);
	rage::scrEngine::RegisterNativeHandler(0x1CCC708F0F850613, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CCC708F0F850613(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REPLACE_HUD_COLOUR_WITH_RGBA
	static auto nh_0xF314CF4F0211894E = rage::scrEngine::GetNativeHandler(0xF314CF4F0211894E);
	rage::scrEngine::RegisterNativeHandler(0xF314CF4F0211894E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF314CF4F0211894E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/REPORT_CRIME
	static auto nh_0xE9B09589827545E7 = rage::scrEngine::GetNativeHandler(0xE9B09589827545E7);
	rage::scrEngine::RegisterNativeHandler(0xE9B09589827545E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE9B09589827545E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/REPORT_POLICE_SPOTTED_PLAYER
	static auto nh_0xDC64D2C53493ED12 = rage::scrEngine::GetNativeHandler(0xDC64D2C53493ED12);
	rage::scrEngine::RegisterNativeHandler(0xDC64D2C53493ED12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC64D2C53493ED12(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REQUEST_ACTION_MODE_ASSET
	static auto nh_0x290E2780BB7AA598 = rage::scrEngine::GetNativeHandler(0x290E2780BB7AA598);
	rage::scrEngine::RegisterNativeHandler(0x290E2780BB7AA598, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x290E2780BB7AA598(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_ADDITIONAL_COLLISION_AT_COORD
	static auto nh_0xC9156DC11411A9EA = rage::scrEngine::GetNativeHandler(0xC9156DC11411A9EA);
	rage::scrEngine::RegisterNativeHandler(0xC9156DC11411A9EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9156DC11411A9EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REQUEST_ADDITIONAL_TEXT
	static auto nh_0x71A78003C8E71424 = rage::scrEngine::GetNativeHandler(0x71A78003C8E71424);
	rage::scrEngine::RegisterNativeHandler(0x71A78003C8E71424, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x71A78003C8E71424(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/REQUEST_ADDITIONAL_TEXT_FOR_DLC
	static auto nh_0x6009F9F1AE90D8A6 = rage::scrEngine::GetNativeHandler(0x6009F9F1AE90D8A6);
	rage::scrEngine::RegisterNativeHandler(0x6009F9F1AE90D8A6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6009F9F1AE90D8A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/REQUEST_AMBIENT_AUDIO_BANK
	static auto nh_0xFE02FFBED8CA9D99 = rage::scrEngine::GetNativeHandler(0xFE02FFBED8CA9D99);
	rage::scrEngine::RegisterNativeHandler(0xFE02FFBED8CA9D99, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFE02FFBED8CA9D99(cxt);
	});
	        
	AddResultCleaner(0xFE02FFBED8CA9D99, ResultCleaner<bool>);

	// STREAMING/REQUEST_ANIM_DICT
	static auto nh_0xD3BD40951412FEF6 = rage::scrEngine::GetNativeHandler(0xD3BD40951412FEF6);
	rage::scrEngine::RegisterNativeHandler(0xD3BD40951412FEF6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD3BD40951412FEF6(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_ANIM_SET
	static auto nh_0x6EA47DAE7FAD0EED = rage::scrEngine::GetNativeHandler(0x6EA47DAE7FAD0EED);
	rage::scrEngine::RegisterNativeHandler(0x6EA47DAE7FAD0EED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6EA47DAE7FAD0EED(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_CLIP_SET
	static auto nh_0xD2A71E1A77418A49 = rage::scrEngine::GetNativeHandler(0xD2A71E1A77418A49);
	rage::scrEngine::RegisterNativeHandler(0xD2A71E1A77418A49, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD2A71E1A77418A49(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_COLLISION_AT_COORD
	static auto nh_0x07503F7948F491A7 = rage::scrEngine::GetNativeHandler(0x07503F7948F491A7);
	rage::scrEngine::RegisterNativeHandler(0x07503F7948F491A7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x07503F7948F491A7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_COLLISION_FOR_MODEL
	static auto nh_0x923CB32A3B874FCB = rage::scrEngine::GetNativeHandler(0x923CB32A3B874FCB);
	rage::scrEngine::RegisterNativeHandler(0x923CB32A3B874FCB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x923CB32A3B874FCB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/REQUEST_COMMERCE_ITEM_IMAGE (result cleaner only)
	AddResultCleaner(0xA2F952104FC6DD4B, ResultCleaner<bool>);

	// CUTSCENE/REQUEST_CUTSCENE
	static auto nh_0x7A86743F475D9E09 = rage::scrEngine::GetNativeHandler(0x7A86743F475D9E09);
	rage::scrEngine::RegisterNativeHandler(0x7A86743F475D9E09, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7A86743F475D9E09(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REQUEST_CUTSCENE_WITH_PLAYBACK_LIST
	static auto nh_0xC23DE0E91C30B58C = rage::scrEngine::GetNativeHandler(0xC23DE0E91C30B58C);
	rage::scrEngine::RegisterNativeHandler(0xC23DE0E91C30B58C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC23DE0E91C30B58C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/REQUEST_CUT_FILE
	static auto nh_0x06A3524161C502BA = rage::scrEngine::GetNativeHandler(0x06A3524161C502BA);
	rage::scrEngine::RegisterNativeHandler(0x06A3524161C502BA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x06A3524161C502BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_IPL
	static auto nh_0x41B4893843BBDB74 = rage::scrEngine::GetNativeHandler(0x41B4893843BBDB74);
	rage::scrEngine::RegisterNativeHandler(0x41B4893843BBDB74, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x41B4893843BBDB74(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_MENU_PED_MODEL
	static auto nh_0xA0261AEF7ACFC51E = rage::scrEngine::GetNativeHandler(0xA0261AEF7ACFC51E);
	rage::scrEngine::RegisterNativeHandler(0xA0261AEF7ACFC51E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA0261AEF7ACFC51E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/REQUEST_MISSION_AUDIO_BANK
	static auto nh_0x7345BDD95E62E0F2 = rage::scrEngine::GetNativeHandler(0x7345BDD95E62E0F2);
	rage::scrEngine::RegisterNativeHandler(0x7345BDD95E62E0F2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7345BDD95E62E0F2(cxt);
	});
	        
	AddResultCleaner(0x7345BDD95E62E0F2, ResultCleaner<bool>);

	// STREAMING/REQUEST_MODEL
	static auto nh_0x963D27A58DF860AC = rage::scrEngine::GetNativeHandler(0x963D27A58DF860AC);
	rage::scrEngine::RegisterNativeHandler(0x963D27A58DF860AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x963D27A58DF860AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_MODELS_IN_ROOM
	static auto nh_0x8A7A40100EDFEC58 = rage::scrEngine::GetNativeHandler(0x8A7A40100EDFEC58);
	rage::scrEngine::RegisterNativeHandler(0x8A7A40100EDFEC58, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8A7A40100EDFEC58(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_NAMED_PTFX_ASSET
	static auto nh_0xB80D8756B4668AB6 = rage::scrEngine::GetNativeHandler(0xB80D8756B4668AB6);
	rage::scrEngine::RegisterNativeHandler(0xB80D8756B4668AB6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB80D8756B4668AB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REQUEST_PEDHEADSHOT_IMG_UPLOAD (result cleaner only)
	AddResultCleaner(0xF0DAEF2F545BEE25, ResultCleaner<bool>);

	// PED/REQUEST_PED_VEHICLE_VISIBILITY_TRACKING
	static auto nh_0x2BC338A7B21F4608 = rage::scrEngine::GetNativeHandler(0x2BC338A7B21F4608);
	rage::scrEngine::RegisterNativeHandler(0x2BC338A7B21F4608, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2BC338A7B21F4608(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REQUEST_PED_VISIBILITY_TRACKING
	static auto nh_0x7D7A2E43E74E2EB8 = rage::scrEngine::GetNativeHandler(0x7D7A2E43E74E2EB8);
	rage::scrEngine::RegisterNativeHandler(0x7D7A2E43E74E2EB8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7D7A2E43E74E2EB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/REQUEST_PTFX_ASSET
	static auto nh_0x944955FB2A3935C8 = rage::scrEngine::GetNativeHandler(0x944955FB2A3935C8);
	rage::scrEngine::RegisterNativeHandler(0x944955FB2A3935C8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x944955FB2A3935C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/REQUEST_RESOURCE_FILE_SET
	static auto nh_0xe7490533 = rage::scrEngine::GetNativeHandler(0xe7490533);
	rage::scrEngine::RegisterNativeHandler(0xe7490533, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xe7490533(cxt);
	});
	        
	AddResultCleaner(0xe7490533, ResultCleaner<bool>);

	// GRAPHICS/REQUEST_SCALEFORM_MOVIE
	static auto nh_0x11FE353CF9733E6F = rage::scrEngine::GetNativeHandler(0x11FE353CF9733E6F);
	rage::scrEngine::RegisterNativeHandler(0x11FE353CF9733E6F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x11FE353CF9733E6F(cxt);
	});
	        
	AddResultCleaner(0x11FE353CF9733E6F, ResultCleaner<int>);

	// GRAPHICS/REQUEST_SCALEFORM_MOVIE_INSTANCE
	static auto nh_0xC514489CFB8AF806 = rage::scrEngine::GetNativeHandler(0xC514489CFB8AF806);
	rage::scrEngine::RegisterNativeHandler(0xC514489CFB8AF806, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC514489CFB8AF806(cxt);
	});
	        
	AddResultCleaner(0xC514489CFB8AF806, ResultCleaner<int>);

	// GRAPHICS/REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED
	static auto nh_0xBD06C611BB9048C2 = rage::scrEngine::GetNativeHandler(0xBD06C611BB9048C2);
	rage::scrEngine::RegisterNativeHandler(0xBD06C611BB9048C2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBD06C611BB9048C2(cxt);
	});
	        
	AddResultCleaner(0xBD06C611BB9048C2, ResultCleaner<int>);

	// GRAPHICS/REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN
	static auto nh_0x65E7E78842E74CDB = rage::scrEngine::GetNativeHandler(0x65E7E78842E74CDB);
	rage::scrEngine::RegisterNativeHandler(0x65E7E78842E74CDB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x65E7E78842E74CDB(cxt);
	});
	        
	AddResultCleaner(0x65E7E78842E74CDB, ResultCleaner<int>);

	// GRAPHICS/REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE
	static auto nh_0x9304881D6F6537EA = rage::scrEngine::GetNativeHandler(0x9304881D6F6537EA);
	rage::scrEngine::RegisterNativeHandler(0x9304881D6F6537EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9304881D6F6537EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/REQUEST_SCRIPT
	static auto nh_0x6EB5F71AA68F2E8E = rage::scrEngine::GetNativeHandler(0x6EB5F71AA68F2E8E);
	rage::scrEngine::RegisterNativeHandler(0x6EB5F71AA68F2E8E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6EB5F71AA68F2E8E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/REQUEST_SCRIPT_AUDIO_BANK
	static auto nh_0x2F844A8B08D76685 = rage::scrEngine::GetNativeHandler(0x2F844A8B08D76685);
	rage::scrEngine::RegisterNativeHandler(0x2F844A8B08D76685, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2F844A8B08D76685(cxt);
	});
	        
	AddResultCleaner(0x2F844A8B08D76685, ResultCleaner<bool>);

	// SCRIPT/REQUEST_SCRIPT_WITH_NAME_HASH
	static auto nh_0xD62A67D26D9653E6 = rage::scrEngine::GetNativeHandler(0xD62A67D26D9653E6);
	rage::scrEngine::RegisterNativeHandler(0xD62A67D26D9653E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD62A67D26D9653E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REQUEST_STEALTH_MODE_ASSET
	static auto nh_0x2A0A62FCDEE16D4F = rage::scrEngine::GetNativeHandler(0x2A0A62FCDEE16D4F);
	rage::scrEngine::RegisterNativeHandler(0x2A0A62FCDEE16D4F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2A0A62FCDEE16D4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/REQUEST_STREAMED_TEXTURE_DICT
	static auto nh_0xDFA2EF8E04127DD5 = rage::scrEngine::GetNativeHandler(0xDFA2EF8E04127DD5);
	rage::scrEngine::RegisterNativeHandler(0xDFA2EF8E04127DD5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFA2EF8E04127DD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION
	static auto nh_0xD01015C7316AE176 = rage::scrEngine::GetNativeHandler(0xD01015C7316AE176);
	rage::scrEngine::RegisterNativeHandler(0xD01015C7316AE176, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD01015C7316AE176(cxt);
	});
	        
	AddResultCleaner(0xD01015C7316AE176, ResultCleaner<bool>);

	// AUDIO/REQUEST_TENNIS_BANKS
	static auto nh_0x4ADA3F19BE4A6047 = rage::scrEngine::GetNativeHandler(0x4ADA3F19BE4A6047);
	rage::scrEngine::RegisterNativeHandler(0x4ADA3F19BE4A6047, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4ADA3F19BE4A6047(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REQUEST_VEHICLE_ASSET
	static auto nh_0x81A15811460FAB3A = rage::scrEngine::GetNativeHandler(0x81A15811460FAB3A);
	rage::scrEngine::RegisterNativeHandler(0x81A15811460FAB3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81A15811460FAB3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REQUEST_VEHICLE_HIGH_DETAIL_MODEL
	static auto nh_0xA6E9FDCB2C76785E = rage::scrEngine::GetNativeHandler(0xA6E9FDCB2C76785E);
	rage::scrEngine::RegisterNativeHandler(0xA6E9FDCB2C76785E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6E9FDCB2C76785E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/REQUEST_VEHICLE_RECORDING
	static auto nh_0xAF514CABE74CBF15 = rage::scrEngine::GetNativeHandler(0xAF514CABE74CBF15);
	rage::scrEngine::RegisterNativeHandler(0xAF514CABE74CBF15, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAF514CABE74CBF15(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/REQUEST_WAYPOINT_RECORDING
	static auto nh_0x9EEFB62EB27B5792 = rage::scrEngine::GetNativeHandler(0x9EEFB62EB27B5792);
	rage::scrEngine::RegisterNativeHandler(0x9EEFB62EB27B5792, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9EEFB62EB27B5792(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REQUEST_WEAPON_ASSET
	static auto nh_0x5443438F033E29C3 = rage::scrEngine::GetNativeHandler(0x5443438F033E29C3);
	rage::scrEngine::RegisterNativeHandler(0x5443438F033E29C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5443438F033E29C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/REQUEST_WEAPON_HIGH_DETAIL_MODEL
	static auto nh_0x48164DBB970AC3F0 = rage::scrEngine::GetNativeHandler(0x48164DBB970AC3F0);
	rage::scrEngine::RegisterNativeHandler(0x48164DBB970AC3F0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48164DBB970AC3F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/RESERVE_NETWORK_MISSION_OBJECTS
	static auto nh_0x4E5C93BD0C32FBF8 = rage::scrEngine::GetNativeHandler(0x4E5C93BD0C32FBF8);
	rage::scrEngine::RegisterNativeHandler(0x4E5C93BD0C32FBF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4E5C93BD0C32FBF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/RESERVE_NETWORK_MISSION_PEDS
	static auto nh_0xB60FEBA45333D36F = rage::scrEngine::GetNativeHandler(0xB60FEBA45333D36F);
	rage::scrEngine::RegisterNativeHandler(0xB60FEBA45333D36F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB60FEBA45333D36F(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/RESERVE_NETWORK_MISSION_VEHICLES
	static auto nh_0x76B02E21ED27A469 = rage::scrEngine::GetNativeHandler(0x76B02E21ED27A469);
	rage::scrEngine::RegisterNativeHandler(0x76B02E21ED27A469, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x76B02E21ED27A469(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
	static auto nh_0x46E56A7CD1D63C3F = rage::scrEngine::GetNativeHandler(0x46E56A7CD1D63C3F);
	rage::scrEngine::RegisterNativeHandler(0x46E56A7CD1D63C3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46E56A7CD1D63C3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_AI_WEAPON_DAMAGE_MODIFIER
	static auto nh_0xEA16670E7BA4743C = rage::scrEngine::GetNativeHandler(0xEA16670E7BA4743C);
	rage::scrEngine::RegisterNativeHandler(0xEA16670E7BA4743C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA16670E7BA4743C(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/RESET_DEEP_OCEAN_SCALER
	static auto nh_0x5E5E99285AE812DB = rage::scrEngine::GetNativeHandler(0x5E5E99285AE812DB);
	rage::scrEngine::RegisterNativeHandler(0x5E5E99285AE812DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E5E99285AE812DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/RESET_DISPATCH_IDEAL_SPAWN_DISTANCE
	static auto nh_0x77A84429DD9F0A15 = rage::scrEngine::GetNativeHandler(0x77A84429DD9F0A15);
	rage::scrEngine::RegisterNativeHandler(0x77A84429DD9F0A15, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77A84429DD9F0A15(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/RESET_DISPATCH_SPAWN_BLOCKING_AREAS
	static auto nh_0xAC7BFD5C1D83EA75 = rage::scrEngine::GetNativeHandler(0xAC7BFD5C1D83EA75);
	rage::scrEngine::RegisterNativeHandler(0xAC7BFD5C1D83EA75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC7BFD5C1D83EA75(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS
	static auto nh_0xEB2DB0CAD13154B3 = rage::scrEngine::GetNativeHandler(0xEB2DB0CAD13154B3);
	rage::scrEngine::RegisterNativeHandler(0xEB2DB0CAD13154B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEB2DB0CAD13154B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/RESET_ENTITY_ALPHA
	static auto nh_0x9B1E824FFBB7027A = rage::scrEngine::GetNativeHandler(0x9B1E824FFBB7027A);
	rage::scrEngine::RegisterNativeHandler(0x9B1E824FFBB7027A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B1E824FFBB7027A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/RESET_EXCLUSIVE_SCENARIO_GROUP
	static auto nh_0x4202BBCB8684563D = rage::scrEngine::GetNativeHandler(0x4202BBCB8684563D);
	rage::scrEngine::RegisterNativeHandler(0x4202BBCB8684563D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4202BBCB8684563D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/RESET_FLY_THROUGH_WINDSCREEN_PARAMS
	static auto nh_0x6d712937 = rage::scrEngine::GetNativeHandler(0x6d712937);
	rage::scrEngine::RegisterNativeHandler(0x6d712937, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6d712937(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RESET_GLOBAL_ACTIONSCRIPT_FLAG
	static auto nh_0xB99C4E4D9499DF29 = rage::scrEngine::GetNativeHandler(0xB99C4E4D9499DF29);
	rage::scrEngine::RegisterNativeHandler(0xB99C4E4D9499DF29, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB99C4E4D9499DF29(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_GROUP_FORMATION_DEFAULT_SPACING
	static auto nh_0x63DAB4CCB3273205 = rage::scrEngine::GetNativeHandler(0x63DAB4CCB3273205);
	rage::scrEngine::RegisterNativeHandler(0x63DAB4CCB3273205, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63DAB4CCB3273205(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RESET_HUD_COMPONENT_VALUES
	static auto nh_0x450930E616475D0D = rage::scrEngine::GetNativeHandler(0x450930E616475D0D);
	rage::scrEngine::RegisterNativeHandler(0x450930E616475D0D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x450930E616475D0D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/RESET_MAPDATA_ENTITY_MATRIX (result cleaner only)
	AddResultCleaner(0x8143fa4f, ResultCleaner<bool>);

	// CFX/RESET_MAP_ZOOM_DATA_LEVEL
	static auto nh_0x11a5b7ed = rage::scrEngine::GetNativeHandler(0x11a5b7ed);
	rage::scrEngine::RegisterNativeHandler(0x11a5b7ed, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11a5b7ed(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/RESET_PARTICLE_FX_OVERRIDE
	static auto nh_0x89C8553DD3274AAE = rage::scrEngine::GetNativeHandler(0x89C8553DD3274AAE);
	rage::scrEngine::RegisterNativeHandler(0x89C8553DD3274AAE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x89C8553DD3274AAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/RESET_PAUSED_RENDERPHASES
	static auto nh_0xE1C8709406F2C41C = rage::scrEngine::GetNativeHandler(0xE1C8709406F2C41C);
	rage::scrEngine::RegisterNativeHandler(0xE1C8709406F2C41C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE1C8709406F2C41C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RESET_PED_AUDIO_FLAGS
	static auto nh_0xF54BB7B61036F335 = rage::scrEngine::GetNativeHandler(0xF54BB7B61036F335);
	rage::scrEngine::RegisterNativeHandler(0xF54BB7B61036F335, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF54BB7B61036F335(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_IN_VEHICLE_CONTEXT
	static auto nh_0x22EF8FF8778030EB = rage::scrEngine::GetNativeHandler(0x22EF8FF8778030EB);
	rage::scrEngine::RegisterNativeHandler(0x22EF8FF8778030EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x22EF8FF8778030EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_LAST_VEHICLE
	static auto nh_0xBB8DE8CF6A8DD8BB = rage::scrEngine::GetNativeHandler(0xBB8DE8CF6A8DD8BB);
	rage::scrEngine::RegisterNativeHandler(0xBB8DE8CF6A8DD8BB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB8DE8CF6A8DD8BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/RESET_PED_MODEL_PERSONALITY
	static auto nh_0x79a12861 = rage::scrEngine::GetNativeHandler(0x79a12861);
	rage::scrEngine::RegisterNativeHandler(0x79a12861, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x79a12861(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_MOVEMENT_CLIPSET
	static auto nh_0xAA74EC0CB0AAEA2C = rage::scrEngine::GetNativeHandler(0xAA74EC0CB0AAEA2C);
	rage::scrEngine::RegisterNativeHandler(0xAA74EC0CB0AAEA2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA74EC0CB0AAEA2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_RAGDOLL_TIMER
	static auto nh_0x9FA4664CF62E47E8 = rage::scrEngine::GetNativeHandler(0x9FA4664CF62E47E8);
	rage::scrEngine::RegisterNativeHandler(0x9FA4664CF62E47E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9FA4664CF62E47E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_STRAFE_CLIPSET
	static auto nh_0x20510814175EA477 = rage::scrEngine::GetNativeHandler(0x20510814175EA477);
	rage::scrEngine::RegisterNativeHandler(0x20510814175EA477, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x20510814175EA477(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_VISIBLE_DAMAGE
	static auto nh_0x3AC1F7B898F30C05 = rage::scrEngine::GetNativeHandler(0x3AC1F7B898F30C05);
	rage::scrEngine::RegisterNativeHandler(0x3AC1F7B898F30C05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3AC1F7B898F30C05(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESET_PED_WEAPON_MOVEMENT_CLIPSET
	static auto nh_0x97B0DB5B4AA74E77 = rage::scrEngine::GetNativeHandler(0x97B0DB5B4AA74E77);
	rage::scrEngine::RegisterNativeHandler(0x97B0DB5B4AA74E77, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97B0DB5B4AA74E77(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESET_PLAYER_ARREST_STATE
	static auto nh_0x2D03E13C460760D6 = rage::scrEngine::GetNativeHandler(0x2D03E13C460760D6);
	rage::scrEngine::RegisterNativeHandler(0x2D03E13C460760D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D03E13C460760D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESET_PLAYER_INPUT_GAIT
	static auto nh_0x19531C47A2ABD691 = rage::scrEngine::GetNativeHandler(0x19531C47A2ABD691);
	rage::scrEngine::RegisterNativeHandler(0x19531C47A2ABD691, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19531C47A2ABD691(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESET_PLAYER_STAMINA
	static auto nh_0xA6F312FCCE9C1DFE = rage::scrEngine::GetNativeHandler(0xA6F312FCCE9C1DFE);
	rage::scrEngine::RegisterNativeHandler(0xA6F312FCCE9C1DFE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6F312FCCE9C1DFE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RESET_RETICULE_VALUES
	static auto nh_0x12782CE0A636E9F0 = rage::scrEngine::GetNativeHandler(0x12782CE0A636E9F0);
	rage::scrEngine::RegisterNativeHandler(0x12782CE0A636E9F0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x12782CE0A636E9F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/RESET_SCENARIO_GROUPS_ENABLED
	static auto nh_0xDD902D0349AFAD3A = rage::scrEngine::GetNativeHandler(0xDD902D0349AFAD3A);
	rage::scrEngine::RegisterNativeHandler(0xDD902D0349AFAD3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD902D0349AFAD3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/RESET_SCENARIO_TYPES_ENABLED
	static auto nh_0x0D40EE2A7F2B2D6D = rage::scrEngine::GetNativeHandler(0x0D40EE2A7F2B2D6D);
	rage::scrEngine::RegisterNativeHandler(0x0D40EE2A7F2B2D6D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0D40EE2A7F2B2D6D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/RESET_SCRIPT_GFX_ALIGN
	static auto nh_0xE3A3DB414A373DAB = rage::scrEngine::GetNativeHandler(0xE3A3DB414A373DAB);
	rage::scrEngine::RegisterNativeHandler(0xE3A3DB414A373DAB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3A3DB414A373DAB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RESET_TREVOR_RAGE
	static auto nh_0xE78503B10C4314E0 = rage::scrEngine::GetNativeHandler(0xE78503B10C4314E0);
	rage::scrEngine::RegisterNativeHandler(0xE78503B10C4314E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE78503B10C4314E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/RESET_VEHICLE_PEDS_CAN_STAND_ON_TOP_FLAG
	static auto nh_0xdf62cfe2 = rage::scrEngine::GetNativeHandler(0xdf62cfe2);
	rage::scrEngine::RegisterNativeHandler(0xdf62cfe2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xdf62cfe2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RESET_VEHICLE_STARTUP_REV_SOUND
	static auto nh_0xD2DCCD8E16E20997 = rage::scrEngine::GetNativeHandler(0xD2DCCD8E16E20997);
	rage::scrEngine::RegisterNativeHandler(0xD2DCCD8E16E20997, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2DCCD8E16E20997(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/RESET_VEHICLE_STUCK_TIMER
	static auto nh_0xD7591B0065AFAA7A = rage::scrEngine::GetNativeHandler(0xD7591B0065AFAA7A);
	rage::scrEngine::RegisterNativeHandler(0xD7591B0065AFAA7A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7591B0065AFAA7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/RESET_VEHICLE_WHEELS
	static auto nh_0x21D2E5662C1F6FED = rage::scrEngine::GetNativeHandler(0x21D2E5662C1F6FED);
	rage::scrEngine::RegisterNativeHandler(0x21D2E5662C1F6FED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21D2E5662C1F6FED(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESET_WANTED_LEVEL_DIFFICULTY
	static auto nh_0xB9D0DD990DC141DD = rage::scrEngine::GetNativeHandler(0xB9D0DD990DC141DD);
	rage::scrEngine::RegisterNativeHandler(0xB9D0DD990DC141DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB9D0DD990DC141DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/RESET_WATER
	static auto nh_0x1da4791 = rage::scrEngine::GetNativeHandler(0x1da4791);
	rage::scrEngine::RegisterNativeHandler(0x1da4791, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1da4791(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESET_WORLD_BOUNDARY_FOR_PLAYER
	static auto nh_0xDA1DF03D5A315F4E = rage::scrEngine::GetNativeHandler(0xDA1DF03D5A315F4E);
	rage::scrEngine::RegisterNativeHandler(0xDA1DF03D5A315F4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA1DF03D5A315F4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/RESTART_FRONTEND_MENU
	static auto nh_0x10706DC6AD2D49C0 = rage::scrEngine::GetNativeHandler(0x10706DC6AD2D49C0);
	rage::scrEngine::RegisterNativeHandler(0x10706DC6AD2D49C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x10706DC6AD2D49C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/RESTART_GAME
	static auto nh_0xE574A662ACAEFBB1 = rage::scrEngine::GetNativeHandler(0xE574A662ACAEFBB1);
	rage::scrEngine::RegisterNativeHandler(0xE574A662ACAEFBB1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE574A662ACAEFBB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/RESTART_SCRIPTED_CONVERSATION
	static auto nh_0x9AEB285D1818C9AC = rage::scrEngine::GetNativeHandler(0x9AEB285D1818C9AC);
	rage::scrEngine::RegisterNativeHandler(0x9AEB285D1818C9AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AEB285D1818C9AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/RESTORE_PLAYER_STAMINA
	static auto nh_0xA352C1B864CAFD33 = rage::scrEngine::GetNativeHandler(0xA352C1B864CAFD33);
	rage::scrEngine::RegisterNativeHandler(0xA352C1B864CAFD33, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA352C1B864CAFD33(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/RESURRECT_PED
	static auto nh_0x71BC8E838B9C6035 = rage::scrEngine::GetNativeHandler(0x71BC8E838B9C6035);
	rage::scrEngine::RegisterNativeHandler(0x71BC8E838B9C6035, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x71BC8E838B9C6035(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/REVIVE_INJURED_PED
	static auto nh_0x8D8ACD8388CD99CE = rage::scrEngine::GetNativeHandler(0x8D8ACD8388CD99CE);
	rage::scrEngine::RegisterNativeHandler(0x8D8ACD8388CD99CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8D8ACD8388CD99CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ROLL_DOWN_WINDOW
	static auto nh_0x7AD9E6CE657D69E3 = rage::scrEngine::GetNativeHandler(0x7AD9E6CE657D69E3);
	rage::scrEngine::RegisterNativeHandler(0x7AD9E6CE657D69E3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7AD9E6CE657D69E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ROLL_DOWN_WINDOWS
	static auto nh_0x85796B0549DDE156 = rage::scrEngine::GetNativeHandler(0x85796B0549DDE156);
	rage::scrEngine::RegisterNativeHandler(0x85796B0549DDE156, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x85796B0549DDE156(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/ROLL_UP_WINDOW
	static auto nh_0x602E548F46E24D59 = rage::scrEngine::GetNativeHandler(0x602E548F46E24D59);
	rage::scrEngine::RegisterNativeHandler(0x602E548F46E24D59, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x602E548F46E24D59(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_ARE_TEXTURES_LOADED (result cleaner only)
	AddResultCleaner(0xF2D0E6A75CC05597, ResultCleaner<bool>);

	// PHYSICS/ROPE_CONVERT_TO_SIMPLE
	static auto nh_0x5389D48EFA2F079A = rage::scrEngine::GetNativeHandler(0x5389D48EFA2F079A);
	rage::scrEngine::RegisterNativeHandler(0x5389D48EFA2F079A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5389D48EFA2F079A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_DRAW_SHADOW_ENABLED
	static auto nh_0xF159A63806BB5BA8 = rage::scrEngine::GetNativeHandler(0xF159A63806BB5BA8);
	rage::scrEngine::RegisterNativeHandler(0xF159A63806BB5BA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF159A63806BB5BA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_FORCE_LENGTH
	static auto nh_0xD009F759A723DB1B = rage::scrEngine::GetNativeHandler(0xD009F759A723DB1B);
	rage::scrEngine::RegisterNativeHandler(0xD009F759A723DB1B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD009F759A723DB1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_GET_DISTANCE_BETWEEN_ENDS (result cleaner only)
	AddResultCleaner(0x73040398DFF9A4A6, ResultCleaner<float>);

	// PHYSICS/ROPE_LOAD_TEXTURES
	static auto nh_0x9B9039DBF2D258C1 = rage::scrEngine::GetNativeHandler(0x9B9039DBF2D258C1);
	rage::scrEngine::RegisterNativeHandler(0x9B9039DBF2D258C1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B9039DBF2D258C1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_RESET_LENGTH
	static auto nh_0xC16DE94D9BEA14A0 = rage::scrEngine::GetNativeHandler(0xC16DE94D9BEA14A0);
	rage::scrEngine::RegisterNativeHandler(0xC16DE94D9BEA14A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC16DE94D9BEA14A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_SET_UPDATE_ORDER
	static auto nh_0xDC57A637A20006ED = rage::scrEngine::GetNativeHandler(0xDC57A637A20006ED);
	rage::scrEngine::RegisterNativeHandler(0xDC57A637A20006ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDC57A637A20006ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_SET_UPDATE_PINVERTS
	static auto nh_0xC8D667EE52114ABA = rage::scrEngine::GetNativeHandler(0xC8D667EE52114ABA);
	rage::scrEngine::RegisterNativeHandler(0xC8D667EE52114ABA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8D667EE52114ABA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/ROPE_UNLOAD_TEXTURES
	static auto nh_0x6CE36C35C1AC8163 = rage::scrEngine::GetNativeHandler(0x6CE36C35C1AC8163);
	rage::scrEngine::RegisterNativeHandler(0x6CE36C35C1AC8163, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6CE36C35C1AC8163(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/ROUND (result cleaner only)
	AddResultCleaner(0xF2DB717A73826179, ResultCleaner<int>);

	// GRAPHICS/SAVE_HIGH_QUALITY_PHOTO (result cleaner only)
	AddResultCleaner(0x3DEC726C25A11BAC, ResultCleaner<bool>);

	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL
	static auto nh_0xC58424BA936EB458 = rage::scrEngine::GetNativeHandler(0xC58424BA936EB458);
	rage::scrEngine::RegisterNativeHandler(0xC58424BA936EB458, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC58424BA936EB458(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT
	static auto nh_0xD69736AAE04DB51A = rage::scrEngine::GetNativeHandler(0xD69736AAE04DB51A);
	rage::scrEngine::RegisterNativeHandler(0xD69736AAE04DB51A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD69736AAE04DB51A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT
	static auto nh_0xC3D0841A0CC546A6 = rage::scrEngine::GetNativeHandler(0xC3D0841A0CC546A6);
	rage::scrEngine::RegisterNativeHandler(0xC3D0841A0CC546A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3D0841A0CC546A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING
	static auto nh_0xEC52C631A1831C03 = rage::scrEngine::GetNativeHandler(0xEC52C631A1831C03);
	rage::scrEngine::RegisterNativeHandler(0xEC52C631A1831C03, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC52C631A1831C03(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING
	static auto nh_0xE83A3E3557A56640 = rage::scrEngine::GetNativeHandler(0xE83A3E3557A56640);
	rage::scrEngine::RegisterNativeHandler(0xE83A3E3557A56640, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE83A3E3557A56640(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
	static auto nh_0xBA7148484BD90365 = rage::scrEngine::GetNativeHandler(0xBA7148484BD90365);
	rage::scrEngine::RegisterNativeHandler(0xBA7148484BD90365, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBA7148484BD90365(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN
	static auto nh_0xF511F759238A5122 = rage::scrEngine::GetNativeHandler(0xF511F759238A5122);
	rage::scrEngine::RegisterNativeHandler(0xF511F759238A5122, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF511F759238A5122(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SCRIPT_OVERRIDES_WIND_ELEVATION
	static auto nh_0x70B8EC8FC108A634 = rage::scrEngine::GetNativeHandler(0x70B8EC8FC108A634);
	rage::scrEngine::RegisterNativeHandler(0x70B8EC8FC108A634, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70B8EC8FC108A634(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SCRIPT_RACE_GET_PLAYER_SPLIT_TIME
	static auto nh_0x8EF5573A1F801A5C = rage::scrEngine::GetNativeHandler(0x8EF5573A1F801A5C);
	rage::scrEngine::RegisterNativeHandler(0x8EF5573A1F801A5C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8EF5573A1F801A5C(cxt);
	});
	        
	AddResultCleaner(0x8EF5573A1F801A5C, ResultCleaner<bool>);

	// MISC/SCRIPT_RACE_INIT
	static auto nh_0x0A60017F841A54F2 = rage::scrEngine::GetNativeHandler(0x0A60017F841A54F2);
	rage::scrEngine::RegisterNativeHandler(0x0A60017F841A54F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A60017F841A54F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SCRIPT_RACE_PLAYER_HIT_CHECKPOINT
	static auto nh_0x1BB299305C3E8C13 = rage::scrEngine::GetNativeHandler(0x1BB299305C3E8C13);
	rage::scrEngine::RegisterNativeHandler(0x1BB299305C3E8C13, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1BB299305C3E8C13(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SCRIPT_RACE_SHUTDOWN
	static auto nh_0x1FF6BF9A63E5757F = rage::scrEngine::GetNativeHandler(0x1FF6BF9A63E5757F);
	rage::scrEngine::RegisterNativeHandler(0x1FF6BF9A63E5757F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1FF6BF9A63E5757F(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (result cleaner only)
	AddResultCleaner(0x30B4FA1C82DD4B9F, ResultCleaner<int>);

	// SCRIPT/SCRIPT_THREAD_ITERATOR_RESET
	static auto nh_0xDADFADA5A20143A8 = rage::scrEngine::GetNativeHandler(0xDADFADA5A20143A8);
	rage::scrEngine::RegisterNativeHandler(0xDADFADA5A20143A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDADFADA5A20143A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST
	static auto nh_0x55DF6DB45179236E = rage::scrEngine::GetNativeHandler(0x55DF6DB45179236E);
	rage::scrEngine::RegisterNativeHandler(0x55DF6DB45179236E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55DF6DB45179236E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST
	static auto nh_0x2330C12A7A605D16 = rage::scrEngine::GetNativeHandler(0x2330C12A7A605D16);
	rage::scrEngine::RegisterNativeHandler(0x2330C12A7A605D16, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2330C12A7A605D16(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/SC_GAMERDATA_GET_BOOL
	static auto nh_0x8416FE4E4629D7D7 = rage::scrEngine::GetNativeHandler(0x8416FE4E4629D7D7);
	rage::scrEngine::RegisterNativeHandler(0x8416FE4E4629D7D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8416FE4E4629D7D7(cxt);
	});
	        
	AddResultCleaner(0x8416FE4E4629D7D7, ResultCleaner<bool>);

	// SOCIALCLUB/SC_GAMERDATA_GET_FLOAT
	static auto nh_0xA770C8EEC6FB2AC5 = rage::scrEngine::GetNativeHandler(0xA770C8EEC6FB2AC5);
	rage::scrEngine::RegisterNativeHandler(0xA770C8EEC6FB2AC5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA770C8EEC6FB2AC5(cxt);
	});
	        
	AddResultCleaner(0xA770C8EEC6FB2AC5, ResultCleaner<bool>);

	// SOCIALCLUB/SC_GAMERDATA_GET_INT
	static auto nh_0xC85A7127E7AD02AA = rage::scrEngine::GetNativeHandler(0xC85A7127E7AD02AA);
	rage::scrEngine::RegisterNativeHandler(0xC85A7127E7AD02AA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC85A7127E7AD02AA(cxt);
	});
	        
	AddResultCleaner(0xC85A7127E7AD02AA, ResultCleaner<bool>);

	// SOCIALCLUB/SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX (result cleaner only)
	AddResultCleaner(0x93028F1DB42BFD08, ResultCleaner<bool>);

	// SOCIALCLUB/SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX (result cleaner only)
	AddResultCleaner(0xBB8EA16ECBC976C4, ResultCleaner<int>);

	// SOCIALCLUB/SC_INBOX_GET_TOTAL_NUM_MESSAGES (result cleaner only)
	AddResultCleaner(0x03A93FF1A2CA0864, ResultCleaner<int>);

	// SOCIALCLUB/SC_INBOX_MESSAGE_DO_APPLY (result cleaner only)
	AddResultCleaner(0x9A2C8064B6C1E41A, ResultCleaner<bool>);

	// SOCIALCLUB/SC_INBOX_MESSAGE_GET_DATA_INT
	static auto nh_0xA00EFE4082C4056E = rage::scrEngine::GetNativeHandler(0xA00EFE4082C4056E);
	rage::scrEngine::RegisterNativeHandler(0xA00EFE4082C4056E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA00EFE4082C4056E(cxt);
	});
	        
	AddResultCleaner(0xA00EFE4082C4056E, ResultCleaner<bool>);

	// SOCIALCLUB/SC_INBOX_MESSAGE_GET_DATA_STRING
	static auto nh_0x7572EF42FC6A9B6D = rage::scrEngine::GetNativeHandler(0x7572EF42FC6A9B6D);
	rage::scrEngine::RegisterNativeHandler(0x7572EF42FC6A9B6D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7572EF42FC6A9B6D(cxt);
	});
	        
	AddResultCleaner(0x7572EF42FC6A9B6D, ResultCleaner<bool>);

	// SOCIALCLUB/SC_INBOX_MESSAGE_GET_UGCDATA
	static auto nh_0x69D82604A1A5A254 = rage::scrEngine::GetNativeHandler(0x69D82604A1A5A254);
	rage::scrEngine::RegisterNativeHandler(0x69D82604A1A5A254, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x69D82604A1A5A254(cxt);
	});
	        
	AddResultCleaner(0x69D82604A1A5A254, ResultCleaner<bool>);

	// SOCIALCLUB/SC_LICENSEPLATE_ADD
	static auto nh_0x1989C6E6F67E76A8 = rage::scrEngine::GetNativeHandler(0x1989C6E6F67E76A8);
	rage::scrEngine::RegisterNativeHandler(0x1989C6E6F67E76A8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x1989C6E6F67E76A8(cxt);
	});
	        
	AddResultCleaner(0x1989C6E6F67E76A8, ResultCleaner<bool>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_ADD_IS_PENDING (result cleaner only)
	AddResultCleaner(0x07C61676E5BB52CD, ResultCleaner<bool>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_ADD_STATUS (result cleaner only)
	AddResultCleaner(0x8147FFF6A718E1AD, ResultCleaner<int>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_COUNT (result cleaner only)
	AddResultCleaner(0x700569DBA175A77C, ResultCleaner<int>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_ISVALID_IS_PENDING (result cleaner only)
	AddResultCleaner(0xD302E99EDF0449CF, ResultCleaner<bool>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_ISVALID_STATUS (result cleaner only)
	AddResultCleaner(0x5C4EBFFA98BDB41C, ResultCleaner<int>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_PLATE (result cleaner only)
	AddResultCleaner(0x1D4446A62D35B0D0, ResultCleaner<char*>);

	// SOCIALCLUB/SC_LICENSEPLATE_GET_PLATE_DATA (result cleaner only)
	AddResultCleaner(0x2E89990DDFF670C3, ResultCleaner<char*>);

	// SOCIALCLUB/SC_LICENSEPLATE_ISVALID
	static auto nh_0x0F73393BAC7E6730 = rage::scrEngine::GetNativeHandler(0x0F73393BAC7E6730);
	rage::scrEngine::RegisterNativeHandler(0x0F73393BAC7E6730, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0F73393BAC7E6730(cxt);
	});
	        
	AddResultCleaner(0x0F73393BAC7E6730, ResultCleaner<bool>);

	// SOCIALCLUB/SC_LICENSEPLATE_SET_PLATE_DATA
	static auto nh_0xD0EE05FE193646EA = rage::scrEngine::GetNativeHandler(0xD0EE05FE193646EA);
	rage::scrEngine::RegisterNativeHandler(0xD0EE05FE193646EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD0EE05FE193646EA(cxt);
	});
	        
	AddResultCleaner(0xD0EE05FE193646EA, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PRESENCE_ATTR_SET_FLOAT (result cleaner only)
	AddResultCleaner(0xC4C4575F62534A24, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PRESENCE_ATTR_SET_INT (result cleaner only)
	AddResultCleaner(0x1F1E9682483697C7, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PRESENCE_ATTR_SET_STRING
	static auto nh_0x287F1F75D2803595 = rage::scrEngine::GetNativeHandler(0x287F1F75D2803595);
	rage::scrEngine::RegisterNativeHandler(0x287F1F75D2803595, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x287F1F75D2803595(cxt);
	});
	        
	AddResultCleaner(0x287F1F75D2803595, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PROFANITY_CHECK_STRING
	static auto nh_0x75632C5ECD7ED843 = rage::scrEngine::GetNativeHandler(0x75632C5ECD7ED843);
	rage::scrEngine::RegisterNativeHandler(0x75632C5ECD7ED843, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x75632C5ECD7ED843(cxt);
	});
	        
	AddResultCleaner(0x75632C5ECD7ED843, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PROFANITY_GET_CHECK_IS_PENDING (result cleaner only)
	AddResultCleaner(0x82E4A58BABC15AE7, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PROFANITY_GET_CHECK_IS_VALID (result cleaner only)
	AddResultCleaner(0x1753344C770358AE, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PROFANITY_GET_STRING_PASSED (result cleaner only)
	AddResultCleaner(0x85535ACF97FC0969, ResultCleaner<bool>);

	// SOCIALCLUB/SC_PROFANITY_GET_STRING_STATUS (result cleaner only)
	AddResultCleaner(0x930DE22F07B1CCE3, ResultCleaner<int>);

	// GRAPHICS/SEETHROUGH_RESET
	static auto nh_0x70A64C0234EF522C = rage::scrEngine::GetNativeHandler(0x70A64C0234EF522C);
	rage::scrEngine::RegisterNativeHandler(0x70A64C0234EF522C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70A64C0234EF522C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SEETHROUGH_SET_COLOR_NEAR
	static auto nh_0x1086127B3A63505E = rage::scrEngine::GetNativeHandler(0x1086127B3A63505E);
	rage::scrEngine::RegisterNativeHandler(0x1086127B3A63505E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1086127B3A63505E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SEETHROUGH_SET_HEATSCALE
	static auto nh_0xD7D0B00177485411 = rage::scrEngine::GetNativeHandler(0xD7D0B00177485411);
	rage::scrEngine::RegisterNativeHandler(0xD7D0B00177485411, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7D0B00177485411(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SELECT_ENTITY_AT_CURSOR (result cleaner only)
	AddResultCleaner(0x3dd8130f, ResultCleaner<int>);

	// CFX/SELECT_ENTITY_AT_POS (result cleaner only)
	AddResultCleaner(0xafe8d405, ResultCleaner<int>);

	// CFX/SEND_DUI_MESSAGE
	static auto nh_0xcd380da9 = rage::scrEngine::GetNativeHandler(0xcd380da9);
	rage::scrEngine::RegisterNativeHandler(0xcd380da9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xcd380da9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SEND_DUI_MOUSE_DOWN
	static auto nh_0x5d01f191 = rage::scrEngine::GetNativeHandler(0x5d01f191);
	rage::scrEngine::RegisterNativeHandler(0x5d01f191, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5d01f191(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SEND_DUI_MOUSE_MOVE
	static auto nh_0xd9d7a0aa = rage::scrEngine::GetNativeHandler(0xd9d7a0aa);
	rage::scrEngine::RegisterNativeHandler(0xd9d7a0aa, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd9d7a0aa(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SEND_DUI_MOUSE_UP
	static auto nh_0x1d735b93 = rage::scrEngine::GetNativeHandler(0x1d735b93);
	rage::scrEngine::RegisterNativeHandler(0x1d735b93, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1d735b93(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SEND_DUI_MOUSE_WHEEL
	static auto nh_0x2d62133a = rage::scrEngine::GetNativeHandler(0x2d62133a);
	rage::scrEngine::RegisterNativeHandler(0x2d62133a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2d62133a(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SEND_LOADING_SCREEN_MESSAGE
	static auto nh_0x8bbe6cc0 = rage::scrEngine::GetNativeHandler(0x8bbe6cc0);
	rage::scrEngine::RegisterNativeHandler(0x8bbe6cc0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8bbe6cc0(cxt);
	});
	        
	AddResultCleaner(0x8bbe6cc0, ResultCleaner<bool>);

	// CFX/SEND_NUI_MESSAGE
	static auto nh_0x78608acb = rage::scrEngine::GetNativeHandler(0x78608acb);
	rage::scrEngine::RegisterNativeHandler(0x78608acb, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x78608acb(cxt);
	});
	        
	AddResultCleaner(0x78608acb, ResultCleaner<bool>);

	// SYSTEM/SETTIMERA
	static auto nh_0xC1B1E9A034A63A62 = rage::scrEngine::GetNativeHandler(0xC1B1E9A034A63A62);
	rage::scrEngine::RegisterNativeHandler(0xC1B1E9A034A63A62, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1B1E9A034A63A62(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/SETTIMERB
	static auto nh_0x5AE11BC36633DE4E = rage::scrEngine::GetNativeHandler(0x5AE11BC36633DE4E);
	rage::scrEngine::RegisterNativeHandler(0x5AE11BC36633DE4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AE11BC36633DE4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/SETUP_SHOP_PED_APPAREL_QUERY (result cleaner only)
	AddResultCleaner(0x50F457823CE6EB5F, ResultCleaner<int>);

	// FILES/SETUP_SHOP_PED_APPAREL_QUERY_TU (result cleaner only)
	AddResultCleaner(0x9BDF59818B1E38C1, ResultCleaner<int>);

	// FILES/SETUP_SHOP_PED_OUTFIT_QUERY (result cleaner only)
	AddResultCleaner(0xF3FBE2D50A6A8C28, ResultCleaner<int>);

	// HUD/SET_ABILITY_BAR_VALUE
	static auto nh_0x9969599CCFF5D85E = rage::scrEngine::GetNativeHandler(0x9969599CCFF5D85E);
	rage::scrEngine::RegisterNativeHandler(0x9969599CCFF5D85E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9969599CCFF5D85E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN
	static auto nh_0x406137F8EF90EAF5 = rage::scrEngine::GetNativeHandler(0x406137F8EF90EAF5);
	rage::scrEngine::RegisterNativeHandler(0x406137F8EF90EAF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x406137F8EF90EAF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AGGRESSIVE_HORNS
	static auto nh_0x395BF71085D1B1D9 = rage::scrEngine::GetNativeHandler(0x395BF71085D1B1D9);
	rage::scrEngine::RegisterNativeHandler(0x395BF71085D1B1D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x395BF71085D1B1D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_AIM_COOLDOWN
	static auto nh_0xa42a3dbf = rage::scrEngine::GetNativeHandler(0xa42a3dbf);
	rage::scrEngine::RegisterNativeHandler(0xa42a3dbf, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xa42a3dbf(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE
	static auto nh_0xCA7DC8329F0A1E9E = rage::scrEngine::GetNativeHandler(0xCA7DC8329F0A1E9E);
	rage::scrEngine::RegisterNativeHandler(0xCA7DC8329F0A1E9E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCA7DC8329F0A1E9E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
	static auto nh_0x66460DEDDD417254 = rage::scrEngine::GetNativeHandler(0x66460DEDDD417254);
	rage::scrEngine::RegisterNativeHandler(0x66460DEDDD417254, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66460DEDDD417254(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_AI_WEAPON_DAMAGE_MODIFIER
	static auto nh_0x1B1E2A40A65B8521 = rage::scrEngine::GetNativeHandler(0x1B1E2A40A65B8521);
	rage::scrEngine::RegisterNativeHandler(0x1B1E2A40A65B8521, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B1E2A40A65B8521(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE
	static auto nh_0x608207E7A8FB787C = rage::scrEngine::GetNativeHandler(0x608207E7A8FB787C);
	rage::scrEngine::RegisterNativeHandler(0x608207E7A8FB787C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x608207E7A8FB787C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_ALL_RANDOM_PEDS_FLEE
	static auto nh_0x056E0FE8534C2949 = rage::scrEngine::GetNativeHandler(0x056E0FE8534C2949);
	rage::scrEngine::RegisterNativeHandler(0x056E0FE8534C2949, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x056E0FE8534C2949(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
	static auto nh_0x471D2FF42A94B4F2 = rage::scrEngine::GetNativeHandler(0x471D2FF42A94B4F2);
	rage::scrEngine::RegisterNativeHandler(0x471D2FF42A94B4F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x471D2FF42A94B4F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_ALL_VEHICLE_GENERATORS_ACTIVE
	static auto nh_0x34AD89078831A4BC = rage::scrEngine::GetNativeHandler(0x34AD89078831A4BC);
	rage::scrEngine::RegisterNativeHandler(0x34AD89078831A4BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x34AD89078831A4BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA
	static auto nh_0xC12321827687FE4D = rage::scrEngine::GetNativeHandler(0xC12321827687FE4D);
	rage::scrEngine::RegisterNativeHandler(0xC12321827687FE4D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC12321827687FE4D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_AMBIENT_PEDS_DROP_MONEY
	static auto nh_0x6B0E6172C9A4D902 = rage::scrEngine::GetNativeHandler(0x6B0E6172C9A4D902);
	rage::scrEngine::RegisterNativeHandler(0x6B0E6172C9A4D902, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B0E6172C9A4D902(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME
	static auto nh_0x0B919E1FB47CC4E0 = rage::scrEngine::GetNativeHandler(0x0B919E1FB47CC4E0);
	rage::scrEngine::RegisterNativeHandler(0x0B919E1FB47CC4E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0B919E1FB47CC4E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME
	static auto nh_0x90B6DA738A9A25DA = rage::scrEngine::GetNativeHandler(0x90B6DA738A9A25DA);
	rage::scrEngine::RegisterNativeHandler(0x90B6DA738A9A25DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x90B6DA738A9A25DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_VOICE_NAME
	static auto nh_0x6C8065A3B780185B = rage::scrEngine::GetNativeHandler(0x6C8065A3B780185B);
	rage::scrEngine::RegisterNativeHandler(0x6C8065A3B780185B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6C8065A3B780185B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_VOICE_NAME_HASH
	static auto nh_0x9A53DED9921DE990 = rage::scrEngine::GetNativeHandler(0x9A53DED9921DE990);
	rage::scrEngine::RegisterNativeHandler(0x9A53DED9921DE990, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A53DED9921DE990(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_ZONE_LIST_STATE
	static auto nh_0x9748FA4DE50CCE3E = rage::scrEngine::GetNativeHandler(0x9748FA4DE50CCE3E);
	rage::scrEngine::RegisterNativeHandler(0x9748FA4DE50CCE3E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9748FA4DE50CCE3E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT
	static auto nh_0xF3638DAE8C4045E1 = rage::scrEngine::GetNativeHandler(0xF3638DAE8C4045E1);
	rage::scrEngine::RegisterNativeHandler(0xF3638DAE8C4045E1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF3638DAE8C4045E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_ZONE_STATE
	static auto nh_0xBDA07E5950085E46 = rage::scrEngine::GetNativeHandler(0xBDA07E5950085E46);
	rage::scrEngine::RegisterNativeHandler(0xBDA07E5950085E46, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBDA07E5950085E46(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AMBIENT_ZONE_STATE_PERSISTENT
	static auto nh_0x1D6650420CEC9D3B = rage::scrEngine::GetNativeHandler(0x1D6650420CEC9D3B);
	rage::scrEngine::RegisterNativeHandler(0x1D6650420CEC9D3B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1D6650420CEC9D3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_AMMO_IN_CLIP (result cleaner only)
	AddResultCleaner(0xDCD2A934D65CB497, ResultCleaner<bool>);

	// AUDIO/SET_ANIMAL_MOOD
	static auto nh_0xCC97B29285B1DC3B = rage::scrEngine::GetNativeHandler(0xCC97B29285B1DC3B);
	rage::scrEngine::RegisterNativeHandler(0xCC97B29285B1DC3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC97B29285B1DC3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_ANIM_LOOPED
	static auto nh_0x70033C3CC29A1FF4 = rage::scrEngine::GetNativeHandler(0x70033C3CC29A1FF4);
	rage::scrEngine::RegisterNativeHandler(0x70033C3CC29A1FF4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x70033C3CC29A1FF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_ANIM_PHASE
	static auto nh_0xDDF3CB5A0A4C0B49 = rage::scrEngine::GetNativeHandler(0xDDF3CB5A0A4C0B49);
	rage::scrEngine::RegisterNativeHandler(0xDDF3CB5A0A4C0B49, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xDDF3CB5A0A4C0B49(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_ANIM_RATE
	static auto nh_0x032D49C5E359C847 = rage::scrEngine::GetNativeHandler(0x032D49C5E359C847);
	rage::scrEngine::RegisterNativeHandler(0x032D49C5E359C847, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x032D49C5E359C847(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_ANIM_WEIGHT
	static auto nh_0x207F1A47C0342F48 = rage::scrEngine::GetNativeHandler(0x207F1A47C0342F48);
	rage::scrEngine::RegisterNativeHandler(0x207F1A47C0342F48, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x207F1A47C0342F48(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_ARTIFICIAL_LIGHTS_STATE
	static auto nh_0x1268615ACE24D504 = rage::scrEngine::GetNativeHandler(0x1268615ACE24D504);
	rage::scrEngine::RegisterNativeHandler(0x1268615ACE24D504, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1268615ACE24D504(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AUDIO_FLAG
	static auto nh_0xB9EFD5C25018725A = rage::scrEngine::GetNativeHandler(0xB9EFD5C25018725A);
	rage::scrEngine::RegisterNativeHandler(0xB9EFD5C25018725A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB9EFD5C25018725A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AUDIO_SCENE_VARIABLE
	static auto nh_0xEF21A9EF089A2668 = rage::scrEngine::GetNativeHandler(0xEF21A9EF089A2668);
	rage::scrEngine::RegisterNativeHandler(0xEF21A9EF089A2668, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEF21A9EF089A2668(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AUDIO_SCRIPT_CLEANUP_TIME
	static auto nh_0xA5F377B175A699C5 = rage::scrEngine::GetNativeHandler(0xA5F377B175A699C5);
	rage::scrEngine::RegisterNativeHandler(0xA5F377B175A699C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5F377B175A699C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AUDIO_SPECIAL_EFFECT_MODE
	static auto nh_0x12561FCBB62D5B9C = rage::scrEngine::GetNativeHandler(0x12561FCBB62D5B9C);
	rage::scrEngine::RegisterNativeHandler(0x12561FCBB62D5B9C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x12561FCBB62D5B9C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_AUDIO_SUBMIX_EFFECT_PARAM_FLOAT
	static auto nh_0x9a209b3c = rage::scrEngine::GetNativeHandler(0x9a209b3c);
	rage::scrEngine::RegisterNativeHandler(0x9a209b3c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9a209b3c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_AUDIO_SUBMIX_EFFECT_PARAM_INT
	static auto nh_0x77fae2b8 = rage::scrEngine::GetNativeHandler(0x77fae2b8);
	rage::scrEngine::RegisterNativeHandler(0x77fae2b8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77fae2b8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_AUDIO_SUBMIX_EFFECT_RADIO_FX
	static auto nh_0xaaa94d53 = rage::scrEngine::GetNativeHandler(0xaaa94d53);
	rage::scrEngine::RegisterNativeHandler(0xaaa94d53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xaaa94d53(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_AUDIO_SUBMIX_OUTPUT_VOLUMES
	static auto nh_0x825dc0d1 = rage::scrEngine::GetNativeHandler(0x825dc0d1);
	rage::scrEngine::RegisterNativeHandler(0x825dc0d1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x825dc0d1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_AUDIO_VEHICLE_PRIORITY
	static auto nh_0xE5564483E407F914 = rage::scrEngine::GetNativeHandler(0xE5564483E407F914);
	rage::scrEngine::RegisterNativeHandler(0xE5564483E407F914, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5564483E407F914(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE
	static auto nh_0x9F343285A00B4BB6 = rage::scrEngine::GetNativeHandler(0x9F343285A00B4BB6);
	rage::scrEngine::RegisterNativeHandler(0x9F343285A00B4BB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F343285A00B4BB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE
	static auto nh_0xD2B315B6689D537D = rage::scrEngine::GetNativeHandler(0xD2B315B6689D537D);
	rage::scrEngine::RegisterNativeHandler(0xD2B315B6689D537D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2B315B6689D537D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_BACKFACECULLING
	static auto nh_0x23BA6B0C2AD7B0D3 = rage::scrEngine::GetNativeHandler(0x23BA6B0C2AD7B0D3);
	rage::scrEngine::RegisterNativeHandler(0x23BA6B0C2AD7B0D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23BA6B0C2AD7B0D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_BALANCE_ADD_MACHINE
	static auto nh_0x815E5E3073DA1D67 = rage::scrEngine::GetNativeHandler(0x815E5E3073DA1D67);
	rage::scrEngine::RegisterNativeHandler(0x815E5E3073DA1D67, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x815E5E3073DA1D67(cxt);
	});
	        
	AddResultCleaner(0x815E5E3073DA1D67, ResultCleaner<bool>);

	// NETWORK/SET_BALANCE_ADD_MACHINES
	static auto nh_0xB8322EEB38BE7C26 = rage::scrEngine::GetNativeHandler(0xB8322EEB38BE7C26);
	rage::scrEngine::RegisterNativeHandler(0xB8322EEB38BE7C26, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB8322EEB38BE7C26(cxt);
	});
	        
	AddResultCleaner(0xB8322EEB38BE7C26, ResultCleaner<bool>);

	// HUD/SET_BIGMAP_ACTIVE
	static auto nh_0x231C8F89D0539D8F = rage::scrEngine::GetNativeHandler(0x231C8F89D0539D8F);
	rage::scrEngine::RegisterNativeHandler(0x231C8F89D0539D8F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x231C8F89D0539D8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_BIKE_ON_STAND
	static auto nh_0x9CFA4896C3A53CBB = rage::scrEngine::GetNativeHandler(0x9CFA4896C3A53CBB);
	rage::scrEngine::RegisterNativeHandler(0x9CFA4896C3A53CBB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9CFA4896C3A53CBB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_BIT
	static auto nh_0x933D6A9EEC1BACD0 = rage::scrEngine::GetNativeHandler(0x933D6A9EEC1BACD0);
	rage::scrEngine::RegisterNativeHandler(0x933D6A9EEC1BACD0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x933D6A9EEC1BACD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_BITS_IN_RANGE
	static auto nh_0x8EF07E15701D61ED = rage::scrEngine::GetNativeHandler(0x8EF07E15701D61ED);
	rage::scrEngine::RegisterNativeHandler(0x8EF07E15701D61ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8EF07E15701D61ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_ALPHA
	static auto nh_0x45FF974EEE1C8734 = rage::scrEngine::GetNativeHandler(0x45FF974EEE1C8734);
	rage::scrEngine::RegisterNativeHandler(0x45FF974EEE1C8734, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45FF974EEE1C8734(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_AS_FRIENDLY
	static auto nh_0x6F6F290102C02AB4 = rage::scrEngine::GetNativeHandler(0x6F6F290102C02AB4);
	rage::scrEngine::RegisterNativeHandler(0x6F6F290102C02AB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F6F290102C02AB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_AS_MISSION_CREATOR_BLIP
	static auto nh_0x24AC0137444F9FD5 = rage::scrEngine::GetNativeHandler(0x24AC0137444F9FD5);
	rage::scrEngine::RegisterNativeHandler(0x24AC0137444F9FD5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x24AC0137444F9FD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_AS_SHORT_RANGE
	static auto nh_0xBE8BE4FE60E27B72 = rage::scrEngine::GetNativeHandler(0xBE8BE4FE60E27B72);
	rage::scrEngine::RegisterNativeHandler(0xBE8BE4FE60E27B72, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE8BE4FE60E27B72(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_BRIGHT
	static auto nh_0xB203913733F27884 = rage::scrEngine::GetNativeHandler(0xB203913733F27884);
	rage::scrEngine::RegisterNativeHandler(0xB203913733F27884, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB203913733F27884(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_CATEGORY
	static auto nh_0x234CDD44D996FD9A = rage::scrEngine::GetNativeHandler(0x234CDD44D996FD9A);
	rage::scrEngine::RegisterNativeHandler(0x234CDD44D996FD9A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x234CDD44D996FD9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_COLOUR
	static auto nh_0x03D7FB09E75D6B7E = rage::scrEngine::GetNativeHandler(0x03D7FB09E75D6B7E);
	rage::scrEngine::RegisterNativeHandler(0x03D7FB09E75D6B7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x03D7FB09E75D6B7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_COORDS
	static auto nh_0xAE2AF67E9D9AF65D = rage::scrEngine::GetNativeHandler(0xAE2AF67E9D9AF65D);
	rage::scrEngine::RegisterNativeHandler(0xAE2AF67E9D9AF65D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE2AF67E9D9AF65D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_DISPLAY
	static auto nh_0x9029B2F3DA924928 = rage::scrEngine::GetNativeHandler(0x9029B2F3DA924928);
	rage::scrEngine::RegisterNativeHandler(0x9029B2F3DA924928, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9029B2F3DA924928(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_FADE
	static auto nh_0x2AEE8F8390D2298C = rage::scrEngine::GetNativeHandler(0x2AEE8F8390D2298C);
	rage::scrEngine::RegisterNativeHandler(0x2AEE8F8390D2298C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2AEE8F8390D2298C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_FLASHES
	static auto nh_0xB14552383D39CE3E = rage::scrEngine::GetNativeHandler(0xB14552383D39CE3E);
	rage::scrEngine::RegisterNativeHandler(0xB14552383D39CE3E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB14552383D39CE3E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_FLASHES_ALTERNATE
	static auto nh_0x2E8D9498C56DD0D1 = rage::scrEngine::GetNativeHandler(0x2E8D9498C56DD0D1);
	rage::scrEngine::RegisterNativeHandler(0x2E8D9498C56DD0D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E8D9498C56DD0D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_FLASH_INTERVAL
	static auto nh_0xAA51DB313C010A7E = rage::scrEngine::GetNativeHandler(0xAA51DB313C010A7E);
	rage::scrEngine::RegisterNativeHandler(0xAA51DB313C010A7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA51DB313C010A7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_FLASH_TIMER
	static auto nh_0xD3CD6FD297AE87CC = rage::scrEngine::GetNativeHandler(0xD3CD6FD297AE87CC);
	rage::scrEngine::RegisterNativeHandler(0xD3CD6FD297AE87CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD3CD6FD297AE87CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_HIDDEN_ON_LEGEND
	static auto nh_0x54318C915D27E4CE = rage::scrEngine::GetNativeHandler(0x54318C915D27E4CE);
	rage::scrEngine::RegisterNativeHandler(0x54318C915D27E4CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x54318C915D27E4CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_HIGH_DETAIL
	static auto nh_0xE2590BC29220CEBB = rage::scrEngine::GetNativeHandler(0xE2590BC29220CEBB);
	rage::scrEngine::RegisterNativeHandler(0xE2590BC29220CEBB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE2590BC29220CEBB(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_NAME_FROM_TEXT_FILE
	static auto nh_0xEAA0FFE120D92784 = rage::scrEngine::GetNativeHandler(0xEAA0FFE120D92784);
	rage::scrEngine::RegisterNativeHandler(0xEAA0FFE120D92784, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEAA0FFE120D92784(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_NAME_TO_PLAYER_NAME
	static auto nh_0x127DE7B20C60A6A3 = rage::scrEngine::GetNativeHandler(0x127DE7B20C60A6A3);
	rage::scrEngine::RegisterNativeHandler(0x127DE7B20C60A6A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x127DE7B20C60A6A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_PRIORITY
	static auto nh_0xAE9FC9EF6A9FAC79 = rage::scrEngine::GetNativeHandler(0xAE9FC9EF6A9FAC79);
	rage::scrEngine::RegisterNativeHandler(0xAE9FC9EF6A9FAC79, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE9FC9EF6A9FAC79(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_ROTATION
	static auto nh_0xF87683CDF73C3F6E = rage::scrEngine::GetNativeHandler(0xF87683CDF73C3F6E);
	rage::scrEngine::RegisterNativeHandler(0xF87683CDF73C3F6E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF87683CDF73C3F6E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_ROUTE
	static auto nh_0x4F7D8A9BFB0B43E9 = rage::scrEngine::GetNativeHandler(0x4F7D8A9BFB0B43E9);
	rage::scrEngine::RegisterNativeHandler(0x4F7D8A9BFB0B43E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F7D8A9BFB0B43E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_ROUTE_COLOUR
	static auto nh_0x837155CD2F63DA09 = rage::scrEngine::GetNativeHandler(0x837155CD2F63DA09);
	rage::scrEngine::RegisterNativeHandler(0x837155CD2F63DA09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x837155CD2F63DA09(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_SCALE
	static auto nh_0xD38744167B2FA257 = rage::scrEngine::GetNativeHandler(0xD38744167B2FA257);
	rage::scrEngine::RegisterNativeHandler(0xD38744167B2FA257, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD38744167B2FA257(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_SECONDARY_COLOUR
	static auto nh_0x14892474891E09EB = rage::scrEngine::GetNativeHandler(0x14892474891E09EB);
	rage::scrEngine::RegisterNativeHandler(0x14892474891E09EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14892474891E09EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_SHOW_CONE
	static auto nh_0x13127EC3665E8EE1 = rage::scrEngine::GetNativeHandler(0x13127EC3665E8EE1);
	rage::scrEngine::RegisterNativeHandler(0x13127EC3665E8EE1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x13127EC3665E8EE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_BLIP_SPRITE
	static auto nh_0xDF735600A4696DAF = rage::scrEngine::GetNativeHandler(0xDF735600A4696DAF);
	rage::scrEngine::RegisterNativeHandler(0xDF735600A4696DAF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF735600A4696DAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
	static auto nh_0x9F8AA94D6D97DBF4 = rage::scrEngine::GetNativeHandler(0x9F8AA94D6D97DBF4);
	rage::scrEngine::RegisterNativeHandler(0x9F8AA94D6D97DBF4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F8AA94D6D97DBF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_BOAT_ANCHOR
	static auto nh_0x75DBEC174AEEAD10 = rage::scrEngine::GetNativeHandler(0x75DBEC174AEEAD10);
	rage::scrEngine::RegisterNativeHandler(0x75DBEC174AEEAD10, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75DBEC174AEEAD10(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_BOAT_DISABLE_AVOIDANCE
	static auto nh_0x0A6A279F3AA4FD70 = rage::scrEngine::GetNativeHandler(0x0A6A279F3AA4FD70);
	rage::scrEngine::RegisterNativeHandler(0x0A6A279F3AA4FD70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A6A279F3AA4FD70(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_BOAT_SINKS_WHEN_WRECKED
	static auto nh_0x8F719973E1445BA2 = rage::scrEngine::GetNativeHandler(0x8F719973E1445BA2);
	rage::scrEngine::RegisterNativeHandler(0x8F719973E1445BA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F719973E1445BA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_CALMING_QUAD_BOUNDS (result cleaner only)
	AddResultCleaner(0xc5945bd9, ResultCleaner<bool>);

	// CFX/SET_CALMING_QUAD_DAMPENING (result cleaner only)
	AddResultCleaner(0x67977501, ResultCleaner<bool>);

	// CAM/SET_CAM_ACTIVE
	static auto nh_0x026FB97D0A425F84 = rage::scrEngine::GetNativeHandler(0x026FB97D0A425F84);
	rage::scrEngine::RegisterNativeHandler(0x026FB97D0A425F84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x026FB97D0A425F84(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_ACTIVE_WITH_INTERP
	static auto nh_0x9FBDA379383A52A4 = rage::scrEngine::GetNativeHandler(0x9FBDA379383A52A4);
	rage::scrEngine::RegisterNativeHandler(0x9FBDA379383A52A4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9FBDA379383A52A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_AFFECTS_AIMING
	static auto nh_0x8C1DC7770C51DC8D = rage::scrEngine::GetNativeHandler(0x8C1DC7770C51DC8D);
	rage::scrEngine::RegisterNativeHandler(0x8C1DC7770C51DC8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8C1DC7770C51DC8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_ANIM_CURRENT_PHASE
	static auto nh_0x4145A4C44FF3B5A6 = rage::scrEngine::GetNativeHandler(0x4145A4C44FF3B5A6);
	rage::scrEngine::RegisterNativeHandler(0x4145A4C44FF3B5A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4145A4C44FF3B5A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_CONTROLS_MINI_MAP_HEADING
	static auto nh_0x661B5C8654ADD825 = rage::scrEngine::GetNativeHandler(0x661B5C8654ADD825);
	rage::scrEngine::RegisterNativeHandler(0x661B5C8654ADD825, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x661B5C8654ADD825(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_COORD
	static auto nh_0x4D41783FB745E42E = rage::scrEngine::GetNativeHandler(0x4D41783FB745E42E);
	rage::scrEngine::RegisterNativeHandler(0x4D41783FB745E42E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4D41783FB745E42E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_DEBUG_NAME
	static auto nh_0x1B93E0107865DD40 = rage::scrEngine::GetNativeHandler(0x1B93E0107865DD40);
	rage::scrEngine::RegisterNativeHandler(0x1B93E0107865DD40, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1B93E0107865DD40(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_DOF_PLANES
	static auto nh_0x3CF48F6F96E749DC = rage::scrEngine::GetNativeHandler(0x3CF48F6F96E749DC);
	rage::scrEngine::RegisterNativeHandler(0x3CF48F6F96E749DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3CF48F6F96E749DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_DOF_STRENGTH
	static auto nh_0x5EE29B4D7D5DF897 = rage::scrEngine::GetNativeHandler(0x5EE29B4D7D5DF897);
	rage::scrEngine::RegisterNativeHandler(0x5EE29B4D7D5DF897, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5EE29B4D7D5DF897(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_FAR_CLIP
	static auto nh_0xAE306F2A904BF86E = rage::scrEngine::GetNativeHandler(0xAE306F2A904BF86E);
	rage::scrEngine::RegisterNativeHandler(0xAE306F2A904BF86E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE306F2A904BF86E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_FAR_DOF
	static auto nh_0xEDD91296CD01AEE0 = rage::scrEngine::GetNativeHandler(0xEDD91296CD01AEE0);
	rage::scrEngine::RegisterNativeHandler(0xEDD91296CD01AEE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEDD91296CD01AEE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_FOV
	static auto nh_0xB13C14F66A00D047 = rage::scrEngine::GetNativeHandler(0xB13C14F66A00D047);
	rage::scrEngine::RegisterNativeHandler(0xB13C14F66A00D047, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB13C14F66A00D047(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_INHERIT_ROLL_VEHICLE
	static auto nh_0x45F1DE9C34B93AE6 = rage::scrEngine::GetNativeHandler(0x45F1DE9C34B93AE6);
	rage::scrEngine::RegisterNativeHandler(0x45F1DE9C34B93AE6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45F1DE9C34B93AE6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_MOTION_BLUR_STRENGTH
	static auto nh_0x6F0F77FBA9A8F2E6 = rage::scrEngine::GetNativeHandler(0x6F0F77FBA9A8F2E6);
	rage::scrEngine::RegisterNativeHandler(0x6F0F77FBA9A8F2E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F0F77FBA9A8F2E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_NEAR_CLIP
	static auto nh_0xC7848EFCCC545182 = rage::scrEngine::GetNativeHandler(0xC7848EFCCC545182);
	rage::scrEngine::RegisterNativeHandler(0xC7848EFCCC545182, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7848EFCCC545182(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_NEAR_DOF
	static auto nh_0x3FA4BF0A7AB7DE2C = rage::scrEngine::GetNativeHandler(0x3FA4BF0A7AB7DE2C);
	rage::scrEngine::RegisterNativeHandler(0x3FA4BF0A7AB7DE2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3FA4BF0A7AB7DE2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_PARAMS
	static auto nh_0xBFD8727AEA3CCEBA = rage::scrEngine::GetNativeHandler(0xBFD8727AEA3CCEBA);
	rage::scrEngine::RegisterNativeHandler(0xBFD8727AEA3CCEBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBFD8727AEA3CCEBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_ROT
	static auto nh_0x85973643155D0B07 = rage::scrEngine::GetNativeHandler(0x85973643155D0B07);
	rage::scrEngine::RegisterNativeHandler(0x85973643155D0B07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x85973643155D0B07(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SHAKE_AMPLITUDE
	static auto nh_0xD93DB43B82BC0D00 = rage::scrEngine::GetNativeHandler(0xD93DB43B82BC0D00);
	rage::scrEngine::RegisterNativeHandler(0xD93DB43B82BC0D00, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD93DB43B82BC0D00(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_DURATION
	static auto nh_0x1381539FEE034CDA = rage::scrEngine::GetNativeHandler(0x1381539FEE034CDA);
	rage::scrEngine::RegisterNativeHandler(0x1381539FEE034CDA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1381539FEE034CDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_NODE_EASE
	static auto nh_0x83B8201ED82A9A2D = rage::scrEngine::GetNativeHandler(0x83B8201ED82A9A2D);
	rage::scrEngine::RegisterNativeHandler(0x83B8201ED82A9A2D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x83B8201ED82A9A2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_NODE_EXTRA_FLAGS
	static auto nh_0x7BF1A54AE67AC070 = rage::scrEngine::GetNativeHandler(0x7BF1A54AE67AC070);
	rage::scrEngine::RegisterNativeHandler(0x7BF1A54AE67AC070, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7BF1A54AE67AC070(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_NODE_VELOCITY_SCALE
	static auto nh_0xA6385DEB180F319F = rage::scrEngine::GetNativeHandler(0xA6385DEB180F319F);
	rage::scrEngine::RegisterNativeHandler(0xA6385DEB180F319F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6385DEB180F319F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_PHASE
	static auto nh_0x242B5874F0A4E052 = rage::scrEngine::GetNativeHandler(0x242B5874F0A4E052);
	rage::scrEngine::RegisterNativeHandler(0x242B5874F0A4E052, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x242B5874F0A4E052(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_SPLINE_SMOOTHING_STYLE
	static auto nh_0xD1B0F412F109EA5D = rage::scrEngine::GetNativeHandler(0xD1B0F412F109EA5D);
	rage::scrEngine::RegisterNativeHandler(0xD1B0F412F109EA5D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD1B0F412F109EA5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_USE_SHALLOW_DOF_MODE
	static auto nh_0x16A96863A17552BB = rage::scrEngine::GetNativeHandler(0x16A96863A17552BB);
	rage::scrEngine::RegisterNativeHandler(0x16A96863A17552BB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x16A96863A17552BB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CAM_VIEW_MODE_FOR_CONTEXT
	static auto nh_0x2A2173E46DAECD12 = rage::scrEngine::GetNativeHandler(0x2A2173E46DAECD12);
	rage::scrEngine::RegisterNativeHandler(0x2A2173E46DAECD12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A2173E46DAECD12(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_CAN_ATTACK_FRIENDLY
	static auto nh_0xB3B1CB349FF9C75D = rage::scrEngine::GetNativeHandler(0xB3B1CB349FF9C75D);
	rage::scrEngine::RegisterNativeHandler(0xB3B1CB349FF9C75D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3B1CB349FF9C75D(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_CAN_AUTO_VAULT_ON_ENTITY
	static auto nh_0xE12ABE5E3A389A6C = rage::scrEngine::GetNativeHandler(0xE12ABE5E3A389A6C);
	rage::scrEngine::RegisterNativeHandler(0xE12ABE5E3A389A6C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE12ABE5E3A389A6C(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_CAN_CLIMB_ON_ENTITY
	static auto nh_0xA80AE305E0A3044F = rage::scrEngine::GetNativeHandler(0xA80AE305E0A3044F);
	rage::scrEngine::RegisterNativeHandler(0xA80AE305E0A3044F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA80AE305E0A3044F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CAN_RESPRAY_VEHICLE
	static auto nh_0x52BBA29D5EC69356 = rage::scrEngine::GetNativeHandler(0x52BBA29D5EC69356);
	rage::scrEngine::RegisterNativeHandler(0x52BBA29D5EC69356, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x52BBA29D5EC69356(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY
	static auto nh_0x1F34B0626C594380 = rage::scrEngine::GetNativeHandler(0x1F34B0626C594380);
	rage::scrEngine::RegisterNativeHandler(0x1F34B0626C594380, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F34B0626C594380(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE
	static auto nh_0x571FEB383F629926 = rage::scrEngine::GetNativeHandler(0x571FEB383F629926);
	rage::scrEngine::RegisterNativeHandler(0x571FEB383F629926, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x571FEB383F629926(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_ACTIVE
	static auto nh_0x9A665550F8DA349B = rage::scrEngine::GetNativeHandler(0x9A665550F8DA349B);
	rage::scrEngine::RegisterNativeHandler(0x9A665550F8DA349B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A665550F8DA349B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS
	static auto nh_0xA17BAD153B51547E = rage::scrEngine::GetNativeHandler(0xA17BAD153B51547E);
	rage::scrEngine::RegisterNativeHandler(0xA17BAD153B51547E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA17BAD153B51547E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_FALLOFF
	static auto nh_0x685D5561680D088B = rage::scrEngine::GetNativeHandler(0x685D5561680D088B);
	rage::scrEngine::RegisterNativeHandler(0x685D5561680D088B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x685D5561680D088B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH
	static auto nh_0x6D8EAC07506291FB = rage::scrEngine::GetNativeHandler(0x6D8EAC07506291FB);
	rage::scrEngine::RegisterNativeHandler(0x6D8EAC07506291FB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D8EAC07506291FB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH
	static auto nh_0xED8286F71A819BAA = rage::scrEngine::GetNativeHandler(0xED8286F71A819BAA);
	rage::scrEngine::RegisterNativeHandler(0xED8286F71A819BAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED8286F71A819BAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF
	static auto nh_0x66979ACF5102FD2F = rage::scrEngine::GetNativeHandler(0x66979ACF5102FD2F);
	rage::scrEngine::RegisterNativeHandler(0x66979ACF5102FD2F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66979ACF5102FD2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH
	static auto nh_0xE301BD63E9E13CF0 = rage::scrEngine::GetNativeHandler(0xE301BD63E9E13CF0);
	rage::scrEngine::RegisterNativeHandler(0xE301BD63E9E13CF0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE301BD63E9E13CF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_MAGNET_STRENGTH
	static auto nh_0xBCBFCD9D1DAC19E2 = rage::scrEngine::GetNativeHandler(0xBCBFCD9D1DAC19E2);
	rage::scrEngine::RegisterNativeHandler(0xBCBFCD9D1DAC19E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCBFCD9D1DAC19E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER
	static auto nh_0xCF1182F682F65307 = rage::scrEngine::GetNativeHandler(0xCF1182F682F65307);
	rage::scrEngine::RegisterNativeHandler(0xCF1182F682F65307, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCF1182F682F65307(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CARGOBOB_PICKUP_ROPE_TYPE
	static auto nh_0x0D5F65A8F4EBDAB5 = rage::scrEngine::GetNativeHandler(0x0D5F65A8F4EBDAB5);
	rage::scrEngine::RegisterNativeHandler(0x0D5F65A8F4EBDAB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0D5F65A8F4EBDAB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CAR_BOOT_OPEN
	static auto nh_0xFC40CBF7B90CA77C = rage::scrEngine::GetNativeHandler(0xFC40CBF7B90CA77C);
	rage::scrEngine::RegisterNativeHandler(0xFC40CBF7B90CA77C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC40CBF7B90CA77C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/SET_CGOFFSET
	static auto nh_0xD8FA3908D7B86904 = rage::scrEngine::GetNativeHandler(0xD8FA3908D7B86904);
	rage::scrEngine::RegisterNativeHandler(0xD8FA3908D7B86904, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8FA3908D7B86904(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/SET_CG_AT_BOUNDCENTER
	static auto nh_0xBE520D9761FF811F = rage::scrEngine::GetNativeHandler(0xBE520D9761FF811F);
	rage::scrEngine::RegisterNativeHandler(0xBE520D9761FF811F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE520D9761FF811F(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_CHECKPOINT_CYLINDER_HEIGHT
	static auto nh_0x2707AAE9D9297D89 = rage::scrEngine::GetNativeHandler(0x2707AAE9D9297D89);
	rage::scrEngine::RegisterNativeHandler(0x2707AAE9D9297D89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2707AAE9D9297D89(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_CHECKPOINT_RGBA
	static auto nh_0x7167371E8AD747F7 = rage::scrEngine::GetNativeHandler(0x7167371E8AD747F7);
	rage::scrEngine::RegisterNativeHandler(0x7167371E8AD747F7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7167371E8AD747F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_CHECKPOINT_RGBA2
	static auto nh_0xB9EA40907C680580 = rage::scrEngine::GetNativeHandler(0xB9EA40907C680580);
	rage::scrEngine::RegisterNativeHandler(0xB9EA40907C680580, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB9EA40907C680580(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CINEMATIC_BUTTON_ACTIVE
	static auto nh_0x51669F7D1FB53D9F = rage::scrEngine::GetNativeHandler(0x51669F7D1FB53D9F);
	rage::scrEngine::RegisterNativeHandler(0x51669F7D1FB53D9F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x51669F7D1FB53D9F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CINEMATIC_CAM_SHAKE_AMPLITUDE
	static auto nh_0xC724C701C30B2FE7 = rage::scrEngine::GetNativeHandler(0xC724C701C30B2FE7);
	rage::scrEngine::RegisterNativeHandler(0xC724C701C30B2FE7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC724C701C30B2FE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CINEMATIC_MODE_ACTIVE
	static auto nh_0xDCF0754AC3D6FD4E = rage::scrEngine::GetNativeHandler(0xDCF0754AC3D6FD4E);
	rage::scrEngine::RegisterNativeHandler(0xDCF0754AC3D6FD4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDCF0754AC3D6FD4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE
	static auto nh_0xDC9DA9E8789F5246 = rage::scrEngine::GetNativeHandler(0xDC9DA9E8789F5246);
	rage::scrEngine::RegisterNativeHandler(0xDC9DA9E8789F5246, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC9DA9E8789F5246(cxt);
		NullifyVoid(cxt);
	});
	        
	// CLOCK/SET_CLOCK_DATE
	static auto nh_0xB096419DF0D06CE7 = rage::scrEngine::GetNativeHandler(0xB096419DF0D06CE7);
	rage::scrEngine::RegisterNativeHandler(0xB096419DF0D06CE7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB096419DF0D06CE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CLOCK/SET_CLOCK_TIME
	static auto nh_0x47C3B5848C3E45D8 = rage::scrEngine::GetNativeHandler(0x47C3B5848C3E45D8);
	rage::scrEngine::RegisterNativeHandler(0x47C3B5848C3E45D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x47C3B5848C3E45D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_CLOUDS_ALPHA
	static auto nh_0xF36199225D6D8C86 = rage::scrEngine::GetNativeHandler(0xF36199225D6D8C86);
	rage::scrEngine::RegisterNativeHandler(0xF36199225D6D8C86, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF36199225D6D8C86(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_CLOUD_SETTINGS_OVERRIDE
	static auto nh_0x02DEAAC8F8EA7FE7 = rage::scrEngine::GetNativeHandler(0x02DEAAC8F8EA7FE7);
	rage::scrEngine::RegisterNativeHandler(0x02DEAAC8F8EA7FE7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x02DEAAC8F8EA7FE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_COLOUR_OF_NEXT_TEXT_COMPONENT
	static auto nh_0x39BBF623FC803EAC = rage::scrEngine::GetNativeHandler(0x39BBF623FC803EAC);
	rage::scrEngine::RegisterNativeHandler(0x39BBF623FC803EAC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x39BBF623FC803EAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_COMBAT_FLOAT
	static auto nh_0xFF41B4B141ED981C = rage::scrEngine::GetNativeHandler(0xFF41B4B141ED981C);
	rage::scrEngine::RegisterNativeHandler(0xFF41B4B141ED981C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF41B4B141ED981C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM
	static auto nh_0x0B568201DD99F0EB = rage::scrEngine::GetNativeHandler(0x0B568201DD99F0EB);
	rage::scrEngine::RegisterNativeHandler(0x0B568201DD99F0EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0B568201DD99F0EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_CONVERSATION_AUDIO_PLACEHOLDER
	static auto nh_0x61631F5DF50D1C34 = rage::scrEngine::GetNativeHandler(0x61631F5DF50D1C34);
	rage::scrEngine::RegisterNativeHandler(0x61631F5DF50D1C34, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x61631F5DF50D1C34(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CONVERTIBLE_ROOF
	static auto nh_0xF39C4F538B5124C2 = rage::scrEngine::GetNativeHandler(0xF39C4F538B5124C2);
	rage::scrEngine::RegisterNativeHandler(0xF39C4F538B5124C2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF39C4F538B5124C2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_CONVERTIBLE_ROOF_LATCH_STATE
	static auto nh_0x1A78AD3D8240536F = rage::scrEngine::GetNativeHandler(0x1A78AD3D8240536F);
	rage::scrEngine::RegisterNativeHandler(0x1A78AD3D8240536F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A78AD3D8240536F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_CREATE_RANDOM_COPS
	static auto nh_0x102E68B2024D536D = rage::scrEngine::GetNativeHandler(0x102E68B2024D536D);
	rage::scrEngine::RegisterNativeHandler(0x102E68B2024D536D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x102E68B2024D536D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS
	static auto nh_0x8A4986851C4EF6E7 = rage::scrEngine::GetNativeHandler(0x8A4986851C4EF6E7);
	rage::scrEngine::RegisterNativeHandler(0x8A4986851C4EF6E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8A4986851C4EF6E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_CREATE_RANDOM_COPS_ON_SCENARIOS
	static auto nh_0x444CB7D7DBE6973D = rage::scrEngine::GetNativeHandler(0x444CB7D7DBE6973D);
	rage::scrEngine::RegisterNativeHandler(0x444CB7D7DBE6973D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x444CB7D7DBE6973D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_CREDITS_ACTIVE
	static auto nh_0xB938B7E6D3C0620C = rage::scrEngine::GetNativeHandler(0xB938B7E6D3C0620C);
	rage::scrEngine::RegisterNativeHandler(0xB938B7E6D3C0620C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB938B7E6D3C0620C(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_CURRENT_PED_VEHICLE_WEAPON (result cleaner only)
	AddResultCleaner(0x75C55983C2C39DAA, ResultCleaner<bool>);

	// WEAPON/SET_CURRENT_PED_WEAPON
	static auto nh_0xADF692B254977C0C = rage::scrEngine::GetNativeHandler(0xADF692B254977C0C);
	rage::scrEngine::RegisterNativeHandler(0xADF692B254977C0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xADF692B254977C0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_CURRENT_PLAYER_TCMODIFIER
	static auto nh_0xBBF327DED94E4DEB = rage::scrEngine::GetNativeHandler(0xBBF327DED94E4DEB);
	rage::scrEngine::RegisterNativeHandler(0xBBF327DED94E4DEB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBBF327DED94E4DEB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_CUSTOM_RADIO_TRACK_LIST
	static auto nh_0x4E404A9361F75BB2 = rage::scrEngine::GetNativeHandler(0x4E404A9361F75BB2);
	rage::scrEngine::RegisterNativeHandler(0x4E404A9361F75BB2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4E404A9361F75BB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_CUTSCENE_AUDIO_OVERRIDE
	static auto nh_0x3B4BF5F0859204D9 = rage::scrEngine::GetNativeHandler(0x3B4BF5F0859204D9);
	rage::scrEngine::RegisterNativeHandler(0x3B4BF5F0859204D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3B4BF5F0859204D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_CAN_BE_SKIPPED
	static auto nh_0x41FAA8FB2ECE8720 = rage::scrEngine::GetNativeHandler(0x41FAA8FB2ECE8720);
	rage::scrEngine::RegisterNativeHandler(0x41FAA8FB2ECE8720, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x41FAA8FB2ECE8720(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_ENTITY_STREAMING_FLAGS
	static auto nh_0x4C61C75BEE8184C2 = rage::scrEngine::GetNativeHandler(0x4C61C75BEE8184C2);
	rage::scrEngine::RegisterNativeHandler(0x4C61C75BEE8184C2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4C61C75BEE8184C2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_FADE_VALUES
	static auto nh_0x8093F23ABACCC7D4 = rage::scrEngine::GetNativeHandler(0x8093F23ABACCC7D4);
	rage::scrEngine::RegisterNativeHandler(0x8093F23ABACCC7D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8093F23ABACCC7D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_ORIGIN
	static auto nh_0xB812B3FD1C01CF27 = rage::scrEngine::GetNativeHandler(0xB812B3FD1C01CF27);
	rage::scrEngine::RegisterNativeHandler(0xB812B3FD1C01CF27, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB812B3FD1C01CF27(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_PED_COMPONENT_VARIATION
	static auto nh_0xBA01E7B6DEEFBBC9 = rage::scrEngine::GetNativeHandler(0xBA01E7B6DEEFBBC9);
	rage::scrEngine::RegisterNativeHandler(0xBA01E7B6DEEFBBC9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBA01E7B6DEEFBBC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED
	static auto nh_0x2A56C06EBEF2B0D9 = rage::scrEngine::GetNativeHandler(0x2A56C06EBEF2B0D9);
	rage::scrEngine::RegisterNativeHandler(0x2A56C06EBEF2B0D9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2A56C06EBEF2B0D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_PED_PROP_VARIATION
	static auto nh_0x0546524ADE2E9723 = rage::scrEngine::GetNativeHandler(0x0546524ADE2E9723);
	rage::scrEngine::RegisterNativeHandler(0x0546524ADE2E9723, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0546524ADE2E9723(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/SET_CUTSCENE_TRIGGER_AREA
	static auto nh_0x9896CE4721BE84BA = rage::scrEngine::GetNativeHandler(0x9896CE4721BE84BA);
	rage::scrEngine::RegisterNativeHandler(0x9896CE4721BE84BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9896CE4721BE84BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/SET_DAMPING
	static auto nh_0xEEA3B200A6FEB65B = rage::scrEngine::GetNativeHandler(0xEEA3B200A6FEB65B);
	rage::scrEngine::RegisterNativeHandler(0xEEA3B200A6FEB65B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEEA3B200A6FEB65B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE
	static auto nh_0x175B6BFC15CDD0C5 = rage::scrEngine::GetNativeHandler(0x175B6BFC15CDD0C5);
	rage::scrEngine::RegisterNativeHandler(0x175B6BFC15CDD0C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x175B6BFC15CDD0C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/SET_DECISION_MAKER
	static auto nh_0xB604A2942ADED0EE = rage::scrEngine::GetNativeHandler(0xB604A2942ADED0EE);
	rage::scrEngine::RegisterNativeHandler(0xB604A2942ADED0EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB604A2942ADED0EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/SET_DEEP_OCEAN_SCALER
	static auto nh_0xB96B00E976BE977F = rage::scrEngine::GetNativeHandler(0xB96B00E976BE977F);
	rage::scrEngine::RegisterNativeHandler(0xB96B00E976BE977F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB96B00E976BE977F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DEFAULT_VEHICLE_NUMBER_PLATE_TEXT_PATTERN
	static auto nh_0x79780fd2 = rage::scrEngine::GetNativeHandler(0x79780fd2);
	rage::scrEngine::RegisterNativeHandler(0x79780fd2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x79780fd2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_DISABLE_AMBIENT_MELEE_MOVE
	static auto nh_0x2E8AABFA40A84F8C = rage::scrEngine::GetNativeHandler(0x2E8AABFA40A84F8C);
	rage::scrEngine::RegisterNativeHandler(0x2E8AABFA40A84F8C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E8AABFA40A84F8C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_BMX_EXTRA_TRICK_FORCES
	static auto nh_0x26D99D5A82FD18E8 = rage::scrEngine::GetNativeHandler(0x26D99D5A82FD18E8);
	rage::scrEngine::RegisterNativeHandler(0x26D99D5A82FD18E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26D99D5A82FD18E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/SET_DISABLE_BREAKING
	static auto nh_0x5CEC1A84620E7D5B = rage::scrEngine::GetNativeHandler(0x5CEC1A84620E7D5B);
	rage::scrEngine::RegisterNativeHandler(0x5CEC1A84620E7D5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5CEC1A84620E7D5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_DISABLE_DECAL_RENDERING_THIS_FRAME
	static auto nh_0x4B5CFC83122DF602 = rage::scrEngine::GetNativeHandler(0x4B5CFC83122DF602);
	rage::scrEngine::RegisterNativeHandler(0x4B5CFC83122DF602, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4B5CFC83122DF602(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION
	static auto nh_0x26E13D440E7F6064 = rage::scrEngine::GetNativeHandler(0x26E13D440E7F6064);
	rage::scrEngine::RegisterNativeHandler(0x26E13D440E7F6064, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26E13D440E7F6064(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/SET_DISABLE_FRAG_DAMAGE
	static auto nh_0x01BA3AED21C16CFB = rage::scrEngine::GetNativeHandler(0x01BA3AED21C16CFB);
	rage::scrEngine::RegisterNativeHandler(0x01BA3AED21C16CFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01BA3AED21C16CFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE
	static auto nh_0xEDBC8405B3895CC9 = rage::scrEngine::GetNativeHandler(0xEDBC8405B3895CC9);
	rage::scrEngine::RegisterNativeHandler(0xEDBC8405B3895CC9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEDBC8405B3895CC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_HOVER_MODE_FLIGHT
	static auto nh_0x2D55FE374D5FDB91 = rage::scrEngine::GetNativeHandler(0x2D55FE374D5FDB91);
	rage::scrEngine::RegisterNativeHandler(0x2D55FE374D5FDB91, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D55FE374D5FDB91(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_PRETEND_OCCUPANTS
	static auto nh_0x25367DE49D64CF16 = rage::scrEngine::GetNativeHandler(0x25367DE49D64CF16);
	rage::scrEngine::RegisterNativeHandler(0x25367DE49D64CF16, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25367DE49D64CF16(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_RANDOM_TRAINS_THIS_FRAME
	static auto nh_0xD4B8E3D1917BC86B = rage::scrEngine::GetNativeHandler(0xD4B8E3D1917BC86B);
	rage::scrEngine::RegisterNativeHandler(0xD4B8E3D1917BC86B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4B8E3D1917BC86B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_VEHICLE_ENGINE_FIRES
	static auto nh_0x91A0BD635321F145 = rage::scrEngine::GetNativeHandler(0x91A0BD635321F145);
	rage::scrEngine::RegisterNativeHandler(0x91A0BD635321F145, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x91A0BD635321F145(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE
	static auto nh_0x37C8252A7C92D017 = rage::scrEngine::GetNativeHandler(0x37C8252A7C92D017);
	rage::scrEngine::RegisterNativeHandler(0x37C8252A7C92D017, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x37C8252A7C92D017(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISABLE_VEHICLE_PETROL_TANK_FIRES
	static auto nh_0x465BF26AB9684352 = rage::scrEngine::GetNativeHandler(0x465BF26AB9684352);
	rage::scrEngine::RegisterNativeHandler(0x465BF26AB9684352, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x465BF26AB9684352(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_APP_ID
	static auto nh_0x6a02254d = rage::scrEngine::GetNativeHandler(0x6a02254d);
	rage::scrEngine::RegisterNativeHandler(0x6a02254d, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6a02254d(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_RICH_PRESENCE_ACTION
	static auto nh_0xcbbc3fac = rage::scrEngine::GetNativeHandler(0xcbbc3fac);
	rage::scrEngine::RegisterNativeHandler(0xcbbc3fac, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xcbbc3fac(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_RICH_PRESENCE_ASSET
	static auto nh_0x53dfd530 = rage::scrEngine::GetNativeHandler(0x53dfd530);
	rage::scrEngine::RegisterNativeHandler(0x53dfd530, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x53dfd530(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_RICH_PRESENCE_ASSET_SMALL
	static auto nh_0xf61d04c4 = rage::scrEngine::GetNativeHandler(0xf61d04c4);
	rage::scrEngine::RegisterNativeHandler(0xf61d04c4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xf61d04c4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_RICH_PRESENCE_ASSET_SMALL_TEXT
	static auto nh_0x35e62b6a = rage::scrEngine::GetNativeHandler(0x35e62b6a);
	rage::scrEngine::RegisterNativeHandler(0x35e62b6a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x35e62b6a(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DISCORD_RICH_PRESENCE_ASSET_TEXT
	static auto nh_0xb029d2fa = rage::scrEngine::GetNativeHandler(0xb029d2fa);
	rage::scrEngine::RegisterNativeHandler(0xb029d2fa, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xb029d2fa(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_DISPATCH_COPS_FOR_PLAYER
	static auto nh_0xDB172424876553F4 = rage::scrEngine::GetNativeHandler(0xDB172424876553F4);
	rage::scrEngine::RegisterNativeHandler(0xDB172424876553F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB172424876553F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_DISPATCH_IDEAL_SPAWN_DISTANCE
	static auto nh_0x6FE601A64180D423 = rage::scrEngine::GetNativeHandler(0x6FE601A64180D423);
	rage::scrEngine::RegisterNativeHandler(0x6FE601A64180D423, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6FE601A64180D423(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_DISPATCH_SPAWN_LOCATION
	static auto nh_0xD10F442036302D50 = rage::scrEngine::GetNativeHandler(0xD10F442036302D50);
	rage::scrEngine::RegisterNativeHandler(0xD10F442036302D50, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD10F442036302D50(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS
	static auto nh_0x44F7CBC1BEB3327D = rage::scrEngine::GetNativeHandler(0x44F7CBC1BEB3327D);
	rage::scrEngine::RegisterNativeHandler(0x44F7CBC1BEB3327D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x44F7CBC1BEB3327D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER
	static auto nh_0x48838ED9937A15D1 = rage::scrEngine::GetNativeHandler(0x48838ED9937A15D1);
	rage::scrEngine::RegisterNativeHandler(0x48838ED9937A15D1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x48838ED9937A15D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_DISTANT_CARS_ENABLED
	static auto nh_0xF796359A959DF65D = rage::scrEngine::GetNativeHandler(0xF796359A959DF65D);
	rage::scrEngine::RegisterNativeHandler(0xF796359A959DF65D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF796359A959DF65D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_DITCH_POLICE_MODELS
	static auto nh_0x42CBE54462D92634 = rage::scrEngine::GetNativeHandler(0x42CBE54462D92634);
	rage::scrEngine::RegisterNativeHandler(0x42CBE54462D92634, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42CBE54462D92634(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_DRAW_ORIGIN
	static auto nh_0xAA0008F3BBB8F416 = rage::scrEngine::GetNativeHandler(0xAA0008F3BBB8F416);
	rage::scrEngine::RegisterNativeHandler(0xAA0008F3BBB8F416, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xAA0008F3BBB8F416(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_DRIVEBY_TASK_TARGET
	static auto nh_0xE5B302114D8162EE = rage::scrEngine::GetNativeHandler(0xE5B302114D8162EE);
	rage::scrEngine::RegisterNativeHandler(0xE5B302114D8162EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5B302114D8162EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_DRIVER_ABILITY
	static auto nh_0xB195FFA8042FC5C3 = rage::scrEngine::GetNativeHandler(0xB195FFA8042FC5C3);
	rage::scrEngine::RegisterNativeHandler(0xB195FFA8042FC5C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB195FFA8042FC5C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_DRIVER_AGGRESSIVENESS
	static auto nh_0xA731F608CA104E3C = rage::scrEngine::GetNativeHandler(0xA731F608CA104E3C);
	rage::scrEngine::RegisterNativeHandler(0xA731F608CA104E3C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA731F608CA104E3C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_DRIVER_RACING_MODIFIER
	static auto nh_0xDED5AF5A0EA4B297 = rage::scrEngine::GetNativeHandler(0xDED5AF5A0EA4B297);
	rage::scrEngine::RegisterNativeHandler(0xDED5AF5A0EA4B297, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDED5AF5A0EA4B297(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_DRIVE_TASK_CRUISE_SPEED
	static auto nh_0x5C9B84BD7D31D908 = rage::scrEngine::GetNativeHandler(0x5C9B84BD7D31D908);
	rage::scrEngine::RegisterNativeHandler(0x5C9B84BD7D31D908, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C9B84BD7D31D908(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_DRIVE_TASK_DRIVING_STYLE
	static auto nh_0xDACE1BE37D88AF67 = rage::scrEngine::GetNativeHandler(0xDACE1BE37D88AF67);
	rage::scrEngine::RegisterNativeHandler(0xDACE1BE37D88AF67, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDACE1BE37D88AF67(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_DRIVE_TASK_MAX_CRUISE_SPEED
	static auto nh_0x404A5AA9B9F0B746 = rage::scrEngine::GetNativeHandler(0x404A5AA9B9F0B746);
	rage::scrEngine::RegisterNativeHandler(0x404A5AA9B9F0B746, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x404A5AA9B9F0B746(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_DUI_URL
	static auto nh_0xf761d9f3 = rage::scrEngine::GetNativeHandler(0xf761d9f3);
	rage::scrEngine::RegisterNativeHandler(0xf761d9f3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xf761d9f3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_EMITTER_PROBE_LENGTH
	static auto nh_0x8aa1f3c2 = rage::scrEngine::GetNativeHandler(0x8aa1f3c2);
	rage::scrEngine::RegisterNativeHandler(0x8aa1f3c2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8aa1f3c2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_EMITTER_RADIO_STATION
	static auto nh_0xACF57305B12AF907 = rage::scrEngine::GetNativeHandler(0xACF57305B12AF907);
	rage::scrEngine::RegisterNativeHandler(0xACF57305B12AF907, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xACF57305B12AF907(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_ENABLE_BOUND_ANKLES
	static auto nh_0xC52E0F855C58FC2E = rage::scrEngine::GetNativeHandler(0xC52E0F855C58FC2E);
	rage::scrEngine::RegisterNativeHandler(0xC52E0F855C58FC2E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC52E0F855C58FC2E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_ENABLE_HANDCUFFS
	static auto nh_0xDF1AF8B5D56542FA = rage::scrEngine::GetNativeHandler(0xDF1AF8B5D56542FA);
	rage::scrEngine::RegisterNativeHandler(0xDF1AF8B5D56542FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF1AF8B5D56542FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_ENABLE_PED_ENVEFF_SCALE
	static auto nh_0xD2C5AA0C0E8D0F1E = rage::scrEngine::GetNativeHandler(0xD2C5AA0C0E8D0F1E);
	rage::scrEngine::RegisterNativeHandler(0xD2C5AA0C0E8D0F1E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2C5AA0C0E8D0F1E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_ENABLE_SCUBA
	static auto nh_0xF99F62004024D506 = rage::scrEngine::GetNativeHandler(0xF99F62004024D506);
	rage::scrEngine::RegisterNativeHandler(0xF99F62004024D506, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF99F62004024D506(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_ENABLE_VEHICLE_SLIPSTREAMING
	static auto nh_0xE6C0C80B8C867537 = rage::scrEngine::GetNativeHandler(0xE6C0C80B8C867537);
	rage::scrEngine::RegisterNativeHandler(0xE6C0C80B8C867537, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6C0C80B8C867537(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ALPHA
	static auto nh_0x44A0870B7E92D7C0 = rage::scrEngine::GetNativeHandler(0x44A0870B7E92D7C0);
	rage::scrEngine::RegisterNativeHandler(0x44A0870B7E92D7C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44A0870B7E92D7C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ALWAYS_PRERENDER
	static auto nh_0xACAD101E1FB66689 = rage::scrEngine::GetNativeHandler(0xACAD101E1FB66689);
	rage::scrEngine::RegisterNativeHandler(0xACAD101E1FB66689, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xACAD101E1FB66689(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ANIM_CURRENT_TIME
	static auto nh_0x4487C259F0F70977 = rage::scrEngine::GetNativeHandler(0x4487C259F0F70977);
	rage::scrEngine::RegisterNativeHandler(0x4487C259F0F70977, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x4487C259F0F70977(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ANIM_SPEED
	static auto nh_0x28D1A16553C51776 = rage::scrEngine::GetNativeHandler(0x28D1A16553C51776);
	rage::scrEngine::RegisterNativeHandler(0x28D1A16553C51776, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x28D1A16553C51776(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_AS_MISSION_ENTITY
	static auto nh_0xAD738C3085FE7E11 = rage::scrEngine::GetNativeHandler(0xAD738C3085FE7E11);
	rage::scrEngine::RegisterNativeHandler(0xAD738C3085FE7E11, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD738C3085FE7E11(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_AS_NO_LONGER_NEEDED
	static auto nh_0xB736A491E64A32CF = rage::scrEngine::GetNativeHandler(0xB736A491E64A32CF);
	rage::scrEngine::RegisterNativeHandler(0xB736A491E64A32CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB736A491E64A32CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_CAN_BE_DAMAGED
	static auto nh_0x1760FFA8AB074D66 = rage::scrEngine::GetNativeHandler(0x1760FFA8AB074D66);
	rage::scrEngine::RegisterNativeHandler(0x1760FFA8AB074D66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1760FFA8AB074D66(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP
	static auto nh_0xE22D8FDE858B8119 = rage::scrEngine::GetNativeHandler(0xE22D8FDE858B8119);
	rage::scrEngine::RegisterNativeHandler(0xE22D8FDE858B8119, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE22D8FDE858B8119(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS
	static auto nh_0xD3997889736FD899 = rage::scrEngine::GetNativeHandler(0xD3997889736FD899);
	rage::scrEngine::RegisterNativeHandler(0xD3997889736FD899, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD3997889736FD899(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_COLLISION
	static auto nh_0x1A9205C1B9EE827F = rage::scrEngine::GetNativeHandler(0x1A9205C1B9EE827F);
	rage::scrEngine::RegisterNativeHandler(0x1A9205C1B9EE827F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A9205C1B9EE827F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_COMPLETELY_DISABLE_COLLISION
	static auto nh_0x9EBC85ED0FFFE51C = rage::scrEngine::GetNativeHandler(0x9EBC85ED0FFFE51C);
	rage::scrEngine::RegisterNativeHandler(0x9EBC85ED0FFFE51C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9EBC85ED0FFFE51C(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_COORDS
	static auto nh_0x06843DA7060A026B = rage::scrEngine::GetNativeHandler(0x06843DA7060A026B);
	rage::scrEngine::RegisterNativeHandler(0x06843DA7060A026B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06843DA7060A026B(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_COORDS_NO_OFFSET
	static auto nh_0x239A3351AC1DA385 = rage::scrEngine::GetNativeHandler(0x239A3351AC1DA385);
	rage::scrEngine::RegisterNativeHandler(0x239A3351AC1DA385, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x239A3351AC1DA385(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET
	static auto nh_0x621873ECE1178967 = rage::scrEngine::GetNativeHandler(0x621873ECE1178967);
	rage::scrEngine::RegisterNativeHandler(0x621873ECE1178967, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x621873ECE1178967(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ENTITY_DRAW_OUTLINE
	static auto nh_0x76180407 = rage::scrEngine::GetNativeHandler(0x76180407);
	rage::scrEngine::RegisterNativeHandler(0x76180407, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x76180407(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ENTITY_DRAW_OUTLINE_COLOR
	static auto nh_0xb41a56c2 = rage::scrEngine::GetNativeHandler(0xb41a56c2);
	rage::scrEngine::RegisterNativeHandler(0xb41a56c2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb41a56c2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ENTITY_DRAW_OUTLINE_SHADER
	static auto nh_0x5261a01a = rage::scrEngine::GetNativeHandler(0x5261a01a);
	rage::scrEngine::RegisterNativeHandler(0x5261a01a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5261a01a(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_DYNAMIC
	static auto nh_0x1718DE8E3F2823CA = rage::scrEngine::GetNativeHandler(0x1718DE8E3F2823CA);
	rage::scrEngine::RegisterNativeHandler(0x1718DE8E3F2823CA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1718DE8E3F2823CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_ENTITY_FOR_NULL_CONV_PED
	static auto nh_0x892B6AB8F33606F5 = rage::scrEngine::GetNativeHandler(0x892B6AB8F33606F5);
	rage::scrEngine::RegisterNativeHandler(0x892B6AB8F33606F5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x892B6AB8F33606F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_HAS_GRAVITY
	static auto nh_0x4A4722448F18EEF5 = rage::scrEngine::GetNativeHandler(0x4A4722448F18EEF5);
	rage::scrEngine::RegisterNativeHandler(0x4A4722448F18EEF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A4722448F18EEF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_HEADING
	static auto nh_0x8E2530AA8ADA980E = rage::scrEngine::GetNativeHandler(0x8E2530AA8ADA980E);
	rage::scrEngine::RegisterNativeHandler(0x8E2530AA8ADA980E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8E2530AA8ADA980E(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_HEALTH
	static auto nh_0x6B76DC1F3AE6E6A3 = rage::scrEngine::GetNativeHandler(0x6B76DC1F3AE6E6A3);
	rage::scrEngine::RegisterNativeHandler(0x6B76DC1F3AE6E6A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B76DC1F3AE6E6A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_ENTITY_ICON_COLOR
	static auto nh_0x1D5F595CCAE2E238 = rage::scrEngine::GetNativeHandler(0x1D5F595CCAE2E238);
	rage::scrEngine::RegisterNativeHandler(0x1D5F595CCAE2E238, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1D5F595CCAE2E238(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_ENTITY_ICON_VISIBILITY
	static auto nh_0xE0E8BEECCA96BA31 = rage::scrEngine::GetNativeHandler(0xE0E8BEECCA96BA31);
	rage::scrEngine::RegisterNativeHandler(0xE0E8BEECCA96BA31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE0E8BEECCA96BA31(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_INVINCIBLE
	static auto nh_0x3882114BDE571AD4 = rage::scrEngine::GetNativeHandler(0x3882114BDE571AD4);
	rage::scrEngine::RegisterNativeHandler(0x3882114BDE571AD4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3882114BDE571AD4(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_IS_TARGET_PRIORITY
	static auto nh_0xEA02E132F5C68722 = rage::scrEngine::GetNativeHandler(0xEA02E132F5C68722);
	rage::scrEngine::RegisterNativeHandler(0xEA02E132F5C68722, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA02E132F5C68722(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_LIGHTS
	static auto nh_0x7CFBA6A80BDF3874 = rage::scrEngine::GetNativeHandler(0x7CFBA6A80BDF3874);
	rage::scrEngine::RegisterNativeHandler(0x7CFBA6A80BDF3874, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7CFBA6A80BDF3874(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_LOAD_COLLISION_FLAG
	static auto nh_0x0DC7CABAB1E9B67E = rage::scrEngine::GetNativeHandler(0x0DC7CABAB1E9B67E);
	rage::scrEngine::RegisterNativeHandler(0x0DC7CABAB1E9B67E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0DC7CABAB1E9B67E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_ENTITY_LOCALLY_INVISIBLE
	static auto nh_0xE135A9FF3F5D05D8 = rage::scrEngine::GetNativeHandler(0xE135A9FF3F5D05D8);
	rage::scrEngine::RegisterNativeHandler(0xE135A9FF3F5D05D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE135A9FF3F5D05D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_ENTITY_LOCALLY_VISIBLE
	static auto nh_0x241E289B5C059EDC = rage::scrEngine::GetNativeHandler(0x241E289B5C059EDC);
	rage::scrEngine::RegisterNativeHandler(0x241E289B5C059EDC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x241E289B5C059EDC(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_LOD_DIST
	static auto nh_0x5927F96A78577363 = rage::scrEngine::GetNativeHandler(0x5927F96A78577363);
	rage::scrEngine::RegisterNativeHandler(0x5927F96A78577363, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5927F96A78577363(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ENTITY_MATRIX
	static auto nh_0xfb0639b = rage::scrEngine::GetNativeHandler(0xfb0639b);
	rage::scrEngine::RegisterNativeHandler(0xfb0639b, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xfb0639b(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_MAX_HEALTH
	static auto nh_0x166E7CF68597D8B5 = rage::scrEngine::GetNativeHandler(0x166E7CF68597D8B5);
	rage::scrEngine::RegisterNativeHandler(0x166E7CF68597D8B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x166E7CF68597D8B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_MAX_SPEED
	static auto nh_0x0E46A3FCBDE2A1B1 = rage::scrEngine::GetNativeHandler(0x0E46A3FCBDE2A1B1);
	rage::scrEngine::RegisterNativeHandler(0x0E46A3FCBDE2A1B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E46A3FCBDE2A1B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_MOTION_BLUR
	static auto nh_0x295D82A8559F9150 = rage::scrEngine::GetNativeHandler(0x295D82A8559F9150);
	rage::scrEngine::RegisterNativeHandler(0x295D82A8559F9150, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x295D82A8559F9150(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_NO_COLLISION_ENTITY
	static auto nh_0xA53ED5520C07654A = rage::scrEngine::GetNativeHandler(0xA53ED5520C07654A);
	rage::scrEngine::RegisterNativeHandler(0xA53ED5520C07654A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA53ED5520C07654A(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ONLY_DAMAGED_BY_PLAYER
	static auto nh_0x79F020FF9EDC0748 = rage::scrEngine::GetNativeHandler(0x79F020FF9EDC0748);
	rage::scrEngine::RegisterNativeHandler(0x79F020FF9EDC0748, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x79F020FF9EDC0748(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP
	static auto nh_0x7022BD828FA0B082 = rage::scrEngine::GetNativeHandler(0x7022BD828FA0B082);
	rage::scrEngine::RegisterNativeHandler(0x7022BD828FA0B082, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7022BD828FA0B082(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_PROOFS
	static auto nh_0xFAEE099C6F890BB8 = rage::scrEngine::GetNativeHandler(0xFAEE099C6F890BB8);
	rage::scrEngine::RegisterNativeHandler(0xFAEE099C6F890BB8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAEE099C6F890BB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_QUATERNION
	static auto nh_0x77B21BE7AC540F07 = rage::scrEngine::GetNativeHandler(0x77B21BE7AC540F07);
	rage::scrEngine::RegisterNativeHandler(0x77B21BE7AC540F07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77B21BE7AC540F07(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_RECORDS_COLLISIONS
	static auto nh_0x0A50A1EEDAD01E65 = rage::scrEngine::GetNativeHandler(0x0A50A1EEDAD01E65);
	rage::scrEngine::RegisterNativeHandler(0x0A50A1EEDAD01E65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A50A1EEDAD01E65(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_RENDER_SCORCHED
	static auto nh_0x730F5F8D3F0F2050 = rage::scrEngine::GetNativeHandler(0x730F5F8D3F0F2050);
	rage::scrEngine::RegisterNativeHandler(0x730F5F8D3F0F2050, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x730F5F8D3F0F2050(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_ROTATION
	static auto nh_0x8524A8B0171D5E07 = rage::scrEngine::GetNativeHandler(0x8524A8B0171D5E07);
	rage::scrEngine::RegisterNativeHandler(0x8524A8B0171D5E07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8524A8B0171D5E07(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_TRAFFICLIGHT_OVERRIDE
	static auto nh_0x57C5DB656185EAC4 = rage::scrEngine::GetNativeHandler(0x57C5DB656185EAC4);
	rage::scrEngine::RegisterNativeHandler(0x57C5DB656185EAC4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x57C5DB656185EAC4(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_VELOCITY
	static auto nh_0x1C99BB7B6E96D16F = rage::scrEngine::GetNativeHandler(0x1C99BB7B6E96D16F);
	rage::scrEngine::RegisterNativeHandler(0x1C99BB7B6E96D16F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C99BB7B6E96D16F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_ENTITY_VISIBLE
	static auto nh_0xEA1C610A04DB6BBB = rage::scrEngine::GetNativeHandler(0xEA1C610A04DB6BBB);
	rage::scrEngine::RegisterNativeHandler(0xEA1C610A04DB6BBB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA1C610A04DB6BBB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_ENTITY_VISIBLE_IN_CUTSCENE
	static auto nh_0xE0031D3C8F36AB82 = rage::scrEngine::GetNativeHandler(0xE0031D3C8F36AB82);
	rage::scrEngine::RegisterNativeHandler(0xE0031D3C8F36AB82, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE0031D3C8F36AB82(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_EVERYONE_IGNORE_PLAYER
	static auto nh_0x8EEDA153AD141BA4 = rage::scrEngine::GetNativeHandler(0x8EEDA153AD141BA4);
	rage::scrEngine::RegisterNativeHandler(0x8EEDA153AD141BA4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8EEDA153AD141BA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_EXCLUSIVE_SCENARIO_GROUP
	static auto nh_0x535E97E1F7FC0C6A = rage::scrEngine::GetNativeHandler(0x535E97E1F7FC0C6A);
	rage::scrEngine::RegisterNativeHandler(0x535E97E1F7FC0C6A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x535E97E1F7FC0C6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_EXPLOSIVE_AMMO_THIS_FRAME
	static auto nh_0xA66C71C98D5F2CFB = rage::scrEngine::GetNativeHandler(0xA66C71C98D5F2CFB);
	rage::scrEngine::RegisterNativeHandler(0xA66C71C98D5F2CFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA66C71C98D5F2CFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_EXPLOSIVE_MELEE_THIS_FRAME
	static auto nh_0xFF1BED81BFDC0FE0 = rage::scrEngine::GetNativeHandler(0xFF1BED81BFDC0FE0);
	rage::scrEngine::RegisterNativeHandler(0xFF1BED81BFDC0FE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF1BED81BFDC0FE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_FACIAL_IDLE_ANIM_OVERRIDE
	static auto nh_0xFFC24B988B938B38 = rage::scrEngine::GetNativeHandler(0xFFC24B988B938B38);
	rage::scrEngine::RegisterNativeHandler(0xFFC24B988B938B38, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xFFC24B988B938B38(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FADE_IN_AFTER_DEATH_ARREST
	static auto nh_0xDA66D2796BA33F12 = rage::scrEngine::GetNativeHandler(0xDA66D2796BA33F12);
	rage::scrEngine::RegisterNativeHandler(0xDA66D2796BA33F12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA66D2796BA33F12(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FADE_IN_AFTER_LOAD
	static auto nh_0xF3D78F59DFE18D79 = rage::scrEngine::GetNativeHandler(0xF3D78F59DFE18D79);
	rage::scrEngine::RegisterNativeHandler(0xF3D78F59DFE18D79, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF3D78F59DFE18D79(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FADE_OUT_AFTER_ARREST
	static auto nh_0x1E0B4DC0D990A4E7 = rage::scrEngine::GetNativeHandler(0x1E0B4DC0D990A4E7);
	rage::scrEngine::RegisterNativeHandler(0x1E0B4DC0D990A4E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E0B4DC0D990A4E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FADE_OUT_AFTER_DEATH
	static auto nh_0x4A18E01DF2C87B86 = rage::scrEngine::GetNativeHandler(0x4A18E01DF2C87B86);
	rage::scrEngine::RegisterNativeHandler(0x4A18E01DF2C87B86, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A18E01DF2C87B86(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME
	static auto nh_0x77E2DD177910E1CF = rage::scrEngine::GetNativeHandler(0x77E2DD177910E1CF);
	rage::scrEngine::RegisterNativeHandler(0x77E2DD177910E1CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77E2DD177910E1CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FAKE_WANTED_LEVEL
	static auto nh_0x1454F2448DE30163 = rage::scrEngine::GetNativeHandler(0x1454F2448DE30163);
	rage::scrEngine::RegisterNativeHandler(0x1454F2448DE30163, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1454F2448DE30163(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_FAR_DRAW_VEHICLES
	static auto nh_0x26324F33423F3CC3 = rage::scrEngine::GetNativeHandler(0x26324F33423F3CC3);
	rage::scrEngine::RegisterNativeHandler(0x26324F33423F3CC3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26324F33423F3CC3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_FIRE_AMMO_THIS_FRAME
	static auto nh_0x11879CDD803D30F4 = rage::scrEngine::GetNativeHandler(0x11879CDD803D30F4);
	rage::scrEngine::RegisterNativeHandler(0x11879CDD803D30F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11879CDD803D30F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
	static auto nh_0x0AF7B437918103B3 = rage::scrEngine::GetNativeHandler(0x0AF7B437918103B3);
	rage::scrEngine::RegisterNativeHandler(0x0AF7B437918103B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AF7B437918103B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
	static auto nh_0x70894BD0915C5BCA = rage::scrEngine::GetNativeHandler(0x70894BD0915C5BCA);
	rage::scrEngine::RegisterNativeHandler(0x70894BD0915C5BCA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70894BD0915C5BCA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_FLASH
	static auto nh_0x0AB84296FED9CFC6 = rage::scrEngine::GetNativeHandler(0x0AB84296FED9CFC6);
	rage::scrEngine::RegisterNativeHandler(0x0AB84296FED9CFC6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AB84296FED9CFC6(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_FLASH_LIGHT_FADE_DISTANCE (result cleaner only)
	AddResultCleaner(0xCEA66DAD478CD39B, ResultCleaner<int>);

	// CFX/SET_FLASH_LIGHT_KEEP_ON_WHILE_MOVING
	static auto nh_0x7635b349 = rage::scrEngine::GetNativeHandler(0x7635b349);
	rage::scrEngine::RegisterNativeHandler(0x7635b349, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7635b349(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FLOATING_HELP_TEXT_SCREEN_POSITION
	static auto nh_0x7679CC1BCEBE3D4C = rage::scrEngine::GetNativeHandler(0x7679CC1BCEBE3D4C);
	rage::scrEngine::RegisterNativeHandler(0x7679CC1BCEBE3D4C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7679CC1BCEBE3D4C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FLOATING_HELP_TEXT_STYLE
	static auto nh_0x788E7FD431BD67F1 = rage::scrEngine::GetNativeHandler(0x788E7FD431BD67F1);
	rage::scrEngine::RegisterNativeHandler(0x788E7FD431BD67F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x788E7FD431BD67F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FLOATING_HELP_TEXT_TO_ENTITY
	static auto nh_0xB094BC1DB4018240 = rage::scrEngine::GetNativeHandler(0xB094BC1DB4018240);
	rage::scrEngine::RegisterNativeHandler(0xB094BC1DB4018240, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB094BC1DB4018240(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FLOATING_HELP_TEXT_WORLD_POSITION
	static auto nh_0x784BA7E0ECEB4178 = rage::scrEngine::GetNativeHandler(0x784BA7E0ECEB4178);
	rage::scrEngine::RegisterNativeHandler(0x784BA7E0ECEB4178, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x784BA7E0ECEB4178(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FLY_CAM_COORD_AND_CONSTRAIN
	static auto nh_0xC91C6C55199308CA = rage::scrEngine::GetNativeHandler(0xC91C6C55199308CA);
	rage::scrEngine::RegisterNativeHandler(0xC91C6C55199308CA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC91C6C55199308CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FLY_CAM_HORIZONTAL_RESPONSE
	static auto nh_0x503F5920162365B2 = rage::scrEngine::GetNativeHandler(0x503F5920162365B2);
	rage::scrEngine::RegisterNativeHandler(0x503F5920162365B2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x503F5920162365B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FLY_CAM_MAX_HEIGHT
	static auto nh_0xF9D02130ECDD1D77 = rage::scrEngine::GetNativeHandler(0xF9D02130ECDD1D77);
	rage::scrEngine::RegisterNativeHandler(0xF9D02130ECDD1D77, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF9D02130ECDD1D77(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_FLY_THROUGH_WINDSCREEN_PARAMS (result cleaner only)
	AddResultCleaner(0x4d3118ed, ResultCleaner<bool>);

	// STREAMING/SET_FOCUS_ENTITY
	static auto nh_0x198F77705FA0931D = rage::scrEngine::GetNativeHandler(0x198F77705FA0931D);
	rage::scrEngine::RegisterNativeHandler(0x198F77705FA0931D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x198F77705FA0931D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_FOCUS_POS_AND_VEL
	static auto nh_0xBB7454BAFF08FE25 = rage::scrEngine::GetNativeHandler(0xBB7454BAFF08FE25);
	rage::scrEngine::RegisterNativeHandler(0xBB7454BAFF08FE25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB7454BAFF08FE25(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FOLLOW_PED_CAM_THIS_UPDATE
	static auto nh_0x44A113DD6FFC48D1 = rage::scrEngine::GetNativeHandler(0x44A113DD6FFC48D1);
	rage::scrEngine::RegisterNativeHandler(0x44A113DD6FFC48D1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x44A113DD6FFC48D1(cxt);
	});
	        
	AddResultCleaner(0x44A113DD6FFC48D1, ResultCleaner<bool>);

	// CAM/SET_FOLLOW_PED_CAM_VIEW_MODE
	static auto nh_0x5A4F9EDF1673F704 = rage::scrEngine::GetNativeHandler(0x5A4F9EDF1673F704);
	rage::scrEngine::RegisterNativeHandler(0x5A4F9EDF1673F704, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5A4F9EDF1673F704(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FOLLOW_VEHICLE_CAM_VIEW_MODE
	static auto nh_0xAC253D7842768F48 = rage::scrEngine::GetNativeHandler(0xAC253D7842768F48);
	rage::scrEngine::RegisterNativeHandler(0xAC253D7842768F48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC253D7842768F48(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL
	static auto nh_0x19464CB6E4078C8A = rage::scrEngine::GetNativeHandler(0x19464CB6E4078C8A);
	rage::scrEngine::RegisterNativeHandler(0x19464CB6E4078C8A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19464CB6E4078C8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_FORCE_FOOTSTEP_UPDATE
	static auto nh_0x129466ED55140F8D = rage::scrEngine::GetNativeHandler(0x129466ED55140F8D);
	rage::scrEngine::RegisterNativeHandler(0x129466ED55140F8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x129466ED55140F8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_FORCE_HD_VEHICLE
	static auto nh_0x97CE68CB032583F0 = rage::scrEngine::GetNativeHandler(0x97CE68CB032583F0);
	rage::scrEngine::RegisterNativeHandler(0x97CE68CB032583F0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97CE68CB032583F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_FORCE_OBJECT_THIS_FRAME
	static auto nh_0xF538081986E49E9D = rage::scrEngine::GetNativeHandler(0xF538081986E49E9D);
	rage::scrEngine::RegisterNativeHandler(0xF538081986E49E9D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF538081986E49E9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_FORCE_STEP_TYPE
	static auto nh_0xCB968B53FC7F916D = rage::scrEngine::GetNativeHandler(0xCB968B53FC7F916D);
	rage::scrEngine::RegisterNativeHandler(0xCB968B53FC7F916D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB968B53FC7F916D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_FORKLIFT_FORK_HEIGHT
	static auto nh_0x37EBBF3117BD6A25 = rage::scrEngine::GetNativeHandler(0x37EBBF3117BD6A25);
	rage::scrEngine::RegisterNativeHandler(0x37EBBF3117BD6A25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x37EBBF3117BD6A25(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_FRONTEND_ACTIVE
	static auto nh_0x745711A75AB09277 = rage::scrEngine::GetNativeHandler(0x745711A75AB09277);
	rage::scrEngine::RegisterNativeHandler(0x745711A75AB09277, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x745711A75AB09277(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_FRONTEND_RADIO_ACTIVE
	static auto nh_0xF7F26C6E9CC9EBB8 = rage::scrEngine::GetNativeHandler(0xF7F26C6E9CC9EBB8);
	rage::scrEngine::RegisterNativeHandler(0xF7F26C6E9CC9EBB8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF7F26C6E9CC9EBB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_FUEL_CONSUMPTION_RATE_MULTIPLIER
	static auto nh_0x845f3e5c = rage::scrEngine::GetNativeHandler(0x845f3e5c);
	rage::scrEngine::RegisterNativeHandler(0x845f3e5c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x845f3e5c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_FUEL_CONSUMPTION_STATE
	static auto nh_0x81dad03e = rage::scrEngine::GetNativeHandler(0x81dad03e);
	rage::scrEngine::RegisterNativeHandler(0x81dad03e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81dad03e(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE
	static auto nh_0x8BBACBF51DA047A8 = rage::scrEngine::GetNativeHandler(0x8BBACBF51DA047A8);
	rage::scrEngine::RegisterNativeHandler(0x8BBACBF51DA047A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8BBACBF51DA047A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_CAM_RELATIVE_HEADING
	static auto nh_0xB4EC2312F4E5B1F1 = rage::scrEngine::GetNativeHandler(0xB4EC2312F4E5B1F1);
	rage::scrEngine::RegisterNativeHandler(0xB4EC2312F4E5B1F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB4EC2312F4E5B1F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_CAM_RELATIVE_PITCH
	static auto nh_0x6D0858B8EDFD2B7D = rage::scrEngine::GetNativeHandler(0x6D0858B8EDFD2B7D);
	rage::scrEngine::RegisterNativeHandler(0x6D0858B8EDFD2B7D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D0858B8EDFD2B7D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE
	static auto nh_0xA87E00932DB4D85D = rage::scrEngine::GetNativeHandler(0xA87E00932DB4D85D);
	rage::scrEngine::RegisterNativeHandler(0xA87E00932DB4D85D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA87E00932DB4D85D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_COORD_HINT
	static auto nh_0xD51ADCD2D8BC0FB3 = rage::scrEngine::GetNativeHandler(0xD51ADCD2D8BC0FB3);
	rage::scrEngine::RegisterNativeHandler(0xD51ADCD2D8BC0FB3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD51ADCD2D8BC0FB3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_ENTITY_HINT
	static auto nh_0x189E955A8313E298 = rage::scrEngine::GetNativeHandler(0x189E955A8313E298);
	rage::scrEngine::RegisterNativeHandler(0x189E955A8313E298, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x189E955A8313E298(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET
	static auto nh_0xD1F8363DFAD03848 = rage::scrEngine::GetNativeHandler(0xD1F8363DFAD03848);
	rage::scrEngine::RegisterNativeHandler(0xD1F8363DFAD03848, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD1F8363DFAD03848(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR
	static auto nh_0xF8BDBF3D573049A1 = rage::scrEngine::GetNativeHandler(0xF8BDBF3D573049A1);
	rage::scrEngine::RegisterNativeHandler(0xF8BDBF3D573049A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF8BDBF3D573049A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_HINT_FOV
	static auto nh_0x513403FB9C56211F = rage::scrEngine::GetNativeHandler(0x513403FB9C56211F);
	rage::scrEngine::RegisterNativeHandler(0x513403FB9C56211F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x513403FB9C56211F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_OBJECT_HINT
	static auto nh_0x83E87508A2CA2AC6 = rage::scrEngine::GetNativeHandler(0x83E87508A2CA2AC6);
	rage::scrEngine::RegisterNativeHandler(0x83E87508A2CA2AC6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x83E87508A2CA2AC6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_PED_HINT
	static auto nh_0x2B486269ACD548D3 = rage::scrEngine::GetNativeHandler(0x2B486269ACD548D3);
	rage::scrEngine::RegisterNativeHandler(0x2B486269ACD548D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B486269ACD548D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_GAMEPLAY_VEHICLE_HINT
	static auto nh_0xA2297E18F3E71C2E = rage::scrEngine::GetNativeHandler(0xA2297E18F3E71C2E);
	rage::scrEngine::RegisterNativeHandler(0xA2297E18F3E71C2E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2297E18F3E71C2E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_GAME_PAUSED
	static auto nh_0x577D1284D6873711 = rage::scrEngine::GetNativeHandler(0x577D1284D6873711);
	rage::scrEngine::RegisterNativeHandler(0x577D1284D6873711, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x577D1284D6873711(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_GAME_PAUSES_FOR_STREAMING
	static auto nh_0x717CD6E6FAEBBEDC = rage::scrEngine::GetNativeHandler(0x717CD6E6FAEBBEDC);
	rage::scrEngine::RegisterNativeHandler(0x717CD6E6FAEBBEDC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x717CD6E6FAEBBEDC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_GARBAGE_TRUCKS
	static auto nh_0x2AFD795EEAC8D30D = rage::scrEngine::GetNativeHandler(0x2AFD795EEAC8D30D);
	rage::scrEngine::RegisterNativeHandler(0x2AFD795EEAC8D30D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2AFD795EEAC8D30D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT
	static auto nh_0x6C6B148586F934F7 = rage::scrEngine::GetNativeHandler(0x6C6B148586F934F7);
	rage::scrEngine::RegisterNativeHandler(0x6C6B148586F934F7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6C6B148586F934F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_GPS_ACTIVE
	static auto nh_0x3BD3F52BA9B1E4E8 = rage::scrEngine::GetNativeHandler(0x3BD3F52BA9B1E4E8);
	rage::scrEngine::RegisterNativeHandler(0x3BD3F52BA9B1E4E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3BD3F52BA9B1E4E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_GPS_CUSTOM_ROUTE_RENDER
	static auto nh_0x900086F371220B6F = rage::scrEngine::GetNativeHandler(0x900086F371220B6F);
	rage::scrEngine::RegisterNativeHandler(0x900086F371220B6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x900086F371220B6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_GPS_DISABLED_ZONE
	static auto nh_0xDC20483CD3DD5201 = rage::scrEngine::GetNativeHandler(0xDC20483CD3DD5201);
	rage::scrEngine::RegisterNativeHandler(0xDC20483CD3DD5201, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC20483CD3DD5201(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_GPS_DISABLED_ZONE_AT_INDEX
	static auto nh_0xD0BC1C6FB18EE154 = rage::scrEngine::GetNativeHandler(0xD0BC1C6FB18EE154);
	rage::scrEngine::RegisterNativeHandler(0xD0BC1C6FB18EE154, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD0BC1C6FB18EE154(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_GPS_FLAGS
	static auto nh_0x5B440763A4C8D15B = rage::scrEngine::GetNativeHandler(0x5B440763A4C8D15B);
	rage::scrEngine::RegisterNativeHandler(0x5B440763A4C8D15B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B440763A4C8D15B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_GPS_FLASHES
	static auto nh_0x320D0E0D936A0E9B = rage::scrEngine::GetNativeHandler(0x320D0E0D936A0E9B);
	rage::scrEngine::RegisterNativeHandler(0x320D0E0D936A0E9B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x320D0E0D936A0E9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_GPS_MULTI_ROUTE_RENDER
	static auto nh_0x3DDA37128DD1ACA8 = rage::scrEngine::GetNativeHandler(0x3DDA37128DD1ACA8);
	rage::scrEngine::RegisterNativeHandler(0x3DDA37128DD1ACA8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3DDA37128DD1ACA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_GRAVITY_LEVEL
	static auto nh_0x740E14FAD5842351 = rage::scrEngine::GetNativeHandler(0x740E14FAD5842351);
	rage::scrEngine::RegisterNativeHandler(0x740E14FAD5842351, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x740E14FAD5842351(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_GROUP_FORMATION
	static auto nh_0xCE2F5FC3AF7E8C1E = rage::scrEngine::GetNativeHandler(0xCE2F5FC3AF7E8C1E);
	rage::scrEngine::RegisterNativeHandler(0xCE2F5FC3AF7E8C1E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCE2F5FC3AF7E8C1E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_GROUP_FORMATION_SPACING
	static auto nh_0x1D9D45004C28C916 = rage::scrEngine::GetNativeHandler(0x1D9D45004C28C916);
	rage::scrEngine::RegisterNativeHandler(0x1D9D45004C28C916, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1D9D45004C28C916(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_GROUP_SEPARATION_RANGE
	static auto nh_0x4102C7858CFEE4E4 = rage::scrEngine::GetNativeHandler(0x4102C7858CFEE4E4);
	rage::scrEngine::RegisterNativeHandler(0x4102C7858CFEE4E4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4102C7858CFEE4E4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HANDLING_FIELD
	static auto nh_0xfe8064e3 = rage::scrEngine::GetNativeHandler(0xfe8064e3);
	rage::scrEngine::RegisterNativeHandler(0xfe8064e3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xfe8064e3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HANDLING_FLOAT
	static auto nh_0x90dd01c = rage::scrEngine::GetNativeHandler(0x90dd01c);
	rage::scrEngine::RegisterNativeHandler(0x90dd01c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x90dd01c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HANDLING_INT
	static auto nh_0x8ab3f46c = rage::scrEngine::GetNativeHandler(0x8ab3f46c);
	rage::scrEngine::RegisterNativeHandler(0x8ab3f46c, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8ab3f46c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HANDLING_VECTOR
	static auto nh_0x7f9d543 = rage::scrEngine::GetNativeHandler(0x7f9d543);
	rage::scrEngine::RegisterNativeHandler(0x7f9d543, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7f9d543(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_HD_AREA
	static auto nh_0xB85F26619073E775 = rage::scrEngine::GetNativeHandler(0xB85F26619073E775);
	rage::scrEngine::RegisterNativeHandler(0xB85F26619073E775, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB85F26619073E775(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_HEAD_BLEND_PALETTE_COLOR
	static auto nh_0xCC9682B8951C5229 = rage::scrEngine::GetNativeHandler(0xCC9682B8951C5229);
	rage::scrEngine::RegisterNativeHandler(0xCC9682B8951C5229, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC9682B8951C5229(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_HEALTH_HUD_DISPLAY_VALUES
	static auto nh_0x3F5CC444DCAAA8F2 = rage::scrEngine::GetNativeHandler(0x3F5CC444DCAAA8F2);
	rage::scrEngine::RegisterNativeHandler(0x3F5CC444DCAAA8F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3F5CC444DCAAA8F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HELI_BLADES_FULL_SPEED
	static auto nh_0xA178472EBB8AE60D = rage::scrEngine::GetNativeHandler(0xA178472EBB8AE60D);
	rage::scrEngine::RegisterNativeHandler(0xA178472EBB8AE60D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA178472EBB8AE60D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HELI_BLADES_SPEED
	static auto nh_0xFD280B4D7F3ABC4D = rage::scrEngine::GetNativeHandler(0xFD280B4D7F3ABC4D);
	rage::scrEngine::RegisterNativeHandler(0xFD280B4D7F3ABC4D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD280B4D7F3ABC4D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HELI_COMBAT_OFFSET
	static auto nh_0x0A3F820A9A9A9AC5 = rage::scrEngine::GetNativeHandler(0x0A3F820A9A9A9AC5);
	rage::scrEngine::RegisterNativeHandler(0x0A3F820A9A9A9AC5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A3F820A9A9A9AC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HELI_TAIL_EXPLODE_THROW_DASHBOARD
	static auto nh_0x3EC8BF18AA453FE9 = rage::scrEngine::GetNativeHandler(0x3EC8BF18AA453FE9);
	rage::scrEngine::RegisterNativeHandler(0x3EC8BF18AA453FE9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3EC8BF18AA453FE9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HELI_TURBULENCE_SCALAR
	static auto nh_0xE6F13851780394DA = rage::scrEngine::GetNativeHandler(0xE6F13851780394DA);
	rage::scrEngine::RegisterNativeHandler(0xE6F13851780394DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6F13851780394DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_HIDOF_OVERRIDE
	static auto nh_0xBA3D65906822BED5 = rage::scrEngine::GetNativeHandler(0xBA3D65906822BED5);
	rage::scrEngine::RegisterNativeHandler(0xBA3D65906822BED5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA3D65906822BED5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_HIGH_FALL_TASK
	static auto nh_0x8C825BDC7741D37C = rage::scrEngine::GetNativeHandler(0x8C825BDC7741D37C);
	rage::scrEngine::RegisterNativeHandler(0x8C825BDC7741D37C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8C825BDC7741D37C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_HORN_ENABLED
	static auto nh_0x76D683C108594D0E = rage::scrEngine::GetNativeHandler(0x76D683C108594D0E);
	rage::scrEngine::RegisterNativeHandler(0x76D683C108594D0E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x76D683C108594D0E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_HOVER_MODE_WING_RATIO
	static auto nh_0x70A252F60A3E036B = rage::scrEngine::GetNativeHandler(0x70A252F60A3E036B);
	rage::scrEngine::RegisterNativeHandler(0x70A252F60A3E036B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70A252F60A3E036B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HUD_COMPONENT_ALIGN
	static auto nh_0xeed219f2 = rage::scrEngine::GetNativeHandler(0xeed219f2);
	rage::scrEngine::RegisterNativeHandler(0xeed219f2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xeed219f2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_HUD_COMPONENT_POSITION
	static auto nh_0xAABB1F56E2A17CED = rage::scrEngine::GetNativeHandler(0xAABB1F56E2A17CED);
	rage::scrEngine::RegisterNativeHandler(0xAABB1F56E2A17CED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAABB1F56E2A17CED(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_HUD_COMPONENT_SIZE
	static auto nh_0x7644a9fa = rage::scrEngine::GetNativeHandler(0x7644a9fa);
	rage::scrEngine::RegisterNativeHandler(0x7644a9fa, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7644a9fa(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS
	static auto nh_0x596976B02B6B5700 = rage::scrEngine::GetNativeHandler(0x596976B02B6B5700);
	rage::scrEngine::RegisterNativeHandler(0x596976B02B6B5700, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x596976B02B6B5700(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_IGNORE_NO_GPS_FLAG
	static auto nh_0x72751156E7678833 = rage::scrEngine::GetNativeHandler(0x72751156E7678833);
	rage::scrEngine::RegisterNativeHandler(0x72751156E7678833, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72751156E7678833(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_IK_TARGET
	static auto nh_0xC32779C16FCEECD9 = rage::scrEngine::GetNativeHandler(0xC32779C16FCEECD9);
	rage::scrEngine::RegisterNativeHandler(0xC32779C16FCEECD9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xC32779C16FCEECD9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_INCIDENT_REQUESTED_UNITS
	static auto nh_0xB08B85D860E7BA3C = rage::scrEngine::GetNativeHandler(0xB08B85D860E7BA3C);
	rage::scrEngine::RegisterNativeHandler(0xB08B85D860E7BA3C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB08B85D860E7BA3C(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_INITIAL_PLAYER_STATION
	static auto nh_0x88795F13FACDA88D = rage::scrEngine::GetNativeHandler(0x88795F13FACDA88D);
	rage::scrEngine::RegisterNativeHandler(0x88795F13FACDA88D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x88795F13FACDA88D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/SET_INPUT_EXCLUSIVE
	static auto nh_0xEDE476E5EE29EDB1 = rage::scrEngine::GetNativeHandler(0xEDE476E5EE29EDB1);
	rage::scrEngine::RegisterNativeHandler(0xEDE476E5EE29EDB1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEDE476E5EE29EDB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_INSTANCE_PRIORITY_HINT
	static auto nh_0xC5F0A8EBD3F361CE = rage::scrEngine::GetNativeHandler(0xC5F0A8EBD3F361CE);
	rage::scrEngine::RegisterNativeHandler(0xC5F0A8EBD3F361CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC5F0A8EBD3F361CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_INSTANCE_PRIORITY_MODE
	static auto nh_0x9BAE5AD2508DF078 = rage::scrEngine::GetNativeHandler(0x9BAE5AD2508DF078);
	rage::scrEngine::RegisterNativeHandler(0x9BAE5AD2508DF078, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BAE5AD2508DF078(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_INTERIOR_ACTIVE
	static auto nh_0xE37B76C387BE28ED = rage::scrEngine::GetNativeHandler(0xE37B76C387BE28ED);
	rage::scrEngine::RegisterNativeHandler(0xE37B76C387BE28ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE37B76C387BE28ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PORTAL_CORNER_POSITION
	static auto nh_0x87f43553 = rage::scrEngine::GetNativeHandler(0x87f43553);
	rage::scrEngine::RegisterNativeHandler(0x87f43553, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x87f43553(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PORTAL_ENTITY_FLAG
	static auto nh_0x8349cd76 = rage::scrEngine::GetNativeHandler(0x8349cd76);
	rage::scrEngine::RegisterNativeHandler(0x8349cd76, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8349cd76(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PORTAL_FLAG
	static auto nh_0x88b2355e = rage::scrEngine::GetNativeHandler(0x88b2355e);
	rage::scrEngine::RegisterNativeHandler(0x88b2355e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88b2355e(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PORTAL_ROOM_FROM
	static auto nh_0x298fc783 = rage::scrEngine::GetNativeHandler(0x298fc783);
	rage::scrEngine::RegisterNativeHandler(0x298fc783, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x298fc783(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PORTAL_ROOM_TO
	static auto nh_0x58982680 = rage::scrEngine::GetNativeHandler(0x58982680);
	rage::scrEngine::RegisterNativeHandler(0x58982680, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58982680(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_PROBE_LENGTH
	static auto nh_0x423f7e39 = rage::scrEngine::GetNativeHandler(0x423f7e39);
	rage::scrEngine::RegisterNativeHandler(0x423f7e39, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x423f7e39(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_ROOM_EXTENTS
	static auto nh_0x4fdcf51e = rage::scrEngine::GetNativeHandler(0x4fdcf51e);
	rage::scrEngine::RegisterNativeHandler(0x4fdcf51e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4fdcf51e(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_ROOM_FLAG
	static auto nh_0x5518d60b = rage::scrEngine::GetNativeHandler(0x5518d60b);
	rage::scrEngine::RegisterNativeHandler(0x5518d60b, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5518d60b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_INTERIOR_ROOM_TIMECYCLE
	static auto nh_0x31c9a848 = rage::scrEngine::GetNativeHandler(0x31c9a848);
	rage::scrEngine::RegisterNativeHandler(0x31c9a848, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31c9a848(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE
	static auto nh_0xE9EA16D6E54CDCA4 = rage::scrEngine::GetNativeHandler(0xE9EA16D6E54CDCA4);
	rage::scrEngine::RegisterNativeHandler(0xE9EA16D6E54CDCA4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE9EA16D6E54CDCA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_ISLAND_ENABLED
	static auto nh_0x9A9D1BA639675CF1 = rage::scrEngine::GetNativeHandler(0x9A9D1BA639675CF1);
	rage::scrEngine::RegisterNativeHandler(0x9A9D1BA639675CF1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9A9D1BA639675CF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_LAST_DRIVEN_VEHICLE
	static auto nh_0xACFB2463CC22BED2 = rage::scrEngine::GetNativeHandler(0xACFB2463CC22BED2);
	rage::scrEngine::RegisterNativeHandler(0xACFB2463CC22BED2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xACFB2463CC22BED2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_LIGHTS_CUTOFF_DISTANCE_TWEAK
	static auto nh_0xBC3CCA5844452B06 = rage::scrEngine::GetNativeHandler(0xBC3CCA5844452B06);
	rage::scrEngine::RegisterNativeHandler(0xBC3CCA5844452B06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC3CCA5844452B06(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS
	static auto nh_0x78857FC65CADB909 = rage::scrEngine::GetNativeHandler(0x78857FC65CADB909);
	rage::scrEngine::RegisterNativeHandler(0x78857FC65CADB909, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78857FC65CADB909(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_LOCAL_PLAYER_INVISIBLE_LOCALLY
	static auto nh_0xE5F773C1A1D9D168 = rage::scrEngine::GetNativeHandler(0xE5F773C1A1D9D168);
	rage::scrEngine::RegisterNativeHandler(0xE5F773C1A1D9D168, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5F773C1A1D9D168(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE
	static auto nh_0xD1065D68947E7B6E = rage::scrEngine::GetNativeHandler(0xD1065D68947E7B6E);
	rage::scrEngine::RegisterNativeHandler(0xD1065D68947E7B6E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD1065D68947E7B6E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_LOCAL_PLAYER_VISIBLE_LOCALLY
	static auto nh_0x7619364C82D3BF14 = rage::scrEngine::GetNativeHandler(0x7619364C82D3BF14);
	rage::scrEngine::RegisterNativeHandler(0x7619364C82D3BF14, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7619364C82D3BF14(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MANUAL_SHUTDOWN_LOADING_SCREEN_NUI
	static auto nh_0x1722c938 = rage::scrEngine::GetNativeHandler(0x1722c938);
	rage::scrEngine::RegisterNativeHandler(0x1722c938, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1722c938(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_MAPDATACULLBOX_ENABLED
	static auto nh_0xAF12610C644A35C9 = rage::scrEngine::GetNativeHandler(0xAF12610C644A35C9);
	rage::scrEngine::RegisterNativeHandler(0xAF12610C644A35C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xAF12610C644A35C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MAP_ZOOM_DATA_LEVEL
	static auto nh_0x447c718e = rage::scrEngine::GetNativeHandler(0x447c718e);
	rage::scrEngine::RegisterNativeHandler(0x447c718e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x447c718e(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MAX_ARMOUR_HUD_DISPLAY
	static auto nh_0x06A320535F5F0248 = rage::scrEngine::GetNativeHandler(0x06A320535F5F0248);
	rage::scrEngine::RegisterNativeHandler(0x06A320535F5F0248, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06A320535F5F0248(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MAX_HEALTH_HUD_DISPLAY
	static auto nh_0x975D66A0BC17064C = rage::scrEngine::GetNativeHandler(0x975D66A0BC17064C);
	rage::scrEngine::RegisterNativeHandler(0x975D66A0BC17064C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x975D66A0BC17064C(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER
	static auto nh_0x0BF3B3BD47D79C08 = rage::scrEngine::GetNativeHandler(0x0BF3B3BD47D79C08);
	rage::scrEngine::RegisterNativeHandler(0x0BF3B3BD47D79C08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0BF3B3BD47D79C08(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_MAX_WANTED_LEVEL
	static auto nh_0xAA5F02DB48D704B9 = rage::scrEngine::GetNativeHandler(0xAA5F02DB48D704B9);
	rage::scrEngine::RegisterNativeHandler(0xAA5F02DB48D704B9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA5F02DB48D704B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_MICROPHONE_POSITION
	static auto nh_0xB6AE90EDDE95C762 = rage::scrEngine::GetNativeHandler(0xB6AE90EDDE95C762);
	rage::scrEngine::RegisterNativeHandler(0xB6AE90EDDE95C762, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB6AE90EDDE95C762(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MILLISECONDS_PER_GAME_MINUTE
	static auto nh_0x36ca2554 = rage::scrEngine::GetNativeHandler(0x36ca2554);
	rage::scrEngine::RegisterNativeHandler(0x36ca2554, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36ca2554(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_MINIGAME_IN_PROGRESS
	static auto nh_0x19E00D7322C6F85B = rage::scrEngine::GetNativeHandler(0x19E00D7322C6F85B);
	rage::scrEngine::RegisterNativeHandler(0x19E00D7322C6F85B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19E00D7322C6F85B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_BLOCK_WAYPOINT
	static auto nh_0x58FADDED207897DC = rage::scrEngine::GetNativeHandler(0x58FADDED207897DC);
	rage::scrEngine::RegisterNativeHandler(0x58FADDED207897DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58FADDED207897DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MINIMAP_CLIP_TYPE
	static auto nh_0xb8b4490c = rage::scrEngine::GetNativeHandler(0xb8b4490c);
	rage::scrEngine::RegisterNativeHandler(0xb8b4490c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb8b4490c(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_COMPONENT (result cleaner only)
	AddResultCleaner(0x75A9A10948D1DEA6, ResultCleaner<int>);

	// CFX/SET_MINIMAP_COMPONENT_POSITION
	static auto nh_0x3e882b23 = rage::scrEngine::GetNativeHandler(0x3e882b23);
	rage::scrEngine::RegisterNativeHandler(0x3e882b23, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3e882b23(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_FOW_REVEAL_COORDINATE
	static auto nh_0x0923DBF87DFF735E = rage::scrEngine::GetNativeHandler(0x0923DBF87DFF735E);
	rage::scrEngine::RegisterNativeHandler(0x0923DBF87DFF735E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0923DBF87DFF735E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_GOLF_COURSE
	static auto nh_0x71BDB63DBAF8DA59 = rage::scrEngine::GetNativeHandler(0x71BDB63DBAF8DA59);
	rage::scrEngine::RegisterNativeHandler(0x71BDB63DBAF8DA59, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x71BDB63DBAF8DA59(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_GOLF_COURSE_OFF
	static auto nh_0x35EDD5B2E3FF01C0 = rage::scrEngine::GetNativeHandler(0x35EDD5B2E3FF01C0);
	rage::scrEngine::RegisterNativeHandler(0x35EDD5B2E3FF01C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35EDD5B2E3FF01C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_HIDE_FOW
	static auto nh_0xF8DEE0A5600CBB93 = rage::scrEngine::GetNativeHandler(0xF8DEE0A5600CBB93);
	rage::scrEngine::RegisterNativeHandler(0xF8DEE0A5600CBB93, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF8DEE0A5600CBB93(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_IN_PROLOGUE
	static auto nh_0x9133955F1A2DA957 = rage::scrEngine::GetNativeHandler(0x9133955F1A2DA957);
	rage::scrEngine::RegisterNativeHandler(0x9133955F1A2DA957, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9133955F1A2DA957(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_IN_SPECTATOR_MODE
	static auto nh_0x1A5CD7752DD28CD3 = rage::scrEngine::GetNativeHandler(0x1A5CD7752DD28CD3);
	rage::scrEngine::RegisterNativeHandler(0x1A5CD7752DD28CD3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A5CD7752DD28CD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MINIMAP_OVERLAY_DISPLAY
	static auto nh_0x6a48b3ca = rage::scrEngine::GetNativeHandler(0x6a48b3ca);
	rage::scrEngine::RegisterNativeHandler(0x6a48b3ca, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6a48b3ca(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MINIMAP_SONAR_SWEEP
	static auto nh_0x6B50FC8749632EC1 = rage::scrEngine::GetNativeHandler(0x6B50FC8749632EC1);
	rage::scrEngine::RegisterNativeHandler(0x6B50FC8749632EC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B50FC8749632EC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_MISSION_FLAG
	static auto nh_0xC4301E5121A0ED73 = rage::scrEngine::GetNativeHandler(0xC4301E5121A0ED73);
	rage::scrEngine::RegisterNativeHandler(0xC4301E5121A0ED73, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC4301E5121A0ED73(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MISSION_NAME
	static auto nh_0x5F28ECF5FC84772F = rage::scrEngine::GetNativeHandler(0x5F28ECF5FC84772F);
	rage::scrEngine::RegisterNativeHandler(0x5F28ECF5FC84772F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5F28ECF5FC84772F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED
	static auto nh_0xBBE7648349B49BE8 = rage::scrEngine::GetNativeHandler(0xBBE7648349B49BE8);
	rage::scrEngine::RegisterNativeHandler(0xBBE7648349B49BE8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBBE7648349B49BE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_MISSION_TRAIN_COORDS
	static auto nh_0x591CA673AA6AB736 = rage::scrEngine::GetNativeHandler(0x591CA673AA6AB736);
	rage::scrEngine::RegisterNativeHandler(0x591CA673AA6AB736, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x591CA673AA6AB736(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/SET_MOBILE_PHONE_DOF_STATE
	static auto nh_0x375A706A5C2FD084 = rage::scrEngine::GetNativeHandler(0x375A706A5C2FD084);
	rage::scrEngine::RegisterNativeHandler(0x375A706A5C2FD084, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x375A706A5C2FD084(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/SET_MOBILE_PHONE_POSITION
	static auto nh_0x693A5C6D6734085B = rage::scrEngine::GetNativeHandler(0x693A5C6D6734085B);
	rage::scrEngine::RegisterNativeHandler(0x693A5C6D6734085B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x693A5C6D6734085B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_MOBILE_PHONE_RADIO_STATE
	static auto nh_0xBF286C554784F3DF = rage::scrEngine::GetNativeHandler(0xBF286C554784F3DF);
	rage::scrEngine::RegisterNativeHandler(0xBF286C554784F3DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF286C554784F3DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/SET_MOBILE_PHONE_ROTATION
	static auto nh_0xBB779C0CA917E865 = rage::scrEngine::GetNativeHandler(0xBB779C0CA917E865);
	rage::scrEngine::RegisterNativeHandler(0xBB779C0CA917E865, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xBB779C0CA917E865(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/SET_MOBILE_PHONE_SCALE
	static auto nh_0xCBDD322A73D6D932 = rage::scrEngine::GetNativeHandler(0xCBDD322A73D6D932);
	rage::scrEngine::RegisterNativeHandler(0xCBDD322A73D6D932, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCBDD322A73D6D932(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY
	static auto nh_0x1098355A16064BB3 = rage::scrEngine::GetNativeHandler(0x1098355A16064BB3);
	rage::scrEngine::RegisterNativeHandler(0x1098355A16064BB3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1098355A16064BB3(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_MODEL_AS_NO_LONGER_NEEDED
	static auto nh_0xE532F5D78798DAAB = rage::scrEngine::GetNativeHandler(0xE532F5D78798DAAB);
	rage::scrEngine::RegisterNativeHandler(0xE532F5D78798DAAB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE532F5D78798DAAB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MODEL_HEADLIGHT_CONFIGURATION
	static auto nh_0x7f6b8d75 = rage::scrEngine::GetNativeHandler(0x7f6b8d75);
	rage::scrEngine::RegisterNativeHandler(0x7f6b8d75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7f6b8d75(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_MOUNTED_WEAPON_TARGET
	static auto nh_0xCCD892192C6D2BB9 = rage::scrEngine::GetNativeHandler(0xCCD892192C6D2BB9);
	rage::scrEngine::RegisterNativeHandler(0xCCD892192C6D2BB9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCCD892192C6D2BB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_MOVEMENT_MODE_OVERRIDE
	static auto nh_0x781DE8FA214E87D2 = rage::scrEngine::GetNativeHandler(0x781DE8FA214E87D2);
	rage::scrEngine::RegisterNativeHandler(0x781DE8FA214E87D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x781DE8FA214E87D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MP_GAMER_TAGS_USE_VEHICLE_BEHAVIOR
	static auto nh_0x7a27bc93 = rage::scrEngine::GetNativeHandler(0x7a27bc93);
	rage::scrEngine::RegisterNativeHandler(0x7a27bc93, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7a27bc93(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_MP_GAMER_TAGS_VISIBLE_DISTANCE
	static auto nh_0xd61676b3 = rage::scrEngine::GetNativeHandler(0xd61676b3);
	rage::scrEngine::RegisterNativeHandler(0xd61676b3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd61676b3(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_ALPHA
	static auto nh_0xD48FE545CD46F857 = rage::scrEngine::GetNativeHandler(0xD48FE545CD46F857);
	rage::scrEngine::RegisterNativeHandler(0xD48FE545CD46F857, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD48FE545CD46F857(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_BIG_TEXT
	static auto nh_0x7B7723747CCB55B6 = rage::scrEngine::GetNativeHandler(0x7B7723747CCB55B6);
	rage::scrEngine::RegisterNativeHandler(0x7B7723747CCB55B6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7B7723747CCB55B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_COLOUR
	static auto nh_0x613ED644950626AE = rage::scrEngine::GetNativeHandler(0x613ED644950626AE);
	rage::scrEngine::RegisterNativeHandler(0x613ED644950626AE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x613ED644950626AE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR
	static auto nh_0x3158C77A7E888AB4 = rage::scrEngine::GetNativeHandler(0x3158C77A7E888AB4);
	rage::scrEngine::RegisterNativeHandler(0x3158C77A7E888AB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3158C77A7E888AB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_NAME
	static auto nh_0xDEA2B8283BAA3944 = rage::scrEngine::GetNativeHandler(0xDEA2B8283BAA3944);
	rage::scrEngine::RegisterNativeHandler(0xDEA2B8283BAA3944, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDEA2B8283BAA3944(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_VISIBILITY
	static auto nh_0x63BB75ABEDC1F6A0 = rage::scrEngine::GetNativeHandler(0x63BB75ABEDC1F6A0);
	rage::scrEngine::RegisterNativeHandler(0x63BB75ABEDC1F6A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63BB75ABEDC1F6A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MP_GAMER_TAG_WANTED_LEVEL
	static auto nh_0xCF228E2AA03099C3 = rage::scrEngine::GetNativeHandler(0xCF228E2AA03099C3);
	rage::scrEngine::RegisterNativeHandler(0xCF228E2AA03099C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCF228E2AA03099C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MULTIPLAYER_BANK_CASH
	static auto nh_0xDD21B55DF695CD0A = rage::scrEngine::GetNativeHandler(0xDD21B55DF695CD0A);
	rage::scrEngine::RegisterNativeHandler(0xDD21B55DF695CD0A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDD21B55DF695CD0A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MULTIPLAYER_HUD_CASH
	static auto nh_0xFD1D220394BCB824 = rage::scrEngine::GetNativeHandler(0xFD1D220394BCB824);
	rage::scrEngine::RegisterNativeHandler(0xFD1D220394BCB824, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD1D220394BCB824(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_MULTIPLAYER_WALLET_CASH
	static auto nh_0xC2D15BEF167E27BC = rage::scrEngine::GetNativeHandler(0xC2D15BEF167E27BC);
	rage::scrEngine::RegisterNativeHandler(0xC2D15BEF167E27BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC2D15BEF167E27BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_CUTSCENE_ENTITIES
	static auto nh_0xAAA553E7DD28A457 = rage::scrEngine::GetNativeHandler(0xAAA553E7DD28A457);
	rage::scrEngine::RegisterNativeHandler(0xAAA553E7DD28A457, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAAA553E7DD28A457(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER
	static auto nh_0xA8A024587329F36A = rage::scrEngine::GetNativeHandler(0xA8A024587329F36A);
	rage::scrEngine::RegisterNativeHandler(0xA8A024587329F36A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA8A024587329F36A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_ID_CAN_MIGRATE
	static auto nh_0x299EEB23175895FC = rage::scrEngine::GetNativeHandler(0x299EEB23175895FC);
	rage::scrEngine::RegisterNativeHandler(0x299EEB23175895FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x299EEB23175895FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES
	static auto nh_0xE05E81A888FA63C8 = rage::scrEngine::GetNativeHandler(0xE05E81A888FA63C8);
	rage::scrEngine::RegisterNativeHandler(0xE05E81A888FA63C8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE05E81A888FA63C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_ID_VISIBLE_IN_CUTSCENE
	static auto nh_0xA6928482543022B4 = rage::scrEngine::GetNativeHandler(0xA6928482543022B4);
	rage::scrEngine::RegisterNativeHandler(0xA6928482543022B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6928482543022B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_VEHICLE_AS_GHOST
	static auto nh_0x6274C4712850841E = rage::scrEngine::GetNativeHandler(0x6274C4712850841E);
	rage::scrEngine::RegisterNativeHandler(0x6274C4712850841E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6274C4712850841E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_NETWORK_VEHICLE_RESPOT_TIMER
	static auto nh_0xEC51713AB6EC36E8 = rage::scrEngine::GetNativeHandler(0xEC51713AB6EC36E8);
	rage::scrEngine::RegisterNativeHandler(0xEC51713AB6EC36E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC51713AB6EC36E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_NEW_WAYPOINT
	static auto nh_0xFE43368D2AA4F2FC = rage::scrEngine::GetNativeHandler(0xFE43368D2AA4F2FC);
	rage::scrEngine::RegisterNativeHandler(0xFE43368D2AA4F2FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFE43368D2AA4F2FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_NEXT_DESIRED_MOVE_STATE
	static auto nh_0xF1B9F16E89E2C93A = rage::scrEngine::GetNativeHandler(0xF1B9F16E89E2C93A);
	rage::scrEngine::RegisterNativeHandler(0xF1B9F16E89E2C93A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1B9F16E89E2C93A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_NEXT_PLAYER_TCMODIFIER
	static auto nh_0xBF59707B3E5ED531 = rage::scrEngine::GetNativeHandler(0xBF59707B3E5ED531);
	rage::scrEngine::RegisterNativeHandler(0xBF59707B3E5ED531, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBF59707B3E5ED531(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_NIGHTVISION
	static auto nh_0x18F621F7A5B1F85D = rage::scrEngine::GetNativeHandler(0x18F621F7A5B1F85D);
	rage::scrEngine::RegisterNativeHandler(0x18F621F7A5B1F85D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x18F621F7A5B1F85D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_NOISEOVERIDE
	static auto nh_0xE787BF1C5CF823C9 = rage::scrEngine::GetNativeHandler(0xE787BF1C5CF823C9);
	rage::scrEngine::RegisterNativeHandler(0xE787BF1C5CF823C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE787BF1C5CF823C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_NOISINESSOVERIDE
	static auto nh_0xCB6A7C3BB17A0C67 = rage::scrEngine::GetNativeHandler(0xCB6A7C3BB17A0C67);
	rage::scrEngine::RegisterNativeHandler(0xCB6A7C3BB17A0C67, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB6A7C3BB17A0C67(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/SET_NO_LOADING_SCREEN
	static auto nh_0x5262CC1995D07E09 = rage::scrEngine::GetNativeHandler(0x5262CC1995D07E09);
	rage::scrEngine::RegisterNativeHandler(0x5262CC1995D07E09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5262CC1995D07E09(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_NUI_FOCUS
	static auto nh_0x5b98ae30 = rage::scrEngine::GetNativeHandler(0x5b98ae30);
	rage::scrEngine::RegisterNativeHandler(0x5b98ae30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5b98ae30(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_NUI_FOCUS_KEEP_INPUT
	static auto nh_0x3ff5e5f8 = rage::scrEngine::GetNativeHandler(0x3ff5e5f8);
	rage::scrEngine::RegisterNativeHandler(0x3ff5e5f8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3ff5e5f8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_NUMBER_OF_PARKED_VEHICLES
	static auto nh_0xCAA15F13EBD417FF = rage::scrEngine::GetNativeHandler(0xCAA15F13EBD417FF);
	rage::scrEngine::RegisterNativeHandler(0xCAA15F13EBD417FF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCAA15F13EBD417FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY
	static auto nh_0x4D89D607CB3DD1D2 = rage::scrEngine::GetNativeHandler(0x4D89D607CB3DD1D2);
	rage::scrEngine::RegisterNativeHandler(0x4D89D607CB3DD1D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4D89D607CB3DD1D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_OBJECT_AS_NO_LONGER_NEEDED
	static auto nh_0x3AE22DEB5BA5A3E6 = rage::scrEngine::GetNativeHandler(0x3AE22DEB5BA5A3E6);
	rage::scrEngine::RegisterNativeHandler(0x3AE22DEB5BA5A3E6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3AE22DEB5BA5A3E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_OBJECT_FORCE_VEHICLES_TO_AVOID
	static auto nh_0x77F33F2CCF64B3AA = rage::scrEngine::GetNativeHandler(0x77F33F2CCF64B3AA);
	rage::scrEngine::RegisterNativeHandler(0x77F33F2CCF64B3AA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77F33F2CCF64B3AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_OBJECT_PHYSICS_PARAMS
	static auto nh_0xF6DF6E90DE7DF90F = rage::scrEngine::GetNativeHandler(0xF6DF6E90DE7DF90F);
	rage::scrEngine::RegisterNativeHandler(0xF6DF6E90DE7DF90F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF6DF6E90DE7DF90F(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_OBJECT_TARGETTABLE
	static auto nh_0x8A7391690F5AFD81 = rage::scrEngine::GetNativeHandler(0x8A7391690F5AFD81);
	rage::scrEngine::RegisterNativeHandler(0x8A7391690F5AFD81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8A7391690F5AFD81(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_OPEN_REAR_DOORS_ON_EXPLOSION
	static auto nh_0x1B212B26DD3C04DF = rage::scrEngine::GetNativeHandler(0x1B212B26DD3C04DF);
	rage::scrEngine::RegisterNativeHandler(0x1B212B26DD3C04DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B212B26DD3C04DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_OVERRIDE_WEATHER
	static auto nh_0xA43D5C6FE51ADBEF = rage::scrEngine::GetNativeHandler(0xA43D5C6FE51ADBEF);
	rage::scrEngine::RegisterNativeHandler(0xA43D5C6FE51ADBEF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA43D5C6FE51ADBEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/SET_PAD_SHAKE
	static auto nh_0x48B3886C1358D0D5 = rage::scrEngine::GetNativeHandler(0x48B3886C1358D0D5);
	rage::scrEngine::RegisterNativeHandler(0x48B3886C1358D0D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48B3886C1358D0D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PARACHUTE_TASK_TARGET
	static auto nh_0xC313379AF0FCEDA7 = rage::scrEngine::GetNativeHandler(0xC313379AF0FCEDA7);
	rage::scrEngine::RegisterNativeHandler(0xC313379AF0FCEDA7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC313379AF0FCEDA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PARACHUTE_TASK_THRUST
	static auto nh_0x0729BAC1B8C64317 = rage::scrEngine::GetNativeHandler(0x0729BAC1B8C64317);
	rage::scrEngine::RegisterNativeHandler(0x0729BAC1B8C64317, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0729BAC1B8C64317(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
	static auto nh_0xEAE6DCC7EEE3DB1D = rage::scrEngine::GetNativeHandler(0xEAE6DCC7EEE3DB1D);
	rage::scrEngine::RegisterNativeHandler(0xEAE6DCC7EEE3DB1D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEAE6DCC7EEE3DB1D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_BULLET_IMPACT_SCALE
	static auto nh_0x27E32866E9A5C416 = rage::scrEngine::GetNativeHandler(0x27E32866E9A5C416);
	rage::scrEngine::RegisterNativeHandler(0x27E32866E9A5C416, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x27E32866E9A5C416(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE
	static auto nh_0xACEE6F360FC1F6B6 = rage::scrEngine::GetNativeHandler(0xACEE6F360FC1F6B6);
	rage::scrEngine::RegisterNativeHandler(0xACEE6F360FC1F6B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xACEE6F360FC1F6B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_CAM_INSIDE_VEHICLE
	static auto nh_0xEEC4047028426510 = rage::scrEngine::GetNativeHandler(0xEEC4047028426510);
	rage::scrEngine::RegisterNativeHandler(0xEEC4047028426510, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEEC4047028426510(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_ALPHA
	static auto nh_0x726845132380142E = rage::scrEngine::GetNativeHandler(0x726845132380142E);
	rage::scrEngine::RegisterNativeHandler(0x726845132380142E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x726845132380142E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_COLOUR
	static auto nh_0x7F8F65877F88783B = rage::scrEngine::GetNativeHandler(0x7F8F65877F88783B);
	rage::scrEngine::RegisterNativeHandler(0x7F8F65877F88783B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F8F65877F88783B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_EVOLUTION
	static auto nh_0x5F0C4B5B1C393BE2 = rage::scrEngine::GetNativeHandler(0x5F0C4B5B1C393BE2);
	rage::scrEngine::RegisterNativeHandler(0x5F0C4B5B1C393BE2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5F0C4B5B1C393BE2(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST
	static auto nh_0xDCB194B85EF7B541 = rage::scrEngine::GetNativeHandler(0xDCB194B85EF7B541);
	rage::scrEngine::RegisterNativeHandler(0xDCB194B85EF7B541, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDCB194B85EF7B541(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_OFFSETS
	static auto nh_0xF7DDEBEC43483C43 = rage::scrEngine::GetNativeHandler(0xF7DDEBEC43483C43);
	rage::scrEngine::RegisterNativeHandler(0xF7DDEBEC43483C43, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF7DDEBEC43483C43(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_LOOPED_SCALE
	static auto nh_0xB44250AAA456492D = rage::scrEngine::GetNativeHandler(0xB44250AAA456492D);
	rage::scrEngine::RegisterNativeHandler(0xB44250AAA456492D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB44250AAA456492D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_NON_LOOPED_ALPHA
	static auto nh_0x77168D722C58B2FC = rage::scrEngine::GetNativeHandler(0x77168D722C58B2FC);
	rage::scrEngine::RegisterNativeHandler(0x77168D722C58B2FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77168D722C58B2FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_NON_LOOPED_COLOUR
	static auto nh_0x26143A59EF48B262 = rage::scrEngine::GetNativeHandler(0x26143A59EF48B262);
	rage::scrEngine::RegisterNativeHandler(0x26143A59EF48B262, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26143A59EF48B262(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_OVERRIDE
	static auto nh_0xEA1E2D93F6F75ED9 = rage::scrEngine::GetNativeHandler(0xEA1E2D93F6F75ED9);
	rage::scrEngine::RegisterNativeHandler(0xEA1E2D93F6F75ED9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEA1E2D93F6F75ED9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PARTICLE_FX_SHOOTOUT_BOAT
	static auto nh_0x96EF97DAEB89BEF5 = rage::scrEngine::GetNativeHandler(0x96EF97DAEB89BEF5);
	rage::scrEngine::RegisterNativeHandler(0x96EF97DAEB89BEF5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x96EF97DAEB89BEF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PAUSE_MENU_ACTIVE
	static auto nh_0xDF47FC56C71569CF = rage::scrEngine::GetNativeHandler(0xDF47FC56C71569CF);
	rage::scrEngine::RegisterNativeHandler(0xDF47FC56C71569CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF47FC56C71569CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PAUSE_MENU_PED_LIGHTING
	static auto nh_0x3CA6050692BC61B0 = rage::scrEngine::GetNativeHandler(0x3CA6050692BC61B0);
	rage::scrEngine::RegisterNativeHandler(0x3CA6050692BC61B0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3CA6050692BC61B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PAUSE_MENU_PED_SLEEP_STATE
	static auto nh_0xECF128344E9FF9F1 = rage::scrEngine::GetNativeHandler(0xECF128344E9FF9F1);
	rage::scrEngine::RegisterNativeHandler(0xECF128344E9FF9F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xECF128344E9FF9F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ACCURACY
	static auto nh_0x7AEFB85C1D49DEB6 = rage::scrEngine::GetNativeHandler(0x7AEFB85C1D49DEB6);
	rage::scrEngine::RegisterNativeHandler(0x7AEFB85C1D49DEB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7AEFB85C1D49DEB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PED_AI_BLIP_FORCED_ON
	static auto nh_0x0C4BBF625CA98C4E = rage::scrEngine::GetNativeHandler(0x0C4BBF625CA98C4E);
	rage::scrEngine::RegisterNativeHandler(0x0C4BBF625CA98C4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0C4BBF625CA98C4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PED_AI_BLIP_GANG_ID
	static auto nh_0xE52B8E7F85D39A08 = rage::scrEngine::GetNativeHandler(0xE52B8E7F85D39A08);
	rage::scrEngine::RegisterNativeHandler(0xE52B8E7F85D39A08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE52B8E7F85D39A08(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PED_AI_BLIP_HAS_CONE
	static auto nh_0x3EED80DFF7325CAA = rage::scrEngine::GetNativeHandler(0x3EED80DFF7325CAA);
	rage::scrEngine::RegisterNativeHandler(0x3EED80DFF7325CAA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3EED80DFF7325CAA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PED_AI_BLIP_NOTICE_RANGE
	static auto nh_0x97C65887D4B37FA9 = rage::scrEngine::GetNativeHandler(0x97C65887D4B37FA9);
	rage::scrEngine::RegisterNativeHandler(0x97C65887D4B37FA9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97C65887D4B37FA9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ALERTNESS
	static auto nh_0xDBA71115ED9941A6 = rage::scrEngine::GetNativeHandler(0xDBA71115ED9941A6);
	rage::scrEngine::RegisterNativeHandler(0xDBA71115ED9941A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBA71115ED9941A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ALLOWED_TO_DUCK
	static auto nh_0xDA1F1B7BE1A8766F = rage::scrEngine::GetNativeHandler(0xDA1F1B7BE1A8766F);
	rage::scrEngine::RegisterNativeHandler(0xDA1F1B7BE1A8766F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA1F1B7BE1A8766F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ALLOW_VEHICLES_OVERRIDE
	static auto nh_0x3C028C636A414ED9 = rage::scrEngine::GetNativeHandler(0x3C028C636A414ED9);
	rage::scrEngine::RegisterNativeHandler(0x3C028C636A414ED9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C028C636A414ED9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ALTERNATE_MOVEMENT_ANIM
	static auto nh_0x90A43CC281FFAB46 = rage::scrEngine::GetNativeHandler(0x90A43CC281FFAB46);
	rage::scrEngine::RegisterNativeHandler(0x90A43CC281FFAB46, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x90A43CC281FFAB46(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ALTERNATE_WALK_ANIM
	static auto nh_0x6C60394CB4F75E9A = rage::scrEngine::GetNativeHandler(0x6C60394CB4F75E9A);
	rage::scrEngine::RegisterNativeHandler(0x6C60394CB4F75E9A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6C60394CB4F75E9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_AMMO
	static auto nh_0x14E56BC5B5DB6A19 = rage::scrEngine::GetNativeHandler(0x14E56BC5B5DB6A19);
	rage::scrEngine::RegisterNativeHandler(0x14E56BC5B5DB6A19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14E56BC5B5DB6A19(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_AMMO_BY_TYPE
	static auto nh_0x5FD1E1F011E76D7E = rage::scrEngine::GetNativeHandler(0x5FD1E1F011E76D7E);
	rage::scrEngine::RegisterNativeHandler(0x5FD1E1F011E76D7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FD1E1F011E76D7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_AMMO_TO_DROP
	static auto nh_0xA4EFEF9440A5B0EF = rage::scrEngine::GetNativeHandler(0xA4EFEF9440A5B0EF);
	rage::scrEngine::RegisterNativeHandler(0xA4EFEF9440A5B0EF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA4EFEF9440A5B0EF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ANGLED_DEFENSIVE_AREA
	static auto nh_0xC7F76DF27A5045A1 = rage::scrEngine::GetNativeHandler(0xC7F76DF27A5045A1);
	rage::scrEngine::RegisterNativeHandler(0xC7F76DF27A5045A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7F76DF27A5045A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_AO_BLOB_RENDERING
	static auto nh_0x2B5AA717A181FB4C = rage::scrEngine::GetNativeHandler(0x2B5AA717A181FB4C);
	rage::scrEngine::RegisterNativeHandler(0x2B5AA717A181FB4C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B5AA717A181FB4C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ARMOUR
	static auto nh_0xCEA04D83135264CC = rage::scrEngine::GetNativeHandler(0xCEA04D83135264CC);
	rage::scrEngine::RegisterNativeHandler(0xCEA04D83135264CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCEA04D83135264CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_AS_COP
	static auto nh_0xBB03C38DD3FB7FFD = rage::scrEngine::GetNativeHandler(0xBB03C38DD3FB7FFD);
	rage::scrEngine::RegisterNativeHandler(0xBB03C38DD3FB7FFD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB03C38DD3FB7FFD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_AS_ENEMY
	static auto nh_0x02A0C9720B854BFA = rage::scrEngine::GetNativeHandler(0x02A0C9720B854BFA);
	rage::scrEngine::RegisterNativeHandler(0x02A0C9720B854BFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02A0C9720B854BFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_AS_GROUP_LEADER
	static auto nh_0x2A7819605465FBCE = rage::scrEngine::GetNativeHandler(0x2A7819605465FBCE);
	rage::scrEngine::RegisterNativeHandler(0x2A7819605465FBCE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A7819605465FBCE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_AS_GROUP_MEMBER
	static auto nh_0x9F3480FE65DB31B5 = rage::scrEngine::GetNativeHandler(0x9F3480FE65DB31B5);
	rage::scrEngine::RegisterNativeHandler(0x9F3480FE65DB31B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F3480FE65DB31B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_PED_AS_NO_LONGER_NEEDED
	static auto nh_0x2595DD4236549CE3 = rage::scrEngine::GetNativeHandler(0x2595DD4236549CE3);
	rage::scrEngine::RegisterNativeHandler(0x2595DD4236549CE3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2595DD4236549CE3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_BLEND_FROM_PARENTS
	static auto nh_0x137BBD05230DB22D = rage::scrEngine::GetNativeHandler(0x137BBD05230DB22D);
	rage::scrEngine::RegisterNativeHandler(0x137BBD05230DB22D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x137BBD05230DB22D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_BLOCKS_PATHING_WHEN_DEAD
	static auto nh_0x576594E8D64375E2 = rage::scrEngine::GetNativeHandler(0x576594E8D64375E2);
	rage::scrEngine::RegisterNativeHandler(0x576594E8D64375E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x576594E8D64375E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_BOUNDS_ORIENTATION
	static auto nh_0x4F5F651ACCC9C4CF = rage::scrEngine::GetNativeHandler(0x4F5F651ACCC9C4CF);
	rage::scrEngine::RegisterNativeHandler(0x4F5F651ACCC9C4CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F5F651ACCC9C4CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_ARM_IK
	static auto nh_0x6C3B4D6D13B4C841 = rage::scrEngine::GetNativeHandler(0x6C3B4D6D13B4C841);
	rage::scrEngine::RegisterNativeHandler(0x6C3B4D6D13B4C841, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6C3B4D6D13B4C841(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_DRAGGED_OUT
	static auto nh_0xC1670E958EEE24E5 = rage::scrEngine::GetNativeHandler(0xC1670E958EEE24E5);
	rage::scrEngine::RegisterNativeHandler(0xC1670E958EEE24E5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1670E958EEE24E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE
	static auto nh_0x7A6535691B477C48 = rage::scrEngine::GetNativeHandler(0x7A6535691B477C48);
	rage::scrEngine::RegisterNativeHandler(0x7A6535691B477C48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A6535691B477C48(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_SHOT_IN_VEHICLE
	static auto nh_0xC7EF1BA83230BA07 = rage::scrEngine::GetNativeHandler(0xC7EF1BA83230BA07);
	rage::scrEngine::RegisterNativeHandler(0xC7EF1BA83230BA07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7EF1BA83230BA07(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_TARGETED_WHEN_INJURED
	static auto nh_0x638C03B0F9878F57 = rage::scrEngine::GetNativeHandler(0x638C03B0F9878F57);
	rage::scrEngine::RegisterNativeHandler(0x638C03B0F9878F57, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x638C03B0F9878F57(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_TARGETED_WITHOUT_LOS
	static auto nh_0x4328652AE5769C71 = rage::scrEngine::GetNativeHandler(0x4328652AE5769C71);
	rage::scrEngine::RegisterNativeHandler(0x4328652AE5769C71, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4328652AE5769C71(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_TARGETTED
	static auto nh_0x63F58F7C80513AAD = rage::scrEngine::GetNativeHandler(0x63F58F7C80513AAD);
	rage::scrEngine::RegisterNativeHandler(0x63F58F7C80513AAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63F58F7C80513AAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_TARGETTED_BY_PLAYER
	static auto nh_0x66B57B72E0836A76 = rage::scrEngine::GetNativeHandler(0x66B57B72E0836A76);
	rage::scrEngine::RegisterNativeHandler(0x66B57B72E0836A76, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66B57B72E0836A76(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_BE_TARGETTED_BY_TEAM
	static auto nh_0xBF1CA77833E58F2C = rage::scrEngine::GetNativeHandler(0xBF1CA77833E58F2C);
	rage::scrEngine::RegisterNativeHandler(0xBF1CA77833E58F2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF1CA77833E58F2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_COWER_IN_COVER
	static auto nh_0xCB7553CDCEF4A735 = rage::scrEngine::GetNativeHandler(0xCB7553CDCEF4A735);
	rage::scrEngine::RegisterNativeHandler(0xCB7553CDCEF4A735, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB7553CDCEF4A735(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_EVASIVE_DIVE
	static auto nh_0x6B7A646C242A7059 = rage::scrEngine::GetNativeHandler(0x6B7A646C242A7059);
	rage::scrEngine::RegisterNativeHandler(0x6B7A646C242A7059, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B7A646C242A7059(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_HEAD_IK
	static auto nh_0xC11C18092C5530DC = rage::scrEngine::GetNativeHandler(0xC11C18092C5530DC);
	rage::scrEngine::RegisterNativeHandler(0xC11C18092C5530DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC11C18092C5530DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_LEG_IK
	static auto nh_0x73518ECE2485412B = rage::scrEngine::GetNativeHandler(0x73518ECE2485412B);
	rage::scrEngine::RegisterNativeHandler(0x73518ECE2485412B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x73518ECE2485412B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_LOSE_PROPS_ON_DAMAGE
	static auto nh_0xE861D0B05C7662B8 = rage::scrEngine::GetNativeHandler(0xE861D0B05C7662B8);
	rage::scrEngine::RegisterNativeHandler(0xE861D0B05C7662B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE861D0B05C7662B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_PEEK_IN_COVER
	static auto nh_0xC514825C507E3736 = rage::scrEngine::GetNativeHandler(0xC514825C507E3736);
	rage::scrEngine::RegisterNativeHandler(0xC514825C507E3736, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC514825C507E3736(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_PLAY_AMBIENT_ANIMS
	static auto nh_0x6373D1349925A70E = rage::scrEngine::GetNativeHandler(0x6373D1349925A70E);
	rage::scrEngine::RegisterNativeHandler(0x6373D1349925A70E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6373D1349925A70E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS
	static auto nh_0x0EB0585D15254740 = rage::scrEngine::GetNativeHandler(0x0EB0585D15254740);
	rage::scrEngine::RegisterNativeHandler(0x0EB0585D15254740, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0EB0585D15254740(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_CAN_PLAY_AMBIENT_IDLES
	static auto nh_0x8FD89A6240813FD0 = rage::scrEngine::GetNativeHandler(0x8FD89A6240813FD0);
	rage::scrEngine::RegisterNativeHandler(0x8FD89A6240813FD0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8FD89A6240813FD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_PLAY_GESTURE_ANIMS
	static auto nh_0xBAF20C5432058024 = rage::scrEngine::GetNativeHandler(0xBAF20C5432058024);
	rage::scrEngine::RegisterNativeHandler(0xBAF20C5432058024, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBAF20C5432058024(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_PLAY_VISEME_ANIMS
	static auto nh_0xF833DDBA3B104D43 = rage::scrEngine::GetNativeHandler(0xF833DDBA3B104D43);
	rage::scrEngine::RegisterNativeHandler(0xF833DDBA3B104D43, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF833DDBA3B104D43(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_RAGDOLL
	static auto nh_0xB128377056A54E2A = rage::scrEngine::GetNativeHandler(0xB128377056A54E2A);
	rage::scrEngine::RegisterNativeHandler(0xB128377056A54E2A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB128377056A54E2A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT
	static auto nh_0xDF993EE5E90ABA25 = rage::scrEngine::GetNativeHandler(0xDF993EE5E90ABA25);
	rage::scrEngine::RegisterNativeHandler(0xDF993EE5E90ABA25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF993EE5E90ABA25(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_SMASH_GLASS
	static auto nh_0x1CCE141467FF42A2 = rage::scrEngine::GetNativeHandler(0x1CCE141467FF42A2);
	rage::scrEngine::RegisterNativeHandler(0x1CCE141467FF42A2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CCE141467FF42A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_SWITCH_WEAPON
	static auto nh_0xED7F7EFE9FABF340 = rage::scrEngine::GetNativeHandler(0xED7F7EFE9FABF340);
	rage::scrEngine::RegisterNativeHandler(0xED7F7EFE9FABF340, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED7F7EFE9FABF340(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_TELEPORT_TO_GROUP_LEADER
	static auto nh_0x2E2F4240B3F24647 = rage::scrEngine::GetNativeHandler(0x2E2F4240B3F24647);
	rage::scrEngine::RegisterNativeHandler(0x2E2F4240B3F24647, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E2F4240B3F24647(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_TORSO_IK
	static auto nh_0xF2B7106D37947CE0 = rage::scrEngine::GetNativeHandler(0xF2B7106D37947CE0);
	rage::scrEngine::RegisterNativeHandler(0xF2B7106D37947CE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2B7106D37947CE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_TORSO_REACT_IK
	static auto nh_0xF5846EDB26A98A24 = rage::scrEngine::GetNativeHandler(0xF5846EDB26A98A24);
	rage::scrEngine::RegisterNativeHandler(0xF5846EDB26A98A24, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF5846EDB26A98A24(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_TORSO_VEHICLE_IK
	static auto nh_0x6647C5F6F5792496 = rage::scrEngine::GetNativeHandler(0x6647C5F6F5792496);
	rage::scrEngine::RegisterNativeHandler(0x6647C5F6F5792496, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6647C5F6F5792496(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT
	static auto nh_0xEC4686EC06434678 = rage::scrEngine::GetNativeHandler(0xEC4686EC06434678);
	rage::scrEngine::RegisterNativeHandler(0xEC4686EC06434678, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC4686EC06434678(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CAPSULE
	static auto nh_0x364DF566EC833DE2 = rage::scrEngine::GetNativeHandler(0x364DF566EC833DE2);
	rage::scrEngine::RegisterNativeHandler(0x364DF566EC833DE2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x364DF566EC833DE2(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_CHANCE_OF_FIRING_BLANKS
	static auto nh_0x8378627201D5497D = rage::scrEngine::GetNativeHandler(0x8378627201D5497D);
	rage::scrEngine::RegisterNativeHandler(0x8378627201D5497D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8378627201D5497D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PED_CLOTH_EVENTS_ENABLED
	static auto nh_0x29DA3CA8D8B2692D = rage::scrEngine::GetNativeHandler(0x29DA3CA8D8B2692D);
	rage::scrEngine::RegisterNativeHandler(0x29DA3CA8D8B2692D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x29DA3CA8D8B2692D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CLOTH_PACKAGE_INDEX
	static auto nh_0x78C4E9961DB3EB5B = rage::scrEngine::GetNativeHandler(0x78C4E9961DB3EB5B);
	rage::scrEngine::RegisterNativeHandler(0x78C4E9961DB3EB5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78C4E9961DB3EB5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CLOTH_PRONE
	static auto nh_0x82A3D6D9CC2CB8E3 = rage::scrEngine::GetNativeHandler(0x82A3D6D9CC2CB8E3);
	rage::scrEngine::RegisterNativeHandler(0x82A3D6D9CC2CB8E3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x82A3D6D9CC2CB8E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_COLLECTION_COMPONENT_VARIATION
	static auto nh_0x88711bba = rage::scrEngine::GetNativeHandler(0x88711bba);
	rage::scrEngine::RegisterNativeHandler(0x88711bba, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x88711bba(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_COLLECTION_PRELOAD_PROP_DATA
	static auto nh_0x14b5bbe0 = rage::scrEngine::GetNativeHandler(0x14b5bbe0);
	rage::scrEngine::RegisterNativeHandler(0x14b5bbe0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x14b5bbe0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_COLLECTION_PRELOAD_VARIATION_DATA
	static auto nh_0x3ec75558 = rage::scrEngine::GetNativeHandler(0x3ec75558);
	rage::scrEngine::RegisterNativeHandler(0x3ec75558, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3ec75558(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_COLLECTION_PROP_INDEX
	static auto nh_0x75240bcb = rage::scrEngine::GetNativeHandler(0x75240bcb);
	rage::scrEngine::RegisterNativeHandler(0x75240bcb, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x75240bcb(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COMBAT_ABILITY
	static auto nh_0xC7622C0D36B2FDA8 = rage::scrEngine::GetNativeHandler(0xC7622C0D36B2FDA8);
	rage::scrEngine::RegisterNativeHandler(0xC7622C0D36B2FDA8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7622C0D36B2FDA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COMBAT_ATTRIBUTES
	static auto nh_0x9F7794730795E019 = rage::scrEngine::GetNativeHandler(0x9F7794730795E019);
	rage::scrEngine::RegisterNativeHandler(0x9F7794730795E019, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F7794730795E019(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COMBAT_MOVEMENT
	static auto nh_0x4D9CA1009AFBD057 = rage::scrEngine::GetNativeHandler(0x4D9CA1009AFBD057);
	rage::scrEngine::RegisterNativeHandler(0x4D9CA1009AFBD057, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4D9CA1009AFBD057(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COMBAT_RANGE
	static auto nh_0x3C606747B23E497B = rage::scrEngine::GetNativeHandler(0x3C606747B23E497B);
	rage::scrEngine::RegisterNativeHandler(0x3C606747B23E497B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C606747B23E497B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COMPONENT_VARIATION
	static auto nh_0x262B14F48D29DE80 = rage::scrEngine::GetNativeHandler(0x262B14F48D29DE80);
	rage::scrEngine::RegisterNativeHandler(0x262B14F48D29DE80, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x262B14F48D29DE80(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_CONFIG_FLAG
	static auto nh_0x1913FE4CBF41C463 = rage::scrEngine::GetNativeHandler(0x1913FE4CBF41C463);
	rage::scrEngine::RegisterNativeHandler(0x1913FE4CBF41C463, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1913FE4CBF41C463(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COORDS_KEEP_VEHICLE
	static auto nh_0x9AFEFF481A85AB2E = rage::scrEngine::GetNativeHandler(0x9AFEFF481A85AB2E);
	rage::scrEngine::RegisterNativeHandler(0x9AFEFF481A85AB2E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AFEFF481A85AB2E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COORDS_NO_GANG
	static auto nh_0x87052FE446E07247 = rage::scrEngine::GetNativeHandler(0x87052FE446E07247);
	rage::scrEngine::RegisterNativeHandler(0x87052FE446E07247, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x87052FE446E07247(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_COWER_HASH
	static auto nh_0xA549131166868ED3 = rage::scrEngine::GetNativeHandler(0xA549131166868ED3);
	rage::scrEngine::RegisterNativeHandler(0xA549131166868ED3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA549131166868ED3(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_CURRENT_WEAPON_VISIBLE
	static auto nh_0x0725A4CCFDED9A70 = rage::scrEngine::GetNativeHandler(0x0725A4CCFDED9A70);
	rage::scrEngine::RegisterNativeHandler(0x0725A4CCFDED9A70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0725A4CCFDED9A70(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DEFAULT_COMPONENT_VARIATION
	static auto nh_0x45EEE61580806D63 = rage::scrEngine::GetNativeHandler(0x45EEE61580806D63);
	rage::scrEngine::RegisterNativeHandler(0x45EEE61580806D63, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45EEE61580806D63(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED
	static auto nh_0x4EF47FE21698A8B6 = rage::scrEngine::GetNativeHandler(0x4EF47FE21698A8B6);
	rage::scrEngine::RegisterNativeHandler(0x4EF47FE21698A8B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4EF47FE21698A8B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DEFENSIVE_AREA_DIRECTION
	static auto nh_0x413C6C763A4AFFAD = rage::scrEngine::GetNativeHandler(0x413C6C763A4AFFAD);
	rage::scrEngine::RegisterNativeHandler(0x413C6C763A4AFFAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x413C6C763A4AFFAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED
	static auto nh_0xF9B8F91AAD3B953E = rage::scrEngine::GetNativeHandler(0xF9B8F91AAD3B953E);
	rage::scrEngine::RegisterNativeHandler(0xF9B8F91AAD3B953E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF9B8F91AAD3B953E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE
	static auto nh_0xE4723DB6E736CCFF = rage::scrEngine::GetNativeHandler(0xE4723DB6E736CCFF);
	rage::scrEngine::RegisterNativeHandler(0xE4723DB6E736CCFF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE4723DB6E736CCFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DENSITY_MULTIPLIER_THIS_FRAME
	static auto nh_0x95E3D6257B166CF2 = rage::scrEngine::GetNativeHandler(0x95E3D6257B166CF2);
	rage::scrEngine::RegisterNativeHandler(0x95E3D6257B166CF2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95E3D6257B166CF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DESIRED_HEADING
	static auto nh_0xAA5A7ECE2AA8FE70 = rage::scrEngine::GetNativeHandler(0xAA5A7ECE2AA8FE70);
	rage::scrEngine::RegisterNativeHandler(0xAA5A7ECE2AA8FE70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA5A7ECE2AA8FE70(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_DESIRED_MOVE_BLEND_RATIO
	static auto nh_0x1E982AC8716912C5 = rage::scrEngine::GetNativeHandler(0x1E982AC8716912C5);
	rage::scrEngine::RegisterNativeHandler(0x1E982AC8716912C5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E982AC8716912C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DIES_INSTANTLY_IN_WATER
	static auto nh_0xEEB64139BA29A7CF = rage::scrEngine::GetNativeHandler(0xEEB64139BA29A7CF);
	rage::scrEngine::RegisterNativeHandler(0xEEB64139BA29A7CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEEB64139BA29A7CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DIES_IN_SINKING_VEHICLE
	static auto nh_0xD718A22995E2B4BC = rage::scrEngine::GetNativeHandler(0xD718A22995E2B4BC);
	rage::scrEngine::RegisterNativeHandler(0xD718A22995E2B4BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD718A22995E2B4BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DIES_IN_VEHICLE
	static auto nh_0x2A30922C90C9B42C = rage::scrEngine::GetNativeHandler(0x2A30922C90C9B42C);
	rage::scrEngine::RegisterNativeHandler(0x2A30922C90C9B42C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A30922C90C9B42C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DIES_IN_WATER
	static auto nh_0x56CEF0AC79073BDE = rage::scrEngine::GetNativeHandler(0x56CEF0AC79073BDE);
	rage::scrEngine::RegisterNativeHandler(0x56CEF0AC79073BDE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x56CEF0AC79073BDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DIES_WHEN_INJURED
	static auto nh_0x5BA7919BED300023 = rage::scrEngine::GetNativeHandler(0x5BA7919BED300023);
	rage::scrEngine::RegisterNativeHandler(0x5BA7919BED300023, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5BA7919BED300023(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DRIVE_BY_CLIPSET_OVERRIDE
	static auto nh_0xED34AB6C5CB36520 = rage::scrEngine::GetNativeHandler(0xED34AB6C5CB36520);
	rage::scrEngine::RegisterNativeHandler(0xED34AB6C5CB36520, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xED34AB6C5CB36520(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_DROPS_INVENTORY_WEAPON
	static auto nh_0x208A1888007FC0E6 = rage::scrEngine::GetNativeHandler(0x208A1888007FC0E6);
	rage::scrEngine::RegisterNativeHandler(0x208A1888007FC0E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x208A1888007FC0E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_DROPS_WEAPON
	static auto nh_0x6B7513D9966FBEC0 = rage::scrEngine::GetNativeHandler(0x6B7513D9966FBEC0);
	rage::scrEngine::RegisterNativeHandler(0x6B7513D9966FBEC0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B7513D9966FBEC0(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_DROPS_WEAPONS_WHEN_DEAD
	static auto nh_0x476AE72C1D19D1A8 = rage::scrEngine::GetNativeHandler(0x476AE72C1D19D1A8);
	rage::scrEngine::RegisterNativeHandler(0x476AE72C1D19D1A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x476AE72C1D19D1A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_DUCKING
	static auto nh_0x030983CA930B692D = rage::scrEngine::GetNativeHandler(0x030983CA930B692D);
	rage::scrEngine::RegisterNativeHandler(0x030983CA930B692D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x030983CA930B692D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ENABLE_WEAPON_BLOCKING
	static auto nh_0x97A790315D3831FD = rage::scrEngine::GetNativeHandler(0x97A790315D3831FD);
	rage::scrEngine::RegisterNativeHandler(0x97A790315D3831FD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97A790315D3831FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ENVEFF_COLOR_MODULATOR
	static auto nh_0xD69411AA0CEBF9E9 = rage::scrEngine::GetNativeHandler(0xD69411AA0CEBF9E9);
	rage::scrEngine::RegisterNativeHandler(0xD69411AA0CEBF9E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD69411AA0CEBF9E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ENVEFF_SCALE
	static auto nh_0xBF29516833893561 = rage::scrEngine::GetNativeHandler(0xBF29516833893561);
	rage::scrEngine::RegisterNativeHandler(0xBF29516833893561, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF29516833893561(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_FIRING_PATTERN
	static auto nh_0x9AC577F5A12AD8A9 = rage::scrEngine::GetNativeHandler(0x9AC577F5A12AD8A9);
	rage::scrEngine::RegisterNativeHandler(0x9AC577F5A12AD8A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AC577F5A12AD8A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_FLEE_ATTRIBUTES
	static auto nh_0x70A2D1137C8ED7C9 = rage::scrEngine::GetNativeHandler(0x70A2D1137C8ED7C9);
	rage::scrEngine::RegisterNativeHandler(0x70A2D1137C8ED7C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70A2D1137C8ED7C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_GADGET
	static auto nh_0xD0D7B1E680ED4A1A = rage::scrEngine::GetNativeHandler(0xD0D7B1E680ED4A1A);
	rage::scrEngine::RegisterNativeHandler(0xD0D7B1E680ED4A1A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD0D7B1E680ED4A1A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_GENERATES_DEAD_BODY_EVENTS
	static auto nh_0x7FB17BA2E7DECA5B = rage::scrEngine::GetNativeHandler(0x7FB17BA2E7DECA5B);
	rage::scrEngine::RegisterNativeHandler(0x7FB17BA2E7DECA5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7FB17BA2E7DECA5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_GESTURE_GROUP
	static auto nh_0xDDF803377F94AAA8 = rage::scrEngine::GetNativeHandler(0xDDF803377F94AAA8);
	rage::scrEngine::RegisterNativeHandler(0xDDF803377F94AAA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDDF803377F94AAA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE
	static auto nh_0xBC0ED94165A48BC2 = rage::scrEngine::GetNativeHandler(0xBC0ED94165A48BC2);
	rage::scrEngine::RegisterNativeHandler(0xBC0ED94165A48BC2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC0ED94165A48BC2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_GRAVITY
	static auto nh_0x9FF447B6B6AD960A = rage::scrEngine::GetNativeHandler(0x9FF447B6B6AD960A);
	rage::scrEngine::RegisterNativeHandler(0x9FF447B6B6AD960A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9FF447B6B6AD960A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_GROUP_MEMBER_PASSENGER_INDEX
	static auto nh_0x0BDDB8D9EC6BCF3C = rage::scrEngine::GetNativeHandler(0x0BDDB8D9EC6BCF3C);
	rage::scrEngine::RegisterNativeHandler(0x0BDDB8D9EC6BCF3C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0BDDB8D9EC6BCF3C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HAIR_TINT
	static auto nh_0x4CFFC65454C93A49 = rage::scrEngine::GetNativeHandler(0x4CFFC65454C93A49);
	rage::scrEngine::RegisterNativeHandler(0x4CFFC65454C93A49, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4CFFC65454C93A49(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_PED_HAS_AI_BLIP
	static auto nh_0xD30C50DF888D58B5 = rage::scrEngine::GetNativeHandler(0xD30C50DF888D58B5);
	rage::scrEngine::RegisterNativeHandler(0xD30C50DF888D58B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD30C50DF888D58B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HEAD_BLEND_DATA
	static auto nh_0x9414E18B9434C2FE = rage::scrEngine::GetNativeHandler(0x9414E18B9434C2FE);
	rage::scrEngine::RegisterNativeHandler(0x9414E18B9434C2FE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9414E18B9434C2FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HEAD_OVERLAY
	static auto nh_0x48F44967FA05CC1E = rage::scrEngine::GetNativeHandler(0x48F44967FA05CC1E);
	rage::scrEngine::RegisterNativeHandler(0x48F44967FA05CC1E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48F44967FA05CC1E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HEARING_RANGE
	static auto nh_0x33A8F7F7D5F7F33C = rage::scrEngine::GetNativeHandler(0x33A8F7F7D5F7F33C);
	rage::scrEngine::RegisterNativeHandler(0x33A8F7F7D5F7F33C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33A8F7F7D5F7F33C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HEATSCALE_OVERRIDE
	static auto nh_0xC1F6EBF9A3D55538 = rage::scrEngine::GetNativeHandler(0xC1F6EBF9A3D55538);
	rage::scrEngine::RegisterNativeHandler(0xC1F6EBF9A3D55538, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1F6EBF9A3D55538(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HELMET
	static auto nh_0x560A43136EB58105 = rage::scrEngine::GetNativeHandler(0x560A43136EB58105);
	rage::scrEngine::RegisterNativeHandler(0x560A43136EB58105, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x560A43136EB58105(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HELMET_FLAG
	static auto nh_0xC0E78D5C2CE3EB25 = rage::scrEngine::GetNativeHandler(0xC0E78D5C2CE3EB25);
	rage::scrEngine::RegisterNativeHandler(0xC0E78D5C2CE3EB25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC0E78D5C2CE3EB25(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HELMET_PROP_INDEX
	static auto nh_0x26D83693ED99291C = rage::scrEngine::GetNativeHandler(0x26D83693ED99291C);
	rage::scrEngine::RegisterNativeHandler(0x26D83693ED99291C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26D83693ED99291C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HELMET_TEXTURE_INDEX
	static auto nh_0xF1550C4BD22582E2 = rage::scrEngine::GetNativeHandler(0xF1550C4BD22582E2);
	rage::scrEngine::RegisterNativeHandler(0xF1550C4BD22582E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1550C4BD22582E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_HIGHLY_PERCEPTIVE
	static auto nh_0x52D59AB61DDC05DD = rage::scrEngine::GetNativeHandler(0x52D59AB61DDC05DD);
	rage::scrEngine::RegisterNativeHandler(0x52D59AB61DDC05DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x52D59AB61DDC05DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_ID_RANGE
	static auto nh_0xF107E836A70DCE05 = rage::scrEngine::GetNativeHandler(0xF107E836A70DCE05);
	rage::scrEngine::RegisterNativeHandler(0xF107E836A70DCE05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF107E836A70DCE05(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_INCREASED_AVOIDANCE_RADIUS
	static auto nh_0x570389D1C3DE3C6B = rage::scrEngine::GetNativeHandler(0x570389D1C3DE3C6B);
	rage::scrEngine::RegisterNativeHandler(0x570389D1C3DE3C6B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x570389D1C3DE3C6B(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_INFINITE_AMMO
	static auto nh_0x3EDCB0505123623B = rage::scrEngine::GetNativeHandler(0x3EDCB0505123623B);
	rage::scrEngine::RegisterNativeHandler(0x3EDCB0505123623B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3EDCB0505123623B(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_INFINITE_AMMO_CLIP
	static auto nh_0x183DADC6AA953186 = rage::scrEngine::GetNativeHandler(0x183DADC6AA953186);
	rage::scrEngine::RegisterNativeHandler(0x183DADC6AA953186, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x183DADC6AA953186(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_INTO_VEHICLE
	static auto nh_0xF75B0D629E1C063D = rage::scrEngine::GetNativeHandler(0xF75B0D629E1C063D);
	rage::scrEngine::RegisterNativeHandler(0xF75B0D629E1C063D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF75B0D629E1C063D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_IN_VEHICLE_CONTEXT
	static auto nh_0x530071295899A8C6 = rage::scrEngine::GetNativeHandler(0x530071295899A8C6);
	rage::scrEngine::RegisterNativeHandler(0x530071295899A8C6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x530071295899A8C6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PED_IS_DRUNK
	static auto nh_0x95D2D383D5396B8A = rage::scrEngine::GetNativeHandler(0x95D2D383D5396B8A);
	rage::scrEngine::RegisterNativeHandler(0x95D2D383D5396B8A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95D2D383D5396B8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_KEEP_TASK
	static auto nh_0x971D38760FBC02EF = rage::scrEngine::GetNativeHandler(0x971D38760FBC02EF);
	rage::scrEngine::RegisterNativeHandler(0x971D38760FBC02EF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x971D38760FBC02EF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_LEG_IK_MODE
	static auto nh_0xC396F5B86FF9FEBD = rage::scrEngine::GetNativeHandler(0xC396F5B86FF9FEBD);
	rage::scrEngine::RegisterNativeHandler(0xC396F5B86FF9FEBD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC396F5B86FF9FEBD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_LOD_MULTIPLIER
	static auto nh_0xDC2C5C242AAC342B = rage::scrEngine::GetNativeHandler(0xDC2C5C242AAC342B);
	rage::scrEngine::RegisterNativeHandler(0xDC2C5C242AAC342B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC2C5C242AAC342B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MAX_HEALTH
	static auto nh_0xF5F6378C4F3419D3 = rage::scrEngine::GetNativeHandler(0xF5F6378C4F3419D3);
	rage::scrEngine::RegisterNativeHandler(0xF5F6378C4F3419D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF5F6378C4F3419D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MAX_MOVE_BLEND_RATIO
	static auto nh_0x433083750C5E064A = rage::scrEngine::GetNativeHandler(0x433083750C5E064A);
	rage::scrEngine::RegisterNativeHandler(0x433083750C5E064A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x433083750C5E064A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MAX_TIME_IN_WATER
	static auto nh_0x43C851690662113D = rage::scrEngine::GetNativeHandler(0x43C851690662113D);
	rage::scrEngine::RegisterNativeHandler(0x43C851690662113D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43C851690662113D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MAX_TIME_UNDERWATER
	static auto nh_0x6BA428C528D9E522 = rage::scrEngine::GetNativeHandler(0x6BA428C528D9E522);
	rage::scrEngine::RegisterNativeHandler(0x6BA428C528D9E522, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6BA428C528D9E522(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_MELEE_COMBAT_LIMITS
	static auto nh_0x8e51ec29 = rage::scrEngine::GetNativeHandler(0x8e51ec29);
	rage::scrEngine::RegisterNativeHandler(0x8e51ec29, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8e51ec29(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MIN_GROUND_TIME_FOR_STUNGUN
	static auto nh_0xFA0675AB151073FA = rage::scrEngine::GetNativeHandler(0xFA0675AB151073FA);
	rage::scrEngine::RegisterNativeHandler(0xFA0675AB151073FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA0675AB151073FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MIN_MOVE_BLEND_RATIO
	static auto nh_0x01A898D26E2333DD = rage::scrEngine::GetNativeHandler(0x01A898D26E2333DD);
	rage::scrEngine::RegisterNativeHandler(0x01A898D26E2333DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01A898D26E2333DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MODEL_IS_SUPPRESSED
	static auto nh_0xE163A4BCE4DE6F11 = rage::scrEngine::GetNativeHandler(0xE163A4BCE4DE6F11);
	rage::scrEngine::RegisterNativeHandler(0xE163A4BCE4DE6F11, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE163A4BCE4DE6F11(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PED_MODEL_PERSONALITY
	static auto nh_0x46f6b38b = rage::scrEngine::GetNativeHandler(0x46f6b38b);
	rage::scrEngine::RegisterNativeHandler(0x46f6b38b, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46f6b38b(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MONEY
	static auto nh_0xA9C8960E8684C1B5 = rage::scrEngine::GetNativeHandler(0xA9C8960E8684C1B5);
	rage::scrEngine::RegisterNativeHandler(0xA9C8960E8684C1B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA9C8960E8684C1B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MOTION_BLUR
	static auto nh_0x0A986918B102B448 = rage::scrEngine::GetNativeHandler(0x0A986918B102B448);
	rage::scrEngine::RegisterNativeHandler(0x0A986918B102B448, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0A986918B102B448(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MOVEMENT_CLIPSET
	static auto nh_0xAF8A94EDE7712BEF = rage::scrEngine::GetNativeHandler(0xAF8A94EDE7712BEF);
	rage::scrEngine::RegisterNativeHandler(0xAF8A94EDE7712BEF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAF8A94EDE7712BEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MOVE_ANIMS_BLEND_OUT
	static auto nh_0x9E8C908F41584ECD = rage::scrEngine::GetNativeHandler(0x9E8C908F41584ECD);
	rage::scrEngine::RegisterNativeHandler(0x9E8C908F41584ECD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9E8C908F41584ECD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_MOVE_RATE_OVERRIDE
	static auto nh_0x085BF80FA50A39D1 = rage::scrEngine::GetNativeHandler(0x085BF80FA50A39D1);
	rage::scrEngine::RegisterNativeHandler(0x085BF80FA50A39D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x085BF80FA50A39D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_NAME_DEBUG
	static auto nh_0x98EFA132A4117BE1 = rage::scrEngine::GetNativeHandler(0x98EFA132A4117BE1);
	rage::scrEngine::RegisterNativeHandler(0x98EFA132A4117BE1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x98EFA132A4117BE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_NEVER_LEAVES_GROUP
	static auto nh_0x3DBFC55D5C9BB447 = rage::scrEngine::GetNativeHandler(0x3DBFC55D5C9BB447);
	rage::scrEngine::RegisterNativeHandler(0x3DBFC55D5C9BB447, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3DBFC55D5C9BB447(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_NON_CREATION_AREA
	static auto nh_0xEE01041D559983EA = rage::scrEngine::GetNativeHandler(0xEE01041D559983EA);
	rage::scrEngine::RegisterNativeHandler(0xEE01041D559983EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE01041D559983EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PANIC_EXIT_SCENARIO (result cleaner only)
	AddResultCleaner(0xFE07FF6495D52E2A, ResultCleaner<int>);

	// PED/SET_PED_PARACHUTE_TINT_INDEX
	static auto nh_0x333FC8DB079B7186 = rage::scrEngine::GetNativeHandler(0x333FC8DB079B7186);
	rage::scrEngine::RegisterNativeHandler(0x333FC8DB079B7186, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x333FC8DB079B7186(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_PED_PATHS_BACK_TO_ORIGINAL
	static auto nh_0xE04B48F2CC926253 = rage::scrEngine::GetNativeHandler(0xE04B48F2CC926253);
	rage::scrEngine::RegisterNativeHandler(0xE04B48F2CC926253, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xE04B48F2CC926253(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_PED_PATHS_IN_AREA
	static auto nh_0x34F060F4BF92E018 = rage::scrEngine::GetNativeHandler(0x34F060F4BF92E018);
	rage::scrEngine::RegisterNativeHandler(0x34F060F4BF92E018, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x34F060F4BF92E018(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_AVOID_FIRE
	static auto nh_0x4455517B28441E60 = rage::scrEngine::GetNativeHandler(0x4455517B28441E60);
	rage::scrEngine::RegisterNativeHandler(0x4455517B28441E60, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4455517B28441E60(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_CAN_DROP_FROM_HEIGHT
	static auto nh_0xE361C5C71C431A4F = rage::scrEngine::GetNativeHandler(0xE361C5C71C431A4F);
	rage::scrEngine::RegisterNativeHandler(0xE361C5C71C431A4F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE361C5C71C431A4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_CAN_USE_CLIMBOVERS
	static auto nh_0x8E06A6FE76C9EFF4 = rage::scrEngine::GetNativeHandler(0x8E06A6FE76C9EFF4);
	rage::scrEngine::RegisterNativeHandler(0x8E06A6FE76C9EFF4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8E06A6FE76C9EFF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_CAN_USE_LADDERS
	static auto nh_0x77A5B103C87F476E = rage::scrEngine::GetNativeHandler(0x77A5B103C87F476E);
	rage::scrEngine::RegisterNativeHandler(0x77A5B103C87F476E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77A5B103C87F476E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_CLIMB_COST_MODIFIER
	static auto nh_0x88E32DB8C1A4AA4B = rage::scrEngine::GetNativeHandler(0x88E32DB8C1A4AA4B);
	rage::scrEngine::RegisterNativeHandler(0x88E32DB8C1A4AA4B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88E32DB8C1A4AA4B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_MAY_ENTER_WATER
	static auto nh_0xF35425A4204367EC = rage::scrEngine::GetNativeHandler(0xF35425A4204367EC);
	rage::scrEngine::RegisterNativeHandler(0xF35425A4204367EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF35425A4204367EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_PATH_PREFER_TO_AVOID_WATER
	static auto nh_0x38FE1EC73743793C = rage::scrEngine::GetNativeHandler(0x38FE1EC73743793C);
	rage::scrEngine::RegisterNativeHandler(0x38FE1EC73743793C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x38FE1EC73743793C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PHONE_PALETTE_IDX
	static auto nh_0x83A169EABCDB10A2 = rage::scrEngine::GetNativeHandler(0x83A169EABCDB10A2);
	rage::scrEngine::RegisterNativeHandler(0x83A169EABCDB10A2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x83A169EABCDB10A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PINNED_DOWN (result cleaner only)
	AddResultCleaner(0xAAD6D1ACF08F4612, ResultCleaner<int>);

	// PED/SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE
	static auto nh_0x94D94BF1A75AED3D = rage::scrEngine::GetNativeHandler(0x94D94BF1A75AED3D);
	rage::scrEngine::RegisterNativeHandler(0x94D94BF1A75AED3D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x94D94BF1A75AED3D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_PED_POPULATION_BUDGET
	static auto nh_0x8C95333CFC3340F3 = rage::scrEngine::GetNativeHandler(0x8C95333CFC3340F3);
	rage::scrEngine::RegisterNativeHandler(0x8C95333CFC3340F3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8C95333CFC3340F3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PREFERRED_COVER_SET
	static auto nh_0x8421EB4DA7E391B9 = rage::scrEngine::GetNativeHandler(0x8421EB4DA7E391B9);
	rage::scrEngine::RegisterNativeHandler(0x8421EB4DA7E391B9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8421EB4DA7E391B9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PRELOAD_PROP_DATA (result cleaner only)
	AddResultCleaner(0x2B16A3BFF1FBCE49, ResultCleaner<bool>);

	// PED/SET_PED_PRELOAD_VARIATION_DATA (result cleaner only)
	AddResultCleaner(0x39D55A620FCB6A3A, ResultCleaner<int>);

	// PED/SET_PED_PRIMARY_LOOKAT
	static auto nh_0xCD17B554996A8D9E = rage::scrEngine::GetNativeHandler(0xCD17B554996A8D9E);
	rage::scrEngine::RegisterNativeHandler(0xCD17B554996A8D9E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD17B554996A8D9E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_PROP_INDEX
	static auto nh_0x93376B65A266EB5F = rage::scrEngine::GetNativeHandler(0x93376B65A266EB5F);
	rage::scrEngine::RegisterNativeHandler(0x93376B65A266EB5F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93376B65A266EB5F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PED_RACE_AND_VOICE_GROUP
	static auto nh_0x1B7ABE26CBCBF8C7 = rage::scrEngine::GetNativeHandler(0x1B7ABE26CBCBF8C7);
	rage::scrEngine::RegisterNativeHandler(0x1B7ABE26CBCBF8C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B7ABE26CBCBF8C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RAGDOLL_FORCE_FALL
	static auto nh_0x01F6594B923B9251 = rage::scrEngine::GetNativeHandler(0x01F6594B923B9251);
	rage::scrEngine::RegisterNativeHandler(0x01F6594B923B9251, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01F6594B923B9251(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RAGDOLL_ON_COLLISION
	static auto nh_0xF0A4F1BBF4FA7497 = rage::scrEngine::GetNativeHandler(0xF0A4F1BBF4FA7497);
	rage::scrEngine::RegisterNativeHandler(0xF0A4F1BBF4FA7497, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF0A4F1BBF4FA7497(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RANDOM_COMPONENT_VARIATION
	static auto nh_0xC8A9481A01E63C28 = rage::scrEngine::GetNativeHandler(0xC8A9481A01E63C28);
	rage::scrEngine::RegisterNativeHandler(0xC8A9481A01E63C28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8A9481A01E63C28(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RANDOM_PROPS
	static auto nh_0xC44AA05345C992C6 = rage::scrEngine::GetNativeHandler(0xC44AA05345C992C6);
	rage::scrEngine::RegisterNativeHandler(0xC44AA05345C992C6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC44AA05345C992C6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
	static auto nh_0xADB3F206518799E8 = rage::scrEngine::GetNativeHandler(0xADB3F206518799E8);
	rage::scrEngine::RegisterNativeHandler(0xADB3F206518799E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xADB3F206518799E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RELATIONSHIP_GROUP_HASH
	static auto nh_0xC80A74AC829DDD92 = rage::scrEngine::GetNativeHandler(0xC80A74AC829DDD92);
	rage::scrEngine::RegisterNativeHandler(0xC80A74AC829DDD92, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC80A74AC829DDD92(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RESERVE_PARACHUTE_TINT_INDEX
	static auto nh_0xE88DA0751C22A2AD = rage::scrEngine::GetNativeHandler(0xE88DA0751C22A2AD);
	rage::scrEngine::RegisterNativeHandler(0xE88DA0751C22A2AD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE88DA0751C22A2AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_RESET_FLAG
	static auto nh_0xC1E8A365BF3B29F2 = rage::scrEngine::GetNativeHandler(0xC1E8A365BF3B29F2);
	rage::scrEngine::RegisterNativeHandler(0xC1E8A365BF3B29F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1E8A365BF3B29F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SEEING_RANGE
	static auto nh_0xF29CF591C4BF6CEE = rage::scrEngine::GetNativeHandler(0xF29CF591C4BF6CEE);
	rage::scrEngine::RegisterNativeHandler(0xF29CF591C4BF6CEE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF29CF591C4BF6CEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SHOOTS_AT_COORD
	static auto nh_0x96A05E4FB321B1BA = rage::scrEngine::GetNativeHandler(0x96A05E4FB321B1BA);
	rage::scrEngine::RegisterNativeHandler(0x96A05E4FB321B1BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x96A05E4FB321B1BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_SHOOT_ORDNANCE_WEAPON (result cleaner only)
	AddResultCleaner(0xB4C8D77C80C0421E, ResultCleaner<int>);

	// PED/SET_PED_SHOOT_RATE
	static auto nh_0x614DA022990752DC = rage::scrEngine::GetNativeHandler(0x614DA022990752DC);
	rage::scrEngine::RegisterNativeHandler(0x614DA022990752DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x614DA022990752DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
	static auto nh_0xEEED8FAFEC331A70 = rage::scrEngine::GetNativeHandler(0xEEED8FAFEC331A70);
	rage::scrEngine::RegisterNativeHandler(0xEEED8FAFEC331A70, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xEEED8FAFEC331A70(cxt);
	});
	        
	AddResultCleaner(0xEEED8FAFEC331A70, ResultCleaner<int>);

	// PED/SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT
	static auto nh_0xF1C03A5352243A30 = rage::scrEngine::GetNativeHandler(0xF1C03A5352243A30);
	rage::scrEngine::RegisterNativeHandler(0xF1C03A5352243A30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1C03A5352243A30(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT
	static auto nh_0xA3A9299C4F2ADB98 = rage::scrEngine::GetNativeHandler(0xA3A9299C4F2ADB98);
	rage::scrEngine::RegisterNativeHandler(0xA3A9299C4F2ADB98, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA3A9299C4F2ADB98(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SPHERE_DEFENSIVE_AREA
	static auto nh_0x9D3151A373974804 = rage::scrEngine::GetNativeHandler(0x9D3151A373974804);
	rage::scrEngine::RegisterNativeHandler(0x9D3151A373974804, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D3151A373974804(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STAY_IN_VEHICLE_WHEN_JACKED
	static auto nh_0xEDF4079F9D54C9A1 = rage::scrEngine::GetNativeHandler(0xEDF4079F9D54C9A1);
	rage::scrEngine::RegisterNativeHandler(0xEDF4079F9D54C9A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEDF4079F9D54C9A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STEALTH_MOVEMENT
	static auto nh_0x88CBB5CEB96B7BD2 = rage::scrEngine::GetNativeHandler(0x88CBB5CEB96B7BD2);
	rage::scrEngine::RegisterNativeHandler(0x88CBB5CEB96B7BD2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x88CBB5CEB96B7BD2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STEERS_AROUND_OBJECTS
	static auto nh_0x1509C089ADC208BF = rage::scrEngine::GetNativeHandler(0x1509C089ADC208BF);
	rage::scrEngine::RegisterNativeHandler(0x1509C089ADC208BF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1509C089ADC208BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STEERS_AROUND_PEDS
	static auto nh_0x46F2193B3AD1D891 = rage::scrEngine::GetNativeHandler(0x46F2193B3AD1D891);
	rage::scrEngine::RegisterNativeHandler(0x46F2193B3AD1D891, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46F2193B3AD1D891(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STEERS_AROUND_VEHICLES
	static auto nh_0xEB6FB9D48DDE23EC = rage::scrEngine::GetNativeHandler(0xEB6FB9D48DDE23EC);
	rage::scrEngine::RegisterNativeHandler(0xEB6FB9D48DDE23EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB6FB9D48DDE23EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_STRAFE_CLIPSET
	static auto nh_0x29A28F3F8CF6D854 = rage::scrEngine::GetNativeHandler(0x29A28F3F8CF6D854);
	rage::scrEngine::RegisterNativeHandler(0x29A28F3F8CF6D854, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x29A28F3F8CF6D854(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SUFFERS_CRITICAL_HITS
	static auto nh_0xEBD76F2359F190AC = rage::scrEngine::GetNativeHandler(0xEBD76F2359F190AC);
	rage::scrEngine::RegisterNativeHandler(0xEBD76F2359F190AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEBD76F2359F190AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_SWEAT
	static auto nh_0x27B0405F59637D1F = rage::scrEngine::GetNativeHandler(0x27B0405F59637D1F);
	rage::scrEngine::RegisterNativeHandler(0x27B0405F59637D1F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x27B0405F59637D1F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_TARGET_LOSS_RESPONSE
	static auto nh_0x0703B9079823DA4A = rage::scrEngine::GetNativeHandler(0x0703B9079823DA4A);
	rage::scrEngine::RegisterNativeHandler(0x0703B9079823DA4A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0703B9079823DA4A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_TO_INFORM_RESPECTED_FRIENDS
	static auto nh_0x112942C6E708F70B = rage::scrEngine::GetNativeHandler(0x112942C6E708F70B);
	rage::scrEngine::RegisterNativeHandler(0x112942C6E708F70B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x112942C6E708F70B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_TO_LOAD_COVER
	static auto nh_0x332B562EEDA62399 = rage::scrEngine::GetNativeHandler(0x332B562EEDA62399);
	rage::scrEngine::RegisterNativeHandler(0x332B562EEDA62399, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x332B562EEDA62399(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_TO_RAGDOLL (result cleaner only)
	AddResultCleaner(0xAE99FB955581844A, ResultCleaner<bool>);

	// PED/SET_PED_TO_RAGDOLL_WITH_FALL (result cleaner only)
	AddResultCleaner(0xD76632D99E4966C8, ResultCleaner<bool>);

	// CFX/SET_PED_TURNING_THRESHOLDS
	static auto nh_0xb300f03 = rage::scrEngine::GetNativeHandler(0xb300f03);
	rage::scrEngine::RegisterNativeHandler(0xb300f03, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb300f03(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_USING_ACTION_MODE
	static auto nh_0xD75ACCF5E0FB5367 = rage::scrEngine::GetNativeHandler(0xD75ACCF5E0FB5367);
	rage::scrEngine::RegisterNativeHandler(0xD75ACCF5E0FB5367, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xD75ACCF5E0FB5367(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VEHICLE_FORCED_SEAT_USAGE
	static auto nh_0x952F06BEECD775CC = rage::scrEngine::GetNativeHandler(0x952F06BEECD775CC);
	rage::scrEngine::RegisterNativeHandler(0x952F06BEECD775CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x952F06BEECD775CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_CENTER_ANGLE
	static auto nh_0x3B6405E8AB34A907 = rage::scrEngine::GetNativeHandler(0x3B6405E8AB34A907);
	rage::scrEngine::RegisterNativeHandler(0x3B6405E8AB34A907, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B6405E8AB34A907(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_MAX_ANGLE
	static auto nh_0x70793BDCA1E854D4 = rage::scrEngine::GetNativeHandler(0x70793BDCA1E854D4);
	rage::scrEngine::RegisterNativeHandler(0x70793BDCA1E854D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70793BDCA1E854D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE
	static auto nh_0x78D0B67629D75856 = rage::scrEngine::GetNativeHandler(0x78D0B67629D75856);
	rage::scrEngine::RegisterNativeHandler(0x78D0B67629D75856, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78D0B67629D75856(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_MIN_ANGLE
	static auto nh_0x2DB492222FB21E26 = rage::scrEngine::GetNativeHandler(0x2DB492222FB21E26);
	rage::scrEngine::RegisterNativeHandler(0x2DB492222FB21E26, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2DB492222FB21E26(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE
	static auto nh_0x7A276EB2C224D70F = rage::scrEngine::GetNativeHandler(0x7A276EB2C224D70F);
	rage::scrEngine::RegisterNativeHandler(0x7A276EB2C224D70F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A276EB2C224D70F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE
	static auto nh_0x9C74B0BC831B753A = rage::scrEngine::GetNativeHandler(0x9C74B0BC831B753A);
	rage::scrEngine::RegisterNativeHandler(0x9C74B0BC831B753A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C74B0BC831B753A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PED_VOICE_FULL
	static auto nh_0x40CF0D12D142A9E8 = rage::scrEngine::GetNativeHandler(0x40CF0D12D142A9E8);
	rage::scrEngine::RegisterNativeHandler(0x40CF0D12D142A9E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x40CF0D12D142A9E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PED_WALLA_DENSITY
	static auto nh_0x149AEE66F0CB3A99 = rage::scrEngine::GetNativeHandler(0x149AEE66F0CB3A99);
	rage::scrEngine::RegisterNativeHandler(0x149AEE66F0CB3A99, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x149AEE66F0CB3A99(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_PED_WAYPOINT_ROUTE_OFFSET
	static auto nh_0xED98E10B0AFCE4B4 = rage::scrEngine::GetNativeHandler(0xED98E10B0AFCE4B4);
	rage::scrEngine::RegisterNativeHandler(0xED98E10B0AFCE4B4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xED98E10B0AFCE4B4(cxt);
	});
	        
	AddResultCleaner(0xED98E10B0AFCE4B4, ResultCleaner<int>);

	// PED/SET_PED_WEAPON_MOVEMENT_CLIPSET
	static auto nh_0x2622E35B77D3ACA2 = rage::scrEngine::GetNativeHandler(0x2622E35B77D3ACA2);
	rage::scrEngine::RegisterNativeHandler(0x2622E35B77D3ACA2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2622E35B77D3ACA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PED_WEAPON_TINT_INDEX
	static auto nh_0x50969B9B89ED5738 = rage::scrEngine::GetNativeHandler(0x50969B9B89ED5738);
	rage::scrEngine::RegisterNativeHandler(0x50969B9B89ED5738, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50969B9B89ED5738(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_WETNESS_ENABLED_THIS_FRAME
	static auto nh_0xB5485E4907B53019 = rage::scrEngine::GetNativeHandler(0xB5485E4907B53019);
	rage::scrEngine::RegisterNativeHandler(0xB5485E4907B53019, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB5485E4907B53019(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_PED_WETNESS_HEIGHT
	static auto nh_0x44CB6447D2571AA0 = rage::scrEngine::GetNativeHandler(0x44CB6447D2571AA0);
	rage::scrEngine::RegisterNativeHandler(0x44CB6447D2571AA0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44CB6447D2571AA0(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_PICKUP_AMMO_AMOUNT_SCALER
	static auto nh_0xE620FD3512A04F18 = rage::scrEngine::GetNativeHandler(0xE620FD3512A04F18);
	rage::scrEngine::RegisterNativeHandler(0xE620FD3512A04F18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE620FD3512A04F18(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_PICKUP_GENERATION_RANGE_MULTIPLIER
	static auto nh_0x318516E02DE3ECE2 = rage::scrEngine::GetNativeHandler(0x318516E02DE3ECE2);
	rage::scrEngine::RegisterNativeHandler(0x318516E02DE3ECE2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x318516E02DE3ECE2(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_PICKUP_REGENERATION_TIME
	static auto nh_0x78015C9B4B3ECC9D = rage::scrEngine::GetNativeHandler(0x78015C9B4B3ECC9D);
	rage::scrEngine::RegisterNativeHandler(0x78015C9B4B3ECC9D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x78015C9B4B3ECC9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB
	static auto nh_0x877C1EAEAC531023 = rage::scrEngine::GetNativeHandler(0x877C1EAEAC531023);
	rage::scrEngine::RegisterNativeHandler(0x877C1EAEAC531023, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x877C1EAEAC531023(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_PICK_UP_BY_CARGOBOB_DISABLED
	static auto nh_0xD7B80E7C3BEFC396 = rage::scrEngine::GetNativeHandler(0xD7B80E7C3BEFC396);
	rage::scrEngine::RegisterNativeHandler(0xD7B80E7C3BEFC396, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7B80E7C3BEFC396(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLANE_RESIST_TO_EXPLOSION
	static auto nh_0xE16142B94664DEFD = rage::scrEngine::GetNativeHandler(0xE16142B94664DEFD);
	rage::scrEngine::RegisterNativeHandler(0xE16142B94664DEFD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE16142B94664DEFD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLANE_SECTION_DAMAGE_SCALE
	static auto nh_0x0BBB9A7A8FFE931B = rage::scrEngine::GetNativeHandler(0x0BBB9A7A8FFE931B);
	rage::scrEngine::RegisterNativeHandler(0x0BBB9A7A8FFE931B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0BBB9A7A8FFE931B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLANE_TURBULENCE_MULTIPLIER
	static auto nh_0xAD2D28A1AFDFF131 = rage::scrEngine::GetNativeHandler(0xAD2D28A1AFDFF131);
	rage::scrEngine::RegisterNativeHandler(0xAD2D28A1AFDFF131, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD2D28A1AFDFF131(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLAYBACK_SPEED
	static auto nh_0x6683AB880E427778 = rage::scrEngine::GetNativeHandler(0x6683AB880E427778);
	rage::scrEngine::RegisterNativeHandler(0x6683AB880E427778, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6683AB880E427778(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLAYBACK_TO_USE_AI
	static auto nh_0xA549C3B37EA28131 = rage::scrEngine::GetNativeHandler(0xA549C3B37EA28131);
	rage::scrEngine::RegisterNativeHandler(0xA549C3B37EA28131, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA549C3B37EA28131(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
	static auto nh_0x6E63860BBB190730 = rage::scrEngine::GetNativeHandler(0x6E63860BBB190730);
	rage::scrEngine::RegisterNativeHandler(0x6E63860BBB190730, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6E63860BBB190730(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED
	static auto nh_0x798FDEB5B1575088 = rage::scrEngine::GetNativeHandler(0x798FDEB5B1575088);
	rage::scrEngine::RegisterNativeHandler(0x798FDEB5B1575088, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x798FDEB5B1575088(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_PLAYERS_LAST_VEHICLE
	static auto nh_0xBCDF8BAF56C87B6A = rage::scrEngine::GetNativeHandler(0xBCDF8BAF56C87B6A);
	rage::scrEngine::RegisterNativeHandler(0xBCDF8BAF56C87B6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCDF8BAF56C87B6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PLAYER_ANGRY
	static auto nh_0xEA241BB04110F091 = rage::scrEngine::GetNativeHandler(0xEA241BB04110F091);
	rage::scrEngine::RegisterNativeHandler(0xEA241BB04110F091, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA241BB04110F091(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_BLUETOOTH_STATE
	static auto nh_0x5DC40A8869C22141 = rage::scrEngine::GetNativeHandler(0x5DC40A8869C22141);
	rage::scrEngine::RegisterNativeHandler(0x5DC40A8869C22141, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5DC40A8869C22141(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CAN_BE_HASSLED_BY_GANGS
	static auto nh_0xD5E460AD7020A246 = rage::scrEngine::GetNativeHandler(0xD5E460AD7020A246);
	rage::scrEngine::RegisterNativeHandler(0xD5E460AD7020A246, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD5E460AD7020A246(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CAN_DO_DRIVE_BY
	static auto nh_0x6E8834B52EC20C77 = rage::scrEngine::GetNativeHandler(0x6E8834B52EC20C77);
	rage::scrEngine::RegisterNativeHandler(0x6E8834B52EC20C77, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6E8834B52EC20C77(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL
	static auto nh_0xF401B182DBA8AF53 = rage::scrEngine::GetNativeHandler(0xF401B182DBA8AF53);
	rage::scrEngine::RegisterNativeHandler(0xF401B182DBA8AF53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF401B182DBA8AF53(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CAN_USE_COVER
	static auto nh_0xD465A8599DFF6814 = rage::scrEngine::GetNativeHandler(0xD465A8599DFF6814);
	rage::scrEngine::RegisterNativeHandler(0xD465A8599DFF6814, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD465A8599DFF6814(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CLOTH_LOCK_COUNTER
	static auto nh_0x14D913B777DFF5DA = rage::scrEngine::GetNativeHandler(0x14D913B777DFF5DA);
	rage::scrEngine::RegisterNativeHandler(0x14D913B777DFF5DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14D913B777DFF5DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CLOTH_PACKAGE_INDEX
	static auto nh_0x9F7BBA2EA6372500 = rage::scrEngine::GetNativeHandler(0x9F7BBA2EA6372500);
	rage::scrEngine::RegisterNativeHandler(0x9F7BBA2EA6372500, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F7BBA2EA6372500(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CLOTH_PIN_FRAMES
	static auto nh_0x749FADDF97DFE930 = rage::scrEngine::GetNativeHandler(0x749FADDF97DFE930);
	rage::scrEngine::RegisterNativeHandler(0x749FADDF97DFE930, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x749FADDF97DFE930(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_CONTROL
	static auto nh_0x8D32347D6D4C40A2 = rage::scrEngine::GetNativeHandler(0x8D32347D6D4C40A2);
	rage::scrEngine::RegisterNativeHandler(0x8D32347D6D4C40A2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8D32347D6D4C40A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_FORCED_AIM
	static auto nh_0x0FEE4F80AC44A726 = rage::scrEngine::GetNativeHandler(0x0FEE4F80AC44A726);
	rage::scrEngine::RegisterNativeHandler(0x0FEE4F80AC44A726, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0FEE4F80AC44A726(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_FORCED_ZOOM
	static auto nh_0x75E7D505F2B15902 = rage::scrEngine::GetNativeHandler(0x75E7D505F2B15902);
	rage::scrEngine::RegisterNativeHandler(0x75E7D505F2B15902, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75E7D505F2B15902(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_FORCE_SKIP_AIM_INTRO
	static auto nh_0x7651BC64AE59E128 = rage::scrEngine::GetNativeHandler(0x7651BC64AE59E128);
	rage::scrEngine::RegisterNativeHandler(0x7651BC64AE59E128, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7651BC64AE59E128(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_HAS_RESERVE_PARACHUTE
	static auto nh_0x7DDAB28D31FAC363 = rage::scrEngine::GetNativeHandler(0x7DDAB28D31FAC363);
	rage::scrEngine::RegisterNativeHandler(0x7DDAB28D31FAC363, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7DDAB28D31FAC363(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
	static auto nh_0x5DB660B38DD98A31 = rage::scrEngine::GetNativeHandler(0x5DB660B38DD98A31);
	rage::scrEngine::RegisterNativeHandler(0x5DB660B38DD98A31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5DB660B38DD98A31(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_INVINCIBLE
	static auto nh_0x239528EACDC3E7DE = rage::scrEngine::GetNativeHandler(0x239528EACDC3E7DE);
	rage::scrEngine::RegisterNativeHandler(0x239528EACDC3E7DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x239528EACDC3E7DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_PLAYER_INVISIBLE_LOCALLY
	static auto nh_0x12B37D54667DB0B8 = rage::scrEngine::GetNativeHandler(0x12B37D54667DB0B8);
	rage::scrEngine::RegisterNativeHandler(0x12B37D54667DB0B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x12B37D54667DB0B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_LEAVE_PED_BEHIND
	static auto nh_0xFF300C7649724A0B = rage::scrEngine::GetNativeHandler(0xFF300C7649724A0B);
	rage::scrEngine::RegisterNativeHandler(0xFF300C7649724A0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF300C7649724A0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_LOCKON
	static auto nh_0x5C8B2F450EE4328E = rage::scrEngine::GetNativeHandler(0x5C8B2F450EE4328E);
	rage::scrEngine::RegisterNativeHandler(0x5C8B2F450EE4328E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C8B2F450EE4328E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_LOCKON_RANGE_OVERRIDE
	static auto nh_0x29961D490E5814FD = rage::scrEngine::GetNativeHandler(0x29961D490E5814FD);
	rage::scrEngine::RegisterNativeHandler(0x29961D490E5814FD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x29961D490E5814FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_MAX_ARMOUR
	static auto nh_0x77DFCCF5948B8C71 = rage::scrEngine::GetNativeHandler(0x77DFCCF5948B8C71);
	rage::scrEngine::RegisterNativeHandler(0x77DFCCF5948B8C71, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77DFCCF5948B8C71(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PLAYER_MAX_STAMINA (result cleaner only)
	AddResultCleaner(0x35594f67, ResultCleaner<bool>);

	// PLAYER/SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE
	static auto nh_0x1DE37BBF9E9CC14A = rage::scrEngine::GetNativeHandler(0x1DE37BBF9E9CC14A);
	rage::scrEngine::RegisterNativeHandler(0x1DE37BBF9E9CC14A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DE37BBF9E9CC14A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE
	static auto nh_0x8026FF78F208978A = rage::scrEngine::GetNativeHandler(0x8026FF78F208978A);
	rage::scrEngine::RegisterNativeHandler(0x8026FF78F208978A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8026FF78F208978A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER
	static auto nh_0x4A3DC7ECCC321032 = rage::scrEngine::GetNativeHandler(0x4A3DC7ECCC321032);
	rage::scrEngine::RegisterNativeHandler(0x4A3DC7ECCC321032, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A3DC7ECCC321032(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER
	static auto nh_0xAE540335B4ABC4E2 = rage::scrEngine::GetNativeHandler(0xAE540335B4ABC4E2);
	rage::scrEngine::RegisterNativeHandler(0xAE540335B4ABC4E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE540335B4ABC4E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_MODEL
	static auto nh_0x00A1CADD00108836 = rage::scrEngine::GetNativeHandler(0x00A1CADD00108836);
	rage::scrEngine::RegisterNativeHandler(0x00A1CADD00108836, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x00A1CADD00108836(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_NOISE_MULTIPLIER
	static auto nh_0xDB89EF50FF25FCE9 = rage::scrEngine::GetNativeHandler(0xDB89EF50FF25FCE9);
	rage::scrEngine::RegisterNativeHandler(0xDB89EF50FF25FCE9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB89EF50FF25FCE9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_MODEL_OVERRIDE
	static auto nh_0x977DB4641F6FC3DB = rage::scrEngine::GetNativeHandler(0x977DB4641F6FC3DB);
	rage::scrEngine::RegisterNativeHandler(0x977DB4641F6FC3DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x977DB4641F6FC3DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
	static auto nh_0xDC80A4C2F18A2B64 = rage::scrEngine::GetNativeHandler(0xDC80A4C2F18A2B64);
	rage::scrEngine::RegisterNativeHandler(0xDC80A4C2F18A2B64, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC80A4C2F18A2B64(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_PACK_TINT_INDEX
	static auto nh_0x93B0FB27C9A04060 = rage::scrEngine::GetNativeHandler(0x93B0FB27C9A04060);
	rage::scrEngine::RegisterNativeHandler(0x93B0FB27C9A04060, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93B0FB27C9A04060(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
	static auto nh_0x8217FD371A4625CF = rage::scrEngine::GetNativeHandler(0x8217FD371A4625CF);
	rage::scrEngine::RegisterNativeHandler(0x8217FD371A4625CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8217FD371A4625CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_TINT_INDEX
	static auto nh_0xA3D0E54541D9A5E5 = rage::scrEngine::GetNativeHandler(0xA3D0E54541D9A5E5);
	rage::scrEngine::RegisterNativeHandler(0xA3D0E54541D9A5E5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA3D0E54541D9A5E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE
	static auto nh_0xD9284A8C0D48352C = rage::scrEngine::GetNativeHandler(0xD9284A8C0D48352C);
	rage::scrEngine::RegisterNativeHandler(0xD9284A8C0D48352C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xD9284A8C0D48352C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX
	static auto nh_0xAF04C87F5DC1DF38 = rage::scrEngine::GetNativeHandler(0xAF04C87F5DC1DF38);
	rage::scrEngine::RegisterNativeHandler(0xAF04C87F5DC1DF38, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAF04C87F5DC1DF38(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS
	static auto nh_0x11D5F725F0E780E0 = rage::scrEngine::GetNativeHandler(0x11D5F725F0E780E0);
	rage::scrEngine::RegisterNativeHandler(0x11D5F725F0E780E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11D5F725F0E780E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_PLAYER_SHORT_SWITCH_STYLE
	static auto nh_0x5F2013F8BC24EE69 = rage::scrEngine::GetNativeHandler(0x5F2013F8BC24EE69);
	rage::scrEngine::RegisterNativeHandler(0x5F2013F8BC24EE69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F2013F8BC24EE69(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_SIMULATE_AIMING
	static auto nh_0xC54C95DA968EC5B5 = rage::scrEngine::GetNativeHandler(0xC54C95DA968EC5B5);
	rage::scrEngine::RegisterNativeHandler(0xC54C95DA968EC5B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC54C95DA968EC5B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_SNEAKING_NOISE_MULTIPLIER
	static auto nh_0xB2C1A29588A9F47C = rage::scrEngine::GetNativeHandler(0xB2C1A29588A9F47C);
	rage::scrEngine::RegisterNativeHandler(0xB2C1A29588A9F47C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB2C1A29588A9F47C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_SPRINT
	static auto nh_0xA01B8075D8B92DF4 = rage::scrEngine::GetNativeHandler(0xA01B8075D8B92DF4);
	rage::scrEngine::RegisterNativeHandler(0xA01B8075D8B92DF4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA01B8075D8B92DF4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PLAYER_STAMINA (result cleaner only)
	AddResultCleaner(0xa9ec16c7, ResultCleaner<bool>);

	// PLAYER/SET_PLAYER_STEALTH_PERCEPTION_MODIFIER
	static auto nh_0x4E9021C1FCDD507A = rage::scrEngine::GetNativeHandler(0x4E9021C1FCDD507A);
	rage::scrEngine::RegisterNativeHandler(0x4E9021C1FCDD507A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4E9021C1FCDD507A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_PLAYER_SWITCH_ESTABLISHING_SHOT
	static auto nh_0x0FDE9DBFC0A6BC65 = rage::scrEngine::GetNativeHandler(0x0FDE9DBFC0A6BC65);
	rage::scrEngine::RegisterNativeHandler(0x0FDE9DBFC0A6BC65, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0FDE9DBFC0A6BC65(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_PLAYER_SWITCH_OUTRO
	static auto nh_0xC208B673CE446B61 = rage::scrEngine::GetNativeHandler(0xC208B673CE446B61);
	rage::scrEngine::RegisterNativeHandler(0xC208B673CE446B61, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC208B673CE446B61(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_PLAYER_TALKING_OVERRIDE
	static auto nh_0xfc02caf6 = rage::scrEngine::GetNativeHandler(0xfc02caf6);
	rage::scrEngine::RegisterNativeHandler(0xfc02caf6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xfc02caf6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_TARGETING_MODE
	static auto nh_0xB1906895227793F3 = rage::scrEngine::GetNativeHandler(0xB1906895227793F3);
	rage::scrEngine::RegisterNativeHandler(0xB1906895227793F3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1906895227793F3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_TARGET_LEVEL
	static auto nh_0x5702B917B99DB1CD = rage::scrEngine::GetNativeHandler(0x5702B917B99DB1CD);
	rage::scrEngine::RegisterNativeHandler(0x5702B917B99DB1CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5702B917B99DB1CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_PLAYER_TCMODIFIER_TRANSITION
	static auto nh_0xBDEB86F4D5809204 = rage::scrEngine::GetNativeHandler(0xBDEB86F4D5809204);
	rage::scrEngine::RegisterNativeHandler(0xBDEB86F4D5809204, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBDEB86F4D5809204(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_TEAM
	static auto nh_0x0299FA38396A4940 = rage::scrEngine::GetNativeHandler(0x0299FA38396A4940);
	rage::scrEngine::RegisterNativeHandler(0x0299FA38396A4940, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0299FA38396A4940(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE
	static auto nh_0x6FDDAD856E36988A = rage::scrEngine::GetNativeHandler(0x6FDDAD856E36988A);
	rage::scrEngine::RegisterNativeHandler(0x6FDDAD856E36988A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6FDDAD856E36988A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_VEHICLE_DAMAGE_MODIFIER
	static auto nh_0xA50E117CDDF82F0C = rage::scrEngine::GetNativeHandler(0xA50E117CDDF82F0C);
	rage::scrEngine::RegisterNativeHandler(0xA50E117CDDF82F0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA50E117CDDF82F0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_VEHICLE_DEFENSE_MODIFIER
	static auto nh_0x4C60E6EFDAFF2462 = rage::scrEngine::GetNativeHandler(0x4C60E6EFDAFF2462);
	rage::scrEngine::RegisterNativeHandler(0x4C60E6EFDAFF2462, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4C60E6EFDAFF2462(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_PLAYER_VISIBLE_LOCALLY
	static auto nh_0xFAA10F1FAFB11AF2 = rage::scrEngine::GetNativeHandler(0xFAA10F1FAFB11AF2);
	rage::scrEngine::RegisterNativeHandler(0xFAA10F1FAFB11AF2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAA10F1FAFB11AF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WANTED_CENTRE_POSITION
	static auto nh_0x520E541A97A13354 = rage::scrEngine::GetNativeHandler(0x520E541A97A13354);
	rage::scrEngine::RegisterNativeHandler(0x520E541A97A13354, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x520E541A97A13354(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WANTED_LEVEL
	static auto nh_0x39FF19C64EF7DA5B = rage::scrEngine::GetNativeHandler(0x39FF19C64EF7DA5B);
	rage::scrEngine::RegisterNativeHandler(0x39FF19C64EF7DA5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x39FF19C64EF7DA5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WANTED_LEVEL_NOW
	static auto nh_0xE0A7D1E497FFCD6F = rage::scrEngine::GetNativeHandler(0xE0A7D1E497FFCD6F);
	rage::scrEngine::RegisterNativeHandler(0xE0A7D1E497FFCD6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE0A7D1E497FFCD6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WANTED_LEVEL_NO_DROP
	static auto nh_0x340E61DE7F471565 = rage::scrEngine::GetNativeHandler(0x340E61DE7F471565);
	rage::scrEngine::RegisterNativeHandler(0x340E61DE7F471565, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x340E61DE7F471565(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WEAPON_DAMAGE_MODIFIER
	static auto nh_0xCE07B9F7817AADA3 = rage::scrEngine::GetNativeHandler(0xCE07B9F7817AADA3);
	rage::scrEngine::RegisterNativeHandler(0xCE07B9F7817AADA3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCE07B9F7817AADA3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_PLAYER_WEAPON_DEFENSE_MODIFIER
	static auto nh_0x2D83BC011CA14A3C = rage::scrEngine::GetNativeHandler(0x2D83BC011CA14A3C);
	rage::scrEngine::RegisterNativeHandler(0x2D83BC011CA14A3C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D83BC011CA14A3C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_POLICE_FOCUS_WILL_TRACK_VEHICLE
	static auto nh_0x4E74E62E0A97E901 = rage::scrEngine::GetNativeHandler(0x4E74E62E0A97E901);
	rage::scrEngine::RegisterNativeHandler(0x4E74E62E0A97E901, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4E74E62E0A97E901(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_POLICE_IGNORE_PLAYER
	static auto nh_0x32C62AA929C2DA6A = rage::scrEngine::GetNativeHandler(0x32C62AA929C2DA6A);
	rage::scrEngine::RegisterNativeHandler(0x32C62AA929C2DA6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x32C62AA929C2DA6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_POLICE_RADAR_BLIPS
	static auto nh_0x43286D561B72B8BF = rage::scrEngine::GetNativeHandler(0x43286D561B72B8BF);
	rage::scrEngine::RegisterNativeHandler(0x43286D561B72B8BF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43286D561B72B8BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_POP_CONTROL_SPHERE_THIS_FRAME
	static auto nh_0xD8C3BE3EE94CAF2D = rage::scrEngine::GetNativeHandler(0xD8C3BE3EE94CAF2D);
	rage::scrEngine::RegisterNativeHandler(0xD8C3BE3EE94CAF2D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8C3BE3EE94CAF2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_PORTAL_SETTINGS_OVERRIDE
	static auto nh_0x044DBAD7A7FA2BE5 = rage::scrEngine::GetNativeHandler(0x044DBAD7A7FA2BE5);
	rage::scrEngine::RegisterNativeHandler(0x044DBAD7A7FA2BE5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x044DBAD7A7FA2BE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED
	static auto nh_0xDA07819E452FFE8F = rage::scrEngine::GetNativeHandler(0xDA07819E452FFE8F);
	rage::scrEngine::RegisterNativeHandler(0xDA07819E452FFE8F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA07819E452FFE8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_POSITION_FOR_NULL_CONV_PED
	static auto nh_0x33E3C6C6F2F0B506 = rage::scrEngine::GetNativeHandler(0x33E3C6C6F2F0B506);
	rage::scrEngine::RegisterNativeHandler(0x33E3C6C6F2F0B506, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33E3C6C6F2F0B506(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/SET_PROFILE_SETTING_PROLOGUE_COMPLETE
	static auto nh_0xB475F27C6A994D65 = rage::scrEngine::GetNativeHandler(0xB475F27C6A994D65);
	rage::scrEngine::RegisterNativeHandler(0xB475F27C6A994D65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB475F27C6A994D65(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RACE_TRACK_RENDER
	static auto nh_0x1EAC5F91BCBC5073 = rage::scrEngine::GetNativeHandler(0x1EAC5F91BCBC5073);
	rage::scrEngine::RegisterNativeHandler(0x1EAC5F91BCBC5073, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1EAC5F91BCBC5073(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_AS_EXTERIOR_THIS_FRAME
	static auto nh_0xE81B7D2A3DAB2D81 = rage::scrEngine::GetNativeHandler(0xE81B7D2A3DAB2D81);
	rage::scrEngine::RegisterNativeHandler(0xE81B7D2A3DAB2D81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE81B7D2A3DAB2D81(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_AS_INTERIOR_THIS_FRAME
	static auto nh_0x59E727A1C9D3E31A = rage::scrEngine::GetNativeHandler(0x59E727A1C9D3E31A);
	rage::scrEngine::RegisterNativeHandler(0x59E727A1C9D3E31A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x59E727A1C9D3E31A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_ZOOM
	static auto nh_0x096EF57A0C999BBA = rage::scrEngine::GetNativeHandler(0x096EF57A0C999BBA);
	rage::scrEngine::RegisterNativeHandler(0x096EF57A0C999BBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x096EF57A0C999BBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_ZOOM_PRECISE
	static auto nh_0xBD12C5EEE184C337 = rage::scrEngine::GetNativeHandler(0xBD12C5EEE184C337);
	rage::scrEngine::RegisterNativeHandler(0xBD12C5EEE184C337, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD12C5EEE184C337(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_ZOOM_TO_BLIP
	static auto nh_0xF98E4B3E56AFC7B1 = rage::scrEngine::GetNativeHandler(0xF98E4B3E56AFC7B1);
	rage::scrEngine::RegisterNativeHandler(0xF98E4B3E56AFC7B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF98E4B3E56AFC7B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADAR_ZOOM_TO_DISTANCE
	static auto nh_0xCB7CC0D58405AD41 = rage::scrEngine::GetNativeHandler(0xCB7CC0D58405AD41);
	rage::scrEngine::RegisterNativeHandler(0xCB7CC0D58405AD41, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB7CC0D58405AD41(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_AUTO_UNFREEZE
	static auto nh_0xC1AA9F53CE982990 = rage::scrEngine::GetNativeHandler(0xC1AA9F53CE982990);
	rage::scrEngine::RegisterNativeHandler(0xC1AA9F53CE982990, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1AA9F53CE982990(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_FRONTEND_FADE_TIME
	static auto nh_0x2C96CDB04FCA358E = rage::scrEngine::GetNativeHandler(0x2C96CDB04FCA358E);
	rage::scrEngine::RegisterNativeHandler(0x2C96CDB04FCA358E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C96CDB04FCA358E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_STATION_MUSIC_ONLY
	static auto nh_0x774BD811F656A122 = rage::scrEngine::GetNativeHandler(0x774BD811F656A122);
	rage::scrEngine::RegisterNativeHandler(0x774BD811F656A122, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x774BD811F656A122(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_TO_STATION_INDEX
	static auto nh_0xA619B168B8A8570F = rage::scrEngine::GetNativeHandler(0xA619B168B8A8570F);
	rage::scrEngine::RegisterNativeHandler(0xA619B168B8A8570F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA619B168B8A8570F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_TO_STATION_NAME
	static auto nh_0xC69EDA28699D5107 = rage::scrEngine::GetNativeHandler(0xC69EDA28699D5107);
	rage::scrEngine::RegisterNativeHandler(0xC69EDA28699D5107, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC69EDA28699D5107(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_RADIO_TRACK
	static auto nh_0xB39786F201FEE30B = rage::scrEngine::GetNativeHandler(0xB39786F201FEE30B);
	rage::scrEngine::RegisterNativeHandler(0xB39786F201FEE30B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB39786F201FEE30B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_RADIUS_BLIP_EDGE
	static auto nh_0x25615540D894B814 = rage::scrEngine::GetNativeHandler(0x25615540D894B814);
	rage::scrEngine::RegisterNativeHandler(0x25615540D894B814, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25615540D894B814(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_RAGDOLL_BLOCKING_FLAGS
	static auto nh_0x26695EC767728D84 = rage::scrEngine::GetNativeHandler(0x26695EC767728D84);
	rage::scrEngine::RegisterNativeHandler(0x26695EC767728D84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x26695EC767728D84(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_RANDOM_BOATS
	static auto nh_0x84436EC293B1415F = rage::scrEngine::GetNativeHandler(0x84436EC293B1415F);
	rage::scrEngine::RegisterNativeHandler(0x84436EC293B1415F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x84436EC293B1415F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_RANDOM_EVENT_FLAG
	static auto nh_0x971927086CFD2158 = rage::scrEngine::GetNativeHandler(0x971927086CFD2158);
	rage::scrEngine::RegisterNativeHandler(0x971927086CFD2158, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x971927086CFD2158(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_RANDOM_SEED
	static auto nh_0x444D98F98C11F3EC = rage::scrEngine::GetNativeHandler(0x444D98F98C11F3EC);
	rage::scrEngine::RegisterNativeHandler(0x444D98F98C11F3EC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x444D98F98C11F3EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_RANDOM_TRAINS
	static auto nh_0x80D9F74197EA47D9 = rage::scrEngine::GetNativeHandler(0x80D9F74197EA47D9);
	rage::scrEngine::RegisterNativeHandler(0x80D9F74197EA47D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80D9F74197EA47D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
	static auto nh_0xB3B3359379FE77D3 = rage::scrEngine::GetNativeHandler(0xB3B3359379FE77D3);
	rage::scrEngine::RegisterNativeHandler(0xB3B3359379FE77D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3B3359379FE77D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_RANDOM_WEATHER_TYPE
	static auto nh_0x8B05F884CF7E8020 = rage::scrEngine::GetNativeHandler(0x8B05F884CF7E8020);
	rage::scrEngine::RegisterNativeHandler(0x8B05F884CF7E8020, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8B05F884CF7E8020(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_REDUCE_PED_MODEL_BUDGET
	static auto nh_0x77B5F9A36BF96710 = rage::scrEngine::GetNativeHandler(0x77B5F9A36BF96710);
	rage::scrEngine::RegisterNativeHandler(0x77B5F9A36BF96710, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77B5F9A36BF96710(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_REDUCE_VEHICLE_MODEL_BUDGET
	static auto nh_0x80C527893080CCF3 = rage::scrEngine::GetNativeHandler(0x80C527893080CCF3);
	rage::scrEngine::RegisterNativeHandler(0x80C527893080CCF3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80C527893080CCF3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_RELATIONSHIP_BETWEEN_GROUPS
	static auto nh_0xBF25EB89375A37AD = rage::scrEngine::GetNativeHandler(0xBF25EB89375A37AD);
	rage::scrEngine::RegisterNativeHandler(0xBF25EB89375A37AD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF25EB89375A37AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_RENDER_HD_ONLY
	static auto nh_0x40AEFD1A244741F2 = rage::scrEngine::GetNativeHandler(0x40AEFD1A244741F2);
	rage::scrEngine::RegisterNativeHandler(0x40AEFD1A244741F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x40AEFD1A244741F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_RENDER_TRAIN_AS_DERAILED
	static auto nh_0x317B11A312DF5534 = rage::scrEngine::GetNativeHandler(0x317B11A312DF5534);
	rage::scrEngine::RegisterNativeHandler(0x317B11A312DF5534, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x317B11A312DF5534(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_RESOURCE_KVP
	static auto nh_0x21c7a35b = rage::scrEngine::GetNativeHandler(0x21c7a35b);
	rage::scrEngine::RegisterNativeHandler(0x21c7a35b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x21c7a35b(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_RESOURCE_KVP_FLOAT
	static auto nh_0x9add2938 = rage::scrEngine::GetNativeHandler(0x9add2938);
	rage::scrEngine::RegisterNativeHandler(0x9add2938, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9add2938(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_RESOURCE_KVP_INT
	static auto nh_0x6a2b1e8 = rage::scrEngine::GetNativeHandler(0x6a2b1e8);
	rage::scrEngine::RegisterNativeHandler(0x6a2b1e8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6a2b1e8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_RICH_PRESENCE
	static auto nh_0x7bdcbd45 = rage::scrEngine::GetNativeHandler(0x7bdcbd45);
	rage::scrEngine::RegisterNativeHandler(0x7bdcbd45, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7bdcbd45(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_RIOT_MODE_ENABLED
	static auto nh_0x2587A48BC88DFADF = rage::scrEngine::GetNativeHandler(0x2587A48BC88DFADF);
	rage::scrEngine::RegisterNativeHandler(0x2587A48BC88DFADF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2587A48BC88DFADF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_ROADS_BACK_TO_ORIGINAL
	static auto nh_0x1EE7063B80FFC77C = rage::scrEngine::GetNativeHandler(0x1EE7063B80FFC77C);
	rage::scrEngine::RegisterNativeHandler(0x1EE7063B80FFC77C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1EE7063B80FFC77C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA
	static auto nh_0x0027501B9F3B407E = rage::scrEngine::GetNativeHandler(0x0027501B9F3B407E);
	rage::scrEngine::RegisterNativeHandler(0x0027501B9F3B407E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0027501B9F3B407E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_ROADS_IN_ANGLED_AREA
	static auto nh_0x1A5AA1208AF5DB59 = rage::scrEngine::GetNativeHandler(0x1A5AA1208AF5DB59);
	rage::scrEngine::RegisterNativeHandler(0x1A5AA1208AF5DB59, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1A5AA1208AF5DB59(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/SET_ROADS_IN_AREA
	static auto nh_0xBF1A602B5BA52FEE = rage::scrEngine::GetNativeHandler(0xBF1A602B5BA52FEE);
	rage::scrEngine::RegisterNativeHandler(0xBF1A602B5BA52FEE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF1A602B5BA52FEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ROPES_CREATE_NETWORK_WORLD_STATE
	static auto nh_0xe62fc73 = rage::scrEngine::GetNativeHandler(0xe62fc73);
	rage::scrEngine::RegisterNativeHandler(0xe62fc73, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xe62fc73(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_ROPE_LENGTH_CHANGE_RATE
	static auto nh_0x69b680a7 = rage::scrEngine::GetNativeHandler(0x69b680a7);
	rage::scrEngine::RegisterNativeHandler(0x69b680a7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x69b680a7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_RUNTIME_TEXTURE_ARGB_DATA
	static auto nh_0x3963d527 = rage::scrEngine::GetNativeHandler(0x3963d527);
	rage::scrEngine::RegisterNativeHandler(0x3963d527, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3963d527(cxt);
	});
	        
	AddResultCleaner(0x3963d527, ResultCleaner<bool>);

	// CFX/SET_RUNTIME_TEXTURE_IMAGE
	static auto nh_0x28fc4ecb = rage::scrEngine::GetNativeHandler(0x28fc4ecb);
	rage::scrEngine::RegisterNativeHandler(0x28fc4ecb, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x28fc4ecb(cxt);
	});
	        
	AddResultCleaner(0x28fc4ecb, ResultCleaner<bool>);

	// CFX/SET_RUNTIME_TEXTURE_PIXEL
	static auto nh_0xab65acee = rage::scrEngine::GetNativeHandler(0xab65acee);
	rage::scrEngine::RegisterNativeHandler(0xab65acee, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xab65acee(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER
	static auto nh_0x6DB47AA77FD94E09 = rage::scrEngine::GetNativeHandler(0x6DB47AA77FD94E09);
	rage::scrEngine::RegisterNativeHandler(0x6DB47AA77FD94E09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6DB47AA77FD94E09(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_SAVE_HOUSE
	static auto nh_0x4F548CABEAE553BC = rage::scrEngine::GetNativeHandler(0x4F548CABEAE553BC);
	rage::scrEngine::RegisterNativeHandler(0x4F548CABEAE553BC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4F548CABEAE553BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_SAVE_MENU_ACTIVE
	static auto nh_0xC9BF75D28165FF77 = rage::scrEngine::GetNativeHandler(0xC9BF75D28165FF77);
	rage::scrEngine::RegisterNativeHandler(0xC9BF75D28165FF77, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9BF75D28165FF77(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED
	static auto nh_0x1D132D614DD86811 = rage::scrEngine::GetNativeHandler(0x1D132D614DD86811);
	rage::scrEngine::RegisterNativeHandler(0x1D132D614DD86811, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1D132D614DD86811(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME
	static auto nh_0x6D8EB211944DCE08 = rage::scrEngine::GetNativeHandler(0x6D8EB211944DCE08);
	rage::scrEngine::RegisterNativeHandler(0x6D8EB211944DCE08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D8EB211944DCE08(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_SCENARIO_GROUP_ENABLED
	static auto nh_0x02C8E5B49848664E = rage::scrEngine::GetNativeHandler(0x02C8E5B49848664E);
	rage::scrEngine::RegisterNativeHandler(0x02C8E5B49848664E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x02C8E5B49848664E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA
	static auto nh_0x28157D43CF600981 = rage::scrEngine::GetNativeHandler(0x28157D43CF600981);
	rage::scrEngine::RegisterNativeHandler(0x28157D43CF600981, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x28157D43CF600981(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND
	static auto nh_0x14F19A8782C8071E = rage::scrEngine::GetNativeHandler(0x14F19A8782C8071E);
	rage::scrEngine::RegisterNativeHandler(0x14F19A8782C8071E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14F19A8782C8071E(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME
	static auto nh_0x7A556143A1C03898 = rage::scrEngine::GetNativeHandler(0x7A556143A1C03898);
	rage::scrEngine::RegisterNativeHandler(0x7A556143A1C03898, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A556143A1C03898(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_SCENARIO_TYPE_ENABLED
	static auto nh_0xEB47EC4E34FB7EE1 = rage::scrEngine::GetNativeHandler(0xEB47EC4E34FB7EE1);
	rage::scrEngine::RegisterNativeHandler(0xEB47EC4E34FB7EE1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEB47EC4E34FB7EE1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SCRIPTED_ANIM_SEAT_OFFSET
	static auto nh_0x5917BBA32D06C230 = rage::scrEngine::GetNativeHandler(0x5917BBA32D06C230);
	rage::scrEngine::RegisterNativeHandler(0x5917BBA32D06C230, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5917BBA32D06C230(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME
	static auto nh_0x5086C7843552CF85 = rage::scrEngine::GetNativeHandler(0x5086C7843552CF85);
	rage::scrEngine::RegisterNativeHandler(0x5086C7843552CF85, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5086C7843552CF85(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/SET_SCRIPT_AS_NO_LONGER_NEEDED
	static auto nh_0xC90D2DCACD56184C = rage::scrEngine::GetNativeHandler(0xC90D2DCACD56184C);
	rage::scrEngine::RegisterNativeHandler(0xC90D2DCACD56184C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC90D2DCACD56184C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCRIPT_GFX_ALIGN
	static auto nh_0xB8A850F20A067EB6 = rage::scrEngine::GetNativeHandler(0xB8A850F20A067EB6);
	rage::scrEngine::RegisterNativeHandler(0xB8A850F20A067EB6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8A850F20A067EB6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCRIPT_GFX_ALIGN_PARAMS
	static auto nh_0xF5A2C681787E579D = rage::scrEngine::GetNativeHandler(0xF5A2C681787E579D);
	rage::scrEngine::RegisterNativeHandler(0xF5A2C681787E579D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF5A2C681787E579D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU
	static auto nh_0xC6372ECD45D73BCD = rage::scrEngine::GetNativeHandler(0xC6372ECD45D73BCD);
	rage::scrEngine::RegisterNativeHandler(0xC6372ECD45D73BCD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC6372ECD45D73BCD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SCRIPT_GFX_DRAW_ORDER
	static auto nh_0x61BB1D9B3A95D802 = rage::scrEngine::GetNativeHandler(0x61BB1D9B3A95D802);
	rage::scrEngine::RegisterNativeHandler(0x61BB1D9B3A95D802, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x61BB1D9B3A95D802(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_SCRIPT_UPDATE_DOOR_AUDIO
	static auto nh_0x06C0023BED16DD6B = rage::scrEngine::GetNativeHandler(0x06C0023BED16DD6B);
	rage::scrEngine::RegisterNativeHandler(0x06C0023BED16DD6B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06C0023BED16DD6B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_SCRIPT_VARIABLE_HUD_COLOUR
	static auto nh_0xD68A5FF8A3A89874 = rage::scrEngine::GetNativeHandler(0xD68A5FF8A3A89874);
	rage::scrEngine::RegisterNativeHandler(0xD68A5FF8A3A89874, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD68A5FF8A3A89874(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_SCRIPT_VEHICLE_GENERATOR
	static auto nh_0xD9D620E0AC6DC4B0 = rage::scrEngine::GetNativeHandler(0xD9D620E0AC6DC4B0);
	rage::scrEngine::RegisterNativeHandler(0xD9D620E0AC6DC4B0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9D620E0AC6DC4B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED
	static auto nh_0xC5BC038960E9DB27 = rage::scrEngine::GetNativeHandler(0xC5BC038960E9DB27);
	rage::scrEngine::RegisterNativeHandler(0xC5BC038960E9DB27, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC5BC038960E9DB27(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_SEETHROUGH
	static auto nh_0x7E08924259E08CE0 = rage::scrEngine::GetNativeHandler(0x7E08924259E08CE0);
	rage::scrEngine::RegisterNativeHandler(0x7E08924259E08CE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7E08924259E08CE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_SEQUENCE_TO_REPEAT
	static auto nh_0x58C70CF3A41E4AE7 = rage::scrEngine::GetNativeHandler(0x58C70CF3A41E4AE7);
	rage::scrEngine::RegisterNativeHandler(0x58C70CF3A41E4AE7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58C70CF3A41E4AE7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_SIREN_WITH_NO_DRIVER
	static auto nh_0x1FEF0683B96EBCF2 = rage::scrEngine::GetNativeHandler(0x1FEF0683B96EBCF2);
	rage::scrEngine::RegisterNativeHandler(0x1FEF0683B96EBCF2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1FEF0683B96EBCF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_SNAKEOIL_FOR_ENTRY
	static auto nh_0xa7dd3209 = rage::scrEngine::GetNativeHandler(0xa7dd3209);
	rage::scrEngine::RegisterNativeHandler(0xa7dd3209, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xa7dd3209(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_SOCIAL_CLUB_TOUR
	static auto nh_0x9E778248D6685FE0 = rage::scrEngine::GetNativeHandler(0x9E778248D6685FE0);
	rage::scrEngine::RegisterNativeHandler(0x9E778248D6685FE0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9E778248D6685FE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_SPECIAL_ABILITY_MULTIPLIER
	static auto nh_0xA49C426ED0CA4AB7 = rage::scrEngine::GetNativeHandler(0xA49C426ED0CA4AB7);
	rage::scrEngine::RegisterNativeHandler(0xA49C426ED0CA4AB7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA49C426ED0CA4AB7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_SPECIAL_FLIGHT_MODE_ALLOWED
	static auto nh_0xF1211889DF15A763 = rage::scrEngine::GetNativeHandler(0xF1211889DF15A763);
	rage::scrEngine::RegisterNativeHandler(0xF1211889DF15A763, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1211889DF15A763(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_SPECIAL_FLIGHT_MODE_RATIO
	static auto nh_0xD138FA15C9776837 = rage::scrEngine::GetNativeHandler(0xD138FA15C9776837);
	rage::scrEngine::RegisterNativeHandler(0xD138FA15C9776837, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD138FA15C9776837(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO
	static auto nh_0x438B3D7CA026FE91 = rage::scrEngine::GetNativeHandler(0x438B3D7CA026FE91);
	rage::scrEngine::RegisterNativeHandler(0x438B3D7CA026FE91, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x438B3D7CA026FE91(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_SRL_TIME
	static auto nh_0xA74A541C6884E7B8 = rage::scrEngine::GetNativeHandler(0xA74A541C6884E7B8);
	rage::scrEngine::RegisterNativeHandler(0xA74A541C6884E7B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA74A541C6884E7B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_STATE_BAG_VALUE
	static auto nh_0x8d50e33a = rage::scrEngine::GetNativeHandler(0x8d50e33a);
	rage::scrEngine::RegisterNativeHandler(0x8d50e33a, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8d50e33a(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_STATE_OF_CLOSEST_DOOR_OF_TYPE
	static auto nh_0xF82D8F1926A02C3D = rage::scrEngine::GetNativeHandler(0xF82D8F1926A02C3D);
	rage::scrEngine::RegisterNativeHandler(0xF82D8F1926A02C3D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF82D8F1926A02C3D(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_STATE_OF_RAYFIRE_MAP_OBJECT
	static auto nh_0x5C29F698D404C5E1 = rage::scrEngine::GetNativeHandler(0x5C29F698D404C5E1);
	rage::scrEngine::RegisterNativeHandler(0x5C29F698D404C5E1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C29F698D404C5E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_STATIC_EMITTER_ENABLED
	static auto nh_0x399D2D3B33F1B8EB = rage::scrEngine::GetNativeHandler(0x399D2D3B33F1B8EB);
	rage::scrEngine::RegisterNativeHandler(0x399D2D3B33F1B8EB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x399D2D3B33F1B8EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SET_STORE_ENABLED
	static auto nh_0x9641A9FF718E9C5E = rage::scrEngine::GetNativeHandler(0x9641A9FF718E9C5E);
	rage::scrEngine::RegisterNativeHandler(0x9641A9FF718E9C5E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9641A9FF718E9C5E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED
	static auto nh_0xBE2CACCF5A8AA805 = rage::scrEngine::GetNativeHandler(0xBE2CACCF5A8AA805);
	rage::scrEngine::RegisterNativeHandler(0xBE2CACCF5A8AA805, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBE2CACCF5A8AA805(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_STREAMING
	static auto nh_0x6E0C692677008888 = rage::scrEngine::GetNativeHandler(0x6E0C692677008888);
	rage::scrEngine::RegisterNativeHandler(0x6E0C692677008888, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6E0C692677008888(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_STUNT_JUMPS_CAN_TRIGGER
	static auto nh_0xD79185689F8FD5DF = rage::scrEngine::GetNativeHandler(0xD79185689F8FD5DF);
	rage::scrEngine::RegisterNativeHandler(0xD79185689F8FD5DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD79185689F8FD5DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_SUBMARINE_CRUSH_DEPTHS
	static auto nh_0xC59872A5134879C7 = rage::scrEngine::GetNativeHandler(0xC59872A5134879C7);
	rage::scrEngine::RegisterNativeHandler(0xC59872A5134879C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC59872A5134879C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_SUPER_JUMP_THIS_FRAME
	static auto nh_0x57FFF03E423A4C0B = rage::scrEngine::GetNativeHandler(0x57FFF03E423A4C0B);
	rage::scrEngine::RegisterNativeHandler(0x57FFF03E423A4C0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x57FFF03E423A4C0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_SWIM_MULTIPLIER_FOR_PLAYER
	static auto nh_0xA91C6F0FF7D16A13 = rage::scrEngine::GetNativeHandler(0xA91C6F0FF7D16A13);
	rage::scrEngine::RegisterNativeHandler(0xA91C6F0FF7D16A13, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA91C6F0FF7D16A13(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME
	static auto nh_0x394B9CD12435C981 = rage::scrEngine::GetNativeHandler(0x394B9CD12435C981);
	rage::scrEngine::RegisterNativeHandler(0x394B9CD12435C981, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x394B9CD12435C981(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SYNCHRONIZED_SCENE_LOOPED
	static auto nh_0xD9A897A4C6C2974F = rage::scrEngine::GetNativeHandler(0xD9A897A4C6C2974F);
	rage::scrEngine::RegisterNativeHandler(0xD9A897A4C6C2974F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD9A897A4C6C2974F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SYNCHRONIZED_SCENE_ORIGIN
	static auto nh_0x6ACF6B7225801CD7 = rage::scrEngine::GetNativeHandler(0x6ACF6B7225801CD7);
	rage::scrEngine::RegisterNativeHandler(0x6ACF6B7225801CD7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6ACF6B7225801CD7(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SYNCHRONIZED_SCENE_PHASE
	static auto nh_0x734292F4F0ABF6D0 = rage::scrEngine::GetNativeHandler(0x734292F4F0ABF6D0);
	rage::scrEngine::RegisterNativeHandler(0x734292F4F0ABF6D0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x734292F4F0ABF6D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SET_SYNCHRONIZED_SCENE_RATE
	static auto nh_0xB6C49F8A5E295A5D = rage::scrEngine::GetNativeHandler(0xB6C49F8A5E295A5D);
	rage::scrEngine::RegisterNativeHandler(0xB6C49F8A5E295A5D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB6C49F8A5E295A5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_TABLE_GAMES_CAMERA_THIS_UPDATE (result cleaner only)
	AddResultCleaner(0x79C0E43EB9B944E2, ResultCleaner<bool>);

	// TASK/SET_TASK_MOVE_NETWORK_SIGNAL_BOOL
	static auto nh_0xB0A6CFD2C69C1088 = rage::scrEngine::GetNativeHandler(0xB0A6CFD2C69C1088);
	rage::scrEngine::RegisterNativeHandler(0xB0A6CFD2C69C1088, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB0A6CFD2C69C1088(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
	static auto nh_0xD5BB4025AE449A4E = rage::scrEngine::GetNativeHandler(0xD5BB4025AE449A4E);
	rage::scrEngine::RegisterNativeHandler(0xD5BB4025AE449A4E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD5BB4025AE449A4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG
	static auto nh_0xCC665AAC360D31E7 = rage::scrEngine::GetNativeHandler(0xCC665AAC360D31E7);
	rage::scrEngine::RegisterNativeHandler(0xCC665AAC360D31E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC665AAC360D31E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE
	static auto nh_0x639B642FACBE4EDD = rage::scrEngine::GetNativeHandler(0x639B642FACBE4EDD);
	rage::scrEngine::RegisterNativeHandler(0x639B642FACBE4EDD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x639B642FACBE4EDD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN
	static auto nh_0xB893215D8D4C015B = rage::scrEngine::GetNativeHandler(0xB893215D8D4C015B);
	rage::scrEngine::RegisterNativeHandler(0xB893215D8D4C015B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB893215D8D4C015B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TAXI_LIGHTS
	static auto nh_0x598803E85E8448D9 = rage::scrEngine::GetNativeHandler(0x598803E85E8448D9);
	rage::scrEngine::RegisterNativeHandler(0x598803E85E8448D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x598803E85E8448D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SET_TEAM_PICKUP_OBJECT
	static auto nh_0x53E0DF1A2A3CF0CA = rage::scrEngine::GetNativeHandler(0x53E0DF1A2A3CF0CA);
	rage::scrEngine::RegisterNativeHandler(0x53E0DF1A2A3CF0CA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x53E0DF1A2A3CF0CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_CENTRE
	static auto nh_0xC02F4DBFB51D988B = rage::scrEngine::GetNativeHandler(0xC02F4DBFB51D988B);
	rage::scrEngine::RegisterNativeHandler(0xC02F4DBFB51D988B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC02F4DBFB51D988B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_TEXT_CHAT_ENABLED (result cleaner only)
	AddResultCleaner(0x97b2f9f8, ResultCleaner<bool>);

	// HUD/SET_TEXT_COLOUR
	static auto nh_0xBE6B23FFA53FB442 = rage::scrEngine::GetNativeHandler(0xBE6B23FFA53FB442);
	rage::scrEngine::RegisterNativeHandler(0xBE6B23FFA53FB442, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE6B23FFA53FB442(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_DROPSHADOW
	static auto nh_0x465C84BC39F1C351 = rage::scrEngine::GetNativeHandler(0x465C84BC39F1C351);
	rage::scrEngine::RegisterNativeHandler(0x465C84BC39F1C351, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x465C84BC39F1C351(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_DROP_SHADOW
	static auto nh_0x1CA3E9EAC9D93E5E = rage::scrEngine::GetNativeHandler(0x1CA3E9EAC9D93E5E);
	rage::scrEngine::RegisterNativeHandler(0x1CA3E9EAC9D93E5E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CA3E9EAC9D93E5E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_EDGE
	static auto nh_0x441603240D202FA6 = rage::scrEngine::GetNativeHandler(0x441603240D202FA6);
	rage::scrEngine::RegisterNativeHandler(0x441603240D202FA6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x441603240D202FA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_FONT
	static auto nh_0x66E0276CC5F6B9DA = rage::scrEngine::GetNativeHandler(0x66E0276CC5F6B9DA);
	rage::scrEngine::RegisterNativeHandler(0x66E0276CC5F6B9DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66E0276CC5F6B9DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_JUSTIFICATION
	static auto nh_0x4E096588B13FFECA = rage::scrEngine::GetNativeHandler(0x4E096588B13FFECA);
	rage::scrEngine::RegisterNativeHandler(0x4E096588B13FFECA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4E096588B13FFECA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_LEADING
	static auto nh_0xA50ABC31E3CDFAFF = rage::scrEngine::GetNativeHandler(0xA50ABC31E3CDFAFF);
	rage::scrEngine::RegisterNativeHandler(0xA50ABC31E3CDFAFF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA50ABC31E3CDFAFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_OUTLINE
	static auto nh_0x2513DFB0FB8400FE = rage::scrEngine::GetNativeHandler(0x2513DFB0FB8400FE);
	rage::scrEngine::RegisterNativeHandler(0x2513DFB0FB8400FE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2513DFB0FB8400FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_PROPORTIONAL
	static auto nh_0x038C1F517D7FDCF8 = rage::scrEngine::GetNativeHandler(0x038C1F517D7FDCF8);
	rage::scrEngine::RegisterNativeHandler(0x038C1F517D7FDCF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x038C1F517D7FDCF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_RENDER_ID
	static auto nh_0x5F15302936E07111 = rage::scrEngine::GetNativeHandler(0x5F15302936E07111);
	rage::scrEngine::RegisterNativeHandler(0x5F15302936E07111, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F15302936E07111(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_RIGHT_JUSTIFY
	static auto nh_0x6B3C4650BC8BEE47 = rage::scrEngine::GetNativeHandler(0x6B3C4650BC8BEE47);
	rage::scrEngine::RegisterNativeHandler(0x6B3C4650BC8BEE47, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B3C4650BC8BEE47(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_SCALE
	static auto nh_0x07C837F9A01C34C9 = rage::scrEngine::GetNativeHandler(0x07C837F9A01C34C9);
	rage::scrEngine::RegisterNativeHandler(0x07C837F9A01C34C9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x07C837F9A01C34C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_TEXT_WRAP
	static auto nh_0x63145D9C883A1A70 = rage::scrEngine::GetNativeHandler(0x63145D9C883A1A70);
	rage::scrEngine::RegisterNativeHandler(0x63145D9C883A1A70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63145D9C883A1A70(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
	static auto nh_0x42156508606DE65E = rage::scrEngine::GetNativeHandler(0x42156508606DE65E);
	rage::scrEngine::RegisterNativeHandler(0x42156508606DE65E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42156508606DE65E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_THIS_SCRIPT_CAN_BE_PAUSED
	static auto nh_0xAA391C728106F7AF = rage::scrEngine::GetNativeHandler(0xAA391C728106F7AF);
	rage::scrEngine::RegisterNativeHandler(0xAA391C728106F7AF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA391C728106F7AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT
	static auto nh_0xB98236CAAECEF897 = rage::scrEngine::GetNativeHandler(0xB98236CAAECEF897);
	rage::scrEngine::RegisterNativeHandler(0xB98236CAAECEF897, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB98236CAAECEF897(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TIMECYCLE_MODIFIER
	static auto nh_0x2C933ABF17A1DF41 = rage::scrEngine::GetNativeHandler(0x2C933ABF17A1DF41);
	rage::scrEngine::RegisterNativeHandler(0x2C933ABF17A1DF41, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2C933ABF17A1DF41(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TIMECYCLE_MODIFIER_STRENGTH
	static auto nh_0x82E7FFCD5B2326B3 = rage::scrEngine::GetNativeHandler(0x82E7FFCD5B2326B3);
	rage::scrEngine::RegisterNativeHandler(0x82E7FFCD5B2326B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x82E7FFCD5B2326B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_TIMECYCLE_MODIFIER_VAR
	static auto nh_0x6e0a422b = rage::scrEngine::GetNativeHandler(0x6e0a422b);
	rage::scrEngine::RegisterNativeHandler(0x6e0a422b, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6e0a422b(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_TIME_SCALE
	static auto nh_0x1D408577D440E81E = rage::scrEngine::GetNativeHandler(0x1D408577D440E81E);
	rage::scrEngine::RegisterNativeHandler(0x1D408577D440E81E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1D408577D440E81E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TRACKED_POINT_INFO
	static auto nh_0x164ECBB3CF750CB0 = rage::scrEngine::GetNativeHandler(0x164ECBB3CF750CB0);
	rage::scrEngine::RegisterNativeHandler(0x164ECBB3CF750CB0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x164ECBB3CF750CB0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TRAILER_INVERSE_MASS_SCALE
	static auto nh_0x2A8F319B392E7B3F = rage::scrEngine::GetNativeHandler(0x2A8F319B392E7B3F);
	rage::scrEngine::RegisterNativeHandler(0x2A8F319B392E7B3F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A8F319B392E7B3F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TRAILER_LEGS_RAISED
	static auto nh_0x95CF53B3D687F9FA = rage::scrEngine::GetNativeHandler(0x95CF53B3D687F9FA);
	rage::scrEngine::RegisterNativeHandler(0x95CF53B3D687F9FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95CF53B3D687F9FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_TRAINS_FORCE_DOORS_OPEN
	static auto nh_0xd4d1ba63 = rage::scrEngine::GetNativeHandler(0xd4d1ba63);
	rage::scrEngine::RegisterNativeHandler(0xd4d1ba63, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd4d1ba63(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TRAIN_CRUISE_SPEED
	static auto nh_0x16469284DB8C62B5 = rage::scrEngine::GetNativeHandler(0x16469284DB8C62B5);
	rage::scrEngine::RegisterNativeHandler(0x16469284DB8C62B5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x16469284DB8C62B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_TRAIN_DOOR_OPEN_RATIO
	static auto nh_0x2468dbe8 = rage::scrEngine::GetNativeHandler(0x2468dbe8);
	rage::scrEngine::RegisterNativeHandler(0x2468dbe8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2468dbe8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TRAIN_SPEED
	static auto nh_0xAA0BC91BE0B796E3 = rage::scrEngine::GetNativeHandler(0xAA0BC91BE0B796E3);
	rage::scrEngine::RegisterNativeHandler(0xAA0BC91BE0B796E3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA0BC91BE0B796E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_TRAIN_TRACK_SPAWN_FREQUENCY
	static auto nh_0x21973BBF8D17EDFA = rage::scrEngine::GetNativeHandler(0x21973BBF8D17EDFA);
	rage::scrEngine::RegisterNativeHandler(0x21973BBF8D17EDFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21973BBF8D17EDFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TRANSITION_TIMECYCLE_MODIFIER
	static auto nh_0x3BCF567485E1971C = rage::scrEngine::GetNativeHandler(0x3BCF567485E1971C);
	rage::scrEngine::RegisterNativeHandler(0x3BCF567485E1971C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3BCF567485E1971C(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TV_AUDIO_FRONTEND
	static auto nh_0x113D2C5DC57E1774 = rage::scrEngine::GetNativeHandler(0x113D2C5DC57E1774);
	rage::scrEngine::RegisterNativeHandler(0x113D2C5DC57E1774, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x113D2C5DC57E1774(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TV_CHANNEL
	static auto nh_0xBAABBB23EB6E484E = rage::scrEngine::GetNativeHandler(0xBAABBB23EB6E484E);
	rage::scrEngine::RegisterNativeHandler(0xBAABBB23EB6E484E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBAABBB23EB6E484E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TV_CHANNEL_PLAYLIST
	static auto nh_0xF7B38B8305F1FE8B = rage::scrEngine::GetNativeHandler(0xF7B38B8305F1FE8B);
	rage::scrEngine::RegisterNativeHandler(0xF7B38B8305F1FE8B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF7B38B8305F1FE8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TV_CHANNEL_PLAYLIST_AT_HOUR
	static auto nh_0x2201C576FACAEBE8 = rage::scrEngine::GetNativeHandler(0x2201C576FACAEBE8);
	rage::scrEngine::RegisterNativeHandler(0x2201C576FACAEBE8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2201C576FACAEBE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/SET_TV_VOLUME
	static auto nh_0x2982BF73F66E9DDC = rage::scrEngine::GetNativeHandler(0x2982BF73F66E9DDC);
	rage::scrEngine::RegisterNativeHandler(0x2982BF73F66E9DDC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2982BF73F66E9DDC(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_USER_RADIO_CONTROL_ENABLED
	static auto nh_0x19F21E63AE6EAE4E = rage::scrEngine::GetNativeHandler(0x19F21E63AE6EAE4E);
	rage::scrEngine::RegisterNativeHandler(0x19F21E63AE6EAE4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19F21E63AE6EAE4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_USE_HI_DOF
	static auto nh_0xA13B0222F3D94A94 = rage::scrEngine::GetNativeHandler(0xA13B0222F3D94A94);
	rage::scrEngine::RegisterNativeHandler(0xA13B0222F3D94A94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA13B0222F3D94A94(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_USE_ISLAND_MAP
	static auto nh_0x5E1460624D194A38 = rage::scrEngine::GetNativeHandler(0x5E1460624D194A38);
	rage::scrEngine::RegisterNativeHandler(0x5E1460624D194A38, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E1460624D194A38(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VARIABLE_ON_SOUND
	static auto nh_0xAD6B3148A78AE9B6 = rage::scrEngine::GetNativeHandler(0xAD6B3148A78AE9B6);
	rage::scrEngine::RegisterNativeHandler(0xAD6B3148A78AE9B6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xAD6B3148A78AE9B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VARIABLE_ON_STREAM
	static auto nh_0x2F9D3834AEB9EF79 = rage::scrEngine::GetNativeHandler(0x2F9D3834AEB9EF79);
	rage::scrEngine::RegisterNativeHandler(0x2F9D3834AEB9EF79, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2F9D3834AEB9EF79(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VARIABLE_ON_UNDER_WATER_STREAM
	static auto nh_0x733ADF241531E5C2 = rage::scrEngine::GetNativeHandler(0x733ADF241531E5C2);
	rage::scrEngine::RegisterNativeHandler(0x733ADF241531E5C2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x733ADF241531E5C2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ACTIVE_DURING_PLAYBACK
	static auto nh_0xDFFCEF48E511DB48 = rage::scrEngine::GetNativeHandler(0xDFFCEF48E511DB48);
	rage::scrEngine::RegisterNativeHandler(0xDFFCEF48E511DB48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDFFCEF48E511DB48(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION
	static auto nh_0x21115BCD6E44656A = rage::scrEngine::GetNativeHandler(0x21115BCD6E44656A);
	rage::scrEngine::RegisterNativeHandler(0x21115BCD6E44656A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x21115BCD6E44656A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING
	static auto nh_0x1F9FB66F3A3842D2 = rage::scrEngine::GetNativeHandler(0x1F9FB66F3A3842D2);
	rage::scrEngine::RegisterNativeHandler(0x1F9FB66F3A3842D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F9FB66F3A3842D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ALARM
	static auto nh_0xCDE5E70C1DDB954C = rage::scrEngine::GetNativeHandler(0xCDE5E70C1DDB954C);
	rage::scrEngine::RegisterNativeHandler(0xCDE5E70C1DDB954C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCDE5E70C1DDB954C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_ALARM_TIME_LEFT
	static auto nh_0xc108ee6f = rage::scrEngine::GetNativeHandler(0xc108ee6f);
	rage::scrEngine::RegisterNativeHandler(0xc108ee6f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xc108ee6f(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON
	static auto nh_0x5D14D4154BFE7B2C = rage::scrEngine::GetNativeHandler(0x5D14D4154BFE7B2C);
	rage::scrEngine::RegisterNativeHandler(0x5D14D4154BFE7B2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D14D4154BFE7B2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/SET_VEHICLE_AS_NO_LONGER_NEEDED
	static auto nh_0x629BFA74418D6239 = rage::scrEngine::GetNativeHandler(0x629BFA74418D6239);
	rage::scrEngine::RegisterNativeHandler(0x629BFA74418D6239, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x629BFA74418D6239(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR
	static auto nh_0x01BB4D577D38BD9E = rage::scrEngine::GetNativeHandler(0x01BB4D577D38BD9E);
	rage::scrEngine::RegisterNativeHandler(0x01BB4D577D38BD9E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01BB4D577D38BD9E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR
	static auto nh_0x59E7B488451F4D3A = rage::scrEngine::GetNativeHandler(0x59E7B488451F4D3A);
	rage::scrEngine::RegisterNativeHandler(0x59E7B488451F4D3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x59E7B488451F4D3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_AUTOMATICALLY_ATTACHES
	static auto nh_0x8BA6F76BC53A1493 = rage::scrEngine::GetNativeHandler(0x8BA6F76BC53A1493);
	rage::scrEngine::RegisterNativeHandler(0x8BA6F76BC53A1493, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8BA6F76BC53A1493(cxt);
	});
	        
	AddResultCleaner(0x8BA6F76BC53A1493, ResultCleaner<int>);

	// CFX/SET_VEHICLE_AUTO_REPAIR_DISABLED
	static auto nh_0x5f3a3574 = rage::scrEngine::GetNativeHandler(0x5f3a3574);
	rage::scrEngine::RegisterNativeHandler(0x5f3a3574, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5f3a3574(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_BODY_HEALTH
	static auto nh_0xB77D05AC8C78AADB = rage::scrEngine::GetNativeHandler(0xB77D05AC8C78AADB);
	rage::scrEngine::RegisterNativeHandler(0xB77D05AC8C78AADB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB77D05AC8C78AADB(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_BOOST_ACTIVE
	static auto nh_0x4A04DE7CAB2739A1 = rage::scrEngine::GetNativeHandler(0x4A04DE7CAB2739A1);
	rage::scrEngine::RegisterNativeHandler(0x4A04DE7CAB2739A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A04DE7CAB2739A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_BRAKE
	static auto nh_0xE4E2FD323574965C = rage::scrEngine::GetNativeHandler(0xE4E2FD323574965C);
	rage::scrEngine::RegisterNativeHandler(0xE4E2FD323574965C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE4E2FD323574965C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_BRAKE_LIGHTS
	static auto nh_0x92B35082E0B42F66 = rage::scrEngine::GetNativeHandler(0x92B35082E0B42F66);
	rage::scrEngine::RegisterNativeHandler(0x92B35082E0B42F66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92B35082E0B42F66(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_BULLDOZER_ARM_POSITION
	static auto nh_0xF8EBCCC96ADB9FB7 = rage::scrEngine::GetNativeHandler(0xF8EBCCC96ADB9FB7);
	rage::scrEngine::RegisterNativeHandler(0xF8EBCCC96ADB9FB7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF8EBCCC96ADB9FB7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_BURNOUT
	static auto nh_0xFB8794444A7D60FB = rage::scrEngine::GetNativeHandler(0xFB8794444A7D60FB);
	rage::scrEngine::RegisterNativeHandler(0xFB8794444A7D60FB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFB8794444A7D60FB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_BE_TARGETTED
	static auto nh_0x3750146A28097A82 = rage::scrEngine::GetNativeHandler(0x3750146A28097A82);
	rage::scrEngine::RegisterNativeHandler(0x3750146A28097A82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3750146A28097A82(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS
	static auto nh_0x300504B23BD3B711 = rage::scrEngine::GetNativeHandler(0x300504B23BD3B711);
	rage::scrEngine::RegisterNativeHandler(0x300504B23BD3B711, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x300504B23BD3B711(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED
	static auto nh_0x4C7028F78FFD3681 = rage::scrEngine::GetNativeHandler(0x4C7028F78FFD3681);
	rage::scrEngine::RegisterNativeHandler(0x4C7028F78FFD3681, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4C7028F78FFD3681(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_BREAK
	static auto nh_0x59BF8C3D52C92F66 = rage::scrEngine::GetNativeHandler(0x59BF8C3D52C92F66);
	rage::scrEngine::RegisterNativeHandler(0x59BF8C3D52C92F66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x59BF8C3D52C92F66(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_DEFORM_WHEELS
	static auto nh_0x0CDDA42F9E360CA6 = rage::scrEngine::GetNativeHandler(0x0CDDA42F9E360CA6);
	rage::scrEngine::RegisterNativeHandler(0x0CDDA42F9E360CA6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0CDDA42F9E360CA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_LEAK_OIL
	static auto nh_0x51BB2D88D31A914B = rage::scrEngine::GetNativeHandler(0x51BB2D88D31A914B);
	rage::scrEngine::RegisterNativeHandler(0x51BB2D88D31A914B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x51BB2D88D31A914B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_LEAK_PETROL
	static auto nh_0x192547247864DFDD = rage::scrEngine::GetNativeHandler(0x192547247864DFDD);
	rage::scrEngine::RegisterNativeHandler(0x192547247864DFDD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x192547247864DFDD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CAN_SAVE_IN_GARAGE
	static auto nh_0x428BACCDF5E26EAD = rage::scrEngine::GetNativeHandler(0x428BACCDF5E26EAD);
	rage::scrEngine::RegisterNativeHandler(0x428BACCDF5E26EAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x428BACCDF5E26EAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CEILING_HEIGHT
	static auto nh_0xA46413066687A328 = rage::scrEngine::GetNativeHandler(0xA46413066687A328);
	rage::scrEngine::RegisterNativeHandler(0xA46413066687A328, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA46413066687A328(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CHEAT_POWER_INCREASE
	static auto nh_0xB59E4BD37AE292DB = rage::scrEngine::GetNativeHandler(0xB59E4BD37AE292DB);
	rage::scrEngine::RegisterNativeHandler(0xB59E4BD37AE292DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB59E4BD37AE292DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_CLUTCH
	static auto nh_0x2f70aced = rage::scrEngine::GetNativeHandler(0x2f70aced);
	rage::scrEngine::RegisterNativeHandler(0x2f70aced, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2f70aced(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_COLOURS
	static auto nh_0x4F1D4BE3A7F24601 = rage::scrEngine::GetNativeHandler(0x4F1D4BE3A7F24601);
	rage::scrEngine::RegisterNativeHandler(0x4F1D4BE3A7F24601, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F1D4BE3A7F24601(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_COLOUR_COMBINATION
	static auto nh_0x33E8CD3322E2FE31 = rage::scrEngine::GetNativeHandler(0x33E8CD3322E2FE31);
	rage::scrEngine::RegisterNativeHandler(0x33E8CD3322E2FE31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33E8CD3322E2FE31(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_CURRENT_GEAR
	static auto nh_0x8923dd42 = rage::scrEngine::GetNativeHandler(0x8923dd42);
	rage::scrEngine::RegisterNativeHandler(0x8923dd42, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8923dd42(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_CURRENT_RPM
	static auto nh_0x2a01a8fc = rage::scrEngine::GetNativeHandler(0x2a01a8fc);
	rage::scrEngine::RegisterNativeHandler(0x2a01a8fc, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2a01a8fc(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CUSTOM_PRIMARY_COLOUR
	static auto nh_0x7141766F91D15BEA = rage::scrEngine::GetNativeHandler(0x7141766F91D15BEA);
	rage::scrEngine::RegisterNativeHandler(0x7141766F91D15BEA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7141766F91D15BEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_CUSTOM_SECONDARY_COLOUR
	static auto nh_0x36CED73BFED89754 = rage::scrEngine::GetNativeHandler(0x36CED73BFED89754);
	rage::scrEngine::RegisterNativeHandler(0x36CED73BFED89754, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36CED73BFED89754(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DAMAGE
	static auto nh_0xA1DD317EA8FD4F29 = rage::scrEngine::GetNativeHandler(0xA1DD317EA8FD4F29);
	rage::scrEngine::RegisterNativeHandler(0xA1DD317EA8FD4F29, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA1DD317EA8FD4F29(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DEFORMATION_FIXED
	static auto nh_0x953DA1E1B12C0491 = rage::scrEngine::GetNativeHandler(0x953DA1E1B12C0491);
	rage::scrEngine::RegisterNativeHandler(0x953DA1E1B12C0491, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x953DA1E1B12C0491(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
	static auto nh_0x245A6883D966D537 = rage::scrEngine::GetNativeHandler(0x245A6883D966D537);
	rage::scrEngine::RegisterNativeHandler(0x245A6883D966D537, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x245A6883D966D537(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DIRT_LEVEL
	static auto nh_0x79D3B596FE44EE8B = rage::scrEngine::GetNativeHandler(0x79D3B596FE44EE8B);
	rage::scrEngine::RegisterNativeHandler(0x79D3B596FE44EE8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x79D3B596FE44EE8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DISABLE_TOWING
	static auto nh_0x2B6747FAA9DB9D6B = rage::scrEngine::GetNativeHandler(0x2B6747FAA9DB9D6B);
	rage::scrEngine::RegisterNativeHandler(0x2B6747FAA9DB9D6B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B6747FAA9DB9D6B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_LOCKED
	static auto nh_0xB664292EAECF7FA6 = rage::scrEngine::GetNativeHandler(0xB664292EAECF7FA6);
	rage::scrEngine::RegisterNativeHandler(0xB664292EAECF7FA6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB664292EAECF7FA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS
	static auto nh_0xA2F80B8D040727CC = rage::scrEngine::GetNativeHandler(0xA2F80B8D040727CC);
	rage::scrEngine::RegisterNativeHandler(0xA2F80B8D040727CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2F80B8D040727CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS
	static auto nh_0x9737A37136F07E75 = rage::scrEngine::GetNativeHandler(0x9737A37136F07E75);
	rage::scrEngine::RegisterNativeHandler(0x9737A37136F07E75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9737A37136F07E75(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
	static auto nh_0x517AAF684BB50CD1 = rage::scrEngine::GetNativeHandler(0x517AAF684BB50CD1);
	rage::scrEngine::RegisterNativeHandler(0x517AAF684BB50CD1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x517AAF684BB50CD1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_LOCKED_FOR_TEAM
	static auto nh_0xB81F6D4A8F5EEBA8 = rage::scrEngine::GetNativeHandler(0xB81F6D4A8F5EEBA8);
	rage::scrEngine::RegisterNativeHandler(0xB81F6D4A8F5EEBA8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB81F6D4A8F5EEBA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOORS_SHUT
	static auto nh_0x781B3D62BB013EF5 = rage::scrEngine::GetNativeHandler(0x781B3D62BB013EF5);
	rage::scrEngine::RegisterNativeHandler(0x781B3D62BB013EF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x781B3D62BB013EF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOOR_BROKEN
	static auto nh_0xD4D4F6A4AB575A33 = rage::scrEngine::GetNativeHandler(0xD4D4F6A4AB575A33);
	rage::scrEngine::RegisterNativeHandler(0xD4D4F6A4AB575A33, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4D4F6A4AB575A33(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOOR_CONTROL
	static auto nh_0xF2BFA0430F0A0FCB = rage::scrEngine::GetNativeHandler(0xF2BFA0430F0A0FCB);
	rage::scrEngine::RegisterNativeHandler(0xF2BFA0430F0A0FCB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2BFA0430F0A0FCB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOOR_LATCHED
	static auto nh_0xA5A9653A8D2CAF48 = rage::scrEngine::GetNativeHandler(0xA5A9653A8D2CAF48);
	rage::scrEngine::RegisterNativeHandler(0xA5A9653A8D2CAF48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5A9653A8D2CAF48(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOOR_OPEN
	static auto nh_0x7C65DAC73C35C862 = rage::scrEngine::GetNativeHandler(0x7C65DAC73C35C862);
	rage::scrEngine::RegisterNativeHandler(0x7C65DAC73C35C862, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7C65DAC73C35C862(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DOOR_SHUT
	static auto nh_0x93D9BD300D7789E5 = rage::scrEngine::GetNativeHandler(0x93D9BD300D7789E5);
	rage::scrEngine::RegisterNativeHandler(0x93D9BD300D7789E5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93D9BD300D7789E5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP
	static auto nh_0x068F64F2470F9656 = rage::scrEngine::GetNativeHandler(0x068F64F2470F9656);
	rage::scrEngine::RegisterNativeHandler(0x068F64F2470F9656, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x068F64F2470F9656(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ENGINE_CAN_DEGRADE
	static auto nh_0x983765856F2564F9 = rage::scrEngine::GetNativeHandler(0x983765856F2564F9);
	rage::scrEngine::RegisterNativeHandler(0x983765856F2564F9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x983765856F2564F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ENGINE_HEALTH
	static auto nh_0x45F6D8EEF34ABEF1 = rage::scrEngine::GetNativeHandler(0x45F6D8EEF34ABEF1);
	rage::scrEngine::RegisterNativeHandler(0x45F6D8EEF34ABEF1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45F6D8EEF34ABEF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ENGINE_ON
	static auto nh_0x2497C4717C8B881E = rage::scrEngine::GetNativeHandler(0x2497C4717C8B881E);
	rage::scrEngine::RegisterNativeHandler(0x2497C4717C8B881E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2497C4717C8B881E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_ENGINE_TEMPERATURE
	static auto nh_0x6c93c4a9 = rage::scrEngine::GetNativeHandler(0x6c93c4a9);
	rage::scrEngine::RegisterNativeHandler(0x6c93c4a9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6c93c4a9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ENVEFF_SCALE
	static auto nh_0x3AFDC536C3D01674 = rage::scrEngine::GetNativeHandler(0x3AFDC536C3D01674);
	rage::scrEngine::RegisterNativeHandler(0x3AFDC536C3D01674, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3AFDC536C3D01674(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_EXCLUSIVE_DRIVER
	static auto nh_0x41062318F23ED854 = rage::scrEngine::GetNativeHandler(0x41062318F23ED854);
	rage::scrEngine::RegisterNativeHandler(0x41062318F23ED854, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x41062318F23ED854(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE
	static auto nh_0x71B0892EC081D60A = rage::scrEngine::GetNativeHandler(0x71B0892EC081D60A);
	rage::scrEngine::RegisterNativeHandler(0x71B0892EC081D60A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x71B0892EC081D60A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_EXTENDED_REMOVAL_RANGE
	static auto nh_0x79DF7E806202CE01 = rage::scrEngine::GetNativeHandler(0x79DF7E806202CE01);
	rage::scrEngine::RegisterNativeHandler(0x79DF7E806202CE01, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x79DF7E806202CE01(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_EXTRA
	static auto nh_0x7EE3A3C5E4A40CC9 = rage::scrEngine::GetNativeHandler(0x7EE3A3C5E4A40CC9);
	rage::scrEngine::RegisterNativeHandler(0x7EE3A3C5E4A40CC9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7EE3A3C5E4A40CC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_EXTRA_COLOURS
	static auto nh_0x2036F561ADD12E33 = rage::scrEngine::GetNativeHandler(0x2036F561ADD12E33);
	rage::scrEngine::RegisterNativeHandler(0x2036F561ADD12E33, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2036F561ADD12E33(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FIXED
	static auto nh_0x115722B1B9C14C1C = rage::scrEngine::GetNativeHandler(0x115722B1B9C14C1C);
	rage::scrEngine::RegisterNativeHandler(0x115722B1B9C14C1C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x115722B1B9C14C1C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FLIGHT_NOZZLE_POSITION
	static auto nh_0x30D779DE7C4F6DD3 = rage::scrEngine::GetNativeHandler(0x30D779DE7C4F6DD3);
	rage::scrEngine::RegisterNativeHandler(0x30D779DE7C4F6DD3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x30D779DE7C4F6DD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE
	static auto nh_0x9AA47FFF660CB932 = rage::scrEngine::GetNativeHandler(0x9AA47FFF660CB932);
	rage::scrEngine::RegisterNativeHandler(0x9AA47FFF660CB932, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9AA47FFF660CB932(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FORCE_AFTERBURNER
	static auto nh_0xB055A34527CB8FD7 = rage::scrEngine::GetNativeHandler(0xB055A34527CB8FD7);
	rage::scrEngine::RegisterNativeHandler(0xB055A34527CB8FD7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB055A34527CB8FD7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FORWARD_SPEED
	static auto nh_0xAB54A438726D25D5 = rage::scrEngine::GetNativeHandler(0xAB54A438726D25D5);
	rage::scrEngine::RegisterNativeHandler(0xAB54A438726D25D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAB54A438726D25D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FRICTION_OVERRIDE
	static auto nh_0x1837AF7C627009BA = rage::scrEngine::GetNativeHandler(0x1837AF7C627009BA);
	rage::scrEngine::RegisterNativeHandler(0x1837AF7C627009BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1837AF7C627009BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_FUEL_LEVEL
	static auto nh_0xba970511 = rage::scrEngine::GetNativeHandler(0xba970511);
	rage::scrEngine::RegisterNativeHandler(0xba970511, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xba970511(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_FULLBEAM
	static auto nh_0x8B7FD87F0DDB421E = rage::scrEngine::GetNativeHandler(0x8B7FD87F0DDB421E);
	rage::scrEngine::RegisterNativeHandler(0x8B7FD87F0DDB421E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8B7FD87F0DDB421E(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_GEAR_RATIO
	static auto nh_0x496ef2f2 = rage::scrEngine::GetNativeHandler(0x496ef2f2);
	rage::scrEngine::RegisterNativeHandler(0x496ef2f2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x496ef2f2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS
	static auto nh_0x279D50DE5652D935 = rage::scrEngine::GetNativeHandler(0x279D50DE5652D935);
	rage::scrEngine::RegisterNativeHandler(0x279D50DE5652D935, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x279D50DE5652D935(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_GENERATOR_AREA_OF_INTEREST
	static auto nh_0x9A75585FB2E54FAD = rage::scrEngine::GetNativeHandler(0x9A75585FB2E54FAD);
	rage::scrEngine::RegisterNativeHandler(0x9A75585FB2E54FAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A75585FB2E54FAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_GRAVITY
	static auto nh_0x89F149B6131E57DA = rage::scrEngine::GetNativeHandler(0x89F149B6131E57DA);
	rage::scrEngine::RegisterNativeHandler(0x89F149B6131E57DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x89F149B6131E57DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_GRAVITY_AMOUNT
	static auto nh_0x1a963e58 = rage::scrEngine::GetNativeHandler(0x1a963e58);
	rage::scrEngine::RegisterNativeHandler(0x1a963e58, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1a963e58(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HANDBRAKE
	static auto nh_0x684785568EF26A22 = rage::scrEngine::GetNativeHandler(0x684785568EF26A22);
	rage::scrEngine::RegisterNativeHandler(0x684785568EF26A22, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x684785568EF26A22(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_HANDLING_FIELD
	static auto nh_0x2ba40795 = rage::scrEngine::GetNativeHandler(0x2ba40795);
	rage::scrEngine::RegisterNativeHandler(0x2ba40795, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2ba40795(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_HANDLING_FLOAT
	static auto nh_0x488c86d2 = rage::scrEngine::GetNativeHandler(0x488c86d2);
	rage::scrEngine::RegisterNativeHandler(0x488c86d2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x488c86d2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_HANDLING_INT
	static auto nh_0xc37f4cf9 = rage::scrEngine::GetNativeHandler(0xc37f4cf9);
	rage::scrEngine::RegisterNativeHandler(0xc37f4cf9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xc37f4cf9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_HANDLING_VECTOR
	static auto nh_0x12497890 = rage::scrEngine::GetNativeHandler(0x12497890);
	rage::scrEngine::RegisterNativeHandler(0x12497890, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x12497890(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG
	static auto nh_0x02398B627547189C = rage::scrEngine::GetNativeHandler(0x02398B627547189C);
	rage::scrEngine::RegisterNativeHandler(0x02398B627547189C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x02398B627547189C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER
	static auto nh_0x2B5F9D2AF1F1722D = rage::scrEngine::GetNativeHandler(0x2B5F9D2AF1F1722D);
	rage::scrEngine::RegisterNativeHandler(0x2B5F9D2AF1F1722D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B5F9D2AF1F1722D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HAS_MUTED_SIRENS
	static auto nh_0xD8050E0EB60CF274 = rage::scrEngine::GetNativeHandler(0xD8050E0EB60CF274);
	rage::scrEngine::RegisterNativeHandler(0xD8050E0EB60CF274, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8050E0EB60CF274(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HAS_STRONG_AXLES
	static auto nh_0x92F0CF722BC4202F = rage::scrEngine::GetNativeHandler(0x92F0CF722BC4202F);
	rage::scrEngine::RegisterNativeHandler(0x92F0CF722BC4202F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92F0CF722BC4202F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS
	static auto nh_0x1AA8A837D2169D94 = rage::scrEngine::GetNativeHandler(0x1AA8A837D2169D94);
	rage::scrEngine::RegisterNativeHandler(0x1AA8A837D2169D94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1AA8A837D2169D94(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_HIGH_GEAR
	static auto nh_0x20b1b3e6 = rage::scrEngine::GetNativeHandler(0x20b1b3e6);
	rage::scrEngine::RegisterNativeHandler(0x20b1b3e6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x20b1b3e6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_INACTIVE_DURING_PLAYBACK
	static auto nh_0x06582AFF74894C75 = rage::scrEngine::GetNativeHandler(0x06582AFF74894C75);
	rage::scrEngine::RegisterNativeHandler(0x06582AFF74894C75, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x06582AFF74894C75(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_INDICATOR_LIGHTS
	static auto nh_0xB5D45264751B7DF0 = rage::scrEngine::GetNativeHandler(0xB5D45264751B7DF0);
	rage::scrEngine::RegisterNativeHandler(0xB5D45264751B7DF0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB5D45264751B7DF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
	static auto nh_0xBE70724027F85BCD = rage::scrEngine::GetNativeHandler(0xBE70724027F85BCD);
	rage::scrEngine::RegisterNativeHandler(0xBE70724027F85BCD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE70724027F85BCD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_INFLUENCES_WANTED_LEVEL
	static auto nh_0x0AD9E8F87FF7C16F = rage::scrEngine::GetNativeHandler(0x0AD9E8F87FF7C16F);
	rage::scrEngine::RegisterNativeHandler(0x0AD9E8F87FF7C16F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AD9E8F87FF7C16F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_INTERIORLIGHT
	static auto nh_0xBC2042F090AF6AD3 = rage::scrEngine::GetNativeHandler(0xBC2042F090AF6AD3);
	rage::scrEngine::RegisterNativeHandler(0xBC2042F090AF6AD3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBC2042F090AF6AD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_IS_CONSIDERED_BY_PLAYER
	static auto nh_0x31B927BBC44156CD = rage::scrEngine::GetNativeHandler(0x31B927BBC44156CD);
	rage::scrEngine::RegisterNativeHandler(0x31B927BBC44156CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31B927BBC44156CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_IS_RACING
	static auto nh_0x07116E24E9D1929D = rage::scrEngine::GetNativeHandler(0x07116E24E9D1929D);
	rage::scrEngine::RegisterNativeHandler(0x07116E24E9D1929D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x07116E24E9D1929D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_IS_STOLEN
	static auto nh_0x67B2C79AA7FF5738 = rage::scrEngine::GetNativeHandler(0x67B2C79AA7FF5738);
	rage::scrEngine::RegisterNativeHandler(0x67B2C79AA7FF5738, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x67B2C79AA7FF5738(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_IS_WANTED
	static auto nh_0xF7EC25A3EBEEC726 = rage::scrEngine::GetNativeHandler(0xF7EC25A3EBEEC726);
	rage::scrEngine::RegisterNativeHandler(0xF7EC25A3EBEEC726, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF7EC25A3EBEEC726(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED
	static auto nh_0xB8FBC8B1330CA9B4 = rage::scrEngine::GetNativeHandler(0xB8FBC8B1330CA9B4);
	rage::scrEngine::RegisterNativeHandler(0xB8FBC8B1330CA9B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8FBC8B1330CA9B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_KERS_ALLOWED
	static auto nh_0x99C82F8A139F3E4E = rage::scrEngine::GetNativeHandler(0x99C82F8A139F3E4E);
	rage::scrEngine::RegisterNativeHandler(0x99C82F8A139F3E4E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x99C82F8A139F3E4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_LIGHTS
	static auto nh_0x34E710FF01247C5A = rage::scrEngine::GetNativeHandler(0x34E710FF01247C5A);
	rage::scrEngine::RegisterNativeHandler(0x34E710FF01247C5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x34E710FF01247C5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_LIGHT_MULTIPLIER
	static auto nh_0xB385454F8791F57C = rage::scrEngine::GetNativeHandler(0xB385454F8791F57C);
	rage::scrEngine::RegisterNativeHandler(0xB385454F8791F57C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB385454F8791F57C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_LIVERY
	static auto nh_0x60BF608F1B8CD1B6 = rage::scrEngine::GetNativeHandler(0x60BF608F1B8CD1B6);
	rage::scrEngine::RegisterNativeHandler(0x60BF608F1B8CD1B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x60BF608F1B8CD1B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_LOD_MULTIPLIER
	static auto nh_0x93AE6A61BE015BF1 = rage::scrEngine::GetNativeHandler(0x93AE6A61BE015BF1);
	rage::scrEngine::RegisterNativeHandler(0x93AE6A61BE015BF1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93AE6A61BE015BF1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_MOD
	static auto nh_0x6AF0636DDEDCB6DD = rage::scrEngine::GetNativeHandler(0x6AF0636DDEDCB6DD);
	rage::scrEngine::RegisterNativeHandler(0x6AF0636DDEDCB6DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6AF0636DDEDCB6DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_MODEL_IS_SUPPRESSED
	static auto nh_0x0FC2D89AC25A5814 = rage::scrEngine::GetNativeHandler(0x0FC2D89AC25A5814);
	rage::scrEngine::RegisterNativeHandler(0x0FC2D89AC25A5814, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0FC2D89AC25A5814(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_MOD_COLOR_1
	static auto nh_0x43FEB945EE7F85B8 = rage::scrEngine::GetNativeHandler(0x43FEB945EE7F85B8);
	rage::scrEngine::RegisterNativeHandler(0x43FEB945EE7F85B8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x43FEB945EE7F85B8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_MOD_COLOR_2
	static auto nh_0x816562BADFDEC83E = rage::scrEngine::GetNativeHandler(0x816562BADFDEC83E);
	rage::scrEngine::RegisterNativeHandler(0x816562BADFDEC83E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x816562BADFDEC83E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_MOD_KIT
	static auto nh_0x1F2AA07F00B3217A = rage::scrEngine::GetNativeHandler(0x1F2AA07F00B3217A);
	rage::scrEngine::RegisterNativeHandler(0x1F2AA07F00B3217A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1F2AA07F00B3217A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_NAME_DEBUG
	static auto nh_0xBFDF984E2C22B94F = rage::scrEngine::GetNativeHandler(0xBFDF984E2C22B94F);
	rage::scrEngine::RegisterNativeHandler(0xBFDF984E2C22B94F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xBFDF984E2C22B94F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_NEEDS_TO_BE_HOTWIRED
	static auto nh_0xFBA550EA44404EE6 = rage::scrEngine::GetNativeHandler(0xFBA550EA44404EE6);
	rage::scrEngine::RegisterNativeHandler(0xFBA550EA44404EE6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFBA550EA44404EE6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_NEXT_GEAR
	static auto nh_0x3a4566f4 = rage::scrEngine::GetNativeHandler(0x3a4566f4);
	rage::scrEngine::RegisterNativeHandler(0x3a4566f4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3a4566f4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_NITRO_PTFX_RANGE
	static auto nh_0xa40cb822 = rage::scrEngine::GetNativeHandler(0xa40cb822);
	rage::scrEngine::RegisterNativeHandler(0xa40cb822, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xa40cb822(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_NUMBER_PLATE_TEXT
	static auto nh_0x95A88F0B409CDA47 = rage::scrEngine::GetNativeHandler(0x95A88F0B409CDA47);
	rage::scrEngine::RegisterNativeHandler(0x95A88F0B409CDA47, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x95A88F0B409CDA47(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX
	static auto nh_0x9088EB5A43FFB0A1 = rage::scrEngine::GetNativeHandler(0x9088EB5A43FFB0A1);
	rage::scrEngine::RegisterNativeHandler(0x9088EB5A43FFB0A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9088EB5A43FFB0A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_OIL_LEVEL
	static auto nh_0x90d1cad1 = rage::scrEngine::GetNativeHandler(0x90d1cad1);
	rage::scrEngine::RegisterNativeHandler(0x90d1cad1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x90d1cad1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_ON_GROUND_PROPERLY (result cleaner only)
	AddResultCleaner(0x49733E92263139D1, ResultCleaner<bool>);

	// VEHICLE/SET_VEHICLE_OUT_OF_CONTROL
	static auto nh_0xF19D095E42D430CC = rage::scrEngine::GetNativeHandler(0xF19D095E42D430CC);
	rage::scrEngine::RegisterNativeHandler(0xF19D095E42D430CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF19D095E42D430CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_PETROL_TANK_HEALTH
	static auto nh_0x70DB57649FA8D0D8 = rage::scrEngine::GetNativeHandler(0x70DB57649FA8D0D8);
	rage::scrEngine::RegisterNativeHandler(0x70DB57649FA8D0D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70DB57649FA8D0D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_PITCH_BIAS
	static auto nh_0x2a6cc9f2 = rage::scrEngine::GetNativeHandler(0x2a6cc9f2);
	rage::scrEngine::RegisterNativeHandler(0x2a6cc9f2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2a6cc9f2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SET_VEHICLE_POPULATION_BUDGET
	static auto nh_0xCB9E1EB3BE2AF4E9 = rage::scrEngine::GetNativeHandler(0xCB9E1EB3BE2AF4E9);
	rage::scrEngine::RegisterNativeHandler(0xCB9E1EB3BE2AF4E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB9E1EB3BE2AF4E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_PROVIDES_COVER
	static auto nh_0x5AFEEDD9BB2899D7 = rage::scrEngine::GetNativeHandler(0x5AFEEDD9BB2899D7);
	rage::scrEngine::RegisterNativeHandler(0x5AFEEDD9BB2899D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AFEEDD9BB2899D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_RADIO_ENABLED
	static auto nh_0x3B988190C0AA6C0B = rage::scrEngine::GetNativeHandler(0x3B988190C0AA6C0B);
	rage::scrEngine::RegisterNativeHandler(0x3B988190C0AA6C0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3B988190C0AA6C0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_RADIO_LOUD
	static auto nh_0xBB6F1CAEC68B0BCE = rage::scrEngine::GetNativeHandler(0xBB6F1CAEC68B0BCE);
	rage::scrEngine::RegisterNativeHandler(0xBB6F1CAEC68B0BCE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB6F1CAEC68B0BCE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_REDUCE_GRIP
	static auto nh_0x222FF6A823D122E2 = rage::scrEngine::GetNativeHandler(0x222FF6A823D122E2);
	rage::scrEngine::RegisterNativeHandler(0x222FF6A823D122E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x222FF6A823D122E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_ROLL_BIAS
	static auto nh_0x264b45de = rage::scrEngine::GetNativeHandler(0x264b45de);
	rage::scrEngine::RegisterNativeHandler(0x264b45de, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x264b45de(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_RUDDER_BROKEN
	static auto nh_0x09606148B6C71DEF = rage::scrEngine::GetNativeHandler(0x09606148B6C71DEF);
	rage::scrEngine::RegisterNativeHandler(0x09606148B6C71DEF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x09606148B6C71DEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_SEARCHLIGHT
	static auto nh_0x14E85C5EE7A4D542 = rage::scrEngine::GetNativeHandler(0x14E85C5EE7A4D542);
	rage::scrEngine::RegisterNativeHandler(0x14E85C5EE7A4D542, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14E85C5EE7A4D542(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_SHOOT_AT_TARGET
	static auto nh_0x74CD9A9327A282EA = rage::scrEngine::GetNativeHandler(0x74CD9A9327A282EA);
	rage::scrEngine::RegisterNativeHandler(0x74CD9A9327A282EA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74CD9A9327A282EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_SIREN
	static auto nh_0xF4924635A19EB37D = rage::scrEngine::GetNativeHandler(0xF4924635A19EB37D);
	rage::scrEngine::RegisterNativeHandler(0xF4924635A19EB37D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4924635A19EB37D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEHICLE_STARTUP_REV_SOUND
	static auto nh_0xF1F8157B8C3F171C = rage::scrEngine::GetNativeHandler(0xF1F8157B8C3F171C);
	rage::scrEngine::RegisterNativeHandler(0xF1F8157B8C3F171C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF1F8157B8C3F171C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_STEERING_ANGLE
	static auto nh_0xffccc2ea = rage::scrEngine::GetNativeHandler(0xffccc2ea);
	rage::scrEngine::RegisterNativeHandler(0xffccc2ea, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xffccc2ea(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_STEERING_BIAS_SCALAR
	static auto nh_0x9007A2F21DC108D4 = rage::scrEngine::GetNativeHandler(0x9007A2F21DC108D4);
	rage::scrEngine::RegisterNativeHandler(0x9007A2F21DC108D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9007A2F21DC108D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_STEERING_SCALE
	static auto nh_0xeb46596f = rage::scrEngine::GetNativeHandler(0xeb46596f);
	rage::scrEngine::RegisterNativeHandler(0xeb46596f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xeb46596f(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_STEER_BIAS
	static auto nh_0x42A8EC77D5150CBE = rage::scrEngine::GetNativeHandler(0x42A8EC77D5150CBE);
	rage::scrEngine::RegisterNativeHandler(0x42A8EC77D5150CBE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42A8EC77D5150CBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_STRONG
	static auto nh_0x3E8C8727991A8A0B = rage::scrEngine::GetNativeHandler(0x3E8C8727991A8A0B);
	rage::scrEngine::RegisterNativeHandler(0x3E8C8727991A8A0B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3E8C8727991A8A0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_SUSPENSION_HEIGHT
	static auto nh_0xb3439a01 = rage::scrEngine::GetNativeHandler(0xb3439a01);
	rage::scrEngine::RegisterNativeHandler(0xb3439a01, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb3439a01(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TANK_TURRET_POSITION
	static auto nh_0x56B94C6D7127DFBA = rage::scrEngine::GetNativeHandler(0x56B94C6D7127DFBA);
	rage::scrEngine::RegisterNativeHandler(0x56B94C6D7127DFBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x56B94C6D7127DFBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TIMED_EXPLOSION
	static auto nh_0x2E0A74E1002380B1 = rage::scrEngine::GetNativeHandler(0x2E0A74E1002380B1);
	rage::scrEngine::RegisterNativeHandler(0x2E0A74E1002380B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E0A74E1002380B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TOW_TRUCK_ARM_POSITION
	static auto nh_0xFE54B92A344583CA = rage::scrEngine::GetNativeHandler(0xFE54B92A344583CA);
	rage::scrEngine::RegisterNativeHandler(0xFE54B92A344583CA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFE54B92A344583CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_TURBO_PRESSURE
	static auto nh_0x6485615e = rage::scrEngine::GetNativeHandler(0x6485615e);
	rage::scrEngine::RegisterNativeHandler(0x6485615e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6485615e(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TURRET_SPEED_THIS_FRAME
	static auto nh_0x1093408B4B9D1146 = rage::scrEngine::GetNativeHandler(0x1093408B4B9D1146);
	rage::scrEngine::RegisterNativeHandler(0x1093408B4B9D1146, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1093408B4B9D1146(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TYRES_CAN_BURST
	static auto nh_0xEB9DC3C7D8596C46 = rage::scrEngine::GetNativeHandler(0xEB9DC3C7D8596C46);
	rage::scrEngine::RegisterNativeHandler(0xEB9DC3C7D8596C46, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB9DC3C7D8596C46(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TYRE_BURST
	static auto nh_0xEC6A202EE4960385 = rage::scrEngine::GetNativeHandler(0xEC6A202EE4960385);
	rage::scrEngine::RegisterNativeHandler(0xEC6A202EE4960385, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC6A202EE4960385(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TYRE_FIXED
	static auto nh_0x6E13FC662B882D1D = rage::scrEngine::GetNativeHandler(0x6E13FC662B882D1D);
	rage::scrEngine::RegisterNativeHandler(0x6E13FC662B882D1D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6E13FC662B882D1D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_TYRE_SMOKE_COLOR
	static auto nh_0xB5BA80F839791C0F = rage::scrEngine::GetNativeHandler(0xB5BA80F839791C0F);
	rage::scrEngine::RegisterNativeHandler(0xB5BA80F839791C0F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB5BA80F839791C0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_UNDRIVEABLE
	static auto nh_0x8ABA6AF54B942B95 = rage::scrEngine::GetNativeHandler(0x8ABA6AF54B942B95);
	rage::scrEngine::RegisterNativeHandler(0x8ABA6AF54B942B95, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8ABA6AF54B942B95(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_USES_LARGE_REAR_RAMP
	static auto nh_0xCAC66558B944DA67 = rage::scrEngine::GetNativeHandler(0xCAC66558B944DA67);
	rage::scrEngine::RegisterNativeHandler(0xCAC66558B944DA67, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCAC66558B944DA67(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_USE_ALTERNATE_HANDLING
	static auto nh_0x1D97D1E3A70A649F = rage::scrEngine::GetNativeHandler(0x1D97D1E3A70A649F);
	rage::scrEngine::RegisterNativeHandler(0x1D97D1E3A70A649F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1D97D1E3A70A649F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION (result cleaner only)
	AddResultCleaner(0xE023E8AC4EF7C117, ResultCleaner<int>);

	// VEHICLE/SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS
	static auto nh_0xC45C27EF50F36ADC = rage::scrEngine::GetNativeHandler(0xC45C27EF50F36ADC);
	rage::scrEngine::RegisterNativeHandler(0xC45C27EF50F36ADC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC45C27EF50F36ADC(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEELIE_STATE
	static auto nh_0xeab8db65 = rage::scrEngine::GetNativeHandler(0xeab8db65);
	rage::scrEngine::RegisterNativeHandler(0xeab8db65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xeab8db65(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_WHEELS_CAN_BREAK
	static auto nh_0x29B18B4FD460CA8F = rage::scrEngine::GetNativeHandler(0x29B18B4FD460CA8F);
	rage::scrEngine::RegisterNativeHandler(0x29B18B4FD460CA8F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x29B18B4FD460CA8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP
	static auto nh_0xA37B9A517B133349 = rage::scrEngine::GetNativeHandler(0xA37B9A517B133349);
	rage::scrEngine::RegisterNativeHandler(0xA37B9A517B133349, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA37B9A517B133349(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_BRAKE_PRESSURE
	static auto nh_0xe80f4e31 = rage::scrEngine::GetNativeHandler(0xe80f4e31);
	rage::scrEngine::RegisterNativeHandler(0xe80f4e31, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xe80f4e31(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_FLAGS
	static auto nh_0xd2b9e90d = rage::scrEngine::GetNativeHandler(0xd2b9e90d);
	rage::scrEngine::RegisterNativeHandler(0xd2b9e90d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xd2b9e90d(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_HEALTH
	static auto nh_0xb22ecefd = rage::scrEngine::GetNativeHandler(0xb22ecefd);
	rage::scrEngine::RegisterNativeHandler(0xb22ecefd, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb22ecefd(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_IS_POWERED
	static auto nh_0xbd5291a0 = rage::scrEngine::GetNativeHandler(0xbd5291a0);
	rage::scrEngine::RegisterNativeHandler(0xbd5291a0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xbd5291a0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_POWER
	static auto nh_0xc6146043 = rage::scrEngine::GetNativeHandler(0xc6146043);
	rage::scrEngine::RegisterNativeHandler(0xc6146043, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xc6146043(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_RIM_COLLIDER_SIZE
	static auto nh_0xf380e184 = rage::scrEngine::GetNativeHandler(0xf380e184);
	rage::scrEngine::RegisterNativeHandler(0xf380e184, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xf380e184(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_ROTATION_SPEED
	static auto nh_0x35ed100d = rage::scrEngine::GetNativeHandler(0x35ed100d);
	rage::scrEngine::RegisterNativeHandler(0x35ed100d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35ed100d(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_SIZE (result cleaner only)
	AddResultCleaner(0x53ab5c35, ResultCleaner<bool>);

	// CFX/SET_VEHICLE_WHEEL_TIRE_COLLIDER_SIZE
	static auto nh_0xb962d05c = rage::scrEngine::GetNativeHandler(0xb962d05c);
	rage::scrEngine::RegisterNativeHandler(0xb962d05c, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb962d05c(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_TIRE_COLLIDER_WIDTH
	static auto nh_0x47bd0270 = rage::scrEngine::GetNativeHandler(0x47bd0270);
	rage::scrEngine::RegisterNativeHandler(0x47bd0270, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x47bd0270(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_TRACTION_VECTOR_LENGTH
	static auto nh_0x85c85a3a = rage::scrEngine::GetNativeHandler(0x85c85a3a);
	rage::scrEngine::RegisterNativeHandler(0x85c85a3a, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x85c85a3a(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_WHEEL_TYPE
	static auto nh_0x487EB21CC7295BA1 = rage::scrEngine::GetNativeHandler(0x487EB21CC7295BA1);
	rage::scrEngine::RegisterNativeHandler(0x487EB21CC7295BA1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x487EB21CC7295BA1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_WIDTH (result cleaner only)
	AddResultCleaner(0x64c3f1c0, ResultCleaner<bool>);

	// CFX/SET_VEHICLE_WHEEL_X_OFFSET
	static auto nh_0xbd6357d = rage::scrEngine::GetNativeHandler(0xbd6357d);
	rage::scrEngine::RegisterNativeHandler(0xbd6357d, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xbd6357d(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_WHEEL_Y_ROTATION
	static auto nh_0xc6c2171f = rage::scrEngine::GetNativeHandler(0xc6c2171f);
	rage::scrEngine::RegisterNativeHandler(0xc6c2171f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xc6c2171f(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SET_VEHICLE_WINDOW_TINT
	static auto nh_0x57C51E6BAD752696 = rage::scrEngine::GetNativeHandler(0x57C51E6BAD752696);
	rage::scrEngine::RegisterNativeHandler(0x57C51E6BAD752696, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x57C51E6BAD752696(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR
	static auto nh_0x1683e7f0 = rage::scrEngine::GetNativeHandler(0x1683e7f0);
	rage::scrEngine::RegisterNativeHandler(0x1683e7f0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1683e7f0(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SET_VEH_RADIO_STATION
	static auto nh_0x1B9C0099CB942AC6 = rage::scrEngine::GetNativeHandler(0x1B9C0099CB942AC6);
	rage::scrEngine::RegisterNativeHandler(0x1B9C0099CB942AC6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1B9C0099CB942AC6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_VISUAL_SETTING_FLOAT
	static auto nh_0xd1d31681 = rage::scrEngine::GetNativeHandler(0xd1d31681);
	rage::scrEngine::RegisterNativeHandler(0xd1d31681, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xd1d31681(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_WANTED_LEVEL_DIFFICULTY
	static auto nh_0x9B0BB33B04405E7A = rage::scrEngine::GetNativeHandler(0x9B0BB33B04405E7A);
	rage::scrEngine::RegisterNativeHandler(0x9B0BB33B04405E7A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B0BB33B04405E7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SET_WANTED_LEVEL_MULTIPLIER
	static auto nh_0x020E5F00CDA207BA = rage::scrEngine::GetNativeHandler(0x020E5F00CDA207BA);
	rage::scrEngine::RegisterNativeHandler(0x020E5F00CDA207BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x020E5F00CDA207BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_WARNING_MESSAGE
	static auto nh_0x7B1776B3B53F8D74 = rage::scrEngine::GetNativeHandler(0x7B1776B3B53F8D74);
	rage::scrEngine::RegisterNativeHandler(0x7B1776B3B53F8D74, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x7B1776B3B53F8D74(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_WARNING_MESSAGE_WITH_HEADER
	static auto nh_0xDC38CC1E35B6A5D7 = rage::scrEngine::GetNativeHandler(0xDC38CC1E35B6A5D7);
	rage::scrEngine::RegisterNativeHandler(0xDC38CC1E35B6A5D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		NullifyAny(cxt->GetArgument<void*>(7)); // Any* p7
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0xDC38CC1E35B6A5D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS
	static auto nh_0x701919482C74B5AB = rage::scrEngine::GetNativeHandler(0x701919482C74B5AB);
	rage::scrEngine::RegisterNativeHandler(0x701919482C74B5AB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		NullifyAny(cxt->GetArgument<void*>(7)); // Any* p7
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		NullifyAny(cxt->GetArgument<void*>(8)); // Any* p8
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x701919482C74B5AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WATER_AREA_CLIP_RECT
	static auto nh_0x9fcd2ee6 = rage::scrEngine::GetNativeHandler(0x9fcd2ee6);
	rage::scrEngine::RegisterNativeHandler(0x9fcd2ee6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9fcd2ee6(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WATER_QUAD_ALPHA (result cleaner only)
	AddResultCleaner(0xf49797eb, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_BOUNDS (result cleaner only)
	AddResultCleaner(0x80ad144c, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_HAS_LIMITED_DEPTH (result cleaner only)
	AddResultCleaner(0xd1fdcfc1, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_IS_INVISIBLE (result cleaner only)
	AddResultCleaner(0xa387d917, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_LEVEL (result cleaner only)
	AddResultCleaner(0x6292f7a8, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_NO_STENCIL (result cleaner only)
	AddResultCleaner(0xc3ff42ff, ResultCleaner<bool>);

	// CFX/SET_WATER_QUAD_TYPE (result cleaner only)
	AddResultCleaner(0x50131eb2, ResultCleaner<bool>);

	// CFX/SET_WAVE_QUAD_AMPLITUDE (result cleaner only)
	AddResultCleaner(0xe4174b7b, ResultCleaner<bool>);

	// CFX/SET_WAVE_QUAD_BOUNDS (result cleaner only)
	AddResultCleaner(0x1fcc1faf, ResultCleaner<bool>);

	// CFX/SET_WAVE_QUAD_DIRECTION (result cleaner only)
	AddResultCleaner(0xfc9341a3, ResultCleaner<bool>);

	// HUD/SET_WAYPOINT_OFF
	static auto nh_0xA7E4E2D361C2627F = rage::scrEngine::GetNativeHandler(0xA7E4E2D361C2627F);
	rage::scrEngine::RegisterNativeHandler(0xA7E4E2D361C2627F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7E4E2D361C2627F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WEAPONS_NO_AIM_BLOCKING
	static auto nh_0xdfd8f6de = rage::scrEngine::GetNativeHandler(0xdfd8f6de);
	rage::scrEngine::RegisterNativeHandler(0xdfd8f6de, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xdfd8f6de(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WEAPONS_NO_AUTORELOAD
	static auto nh_0x311150e5 = rage::scrEngine::GetNativeHandler(0x311150e5);
	rage::scrEngine::RegisterNativeHandler(0x311150e5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x311150e5(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WEAPONS_NO_AUTOSWAP
	static auto nh_0x2a7b50e = rage::scrEngine::GetNativeHandler(0x2a7b50e);
	rage::scrEngine::RegisterNativeHandler(0x2a7b50e, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2a7b50e(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_WEAPON_ANIMATION_OVERRIDE
	static auto nh_0x1055AC3A667F09D9 = rage::scrEngine::GetNativeHandler(0x1055AC3A667F09D9);
	rage::scrEngine::RegisterNativeHandler(0x1055AC3A667F09D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1055AC3A667F09D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/SET_WEAPON_OBJECT_TINT_INDEX
	static auto nh_0xF827589017D4E4A9 = rage::scrEngine::GetNativeHandler(0xF827589017D4E4A9);
	rage::scrEngine::RegisterNativeHandler(0xF827589017D4E4A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF827589017D4E4A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WEAPON_RECOIL_SHAKE_AMPLITUDE
	static auto nh_0x9864312f = rage::scrEngine::GetNativeHandler(0x9864312f);
	rage::scrEngine::RegisterNativeHandler(0x9864312f, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9864312f(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SET_WEATHER_CYCLE_ENTRY
	static auto nh_0xd264d4e1 = rage::scrEngine::GetNativeHandler(0xd264d4e1);
	rage::scrEngine::RegisterNativeHandler(0xd264d4e1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xd264d4e1(cxt);
	});
	        
	AddResultCleaner(0xd264d4e1, ResultCleaner<bool>);

	// CFX/SET_WEATHER_OWNED_BY_NETWORK
	static auto nh_0x2703d582 = rage::scrEngine::GetNativeHandler(0x2703d582);
	rage::scrEngine::RegisterNativeHandler(0x2703d582, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2703d582(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WEATHER_TYPE_NOW
	static auto nh_0x29B487C359E19889 = rage::scrEngine::GetNativeHandler(0x29B487C359E19889);
	rage::scrEngine::RegisterNativeHandler(0x29B487C359E19889, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x29B487C359E19889(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WEATHER_TYPE_NOW_PERSIST
	static auto nh_0xED712CA327900C8A = rage::scrEngine::GetNativeHandler(0xED712CA327900C8A);
	rage::scrEngine::RegisterNativeHandler(0xED712CA327900C8A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xED712CA327900C8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WEATHER_TYPE_OVERTIME_PERSIST
	static auto nh_0xFB5045B7C42B75BF = rage::scrEngine::GetNativeHandler(0xFB5045B7C42B75BF);
	rage::scrEngine::RegisterNativeHandler(0xFB5045B7C42B75BF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFB5045B7C42B75BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WEATHER_TYPE_PERSIST
	static auto nh_0x704983DF373B198F = rage::scrEngine::GetNativeHandler(0x704983DF373B198F);
	rage::scrEngine::RegisterNativeHandler(0x704983DF373B198F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x704983DF373B198F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SET_WIDESCREEN_BORDERS
	static auto nh_0xDCD4EA924F42D01A = rage::scrEngine::GetNativeHandler(0xDCD4EA924F42D01A);
	rage::scrEngine::RegisterNativeHandler(0xDCD4EA924F42D01A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDCD4EA924F42D01A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SET_WIDESCREEN_FORMAT
	static auto nh_0xC3B07BA00A83B0F1 = rage::scrEngine::GetNativeHandler(0xC3B07BA00A83B0F1);
	rage::scrEngine::RegisterNativeHandler(0xC3B07BA00A83B0F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC3B07BA00A83B0F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WIND
	static auto nh_0xAC3A74E8384A9919 = rage::scrEngine::GetNativeHandler(0xAC3A74E8384A9919);
	rage::scrEngine::RegisterNativeHandler(0xAC3A74E8384A9919, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC3A74E8384A9919(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WIND_DIRECTION
	static auto nh_0xEB0F4468467B4528 = rage::scrEngine::GetNativeHandler(0xEB0F4468467B4528);
	rage::scrEngine::RegisterNativeHandler(0xEB0F4468467B4528, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB0F4468467B4528(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SET_WIND_SPEED
	static auto nh_0xEE09ECEDBABE47FC = rage::scrEngine::GetNativeHandler(0xEE09ECEDBABE47FC);
	rage::scrEngine::RegisterNativeHandler(0xEE09ECEDBABE47FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE09ECEDBABE47FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// ZONE/SET_ZONE_ENABLED
	static auto nh_0xBA5ECEEA120E5611 = rage::scrEngine::GetNativeHandler(0xBA5ECEEA120E5611);
	rage::scrEngine::RegisterNativeHandler(0xBA5ECEEA120E5611, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA5ECEEA120E5611(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SHAKE_CAM
	static auto nh_0x6A25241C340D3822 = rage::scrEngine::GetNativeHandler(0x6A25241C340D3822);
	rage::scrEngine::RegisterNativeHandler(0x6A25241C340D3822, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6A25241C340D3822(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SHAKE_CINEMATIC_CAM
	static auto nh_0xDCE214D9ED58F3CF = rage::scrEngine::GetNativeHandler(0xDCE214D9ED58F3CF);
	rage::scrEngine::RegisterNativeHandler(0xDCE214D9ED58F3CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDCE214D9ED58F3CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SHAKE_GAMEPLAY_CAM
	static auto nh_0xFD55E49555E017CF = rage::scrEngine::GetNativeHandler(0xFD55E49555E017CF);
	rage::scrEngine::RegisterNativeHandler(0xFD55E49555E017CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFD55E49555E017CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/SHAKE_SCRIPT_GLOBAL
	static auto nh_0xF4C8CF9E353AFECA = rage::scrEngine::GetNativeHandler(0xF4C8CF9E353AFECA);
	rage::scrEngine::RegisterNativeHandler(0xF4C8CF9E353AFECA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF4C8CF9E353AFECA(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/SHIFT_LEFT (result cleaner only)
	AddResultCleaner(0xEDD95A39E5544DE8, ResultCleaner<int>);

	// SYSTEM/SHIFT_RIGHT (result cleaner only)
	AddResultCleaner(0x97EF1E5BCE9DC075, ResultCleaner<int>);

	// MISC/SHOOT_SINGLE_BULLET_BETWEEN_COORDS
	static auto nh_0x867654CBC7606F2C = rage::scrEngine::GetNativeHandler(0x867654CBC7606F2C);
	rage::scrEngine::RegisterNativeHandler(0x867654CBC7606F2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x867654CBC7606F2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY
	static auto nh_0xE3A7742E0B7A2F8B = rage::scrEngine::GetNativeHandler(0xE3A7742E0B7A2F8B);
	rage::scrEngine::RegisterNativeHandler(0xE3A7742E0B7A2F8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3A7742E0B7A2F8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW
	static auto nh_0xBFE5756E7407064A = rage::scrEngine::GetNativeHandler(0xBFE5756E7407064A);
	rage::scrEngine::RegisterNativeHandler(0xBFE5756E7407064A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBFE5756E7407064A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SHOULD_USE_METRIC_MEASUREMENTS (result cleaner only)
	AddResultCleaner(0xD3D15555431AB793, ResultCleaner<bool>);

	// HUD/SHOW_CREW_INDICATOR_ON_BLIP
	static auto nh_0xDCFB5D4DB8BF367E = rage::scrEngine::GetNativeHandler(0xDCFB5D4DB8BF367E);
	rage::scrEngine::RegisterNativeHandler(0xDCFB5D4DB8BF367E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDCFB5D4DB8BF367E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_FRIEND_INDICATOR_ON_BLIP
	static auto nh_0x23C3EB807312F01A = rage::scrEngine::GetNativeHandler(0x23C3EB807312F01A);
	rage::scrEngine::RegisterNativeHandler(0x23C3EB807312F01A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23C3EB807312F01A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_HEADING_INDICATOR_ON_BLIP
	static auto nh_0x5FBCA48327B914DF = rage::scrEngine::GetNativeHandler(0x5FBCA48327B914DF);
	rage::scrEngine::RegisterNativeHandler(0x5FBCA48327B914DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FBCA48327B914DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_HEIGHT_ON_BLIP
	static auto nh_0x75A16C3DA34F1245 = rage::scrEngine::GetNativeHandler(0x75A16C3DA34F1245);
	rage::scrEngine::RegisterNativeHandler(0x75A16C3DA34F1245, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75A16C3DA34F1245(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_HUD_COMPONENT_THIS_FRAME
	static auto nh_0x0B4DF1FA60C0E664 = rage::scrEngine::GetNativeHandler(0x0B4DF1FA60C0E664);
	rage::scrEngine::RegisterNativeHandler(0x0B4DF1FA60C0E664, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0B4DF1FA60C0E664(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_NUMBER_ON_BLIP
	static auto nh_0xA3C0B359DCB848B6 = rage::scrEngine::GetNativeHandler(0xA3C0B359DCB848B6);
	rage::scrEngine::RegisterNativeHandler(0xA3C0B359DCB848B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA3C0B359DCB848B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_OUTLINE_INDICATOR_ON_BLIP
	static auto nh_0xB81656BC81FE24D1 = rage::scrEngine::GetNativeHandler(0xB81656BC81FE24D1);
	rage::scrEngine::RegisterNativeHandler(0xB81656BC81FE24D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB81656BC81FE24D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_START_MISSION_INSTRUCTIONAL_BUTTON
	static auto nh_0xF1A6C18B35BCADE6 = rage::scrEngine::GetNativeHandler(0xF1A6C18B35BCADE6);
	rage::scrEngine::RegisterNativeHandler(0xF1A6C18B35BCADE6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1A6C18B35BCADE6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SHOW_TICK_ON_BLIP
	static auto nh_0x74513EA3E505181E = rage::scrEngine::GetNativeHandler(0x74513EA3E505181E);
	rage::scrEngine::RegisterNativeHandler(0x74513EA3E505181E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74513EA3E505181E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME
	static auto nh_0x593850C16A36B692 = rage::scrEngine::GetNativeHandler(0x593850C16A36B692);
	rage::scrEngine::RegisterNativeHandler(0x593850C16A36B692, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x593850C16A36B692(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SHUTDOWN_CREATOR_BUDGET
	static auto nh_0xCCE26000E9A6FAD7 = rage::scrEngine::GetNativeHandler(0xCCE26000E9A6FAD7);
	rage::scrEngine::RegisterNativeHandler(0xCCE26000E9A6FAD7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCCE26000E9A6FAD7(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/SHUTDOWN_LOADING_SCREEN
	static auto nh_0x078EBE9809CCD637 = rage::scrEngine::GetNativeHandler(0x078EBE9809CCD637);
	rage::scrEngine::RegisterNativeHandler(0x078EBE9809CCD637, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x078EBE9809CCD637(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/SHUTDOWN_LOADING_SCREEN_NUI
	static auto nh_0xb9234afb = rage::scrEngine::GetNativeHandler(0xb9234afb);
	rage::scrEngine::RegisterNativeHandler(0xb9234afb, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xb9234afb(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SIMULATE_PLAYER_INPUT_GAIT
	static auto nh_0x477D5D63E63ECA5D = rage::scrEngine::GetNativeHandler(0x477D5D63E63ECA5D);
	rage::scrEngine::RegisterNativeHandler(0x477D5D63E63ECA5D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x477D5D63E63ECA5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/SIN (result cleaner only)
	AddResultCleaner(0x0BADBFA3B172435F, ResultCleaner<float>);

	// AUDIO/SKIP_RADIO_FORWARD
	static auto nh_0x6DDBBDD98E2E9C25 = rage::scrEngine::GetNativeHandler(0x6DDBBDD98E2E9C25);
	rage::scrEngine::RegisterNativeHandler(0x6DDBBDD98E2E9C25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6DDBBDD98E2E9C25(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0x9438F7AD68771A20 = rage::scrEngine::GetNativeHandler(0x9438F7AD68771A20);
	rage::scrEngine::RegisterNativeHandler(0x9438F7AD68771A20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9438F7AD68771A20(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0xAB8E2EDA0C0A5883 = rage::scrEngine::GetNativeHandler(0xAB8E2EDA0C0A5883);
	rage::scrEngine::RegisterNativeHandler(0xAB8E2EDA0C0A5883, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAB8E2EDA0C0A5883(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE
	static auto nh_0x9663FE6B7A61EB00 = rage::scrEngine::GetNativeHandler(0x9663FE6B7A61EB00);
	rage::scrEngine::RegisterNativeHandler(0x9663FE6B7A61EB00, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9663FE6B7A61EB00(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SLERP_NEAR_QUATERNION
	static auto nh_0xF2F6A2FA49278625 = rage::scrEngine::GetNativeHandler(0xF2F6A2FA49278625);
	rage::scrEngine::RegisterNativeHandler(0xF2F6A2FA49278625, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		nh_0xF2F6A2FA49278625(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/SLIDE_OBJECT (result cleaner only)
	AddResultCleaner(0x2FDFF4107B8C1147, ResultCleaner<bool>);

	// VEHICLE/SMASH_VEHICLE_WINDOW
	static auto nh_0x9E5B5E4D2CCD2259 = rage::scrEngine::GetNativeHandler(0x9E5B5E4D2CCD2259);
	rage::scrEngine::RegisterNativeHandler(0x9E5B5E4D2CCD2259, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9E5B5E4D2CCD2259(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SPAWNPOINTS_CANCEL_SEARCH
	static auto nh_0xFEE4A5459472A9F8 = rage::scrEngine::GetNativeHandler(0xFEE4A5459472A9F8);
	rage::scrEngine::RegisterNativeHandler(0xFEE4A5459472A9F8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFEE4A5459472A9F8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SPAWNPOINTS_GET_NUM_SEARCH_RESULTS (result cleaner only)
	AddResultCleaner(0xA635C11B8C44AFC2, ResultCleaner<int>);

	// PED/SPAWNPOINTS_GET_SEARCH_RESULT
	static auto nh_0x280C7E3AC7F56E90 = rage::scrEngine::GetNativeHandler(0x280C7E3AC7F56E90);
	rage::scrEngine::RegisterNativeHandler(0x280C7E3AC7F56E90, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x280C7E3AC7F56E90(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS
	static auto nh_0xB782F8238512BAD5 = rage::scrEngine::GetNativeHandler(0xB782F8238512BAD5);
	rage::scrEngine::RegisterNativeHandler(0xB782F8238512BAD5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB782F8238512BAD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SPAWNPOINTS_IS_SEARCH_ACTIVE (result cleaner only)
	AddResultCleaner(0x3C67506996001F5E, ResultCleaner<bool>);

	// PED/SPAWNPOINTS_IS_SEARCH_COMPLETE (result cleaner only)
	AddResultCleaner(0xA586FBEB32A53DBB, ResultCleaner<bool>);

	// PED/SPAWNPOINTS_IS_SEARCH_FAILED (result cleaner only)
	AddResultCleaner(0xF445DE8DA80A1792, ResultCleaner<bool>);

	// PED/SPAWNPOINTS_START_SEARCH
	static auto nh_0x2DF9038C90AD5264 = rage::scrEngine::GetNativeHandler(0x2DF9038C90AD5264);
	rage::scrEngine::RegisterNativeHandler(0x2DF9038C90AD5264, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2DF9038C90AD5264(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA
	static auto nh_0xB2AFF10216DEFA2F = rage::scrEngine::GetNativeHandler(0xB2AFF10216DEFA2F);
	rage::scrEngine::RegisterNativeHandler(0xB2AFF10216DEFA2F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB2AFF10216DEFA2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_ABSOLUTE
	static auto nh_0xB7B0870EB531D08D = rage::scrEngine::GetNativeHandler(0xB7B0870EB531D08D);
	rage::scrEngine::RegisterNativeHandler(0xB7B0870EB531D08D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB7B0870EB531D08D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_CONTINUOUS
	static auto nh_0xED481732DFF7E997 = rage::scrEngine::GetNativeHandler(0xED481732DFF7E997);
	rage::scrEngine::RegisterNativeHandler(0xED481732DFF7E997, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED481732DFF7E997(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_LARGE
	static auto nh_0xF733F45FA4497D93 = rage::scrEngine::GetNativeHandler(0xF733F45FA4497D93);
	rage::scrEngine::RegisterNativeHandler(0xF733F45FA4497D93, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF733F45FA4497D93(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_MEDIUM
	static auto nh_0xF113E3AA9BC54613 = rage::scrEngine::GetNativeHandler(0xF113E3AA9BC54613);
	rage::scrEngine::RegisterNativeHandler(0xF113E3AA9BC54613, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF113E3AA9BC54613(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_NORMALIZED
	static auto nh_0xA0696A65F009EE18 = rage::scrEngine::GetNativeHandler(0xA0696A65F009EE18);
	rage::scrEngine::RegisterNativeHandler(0xA0696A65F009EE18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA0696A65F009EE18(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED
	static auto nh_0xC9A763D8FE87436A = rage::scrEngine::GetNativeHandler(0xC9A763D8FE87436A);
	rage::scrEngine::RegisterNativeHandler(0xC9A763D8FE87436A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC9A763D8FE87436A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_CHARGE_SMALL
	static auto nh_0x2E7B9B683481687D = rage::scrEngine::GetNativeHandler(0x2E7B9B683481687D);
	rage::scrEngine::RegisterNativeHandler(0x2E7B9B683481687D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2E7B9B683481687D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_DEACTIVATE
	static auto nh_0xD6A953C6D1492057 = rage::scrEngine::GetNativeHandler(0xD6A953C6D1492057);
	rage::scrEngine::RegisterNativeHandler(0xD6A953C6D1492057, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD6A953C6D1492057(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_DEACTIVATE_FAST
	static auto nh_0x9CB5CE07A3968D5A = rage::scrEngine::GetNativeHandler(0x9CB5CE07A3968D5A);
	rage::scrEngine::RegisterNativeHandler(0x9CB5CE07A3968D5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9CB5CE07A3968D5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_DEPLETE_METER
	static auto nh_0x1D506DBBBC51E64B = rage::scrEngine::GetNativeHandler(0x1D506DBBBC51E64B);
	rage::scrEngine::RegisterNativeHandler(0x1D506DBBBC51E64B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1D506DBBBC51E64B(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_FILL_METER
	static auto nh_0x3DACA8DDC6FD4980 = rage::scrEngine::GetNativeHandler(0x3DACA8DDC6FD4980);
	rage::scrEngine::RegisterNativeHandler(0x3DACA8DDC6FD4980, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3DACA8DDC6FD4980(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_LOCK
	static auto nh_0x6A09D0D590A47D13 = rage::scrEngine::GetNativeHandler(0x6A09D0D590A47D13);
	rage::scrEngine::RegisterNativeHandler(0x6A09D0D590A47D13, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A09D0D590A47D13(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_RESET
	static auto nh_0x375F0E738F861A94 = rage::scrEngine::GetNativeHandler(0x375F0E738F861A94);
	rage::scrEngine::RegisterNativeHandler(0x375F0E738F861A94, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x375F0E738F861A94(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SPECIAL_ABILITY_UNLOCK
	static auto nh_0xF145F3BE2EFA9A3B = rage::scrEngine::GetNativeHandler(0xF145F3BE2EFA9A3B);
	rage::scrEngine::RegisterNativeHandler(0xF145F3BE2EFA9A3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF145F3BE2EFA9A3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/SQRT (result cleaner only)
	AddResultCleaner(0x71D93B57D07F9804, ResultCleaner<float>);

	// VEHICLE/STABILISE_ENTITY_ATTACHED_TO_HELI
	static auto nh_0x374706271354CB18 = rage::scrEngine::GetNativeHandler(0x374706271354CB18);
	rage::scrEngine::RegisterNativeHandler(0x374706271354CB18, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x374706271354CB18(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/START_ALARM
	static auto nh_0x0355EF116C4C97B2 = rage::scrEngine::GetNativeHandler(0x0355EF116C4C97B2);
	rage::scrEngine::RegisterNativeHandler(0x0355EF116C4C97B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0355EF116C4C97B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/START_AUDIO_SCENE
	static auto nh_0x013A80FC08F6E4F2 = rage::scrEngine::GetNativeHandler(0x013A80FC08F6E4F2);
	rage::scrEngine::RegisterNativeHandler(0x013A80FC08F6E4F2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x013A80FC08F6E4F2(cxt);
	});
	        
	AddResultCleaner(0x013A80FC08F6E4F2, ResultCleaner<bool>);

	// CUTSCENE/START_CUTSCENE
	static auto nh_0x186D5CB5E7B0FF7B = rage::scrEngine::GetNativeHandler(0x186D5CB5E7B0FF7B);
	rage::scrEngine::RegisterNativeHandler(0x186D5CB5E7B0FF7B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x186D5CB5E7B0FF7B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/START_CUTSCENE_AT_COORDS
	static auto nh_0x1C9ADDA3244A1FBF = rage::scrEngine::GetNativeHandler(0x1C9ADDA3244A1FBF);
	rage::scrEngine::RegisterNativeHandler(0x1C9ADDA3244A1FBF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C9ADDA3244A1FBF(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/START_ENTITY_FIRE (result cleaner only)
	AddResultCleaner(0xF6A9D9708F6F23DF, ResultCleaner<int>);

	// SHAPETEST/START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE (result cleaner only)
	AddResultCleaner(0x377906D8A31E5586, ResultCleaner<int>);

	// CFX/START_FIND_EXTERNAL_KVP
	static auto nh_0x8f2eecc3 = rage::scrEngine::GetNativeHandler(0x8f2eecc3);
	rage::scrEngine::RegisterNativeHandler(0x8f2eecc3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8f2eecc3(cxt);
	});
	        
	AddResultCleaner(0x8f2eecc3, ResultCleaner<int>);

	// CFX/START_FIND_KVP
	static auto nh_0xdd379006 = rage::scrEngine::GetNativeHandler(0xdd379006);
	rage::scrEngine::RegisterNativeHandler(0xdd379006, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xdd379006(cxt);
	});
	        
	AddResultCleaner(0xdd379006, ResultCleaner<int>);

	// PLAYER/START_FIRING_AMNESTY
	static auto nh_0xBF9BD71691857E48 = rage::scrEngine::GetNativeHandler(0xBF9BD71691857E48);
	rage::scrEngine::RegisterNativeHandler(0xBF9BD71691857E48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF9BD71691857E48(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/START_GPS_CUSTOM_ROUTE
	static auto nh_0xDB34E8D56FC13B08 = rage::scrEngine::GetNativeHandler(0xDB34E8D56FC13B08);
	rage::scrEngine::RegisterNativeHandler(0xDB34E8D56FC13B08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB34E8D56FC13B08(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/START_GPS_MULTI_ROUTE
	static auto nh_0x3D3D15AF7BCAAF83 = rage::scrEngine::GetNativeHandler(0x3D3D15AF7BCAAF83);
	rage::scrEngine::RegisterNativeHandler(0x3D3D15AF7BCAAF83, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3D3D15AF7BCAAF83(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY
	static auto nh_0x6F60E89A7B64EE1D = rage::scrEngine::GetNativeHandler(0x6F60E89A7B64EE1D);
	rage::scrEngine::RegisterNativeHandler(0x6F60E89A7B64EE1D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6F60E89A7B64EE1D(cxt);
	});
	        
	AddResultCleaner(0x6F60E89A7B64EE1D, ResultCleaner<int>);

	// GRAPHICS/START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
	static auto nh_0xDDE23F30CC5A0F03 = rage::scrEngine::GetNativeHandler(0xDDE23F30CC5A0F03);
	rage::scrEngine::RegisterNativeHandler(0xDDE23F30CC5A0F03, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDDE23F30CC5A0F03(cxt);
	});
	        
	AddResultCleaner(0xDDE23F30CC5A0F03, ResultCleaner<int>);

	// GRAPHICS/START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD
	static auto nh_0xF56B8137DF10135D = rage::scrEngine::GetNativeHandler(0xF56B8137DF10135D);
	rage::scrEngine::RegisterNativeHandler(0xF56B8137DF10135D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF56B8137DF10135D(cxt);
	});
	        
	AddResultCleaner(0xF56B8137DF10135D, ResultCleaner<bool>);

	// GRAPHICS/START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY
	static auto nh_0xC95EB1DB6E92113D = rage::scrEngine::GetNativeHandler(0xC95EB1DB6E92113D);
	rage::scrEngine::RegisterNativeHandler(0xC95EB1DB6E92113D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC95EB1DB6E92113D(cxt);
	});
	        
	AddResultCleaner(0xC95EB1DB6E92113D, ResultCleaner<bool>);

	// GRAPHICS/START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
	static auto nh_0xA41B6A43642AC2CF = rage::scrEngine::GetNativeHandler(0xA41B6A43642AC2CF);
	rage::scrEngine::RegisterNativeHandler(0xA41B6A43642AC2CF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA41B6A43642AC2CF(cxt);
	});
	        
	AddResultCleaner(0xA41B6A43642AC2CF, ResultCleaner<bool>);

	// SYSTEM/START_NEW_SCRIPT
	static auto nh_0xE81651AD79516E48 = rage::scrEngine::GetNativeHandler(0xE81651AD79516E48);
	rage::scrEngine::RegisterNativeHandler(0xE81651AD79516E48, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE81651AD79516E48(cxt);
	});
	        
	AddResultCleaner(0xE81651AD79516E48, ResultCleaner<int>);

	// SYSTEM/START_NEW_SCRIPT_WITH_ARGS
	static auto nh_0xB8BA7F44DF1575E1 = rage::scrEngine::GetNativeHandler(0xB8BA7F44DF1575E1);
	rage::scrEngine::RegisterNativeHandler(0xB8BA7F44DF1575E1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* args
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB8BA7F44DF1575E1(cxt);
	});
	        
	AddResultCleaner(0xB8BA7F44DF1575E1, ResultCleaner<int>);

	// SYSTEM/START_NEW_SCRIPT_WITH_NAME_HASH (result cleaner only)
	AddResultCleaner(0xEB1C67C3A5333A92, ResultCleaner<int>);

	// SYSTEM/START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS
	static auto nh_0xC4BB298BD441BE78 = rage::scrEngine::GetNativeHandler(0xC4BB298BD441BE78);
	rage::scrEngine::RegisterNativeHandler(0xC4BB298BD441BE78, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* args
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC4BB298BD441BE78(cxt);
	});
	        
	AddResultCleaner(0xC4BB298BD441BE78, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_LOOPED_AT_COORD
	static auto nh_0xE184F4F0DC5910E7 = rage::scrEngine::GetNativeHandler(0xE184F4F0DC5910E7);
	rage::scrEngine::RegisterNativeHandler(0xE184F4F0DC5910E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE184F4F0DC5910E7(cxt);
	});
	        
	AddResultCleaner(0xE184F4F0DC5910E7, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_LOOPED_ON_ENTITY
	static auto nh_0x1AE42C1660FD6517 = rage::scrEngine::GetNativeHandler(0x1AE42C1660FD6517);
	rage::scrEngine::RegisterNativeHandler(0x1AE42C1660FD6517, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1AE42C1660FD6517(cxt);
	});
	        
	AddResultCleaner(0x1AE42C1660FD6517, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
	static auto nh_0xC6EB449E33977F0B = rage::scrEngine::GetNativeHandler(0xC6EB449E33977F0B);
	rage::scrEngine::RegisterNativeHandler(0xC6EB449E33977F0B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC6EB449E33977F0B(cxt);
	});
	        
	AddResultCleaner(0xC6EB449E33977F0B, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_LOOPED_ON_PED_BONE
	static auto nh_0xF28DA9F38CD1787C = rage::scrEngine::GetNativeHandler(0xF28DA9F38CD1787C);
	rage::scrEngine::RegisterNativeHandler(0xF28DA9F38CD1787C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF28DA9F38CD1787C(cxt);
	});
	        
	AddResultCleaner(0xF28DA9F38CD1787C, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_NON_LOOPED_AT_COORD
	static auto nh_0x25129531F77B9ED3 = rage::scrEngine::GetNativeHandler(0x25129531F77B9ED3);
	rage::scrEngine::RegisterNativeHandler(0x25129531F77B9ED3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x25129531F77B9ED3(cxt);
	});
	        
	AddResultCleaner(0x25129531F77B9ED3, ResultCleaner<int>);

	// GRAPHICS/START_PARTICLE_FX_NON_LOOPED_ON_ENTITY
	static auto nh_0x0D53A3B8DA0809D2 = rage::scrEngine::GetNativeHandler(0x0D53A3B8DA0809D2);
	rage::scrEngine::RegisterNativeHandler(0x0D53A3B8DA0809D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0D53A3B8DA0809D2(cxt);
	});
	        
	AddResultCleaner(0x0D53A3B8DA0809D2, ResultCleaner<bool>);

	// GRAPHICS/START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
	static auto nh_0x0E7E72961BA18619 = rage::scrEngine::GetNativeHandler(0x0E7E72961BA18619);
	rage::scrEngine::RegisterNativeHandler(0x0E7E72961BA18619, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0E7E72961BA18619(cxt);
	});
	        
	AddResultCleaner(0x0E7E72961BA18619, ResultCleaner<bool>);

	// GRAPHICS/START_PETROL_TRAIL_DECALS
	static auto nh_0x99AC7F0D8B9C893D = rage::scrEngine::GetNativeHandler(0x99AC7F0D8B9C893D);
	rage::scrEngine::RegisterNativeHandler(0x99AC7F0D8B9C893D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x99AC7F0D8B9C893D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/START_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0x3F878F92B3A7A071 = rage::scrEngine::GetNativeHandler(0x3F878F92B3A7A071);
	rage::scrEngine::RegisterNativeHandler(0x3F878F92B3A7A071, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3F878F92B3A7A071(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/START_PLAYBACK_RECORDED_VEHICLE_USING_AI
	static auto nh_0x29DE5FA52D00428C = rage::scrEngine::GetNativeHandler(0x29DE5FA52D00428C);
	rage::scrEngine::RegisterNativeHandler(0x29DE5FA52D00428C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x29DE5FA52D00428C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS
	static auto nh_0x7D80FD645D4DA346 = rage::scrEngine::GetNativeHandler(0x7D80FD645D4DA346);
	rage::scrEngine::RegisterNativeHandler(0x7D80FD645D4DA346, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7D80FD645D4DA346(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/START_PLAYER_SWITCH
	static auto nh_0xFAA23F2CBA159D67 = rage::scrEngine::GetNativeHandler(0xFAA23F2CBA159D67);
	rage::scrEngine::RegisterNativeHandler(0xFAA23F2CBA159D67, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFAA23F2CBA159D67(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/START_PLAYER_TELEPORT
	static auto nh_0xAD15F075A4DA0FDE = rage::scrEngine::GetNativeHandler(0xAD15F075A4DA0FDE);
	rage::scrEngine::RegisterNativeHandler(0xAD15F075A4DA0FDE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAD15F075A4DA0FDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/START_PRELOADED_CONVERSATION
	static auto nh_0x23641AFE870AF385 = rage::scrEngine::GetNativeHandler(0x23641AFE870AF385);
	rage::scrEngine::RegisterNativeHandler(0x23641AFE870AF385, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23641AFE870AF385(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/START_ROPE_UNWINDING_FRONT
	static auto nh_0x538D1179EC1AA9A9 = rage::scrEngine::GetNativeHandler(0x538D1179EC1AA9A9);
	rage::scrEngine::RegisterNativeHandler(0x538D1179EC1AA9A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x538D1179EC1AA9A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/START_ROPE_WINDING
	static auto nh_0x1461C72C889E343E = rage::scrEngine::GetNativeHandler(0x1461C72C889E343E);
	rage::scrEngine::RegisterNativeHandler(0x1461C72C889E343E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1461C72C889E343E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/START_SAVE_ARRAY_WITH_SIZE
	static auto nh_0x60FE567DF1B1AF9D = rage::scrEngine::GetNativeHandler(0x60FE567DF1B1AF9D);
	rage::scrEngine::RegisterNativeHandler(0x60FE567DF1B1AF9D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x60FE567DF1B1AF9D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/START_SAVE_DATA
	static auto nh_0xA9575F812C6A7997 = rage::scrEngine::GetNativeHandler(0xA9575F812C6A7997);
	rage::scrEngine::RegisterNativeHandler(0xA9575F812C6A7997, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA9575F812C6A7997(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/START_SAVE_STRUCT_WITH_SIZE
	static auto nh_0xBF737600CDDBEADD = rage::scrEngine::GetNativeHandler(0xBF737600CDDBEADD);
	rage::scrEngine::RegisterNativeHandler(0xBF737600CDDBEADD, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBF737600CDDBEADD(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/START_SCRIPT_CONVERSATION
	static auto nh_0x6B17C62C9635D2DC = rage::scrEngine::GetNativeHandler(0x6B17C62C9635D2DC);
	rage::scrEngine::RegisterNativeHandler(0x6B17C62C9635D2DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B17C62C9635D2DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/START_SCRIPT_FIRE (result cleaner only)
	AddResultCleaner(0x6B83617E04503888, ResultCleaner<int>);

	// AUDIO/START_SCRIPT_PHONE_CONVERSATION
	static auto nh_0x252E5F915EABB675 = rage::scrEngine::GetNativeHandler(0x252E5F915EABB675);
	rage::scrEngine::RegisterNativeHandler(0x252E5F915EABB675, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x252E5F915EABB675(cxt);
		NullifyVoid(cxt);
	});
	        
	// SHAPETEST/START_SHAPE_TEST_BOUND (result cleaner only)
	AddResultCleaner(0x37181417CE7C8900, ResultCleaner<int>);

	// SHAPETEST/START_SHAPE_TEST_BOUNDING_BOX (result cleaner only)
	AddResultCleaner(0x052837721A854EC7, ResultCleaner<int>);

	// SHAPETEST/START_SHAPE_TEST_BOX (result cleaner only)
	AddResultCleaner(0xFE466162C4401D18, ResultCleaner<int>);

	// SHAPETEST/START_SHAPE_TEST_CAPSULE (result cleaner only)
	AddResultCleaner(0x28579D1B8F8AAC80, ResultCleaner<int>);

	// SHAPETEST/START_SHAPE_TEST_LOS_PROBE (result cleaner only)
	AddResultCleaner(0x7EE9F5D83DD4F90E, ResultCleaner<int>);

	// SHAPETEST/START_SHAPE_TEST_SWEPT_SPHERE (result cleaner only)
	AddResultCleaner(0xE6AC6C45FBE83004, ResultCleaner<int>);

	// VEHICLE/START_VEHICLE_ALARM
	static auto nh_0xB8FF7AB45305C345 = rage::scrEngine::GetNativeHandler(0xB8FF7AB45305C345);
	rage::scrEngine::RegisterNativeHandler(0xB8FF7AB45305C345, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8FF7AB45305C345(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/START_VEHICLE_HORN
	static auto nh_0x9C8C6504B5B63D2C = rage::scrEngine::GetNativeHandler(0x9C8C6504B5B63D2C);
	rage::scrEngine::RegisterNativeHandler(0x9C8C6504B5B63D2C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C8C6504B5B63D2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/STATE_BAG_HAS_KEY
	static auto nh_0x12a330 = rage::scrEngine::GetNativeHandler(0x12a330);
	rage::scrEngine::RegisterNativeHandler(0x12a330, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x12a330(cxt);
	});
	        
	AddResultCleaner(0x12a330, ResultCleaner<bool>);

	// STATS/STAT_CLEAR_SLOT_FOR_RELOAD (result cleaner only)
	AddResultCleaner(0xEB0A72181D4AA4AD, ResultCleaner<int>);

	// STATS/STAT_DELETE_SLOT
	static auto nh_0x49A49BED12794D70 = rage::scrEngine::GetNativeHandler(0x49A49BED12794D70);
	rage::scrEngine::RegisterNativeHandler(0x49A49BED12794D70, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x49A49BED12794D70(cxt);
	});
	        
	AddResultCleaner(0x49A49BED12794D70, ResultCleaner<int>);

	// STATS/STAT_GET_BOOL
	static auto nh_0x11B5E6D2AE73F48E = rage::scrEngine::GetNativeHandler(0x11B5E6D2AE73F48E);
	rage::scrEngine::RegisterNativeHandler(0x11B5E6D2AE73F48E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x11B5E6D2AE73F48E(cxt);
	});
	        
	AddResultCleaner(0x11B5E6D2AE73F48E, ResultCleaner<bool>);

	// STATS/STAT_GET_BOOL_MASKED (result cleaner only)
	AddResultCleaner(0x10FE3F1B79F9B071, ResultCleaner<bool>);

	// STATS/STAT_GET_DATE
	static auto nh_0x8B0FACEFC36C824B = rage::scrEngine::GetNativeHandler(0x8B0FACEFC36C824B);
	rage::scrEngine::RegisterNativeHandler(0x8B0FACEFC36C824B, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8B0FACEFC36C824B(cxt);
	});
	        
	AddResultCleaner(0x8B0FACEFC36C824B, ResultCleaner<bool>);

	// STATS/STAT_GET_FLOAT
	static auto nh_0xD7AE6C9C9C6AC54C = rage::scrEngine::GetNativeHandler(0xD7AE6C9C9C6AC54C);
	rage::scrEngine::RegisterNativeHandler(0xD7AE6C9C9C6AC54C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD7AE6C9C9C6AC54C(cxt);
	});
	        
	AddResultCleaner(0xD7AE6C9C9C6AC54C, ResultCleaner<bool>);

	// STATS/STAT_GET_INT
	static auto nh_0x767FBC2AC802EF3D = rage::scrEngine::GetNativeHandler(0x767FBC2AC802EF3D);
	rage::scrEngine::RegisterNativeHandler(0x767FBC2AC802EF3D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x767FBC2AC802EF3D(cxt);
	});
	        
	AddResultCleaner(0x767FBC2AC802EF3D, ResultCleaner<bool>);

	// STATS/STAT_GET_LICENSE_PLATE (result cleaner only)
	AddResultCleaner(0x5473D4195058B2E4, ResultCleaner<char*>);

	// STATS/STAT_GET_MASKED_INT
	static auto nh_0x655185A06D9EEAAB = rage::scrEngine::GetNativeHandler(0x655185A06D9EEAAB);
	rage::scrEngine::RegisterNativeHandler(0x655185A06D9EEAAB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x655185A06D9EEAAB(cxt);
	});
	        
	AddResultCleaner(0x655185A06D9EEAAB, ResultCleaner<bool>);

	// STATS/STAT_GET_NUMBER_OF_DAYS (result cleaner only)
	AddResultCleaner(0xE0E854F5280FB769, ResultCleaner<int>);

	// STATS/STAT_GET_NUMBER_OF_HOURS (result cleaner only)
	AddResultCleaner(0xF2D4B2FE415AAFC3, ResultCleaner<int>);

	// STATS/STAT_GET_NUMBER_OF_MINUTES (result cleaner only)
	AddResultCleaner(0x7583B4BE4C5A41B5, ResultCleaner<int>);

	// STATS/STAT_GET_NUMBER_OF_SECONDS (result cleaner only)
	AddResultCleaner(0x2CE056FF3723F00B, ResultCleaner<int>);

	// STATS/STAT_GET_POS
	static auto nh_0x350F82CCB186AA1B = rage::scrEngine::GetNativeHandler(0x350F82CCB186AA1B);
	rage::scrEngine::RegisterNativeHandler(0x350F82CCB186AA1B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x350F82CCB186AA1B(cxt);
	});
	        
	AddResultCleaner(0x350F82CCB186AA1B, ResultCleaner<bool>);

	// STATS/STAT_GET_SAVE_MIGRATION_STATUS
	static auto nh_0x886913BBEACA68C1 = rage::scrEngine::GetNativeHandler(0x886913BBEACA68C1);
	rage::scrEngine::RegisterNativeHandler(0x886913BBEACA68C1, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x886913BBEACA68C1(cxt);
	});
	        
	AddResultCleaner(0x886913BBEACA68C1, ResultCleaner<int>);

	// STATS/STAT_GET_STRING (result cleaner only)
	AddResultCleaner(0xE50384ACC2C3DB74, ResultCleaner<char*>);

	// STATS/STAT_GET_USER_ID
	static auto nh_0x2365C388E393BBE2 = rage::scrEngine::GetNativeHandler(0x2365C388E393BBE2);
	rage::scrEngine::RegisterNativeHandler(0x2365C388E393BBE2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2365C388E393BBE2(cxt);
	});
	        
	AddResultCleaner(0x2365C388E393BBE2, ResultCleaner<char*>);

	// STATS/STAT_INCREMENT
	static auto nh_0x9B5A68C6489E9909 = rage::scrEngine::GetNativeHandler(0x9B5A68C6489E9909);
	rage::scrEngine::RegisterNativeHandler(0x9B5A68C6489E9909, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B5A68C6489E9909(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/STAT_LOAD (result cleaner only)
	AddResultCleaner(0xA651443F437B1CE6, ResultCleaner<bool>);

	// STATS/STAT_LOAD_PENDING
	static auto nh_0xA1750FFAFA181661 = rage::scrEngine::GetNativeHandler(0xA1750FFAFA181661);
	rage::scrEngine::RegisterNativeHandler(0xA1750FFAFA181661, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA1750FFAFA181661(cxt);
	});
	        
	AddResultCleaner(0xA1750FFAFA181661, ResultCleaner<bool>);

	// STATS/STAT_SAVE (result cleaner only)
	AddResultCleaner(0xE07BCA305B82D2FD, ResultCleaner<bool>);

	// STATS/STAT_SAVE_MIGRATION_STATUS_START (result cleaner only)
	AddResultCleaner(0xC70DDCE56D0D3A99, ResultCleaner<bool>);

	// STATS/STAT_SAVE_PENDING (result cleaner only)
	AddResultCleaner(0x7D3A583856F2C5AC, ResultCleaner<bool>);

	// STATS/STAT_SAVE_PENDING_OR_REQUESTED (result cleaner only)
	AddResultCleaner(0xBBB6AD006F1BBEA3, ResultCleaner<bool>);

	// STATS/STAT_SET_BLOCK_SAVES
	static auto nh_0xF434A10BA01C37D0 = rage::scrEngine::GetNativeHandler(0xF434A10BA01C37D0);
	rage::scrEngine::RegisterNativeHandler(0xF434A10BA01C37D0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF434A10BA01C37D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/STAT_SET_BOOL (result cleaner only)
	AddResultCleaner(0x4B33C4243DE0C432, ResultCleaner<bool>);

	// STATS/STAT_SET_BOOL_MASKED (result cleaner only)
	AddResultCleaner(0x5BC62EC1937B9E5B, ResultCleaner<bool>);

	// STATS/STAT_SET_CHEAT_IS_ACTIVE
	static auto nh_0x047CBED6F6F8B63C = rage::scrEngine::GetNativeHandler(0x047CBED6F6F8B63C);
	rage::scrEngine::RegisterNativeHandler(0x047CBED6F6F8B63C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x047CBED6F6F8B63C(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/STAT_SET_CURRENT_POSIX_TIME (result cleaner only)
	AddResultCleaner(0xC2F84B7F9C4D0C61, ResultCleaner<bool>);

	// STATS/STAT_SET_DATE
	static auto nh_0x2C29BFB64F4FCBE4 = rage::scrEngine::GetNativeHandler(0x2C29BFB64F4FCBE4);
	rage::scrEngine::RegisterNativeHandler(0x2C29BFB64F4FCBE4, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* value
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2C29BFB64F4FCBE4(cxt);
	});
	        
	AddResultCleaner(0x2C29BFB64F4FCBE4, ResultCleaner<bool>);

	// STATS/STAT_SET_FLOAT (result cleaner only)
	AddResultCleaner(0x4851997F37FE9B3C, ResultCleaner<bool>);

	// STATS/STAT_SET_GXT_LABEL
	static auto nh_0x17695002FD8B2AE0 = rage::scrEngine::GetNativeHandler(0x17695002FD8B2AE0);
	rage::scrEngine::RegisterNativeHandler(0x17695002FD8B2AE0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x17695002FD8B2AE0(cxt);
	});
	        
	AddResultCleaner(0x17695002FD8B2AE0, ResultCleaner<bool>);

	// STATS/STAT_SET_INT (result cleaner only)
	AddResultCleaner(0xB3271D7AB655B441, ResultCleaner<bool>);

	// STATS/STAT_SET_LICENSE_PLATE
	static auto nh_0x69FF13266D7296DA = rage::scrEngine::GetNativeHandler(0x69FF13266D7296DA);
	rage::scrEngine::RegisterNativeHandler(0x69FF13266D7296DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x69FF13266D7296DA(cxt);
	});
	        
	AddResultCleaner(0x69FF13266D7296DA, ResultCleaner<bool>);

	// STATS/STAT_SET_MASKED_INT
	static auto nh_0x7BBB1B54583ED410 = rage::scrEngine::GetNativeHandler(0x7BBB1B54583ED410);
	rage::scrEngine::RegisterNativeHandler(0x7BBB1B54583ED410, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7BBB1B54583ED410(cxt);
	});
	        
	AddResultCleaner(0x7BBB1B54583ED410, ResultCleaner<bool>);

	// STATS/STAT_SET_POS (result cleaner only)
	AddResultCleaner(0xDB283FDE680FE72E, ResultCleaner<bool>);

	// STATS/STAT_SET_PROFILE_SETTING_VALUE
	static auto nh_0x68F01422BE1D838F = rage::scrEngine::GetNativeHandler(0x68F01422BE1D838F);
	rage::scrEngine::RegisterNativeHandler(0x68F01422BE1D838F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x68F01422BE1D838F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/STAT_SET_STRING
	static auto nh_0xA87B2335D12531D7 = rage::scrEngine::GetNativeHandler(0xA87B2335D12531D7);
	rage::scrEngine::RegisterNativeHandler(0xA87B2335D12531D7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA87B2335D12531D7(cxt);
	});
	        
	AddResultCleaner(0xA87B2335D12531D7, ResultCleaner<bool>);

	// STATS/STAT_SET_USER_ID
	static auto nh_0x8CDDF1E452BABE11 = rage::scrEngine::GetNativeHandler(0x8CDDF1E452BABE11);
	rage::scrEngine::RegisterNativeHandler(0x8CDDF1E452BABE11, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x8CDDF1E452BABE11(cxt);
	});
	        
	AddResultCleaner(0x8CDDF1E452BABE11, ResultCleaner<bool>);

	// STATS/STAT_SLOT_IS_LOADED
	static auto nh_0x0D0A9F0E7BD91E3C = rage::scrEngine::GetNativeHandler(0x0D0A9F0E7BD91E3C);
	rage::scrEngine::RegisterNativeHandler(0x0D0A9F0E7BD91E3C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0D0A9F0E7BD91E3C(cxt);
	});
	        
	AddResultCleaner(0x0D0A9F0E7BD91E3C, ResultCleaner<bool>);

	// AUDIO/STOP_ALARM
	static auto nh_0xA1CADDCD98415A41 = rage::scrEngine::GetNativeHandler(0xA1CADDCD98415A41);
	rage::scrEngine::RegisterNativeHandler(0xA1CADDCD98415A41, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA1CADDCD98415A41(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_ALL_ALARMS
	static auto nh_0x2F794A877ADD4C92 = rage::scrEngine::GetNativeHandler(0x2F794A877ADD4C92);
	rage::scrEngine::RegisterNativeHandler(0x2F794A877ADD4C92, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F794A877ADD4C92(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/STOP_ALL_GARAGE_ACTIVITY
	static auto nh_0x0F87E938BDF29D66 = rage::scrEngine::GetNativeHandler(0x0F87E938BDF29D66);
	rage::scrEngine::RegisterNativeHandler(0x0F87E938BDF29D66, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F87E938BDF29D66(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/STOP_ANIM_PLAYBACK
	static auto nh_0xEE08C992D238C5D1 = rage::scrEngine::GetNativeHandler(0xEE08C992D238C5D1);
	rage::scrEngine::RegisterNativeHandler(0xEE08C992D238C5D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE08C992D238C5D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/STOP_ANIM_TASK
	static auto nh_0x97FF36A1D40EA00A = rage::scrEngine::GetNativeHandler(0x97FF36A1D40EA00A);
	rage::scrEngine::RegisterNativeHandler(0x97FF36A1D40EA00A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x97FF36A1D40EA00A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/STOP_ANY_PED_MODEL_BEING_SUPPRESSED
	static auto nh_0xB47BD05FA66B40CF = rage::scrEngine::GetNativeHandler(0xB47BD05FA66B40CF);
	rage::scrEngine::RegisterNativeHandler(0xB47BD05FA66B40CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB47BD05FA66B40CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_AUDIO_SCENE
	static auto nh_0xDFE8422B3B94E688 = rage::scrEngine::GetNativeHandler(0xDFE8422B3B94E688);
	rage::scrEngine::RegisterNativeHandler(0xDFE8422B3B94E688, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDFE8422B3B94E688(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_AUDIO_SCENES
	static auto nh_0xBAC7FC81A75EC1A1 = rage::scrEngine::GetNativeHandler(0xBAC7FC81A75EC1A1);
	rage::scrEngine::RegisterNativeHandler(0xBAC7FC81A75EC1A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBAC7FC81A75EC1A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_CAM_POINTING
	static auto nh_0xF33AB75780BA57DE = rage::scrEngine::GetNativeHandler(0xF33AB75780BA57DE);
	rage::scrEngine::RegisterNativeHandler(0xF33AB75780BA57DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF33AB75780BA57DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_CAM_SHAKING
	static auto nh_0xBDECF64367884AC3 = rage::scrEngine::GetNativeHandler(0xBDECF64367884AC3);
	rage::scrEngine::RegisterNativeHandler(0xBDECF64367884AC3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBDECF64367884AC3(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_CINEMATIC_CAM_SHAKING
	static auto nh_0x2238E588E588A6D7 = rage::scrEngine::GetNativeHandler(0x2238E588E588A6D7);
	rage::scrEngine::RegisterNativeHandler(0x2238E588E588A6D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2238E588E588A6D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_CINEMATIC_SHOT
	static auto nh_0x7660C6E75D3A078E = rage::scrEngine::GetNativeHandler(0x7660C6E75D3A078E);
	rage::scrEngine::RegisterNativeHandler(0x7660C6E75D3A078E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7660C6E75D3A078E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_CURRENT_PLAYING_AMBIENT_SPEECH
	static auto nh_0xB8BEC0CA6F0EDB0F = rage::scrEngine::GetNativeHandler(0xB8BEC0CA6F0EDB0F);
	rage::scrEngine::RegisterNativeHandler(0xB8BEC0CA6F0EDB0F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8BEC0CA6F0EDB0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_CURRENT_PLAYING_SPEECH
	static auto nh_0x7A73D05A607734C7 = rage::scrEngine::GetNativeHandler(0x7A73D05A607734C7);
	rage::scrEngine::RegisterNativeHandler(0x7A73D05A607734C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A73D05A607734C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/STOP_CUTSCENE
	static auto nh_0xC7272775B4DC786E = rage::scrEngine::GetNativeHandler(0xC7272775B4DC786E);
	rage::scrEngine::RegisterNativeHandler(0xC7272775B4DC786E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7272775B4DC786E(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_CUTSCENE_AUDIO
	static auto nh_0x806058BBDC136E06 = rage::scrEngine::GetNativeHandler(0x806058BBDC136E06);
	rage::scrEngine::RegisterNativeHandler(0x806058BBDC136E06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x806058BBDC136E06(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_CUTSCENE_CAM_SHAKING
	static auto nh_0xDB629FFD9285FA06 = rage::scrEngine::GetNativeHandler(0xDB629FFD9285FA06);
	rage::scrEngine::RegisterNativeHandler(0xDB629FFD9285FA06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDB629FFD9285FA06(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/STOP_CUTSCENE_IMMEDIATELY
	static auto nh_0xD220BDD222AC4A1E = rage::scrEngine::GetNativeHandler(0xD220BDD222AC4A1E);
	rage::scrEngine::RegisterNativeHandler(0xD220BDD222AC4A1E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD220BDD222AC4A1E(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/STOP_ENTITY_ANIM
	static auto nh_0x28004F88151E03E0 = rage::scrEngine::GetNativeHandler(0x28004F88151E03E0);
	rage::scrEngine::RegisterNativeHandler(0x28004F88151E03E0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x28004F88151E03E0(cxt);
	});
	        
	AddResultCleaner(0x28004F88151E03E0, ResultCleaner<int>);

	// FIRE/STOP_ENTITY_FIRE
	static auto nh_0x7F0DD2EBBB651AFF = rage::scrEngine::GetNativeHandler(0x7F0DD2EBBB651AFF);
	rage::scrEngine::RegisterNativeHandler(0x7F0DD2EBBB651AFF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F0DD2EBBB651AFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/STOP_FIRE_IN_RANGE
	static auto nh_0x056A8A219B8E829F = rage::scrEngine::GetNativeHandler(0x056A8A219B8E829F);
	rage::scrEngine::RegisterNativeHandler(0x056A8A219B8E829F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x056A8A219B8E829F(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_GAMEPLAY_CAM_SHAKING
	static auto nh_0x0EF93E9F3D08C178 = rage::scrEngine::GetNativeHandler(0x0EF93E9F3D08C178);
	rage::scrEngine::RegisterNativeHandler(0x0EF93E9F3D08C178, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0EF93E9F3D08C178(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_GAMEPLAY_HINT
	static auto nh_0xF46C581C61718916 = rage::scrEngine::GetNativeHandler(0xF46C581C61718916);
	rage::scrEngine::RegisterNativeHandler(0xF46C581C61718916, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF46C581C61718916(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/STOP_PAD_SHAKE
	static auto nh_0x38C16A305E8CDC8D = rage::scrEngine::GetNativeHandler(0x38C16A305E8CDC8D);
	rage::scrEngine::RegisterNativeHandler(0x38C16A305E8CDC8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x38C16A305E8CDC8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/STOP_PARTICLE_FX_LOOPED
	static auto nh_0x8F75998877616996 = rage::scrEngine::GetNativeHandler(0x8F75998877616996);
	rage::scrEngine::RegisterNativeHandler(0x8F75998877616996, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F75998877616996(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_PED_RINGTONE
	static auto nh_0x6C5AE23EFA885092 = rage::scrEngine::GetNativeHandler(0x6C5AE23EFA885092);
	rage::scrEngine::RegisterNativeHandler(0x6C5AE23EFA885092, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6C5AE23EFA885092(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_PED_SPEAKING
	static auto nh_0x9D64D7405520E3D3 = rage::scrEngine::GetNativeHandler(0x9D64D7405520E3D3);
	rage::scrEngine::RegisterNativeHandler(0x9D64D7405520E3D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D64D7405520E3D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_PED_SPEAKING_SYNCED
	static auto nh_0xAB6781A5F3101470 = rage::scrEngine::GetNativeHandler(0xAB6781A5F3101470);
	rage::scrEngine::RegisterNativeHandler(0xAB6781A5F3101470, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAB6781A5F3101470(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/STOP_PED_WEAPON_FIRING_WHEN_DROPPED
	static auto nh_0xC158D28142A34608 = rage::scrEngine::GetNativeHandler(0xC158D28142A34608);
	rage::scrEngine::RegisterNativeHandler(0xC158D28142A34608, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC158D28142A34608(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/STOP_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0x54833611C17ABDEA = rage::scrEngine::GetNativeHandler(0x54833611C17ABDEA);
	rage::scrEngine::RegisterNativeHandler(0x54833611C17ABDEA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x54833611C17ABDEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/STOP_PLAYER_SWITCH
	static auto nh_0x95C0A5BBDC189AA1 = rage::scrEngine::GetNativeHandler(0x95C0A5BBDC189AA1);
	rage::scrEngine::RegisterNativeHandler(0x95C0A5BBDC189AA1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95C0A5BBDC189AA1(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/STOP_PLAYER_TELEPORT
	static auto nh_0xC449EDED9D73009C = rage::scrEngine::GetNativeHandler(0xC449EDED9D73009C);
	rage::scrEngine::RegisterNativeHandler(0xC449EDED9D73009C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC449EDED9D73009C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP
	static auto nh_0xC819F3CBB62BF692 = rage::scrEngine::GetNativeHandler(0xC819F3CBB62BF692);
	rage::scrEngine::RegisterNativeHandler(0xC819F3CBB62BF692, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC819F3CBB62BF692(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/STOP_ROPE_UNWINDING_FRONT
	static auto nh_0xFFF3A50779EFBBB3 = rage::scrEngine::GetNativeHandler(0xFFF3A50779EFBBB3);
	rage::scrEngine::RegisterNativeHandler(0xFFF3A50779EFBBB3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFFF3A50779EFBBB3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/STOP_ROPE_WINDING
	static auto nh_0xCB2D4AB84A19AA7C = rage::scrEngine::GetNativeHandler(0xCB2D4AB84A19AA7C);
	rage::scrEngine::RegisterNativeHandler(0xCB2D4AB84A19AA7C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCB2D4AB84A19AA7C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/STOP_SAVE_ARRAY
	static auto nh_0x04456F95153C6BE4 = rage::scrEngine::GetNativeHandler(0x04456F95153C6BE4);
	rage::scrEngine::RegisterNativeHandler(0x04456F95153C6BE4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x04456F95153C6BE4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/STOP_SAVE_DATA
	static auto nh_0x74E20C9145FB66FD = rage::scrEngine::GetNativeHandler(0x74E20C9145FB66FD);
	rage::scrEngine::RegisterNativeHandler(0x74E20C9145FB66FD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74E20C9145FB66FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/STOP_SAVE_STRUCT
	static auto nh_0xEB1774DF12BB9F12 = rage::scrEngine::GetNativeHandler(0xEB1774DF12BB9F12);
	rage::scrEngine::RegisterNativeHandler(0xEB1774DF12BB9F12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB1774DF12BB9F12(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_SCRIPTED_CONVERSATION (result cleaner only)
	AddResultCleaner(0xD79DEEFB53455EBA, ResultCleaner<int>);

	// CAM/STOP_SCRIPT_GLOBAL_SHAKING
	static auto nh_0x1C9D7949FA533490 = rage::scrEngine::GetNativeHandler(0x1C9D7949FA533490);
	rage::scrEngine::RegisterNativeHandler(0x1C9D7949FA533490, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C9D7949FA533490(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS
	static auto nh_0xE4E6DD5566D28C82 = rage::scrEngine::GetNativeHandler(0xE4E6DD5566D28C82);
	rage::scrEngine::RegisterNativeHandler(0xE4E6DD5566D28C82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE4E6DD5566D28C82(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_SOUND
	static auto nh_0xA3B0C41BA5CC0BB5 = rage::scrEngine::GetNativeHandler(0xA3B0C41BA5CC0BB5);
	rage::scrEngine::RegisterNativeHandler(0xA3B0C41BA5CC0BB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA3B0C41BA5CC0BB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_STREAM
	static auto nh_0xA4718A1419D18151 = rage::scrEngine::GetNativeHandler(0xA4718A1419D18151);
	rage::scrEngine::RegisterNativeHandler(0xA4718A1419D18151, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA4718A1419D18151(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/STOP_SYNCHRONIZED_AUDIO_EVENT
	static auto nh_0x92D6A88E64A94430 = rage::scrEngine::GetNativeHandler(0x92D6A88E64A94430);
	rage::scrEngine::RegisterNativeHandler(0x92D6A88E64A94430, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x92D6A88E64A94430(cxt);
	});
	        
	AddResultCleaner(0x92D6A88E64A94430, ResultCleaner<bool>);

	// ENTITY/STOP_SYNCHRONIZED_ENTITY_ANIM (result cleaner only)
	AddResultCleaner(0x43D3807C077261E3, ResultCleaner<bool>);

	// ENTITY/STOP_SYNCHRONIZED_MAP_ENTITY_ANIM
	static auto nh_0x11E79CAB7183B6F5 = rage::scrEngine::GetNativeHandler(0x11E79CAB7183B6F5);
	rage::scrEngine::RegisterNativeHandler(0x11E79CAB7183B6F5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x11E79CAB7183B6F5(cxt);
	});
	        
	AddResultCleaner(0x11E79CAB7183B6F5, ResultCleaner<bool>);

	// STREAMING/STREAMVOL_CREATE_FRUSTUM
	static auto nh_0x1F3F018BC3AFA77C = rage::scrEngine::GetNativeHandler(0x1F3F018BC3AFA77C);
	rage::scrEngine::RegisterNativeHandler(0x1F3F018BC3AFA77C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0x1F3F018BC3AFA77C(cxt);
	});
	        
	AddResultCleaner(0x1F3F018BC3AFA77C, ResultCleaner<int>);

	// STREAMING/STREAMVOL_CREATE_LINE
	static auto nh_0x0AD9710CEE2F590F = rage::scrEngine::GetNativeHandler(0x0AD9710CEE2F590F);
	rage::scrEngine::RegisterNativeHandler(0x0AD9710CEE2F590F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x0AD9710CEE2F590F(cxt);
	});
	        
	AddResultCleaner(0x0AD9710CEE2F590F, ResultCleaner<int>);

	// STREAMING/STREAMVOL_CREATE_SPHERE
	static auto nh_0x219C7B8D53E429FD = rage::scrEngine::GetNativeHandler(0x219C7B8D53E429FD);
	rage::scrEngine::RegisterNativeHandler(0x219C7B8D53E429FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x219C7B8D53E429FD(cxt);
	});
	        
	AddResultCleaner(0x219C7B8D53E429FD, ResultCleaner<int>);

	// STREAMING/STREAMVOL_DELETE
	static auto nh_0x1EE7D8DF4425F053 = rage::scrEngine::GetNativeHandler(0x1EE7D8DF4425F053);
	rage::scrEngine::RegisterNativeHandler(0x1EE7D8DF4425F053, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1EE7D8DF4425F053(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/STREAMVOL_HAS_LOADED
	static auto nh_0x7D41E9D2D17C5B2D = rage::scrEngine::GetNativeHandler(0x7D41E9D2D17C5B2D);
	rage::scrEngine::RegisterNativeHandler(0x7D41E9D2D17C5B2D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7D41E9D2D17C5B2D(cxt);
	});
	        
	AddResultCleaner(0x7D41E9D2D17C5B2D, ResultCleaner<bool>);

	// STREAMING/STREAMVOL_IS_VALID
	static auto nh_0x07C313F94746702C = rage::scrEngine::GetNativeHandler(0x07C313F94746702C);
	rage::scrEngine::RegisterNativeHandler(0x07C313F94746702C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x07C313F94746702C(cxt);
	});
	        
	AddResultCleaner(0x07C313F94746702C, ResultCleaner<bool>);

	// MISC/STRING_TO_INT
	static auto nh_0x5A5F40FE637EB584 = rage::scrEngine::GetNativeHandler(0x5A5F40FE637EB584);
	rage::scrEngine::RegisterNativeHandler(0x5A5F40FE637EB584, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5A5F40FE637EB584(cxt);
	});
	        
	AddResultCleaner(0x5A5F40FE637EB584, ResultCleaner<bool>);

	// EVENT/SUPPRESS_AGITATION_EVENTS_NEXT_FRAME
	static auto nh_0x5F3B7749C112D552 = rage::scrEngine::GetNativeHandler(0x5F3B7749C112D552);
	rage::scrEngine::RegisterNativeHandler(0x5F3B7749C112D552, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5F3B7749C112D552(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/SUPPRESS_CRIME_THIS_FRAME
	static auto nh_0x9A987297ED8BD838 = rage::scrEngine::GetNativeHandler(0x9A987297ED8BD838);
	rage::scrEngine::RegisterNativeHandler(0x9A987297ED8BD838, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A987297ED8BD838(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/SUPPRESS_FRONTEND_RENDERING_THIS_FRAME
	static auto nh_0xBA751764F0821256 = rage::scrEngine::GetNativeHandler(0xBA751764F0821256);
	rage::scrEngine::RegisterNativeHandler(0xBA751764F0821256, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA751764F0821256(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME
	static auto nh_0x2F9A292AD0A3BD89 = rage::scrEngine::GetNativeHandler(0x2F9A292AD0A3BD89);
	rage::scrEngine::RegisterNativeHandler(0x2F9A292AD0A3BD89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F9A292AD0A3BD89(cxt);
		NullifyVoid(cxt);
	});
	        
	// EVENT/SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME
	static auto nh_0x3FD2EC8BF1F1CF30 = rage::scrEngine::GetNativeHandler(0x3FD2EC8BF1F1CF30);
	rage::scrEngine::RegisterNativeHandler(0x3FD2EC8BF1F1CF30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3FD2EC8BF1F1CF30(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/SUPRESS_RANDOM_EVENT_THIS_FRAME
	static auto nh_0x1EAE0A6E978894A2 = rage::scrEngine::GetNativeHandler(0x1EAE0A6E978894A2);
	rage::scrEngine::RegisterNativeHandler(0x1EAE0A6E978894A2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1EAE0A6E978894A2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SWITCH_TO_MULTI_FIRSTPART
	static auto nh_0xAAB3200ED59016BC = rage::scrEngine::GetNativeHandler(0xAAB3200ED59016BC);
	rage::scrEngine::RegisterNativeHandler(0xAAB3200ED59016BC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAAB3200ED59016BC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/SWITCH_TO_MULTI_SECONDPART
	static auto nh_0xD8295AF639FD9CB8 = rage::scrEngine::GetNativeHandler(0xD8295AF639FD9CB8);
	rage::scrEngine::RegisterNativeHandler(0xD8295AF639FD9CB8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8295AF639FD9CB8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/SWITCH_TRAIN_TRACK
	static auto nh_0xFD813BB7DB977F20 = rage::scrEngine::GetNativeHandler(0xFD813BB7DB977F20);
	rage::scrEngine::RegisterNativeHandler(0xFD813BB7DB977F20, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD813BB7DB977F20(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/TAKE_CONTROL_OF_FRONTEND
	static auto nh_0xEC9264727EEC0F28 = rage::scrEngine::GetNativeHandler(0xEC9264727EEC0F28);
	rage::scrEngine::RegisterNativeHandler(0xEC9264727EEC0F28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC9264727EEC0F28(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE
	static auto nh_0xCD9CC7E200A52A6F = rage::scrEngine::GetNativeHandler(0xCD9CC7E200A52A6F);
	rage::scrEngine::RegisterNativeHandler(0xCD9CC7E200A52A6F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD9CC7E200A52A6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/TAN (result cleaner only)
	AddResultCleaner(0x632106CC96E82E91, ResultCleaner<float>);

	// TASK/TASK_ACHIEVE_HEADING
	static auto nh_0x93B93A37987F1F3D = rage::scrEngine::GetNativeHandler(0x93B93A37987F1F3D);
	rage::scrEngine::RegisterNativeHandler(0x93B93A37987F1F3D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x93B93A37987F1F3D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_AIM_GUN_AT_COORD
	static auto nh_0x6671F3EEC681BDA1 = rage::scrEngine::GetNativeHandler(0x6671F3EEC681BDA1);
	rage::scrEngine::RegisterNativeHandler(0x6671F3EEC681BDA1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6671F3EEC681BDA1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_AIM_GUN_AT_ENTITY
	static auto nh_0x9B53BB6E8943AF53 = rage::scrEngine::GetNativeHandler(0x9B53BB6E8943AF53);
	rage::scrEngine::RegisterNativeHandler(0x9B53BB6E8943AF53, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B53BB6E8943AF53(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_AIM_GUN_SCRIPTED
	static auto nh_0x7A192BE16D373D00 = rage::scrEngine::GetNativeHandler(0x7A192BE16D373D00);
	rage::scrEngine::RegisterNativeHandler(0x7A192BE16D373D00, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7A192BE16D373D00(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_AIM_GUN_SCRIPTED_WITH_TARGET
	static auto nh_0x8605AF0DE8B3A5AC = rage::scrEngine::GetNativeHandler(0x8605AF0DE8B3A5AC);
	rage::scrEngine::RegisterNativeHandler(0x8605AF0DE8B3A5AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x8605AF0DE8B3A5AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_ARREST_PED
	static auto nh_0xF3B9A78A178572B1 = rage::scrEngine::GetNativeHandler(0xF3B9A78A178572B1);
	rage::scrEngine::RegisterNativeHandler(0xF3B9A78A178572B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF3B9A78A178572B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_BOAT_MISSION
	static auto nh_0x15C86013127CE63F = rage::scrEngine::GetNativeHandler(0x15C86013127CE63F);
	rage::scrEngine::RegisterNativeHandler(0x15C86013127CE63F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0x15C86013127CE63F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_CHAT_TO_PED
	static auto nh_0x8C338E0263E4FD19 = rage::scrEngine::GetNativeHandler(0x8C338E0263E4FD19);
	rage::scrEngine::RegisterNativeHandler(0x8C338E0263E4FD19, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x8C338E0263E4FD19(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_CLEAR_DEFENSIVE_AREA
	static auto nh_0x95A6C46A31D1917D = rage::scrEngine::GetNativeHandler(0x95A6C46A31D1917D);
	rage::scrEngine::RegisterNativeHandler(0x95A6C46A31D1917D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x95A6C46A31D1917D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_CLEAR_LOOK_AT
	static auto nh_0x0F804F1DB19B9689 = rage::scrEngine::GetNativeHandler(0x0F804F1DB19B9689);
	rage::scrEngine::RegisterNativeHandler(0x0F804F1DB19B9689, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F804F1DB19B9689(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_CLIMB
	static auto nh_0x89D9FCC2435112F1 = rage::scrEngine::GetNativeHandler(0x89D9FCC2435112F1);
	rage::scrEngine::RegisterNativeHandler(0x89D9FCC2435112F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x89D9FCC2435112F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_CLIMB_LADDER
	static auto nh_0xB6C987F9285A3814 = rage::scrEngine::GetNativeHandler(0xB6C987F9285A3814);
	rage::scrEngine::RegisterNativeHandler(0xB6C987F9285A3814, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB6C987F9285A3814(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COMBAT_HATED_TARGETS_AROUND_PED
	static auto nh_0x7BF835BB9E2698C8 = rage::scrEngine::GetNativeHandler(0x7BF835BB9E2698C8);
	rage::scrEngine::RegisterNativeHandler(0x7BF835BB9E2698C8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7BF835BB9E2698C8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED
	static auto nh_0x2BBA30B854534A0C = rage::scrEngine::GetNativeHandler(0x2BBA30B854534A0C);
	rage::scrEngine::RegisterNativeHandler(0x2BBA30B854534A0C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2BBA30B854534A0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COMBAT_HATED_TARGETS_IN_AREA
	static auto nh_0x4CF5F55DAC3280A0 = rage::scrEngine::GetNativeHandler(0x4CF5F55DAC3280A0);
	rage::scrEngine::RegisterNativeHandler(0x4CF5F55DAC3280A0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x4CF5F55DAC3280A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COMBAT_PED
	static auto nh_0xF166E48407BAC484 = rage::scrEngine::GetNativeHandler(0xF166E48407BAC484);
	rage::scrEngine::RegisterNativeHandler(0xF166E48407BAC484, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF166E48407BAC484(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COMBAT_PED_TIMED
	static auto nh_0x944F30DCB7096BDE = rage::scrEngine::GetNativeHandler(0x944F30DCB7096BDE);
	rage::scrEngine::RegisterNativeHandler(0x944F30DCB7096BDE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x944F30DCB7096BDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_COWER
	static auto nh_0x3EB1FE9E8E908E15 = rage::scrEngine::GetNativeHandler(0x3EB1FE9E8E908E15);
	rage::scrEngine::RegisterNativeHandler(0x3EB1FE9E8E908E15, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3EB1FE9E8E908E15(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_DRIVE_BY
	static auto nh_0x2F8AF0E82773A171 = rage::scrEngine::GetNativeHandler(0x2F8AF0E82773A171);
	rage::scrEngine::RegisterNativeHandler(0x2F8AF0E82773A171, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2F8AF0E82773A171(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_ENTER_VEHICLE
	static auto nh_0xC20E50AA46D09CA8 = rage::scrEngine::GetNativeHandler(0xC20E50AA46D09CA8);
	rage::scrEngine::RegisterNativeHandler(0xC20E50AA46D09CA8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC20E50AA46D09CA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_EVERYONE_LEAVE_VEHICLE
	static auto nh_0x7F93691AB4B92272 = rage::scrEngine::GetNativeHandler(0x7F93691AB4B92272);
	rage::scrEngine::RegisterNativeHandler(0x7F93691AB4B92272, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F93691AB4B92272(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_EXIT_COVER
	static auto nh_0x79B258E397854D29 = rage::scrEngine::GetNativeHandler(0x79B258E397854D29);
	rage::scrEngine::RegisterNativeHandler(0x79B258E397854D29, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x79B258E397854D29(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_EXTEND_ROUTE
	static auto nh_0x1E7889778264843A = rage::scrEngine::GetNativeHandler(0x1E7889778264843A);
	rage::scrEngine::RegisterNativeHandler(0x1E7889778264843A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E7889778264843A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FLUSH_ROUTE
	static auto nh_0x841142A1376E9006 = rage::scrEngine::GetNativeHandler(0x841142A1376E9006);
	rage::scrEngine::RegisterNativeHandler(0x841142A1376E9006, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x841142A1376E9006(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FOLLOW_NAV_MESH_TO_COORD
	static auto nh_0x15D3A79D4E44B913 = rage::scrEngine::GetNativeHandler(0x15D3A79D4E44B913);
	rage::scrEngine::RegisterNativeHandler(0x15D3A79D4E44B913, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x15D3A79D4E44B913(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED
	static auto nh_0x17F58B88D085DBAC = rage::scrEngine::GetNativeHandler(0x17F58B88D085DBAC);
	rage::scrEngine::RegisterNativeHandler(0x17F58B88D085DBAC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17F58B88D085DBAC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FOLLOW_POINT_ROUTE
	static auto nh_0x595583281858626E = rage::scrEngine::GetNativeHandler(0x595583281858626E);
	rage::scrEngine::RegisterNativeHandler(0x595583281858626E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x595583281858626E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FOLLOW_TO_OFFSET_OF_ENTITY
	static auto nh_0x304AE42E357B8C7E = rage::scrEngine::GetNativeHandler(0x304AE42E357B8C7E);
	rage::scrEngine::RegisterNativeHandler(0x304AE42E357B8C7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x304AE42E357B8C7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FOLLOW_WAYPOINT_RECORDING
	static auto nh_0x0759591819534F7B = rage::scrEngine::GetNativeHandler(0x0759591819534F7B);
	rage::scrEngine::RegisterNativeHandler(0x0759591819534F7B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x0759591819534F7B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_FORCE_MOTION_STATE
	static auto nh_0x4F056E1AFFEF17AB = rage::scrEngine::GetNativeHandler(0x4F056E1AFFEF17AB);
	rage::scrEngine::RegisterNativeHandler(0x4F056E1AFFEF17AB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F056E1AFFEF17AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GET_OFF_BOAT
	static auto nh_0x9C00E77AF14B2DFF = rage::scrEngine::GetNativeHandler(0x9C00E77AF14B2DFF);
	rage::scrEngine::RegisterNativeHandler(0x9C00E77AF14B2DFF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C00E77AF14B2DFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GOTO_ENTITY_AIMING
	static auto nh_0xA9DA48FAB8A76C12 = rage::scrEngine::GetNativeHandler(0xA9DA48FAB8A76C12);
	rage::scrEngine::RegisterNativeHandler(0xA9DA48FAB8A76C12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA9DA48FAB8A76C12(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GOTO_ENTITY_OFFSET
	static auto nh_0xE39B4FF4FDEBDE27 = rage::scrEngine::GetNativeHandler(0xE39B4FF4FDEBDE27);
	rage::scrEngine::RegisterNativeHandler(0xE39B4FF4FDEBDE27, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xE39B4FF4FDEBDE27(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GOTO_ENTITY_OFFSET_XY
	static auto nh_0x338E7EF52B6095A9 = rage::scrEngine::GetNativeHandler(0x338E7EF52B6095A9);
	rage::scrEngine::RegisterNativeHandler(0x338E7EF52B6095A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x338E7EF52B6095A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_STRAIGHT_TO_COORD
	static auto nh_0xD76B57B44F1E6F8B = rage::scrEngine::GetNativeHandler(0xD76B57B44F1E6F8B);
	rage::scrEngine::RegisterNativeHandler(0xD76B57B44F1E6F8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD76B57B44F1E6F8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY
	static auto nh_0x61E360B7E040D12E = rage::scrEngine::GetNativeHandler(0x61E360B7E040D12E);
	rage::scrEngine::RegisterNativeHandler(0x61E360B7E040D12E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x61E360B7E040D12E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD
	static auto nh_0xA55547801EB331FC = rage::scrEngine::GetNativeHandler(0xA55547801EB331FC);
	rage::scrEngine::RegisterNativeHandler(0xA55547801EB331FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA55547801EB331FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_ANY_MEANS
	static auto nh_0x5BC448CB78FA3E88 = rage::scrEngine::GetNativeHandler(0x5BC448CB78FA3E88);
	rage::scrEngine::RegisterNativeHandler(0x5BC448CB78FA3E88, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5BC448CB78FA3E88(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS
	static auto nh_0x1DD45F9ECFDB1BC9 = rage::scrEngine::GetNativeHandler(0x1DD45F9ECFDB1BC9);
	rage::scrEngine::RegisterNativeHandler(0x1DD45F9ECFDB1BC9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0x1DD45F9ECFDB1BC9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED
	static auto nh_0xB8ECD61F531A7B02 = rage::scrEngine::GetNativeHandler(0xB8ECD61F531A7B02);
	rage::scrEngine::RegisterNativeHandler(0xB8ECD61F531A7B02, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		nh_0xB8ECD61F531A7B02(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD
	static auto nh_0x11315AB3385B8AC0 = rage::scrEngine::GetNativeHandler(0x11315AB3385B8AC0);
	rage::scrEngine::RegisterNativeHandler(0x11315AB3385B8AC0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		nh_0x11315AB3385B8AC0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY
	static auto nh_0xB2A16444EAD9AE47 = rage::scrEngine::GetNativeHandler(0xB2A16444EAD9AE47);
	rage::scrEngine::RegisterNativeHandler(0xB2A16444EAD9AE47, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		nh_0xB2A16444EAD9AE47(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_ENTITY
	static auto nh_0x6A071245EB0D1882 = rage::scrEngine::GetNativeHandler(0x6A071245EB0D1882);
	rage::scrEngine::RegisterNativeHandler(0x6A071245EB0D1882, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A071245EB0D1882(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD
	static auto nh_0x04701832B739DCE5 = rage::scrEngine::GetNativeHandler(0x04701832B739DCE5);
	rage::scrEngine::RegisterNativeHandler(0x04701832B739DCE5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0x04701832B739DCE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY
	static auto nh_0x97465886D35210E9 = rage::scrEngine::GetNativeHandler(0x97465886D35210E9);
	rage::scrEngine::RegisterNativeHandler(0x97465886D35210E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x97465886D35210E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GUARD_ASSIGNED_DEFENSIVE_AREA
	static auto nh_0xD2A207EEBDF9889B = rage::scrEngine::GetNativeHandler(0xD2A207EEBDF9889B);
	rage::scrEngine::RegisterNativeHandler(0xD2A207EEBDF9889B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xD2A207EEBDF9889B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GUARD_CURRENT_POSITION
	static auto nh_0x4A58A47A72E3FCB4 = rage::scrEngine::GetNativeHandler(0x4A58A47A72E3FCB4);
	rage::scrEngine::RegisterNativeHandler(0x4A58A47A72E3FCB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A58A47A72E3FCB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_GUARD_SPHERE_DEFENSIVE_AREA
	static auto nh_0xC946FE14BE0EB5E2 = rage::scrEngine::GetNativeHandler(0xC946FE14BE0EB5E2);
	rage::scrEngine::RegisterNativeHandler(0xC946FE14BE0EB5E2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xC946FE14BE0EB5E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_HANDS_UP
	static auto nh_0xF2EAB31979A7F910 = rage::scrEngine::GetNativeHandler(0xF2EAB31979A7F910);
	rage::scrEngine::RegisterNativeHandler(0xF2EAB31979A7F910, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF2EAB31979A7F910(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_HELI_CHASE
	static auto nh_0xAC83B1DB38D0ADA0 = rage::scrEngine::GetNativeHandler(0xAC83B1DB38D0ADA0);
	rage::scrEngine::RegisterNativeHandler(0xAC83B1DB38D0ADA0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC83B1DB38D0ADA0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_HELI_MISSION
	static auto nh_0xDAD029E187A2BEB4 = rage::scrEngine::GetNativeHandler(0xDAD029E187A2BEB4);
	rage::scrEngine::RegisterNativeHandler(0xDAD029E187A2BEB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDAD029E187A2BEB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_JUMP
	static auto nh_0x0AE4086104E067B1 = rage::scrEngine::GetNativeHandler(0x0AE4086104E067B1);
	rage::scrEngine::RegisterNativeHandler(0x0AE4086104E067B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AE4086104E067B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_LEAVE_ANY_VEHICLE
	static auto nh_0x504D54DF3F6F2247 = rage::scrEngine::GetNativeHandler(0x504D54DF3F6F2247);
	rage::scrEngine::RegisterNativeHandler(0x504D54DF3F6F2247, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x504D54DF3F6F2247(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_LEAVE_VEHICLE
	static auto nh_0xD3DBCE61A490BE02 = rage::scrEngine::GetNativeHandler(0xD3DBCE61A490BE02);
	rage::scrEngine::RegisterNativeHandler(0xD3DBCE61A490BE02, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD3DBCE61A490BE02(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_LOOK_AT_COORD
	static auto nh_0x6FA46612594F7973 = rage::scrEngine::GetNativeHandler(0x6FA46612594F7973);
	rage::scrEngine::RegisterNativeHandler(0x6FA46612594F7973, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x6FA46612594F7973(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_LOOK_AT_ENTITY
	static auto nh_0x69F4BE8C8CC4796C = rage::scrEngine::GetNativeHandler(0x69F4BE8C8CC4796C);
	rage::scrEngine::RegisterNativeHandler(0x69F4BE8C8CC4796C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x69F4BE8C8CC4796C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_MOVE_NETWORK_ADVANCED_BY_NAME
	static auto nh_0xD5B35BEA41919ACB = rage::scrEngine::GetNativeHandler(0xD5B35BEA41919ACB);
	rage::scrEngine::RegisterNativeHandler(0xD5B35BEA41919ACB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(11))) { return; }
		nh_0xD5B35BEA41919ACB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_MOVE_NETWORK_BY_NAME
	static auto nh_0x2D537BA194896636 = rage::scrEngine::GetNativeHandler(0x2D537BA194896636);
	rage::scrEngine::RegisterNativeHandler(0x2D537BA194896636, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2D537BA194896636(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_OPEN_VEHICLE_DOOR
	static auto nh_0x965791A9A488A062 = rage::scrEngine::GetNativeHandler(0x965791A9A488A062);
	rage::scrEngine::RegisterNativeHandler(0x965791A9A488A062, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x965791A9A488A062(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PARACHUTE
	static auto nh_0xD2F1C53C97EE81AB = rage::scrEngine::GetNativeHandler(0xD2F1C53C97EE81AB);
	rage::scrEngine::RegisterNativeHandler(0xD2F1C53C97EE81AB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD2F1C53C97EE81AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PARACHUTE_TO_TARGET
	static auto nh_0xB33E291AFA6BD03A = rage::scrEngine::GetNativeHandler(0xB33E291AFA6BD03A);
	rage::scrEngine::RegisterNativeHandler(0xB33E291AFA6BD03A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB33E291AFA6BD03A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PATROL
	static auto nh_0xBDA5DF49D080FE4E = rage::scrEngine::GetNativeHandler(0xBDA5DF49D080FE4E);
	rage::scrEngine::RegisterNativeHandler(0xBDA5DF49D080FE4E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBDA5DF49D080FE4E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PAUSE
	static auto nh_0xE73A266DB0CA9042 = rage::scrEngine::GetNativeHandler(0xE73A266DB0CA9042);
	rage::scrEngine::RegisterNativeHandler(0xE73A266DB0CA9042, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE73A266DB0CA9042(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PED_SLIDE_TO_COORD
	static auto nh_0xD04FE6765D990A06 = rage::scrEngine::GetNativeHandler(0xD04FE6765D990A06);
	rage::scrEngine::RegisterNativeHandler(0xD04FE6765D990A06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD04FE6765D990A06(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PED_SLIDE_TO_COORD_HDG_RATE
	static auto nh_0x5A4A6A6D3DC64F52 = rage::scrEngine::GetNativeHandler(0x5A4A6A6D3DC64F52);
	rage::scrEngine::RegisterNativeHandler(0x5A4A6A6D3DC64F52, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5A4A6A6D3DC64F52(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PERFORM_SEQUENCE
	static auto nh_0x5ABA3986D90D8A3B = rage::scrEngine::GetNativeHandler(0x5ABA3986D90D8A3B);
	rage::scrEngine::RegisterNativeHandler(0x5ABA3986D90D8A3B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5ABA3986D90D8A3B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PERFORM_SEQUENCE_FROM_PROGRESS
	static auto nh_0x89221B16730234F0 = rage::scrEngine::GetNativeHandler(0x89221B16730234F0);
	rage::scrEngine::RegisterNativeHandler(0x89221B16730234F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x89221B16730234F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLANE_CHASE
	static auto nh_0x2D2386F273FF7A25 = rage::scrEngine::GetNativeHandler(0x2D2386F273FF7A25);
	rage::scrEngine::RegisterNativeHandler(0x2D2386F273FF7A25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2D2386F273FF7A25(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLANE_LAND
	static auto nh_0xBF19721FA34D32C0 = rage::scrEngine::GetNativeHandler(0xBF19721FA34D32C0);
	rage::scrEngine::RegisterNativeHandler(0xBF19721FA34D32C0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF19721FA34D32C0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLANE_MISSION
	static auto nh_0x23703CD154E83B88 = rage::scrEngine::GetNativeHandler(0x23703CD154E83B88);
	rage::scrEngine::RegisterNativeHandler(0x23703CD154E83B88, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x23703CD154E83B88(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLANE_TAXI
	static auto nh_0x92C360B5F15D2302 = rage::scrEngine::GetNativeHandler(0x92C360B5F15D2302);
	rage::scrEngine::RegisterNativeHandler(0x92C360B5F15D2302, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92C360B5F15D2302(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLANT_BOMB
	static auto nh_0x965FEC691D55E9BF = rage::scrEngine::GetNativeHandler(0x965FEC691D55E9BF);
	rage::scrEngine::RegisterNativeHandler(0x965FEC691D55E9BF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x965FEC691D55E9BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLAY_ANIM
	static auto nh_0xEA47FE3719165B94 = rage::scrEngine::GetNativeHandler(0xEA47FE3719165B94);
	rage::scrEngine::RegisterNativeHandler(0xEA47FE3719165B94, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEA47FE3719165B94(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLAY_ANIM_ADVANCED
	static auto nh_0x83CDB10EA29B370B = rage::scrEngine::GetNativeHandler(0x83CDB10EA29B370B);
	rage::scrEngine::RegisterNativeHandler(0x83CDB10EA29B370B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(12))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(14))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(15))) { return; }
		nh_0x83CDB10EA29B370B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PLAY_PHONE_GESTURE_ANIMATION
	static auto nh_0x8FBB6758B3B3E9EC = rage::scrEngine::GetNativeHandler(0x8FBB6758B3B3E9EC);
	rage::scrEngine::RegisterNativeHandler(0x8FBB6758B3B3E9EC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8FBB6758B3B3E9EC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PUT_PED_DIRECTLY_INTO_COVER
	static auto nh_0x4172393E6BE1FECE = rage::scrEngine::GetNativeHandler(0x4172393E6BE1FECE);
	rage::scrEngine::RegisterNativeHandler(0x4172393E6BE1FECE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x4172393E6BE1FECE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_PUT_PED_DIRECTLY_INTO_MELEE
	static auto nh_0x1C6CD14A876FFE39 = rage::scrEngine::GetNativeHandler(0x1C6CD14A876FFE39);
	rage::scrEngine::RegisterNativeHandler(0x1C6CD14A876FFE39, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C6CD14A876FFE39(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_RAPPEL_FROM_HELI
	static auto nh_0x09693B0312F91649 = rage::scrEngine::GetNativeHandler(0x09693B0312F91649);
	rage::scrEngine::RegisterNativeHandler(0x09693B0312F91649, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x09693B0312F91649(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_REACT_AND_FLEE_PED
	static auto nh_0x72C896464915D1B1 = rage::scrEngine::GetNativeHandler(0x72C896464915D1B1);
	rage::scrEngine::RegisterNativeHandler(0x72C896464915D1B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72C896464915D1B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_RELOAD_WEAPON
	static auto nh_0x62D2916F56B9CD2D = rage::scrEngine::GetNativeHandler(0x62D2916F56B9CD2D);
	rage::scrEngine::RegisterNativeHandler(0x62D2916F56B9CD2D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x62D2916F56B9CD2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SCRIPTED_ANIMATION
	static auto nh_0x126EF75F1E17ABE5 = rage::scrEngine::GetNativeHandler(0x126EF75F1E17ABE5);
	rage::scrEngine::RegisterNativeHandler(0x126EF75F1E17ABE5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x126EF75F1E17ABE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SEEK_COVER_FROM_PED
	static auto nh_0x84D32B3BEC531324 = rage::scrEngine::GetNativeHandler(0x84D32B3BEC531324);
	rage::scrEngine::RegisterNativeHandler(0x84D32B3BEC531324, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x84D32B3BEC531324(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SEEK_COVER_FROM_POS
	static auto nh_0x75AC2B60386D89F2 = rage::scrEngine::GetNativeHandler(0x75AC2B60386D89F2);
	rage::scrEngine::RegisterNativeHandler(0x75AC2B60386D89F2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75AC2B60386D89F2(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SEEK_COVER_TO_COORDS
	static auto nh_0x39246A6958EF072C = rage::scrEngine::GetNativeHandler(0x39246A6958EF072C);
	rage::scrEngine::RegisterNativeHandler(0x39246A6958EF072C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x39246A6958EF072C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SEEK_COVER_TO_COVER_POINT
	static auto nh_0xD43D95C7A869447F = rage::scrEngine::GetNativeHandler(0xD43D95C7A869447F);
	rage::scrEngine::RegisterNativeHandler(0xD43D95C7A869447F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xD43D95C7A869447F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
	static auto nh_0x90D2156198831D69 = rage::scrEngine::GetNativeHandler(0x90D2156198831D69);
	rage::scrEngine::RegisterNativeHandler(0x90D2156198831D69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x90D2156198831D69(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SET_DECISION_MAKER
	static auto nh_0xEB8517DDA73720DA = rage::scrEngine::GetNativeHandler(0xEB8517DDA73720DA);
	rage::scrEngine::RegisterNativeHandler(0xEB8517DDA73720DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB8517DDA73720DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SET_SPHERE_DEFENSIVE_AREA
	static auto nh_0x933C06518B52A9A4 = rage::scrEngine::GetNativeHandler(0x933C06518B52A9A4);
	rage::scrEngine::RegisterNativeHandler(0x933C06518B52A9A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x933C06518B52A9A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SHOCKING_EVENT_REACT
	static auto nh_0x452419CBD838065B = rage::scrEngine::GetNativeHandler(0x452419CBD838065B);
	rage::scrEngine::RegisterNativeHandler(0x452419CBD838065B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x452419CBD838065B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SHOOT_AT_COORD
	static auto nh_0x46A6CC01E0826106 = rage::scrEngine::GetNativeHandler(0x46A6CC01E0826106);
	rage::scrEngine::RegisterNativeHandler(0x46A6CC01E0826106, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x46A6CC01E0826106(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SHOOT_AT_ENTITY
	static auto nh_0x08DA95E8298AE772 = rage::scrEngine::GetNativeHandler(0x08DA95E8298AE772);
	rage::scrEngine::RegisterNativeHandler(0x08DA95E8298AE772, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x08DA95E8298AE772(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT
	static auto nh_0x7AA80209BDA643EB = rage::scrEngine::GetNativeHandler(0x7AA80209BDA643EB);
	rage::scrEngine::RegisterNativeHandler(0x7AA80209BDA643EB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7AA80209BDA643EB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SKY_DIVE
	static auto nh_0x601736CFE536B0A0 = rage::scrEngine::GetNativeHandler(0x601736CFE536B0A0);
	rage::scrEngine::RegisterNativeHandler(0x601736CFE536B0A0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x601736CFE536B0A0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SMART_FLEE_COORD
	static auto nh_0x94587F17E9C365D5 = rage::scrEngine::GetNativeHandler(0x94587F17E9C365D5);
	rage::scrEngine::RegisterNativeHandler(0x94587F17E9C365D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x94587F17E9C365D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SMART_FLEE_PED
	static auto nh_0x22B0D0E37CCB840D = rage::scrEngine::GetNativeHandler(0x22B0D0E37CCB840D);
	rage::scrEngine::RegisterNativeHandler(0x22B0D0E37CCB840D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x22B0D0E37CCB840D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_STAND_GUARD
	static auto nh_0xAE032F8BBA959E90 = rage::scrEngine::GetNativeHandler(0xAE032F8BBA959E90);
	rage::scrEngine::RegisterNativeHandler(0xAE032F8BBA959E90, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xAE032F8BBA959E90(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_STAND_STILL
	static auto nh_0x919BE13EED931959 = rage::scrEngine::GetNativeHandler(0x919BE13EED931959);
	rage::scrEngine::RegisterNativeHandler(0x919BE13EED931959, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x919BE13EED931959(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_START_SCENARIO_AT_POSITION
	static auto nh_0xFA4EFC79F69D4F07 = rage::scrEngine::GetNativeHandler(0xFA4EFC79F69D4F07);
	rage::scrEngine::RegisterNativeHandler(0xFA4EFC79F69D4F07, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFA4EFC79F69D4F07(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_START_SCENARIO_IN_PLACE
	static auto nh_0x142A02425FF02BD9 = rage::scrEngine::GetNativeHandler(0x142A02425FF02BD9);
	rage::scrEngine::RegisterNativeHandler(0x142A02425FF02BD9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x142A02425FF02BD9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_STAY_IN_COVER
	static auto nh_0xE5DA8615A6180789 = rage::scrEngine::GetNativeHandler(0xE5DA8615A6180789);
	rage::scrEngine::RegisterNativeHandler(0xE5DA8615A6180789, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5DA8615A6180789(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_STEALTH_KILL
	static auto nh_0xAA5DC05579D60BD9 = rage::scrEngine::GetNativeHandler(0xAA5DC05579D60BD9);
	rage::scrEngine::RegisterNativeHandler(0xAA5DC05579D60BD9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xAA5DC05579D60BD9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_STOP_PHONE_GESTURE_ANIMATION
	static auto nh_0x3FA00D4F4641BFAE = rage::scrEngine::GetNativeHandler(0x3FA00D4F4641BFAE);
	rage::scrEngine::RegisterNativeHandler(0x3FA00D4F4641BFAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3FA00D4F4641BFAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SWAP_WEAPON
	static auto nh_0xA21C51255B205245 = rage::scrEngine::GetNativeHandler(0xA21C51255B205245);
	rage::scrEngine::RegisterNativeHandler(0xA21C51255B205245, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA21C51255B205245(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SWEEP_AIM_ENTITY
	static auto nh_0x2047C02158D6405A = rage::scrEngine::GetNativeHandler(0x2047C02158D6405A);
	rage::scrEngine::RegisterNativeHandler(0x2047C02158D6405A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2047C02158D6405A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SWEEP_AIM_POSITION
	static auto nh_0x7AFE8FDC10BC07D2 = rage::scrEngine::GetNativeHandler(0x7AFE8FDC10BC07D2);
	rage::scrEngine::RegisterNativeHandler(0x7AFE8FDC10BC07D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x7AFE8FDC10BC07D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_SYNCHRONIZED_SCENE
	static auto nh_0xEEA929141F699854 = rage::scrEngine::GetNativeHandler(0xEEA929141F699854);
	rage::scrEngine::RegisterNativeHandler(0xEEA929141F699854, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0xEEA929141F699854(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_THROW_PROJECTILE
	static auto nh_0x7285951DBF6B5A51 = rage::scrEngine::GetNativeHandler(0x7285951DBF6B5A51);
	rage::scrEngine::RegisterNativeHandler(0x7285951DBF6B5A51, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7285951DBF6B5A51(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_TOGGLE_DUCK
	static auto nh_0xAC96609B9995EDF8 = rage::scrEngine::GetNativeHandler(0xAC96609B9995EDF8);
	rage::scrEngine::RegisterNativeHandler(0xAC96609B9995EDF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC96609B9995EDF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_TURN_PED_TO_FACE_COORD
	static auto nh_0x1DDA930A0AC38571 = rage::scrEngine::GetNativeHandler(0x1DDA930A0AC38571);
	rage::scrEngine::RegisterNativeHandler(0x1DDA930A0AC38571, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DDA930A0AC38571(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_TURN_PED_TO_FACE_ENTITY
	static auto nh_0x5AD23D40115353AC = rage::scrEngine::GetNativeHandler(0x5AD23D40115353AC);
	rage::scrEngine::RegisterNativeHandler(0x5AD23D40115353AC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AD23D40115353AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_MOBILE_PHONE
	static auto nh_0xBD2A8EC3AF4DE7DB = rage::scrEngine::GetNativeHandler(0xBD2A8EC3AF4DE7DB);
	rage::scrEngine::RegisterNativeHandler(0xBD2A8EC3AF4DE7DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD2A8EC3AF4DE7DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_MOBILE_PHONE_TIMED
	static auto nh_0x5EE02954A14C69DB = rage::scrEngine::GetNativeHandler(0x5EE02954A14C69DB);
	rage::scrEngine::RegisterNativeHandler(0x5EE02954A14C69DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5EE02954A14C69DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD
	static auto nh_0x9FDA1B3D7E7028B3 = rage::scrEngine::GetNativeHandler(0x9FDA1B3D7E7028B3);
	rage::scrEngine::RegisterNativeHandler(0x9FDA1B3D7E7028B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x9FDA1B3D7E7028B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP
	static auto nh_0x97A28E63F0BA5631 = rage::scrEngine::GetNativeHandler(0x97A28E63F0BA5631);
	rage::scrEngine::RegisterNativeHandler(0x97A28E63F0BA5631, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x97A28E63F0BA5631(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_NEAREST_SCENARIO_TO_COORD
	static auto nh_0x277F471BA9DB000B = rage::scrEngine::GetNativeHandler(0x277F471BA9DB000B);
	rage::scrEngine::RegisterNativeHandler(0x277F471BA9DB000B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x277F471BA9DB000B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP
	static auto nh_0x58E2E0F23F6B76C3 = rage::scrEngine::GetNativeHandler(0x58E2E0F23F6B76C3);
	rage::scrEngine::RegisterNativeHandler(0x58E2E0F23F6B76C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x58E2E0F23F6B76C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_AIM_AT_COORD
	static auto nh_0x447C1E9EF844BC0F = rage::scrEngine::GetNativeHandler(0x447C1E9EF844BC0F);
	rage::scrEngine::RegisterNativeHandler(0x447C1E9EF844BC0F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x447C1E9EF844BC0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_AIM_AT_PED
	static auto nh_0xE41885592B08B097 = rage::scrEngine::GetNativeHandler(0xE41885592B08B097);
	rage::scrEngine::RegisterNativeHandler(0xE41885592B08B097, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE41885592B08B097(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_CHASE
	static auto nh_0x3C08A8E30363B353 = rage::scrEngine::GetNativeHandler(0x3C08A8E30363B353);
	rage::scrEngine::RegisterNativeHandler(0x3C08A8E30363B353, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C08A8E30363B353(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_DRIVE_TO_COORD
	static auto nh_0xE2A2AA2F659D77A7 = rage::scrEngine::GetNativeHandler(0xE2A2AA2F659D77A7);
	rage::scrEngine::RegisterNativeHandler(0xE2A2AA2F659D77A7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xE2A2AA2F659D77A7(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE
	static auto nh_0x158BB33F920D360C = rage::scrEngine::GetNativeHandler(0x158BB33F920D360C);
	rage::scrEngine::RegisterNativeHandler(0x158BB33F920D360C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x158BB33F920D360C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_DRIVE_WANDER
	static auto nh_0x480142959D337D00 = rage::scrEngine::GetNativeHandler(0x480142959D337D00);
	rage::scrEngine::RegisterNativeHandler(0x480142959D337D00, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x480142959D337D00(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_ESCORT
	static auto nh_0x0FA6E4B75F302400 = rage::scrEngine::GetNativeHandler(0x0FA6E4B75F302400);
	rage::scrEngine::RegisterNativeHandler(0x0FA6E4B75F302400, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0FA6E4B75F302400(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_FOLLOW
	static auto nh_0xFC545A9F0626E3B6 = rage::scrEngine::GetNativeHandler(0xFC545A9F0626E3B6);
	rage::scrEngine::RegisterNativeHandler(0xFC545A9F0626E3B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC545A9F0626E3B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING
	static auto nh_0x3123FAA6DB1CF7ED = rage::scrEngine::GetNativeHandler(0x3123FAA6DB1CF7ED);
	rage::scrEngine::RegisterNativeHandler(0x3123FAA6DB1CF7ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3123FAA6DB1CF7ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_GOTO_NAVMESH
	static auto nh_0x195AEEB13CEFE2EE = rage::scrEngine::GetNativeHandler(0x195AEEB13CEFE2EE);
	rage::scrEngine::RegisterNativeHandler(0x195AEEB13CEFE2EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x195AEEB13CEFE2EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_HELI_PROTECT
	static auto nh_0x1E09C32048FEFD1C = rage::scrEngine::GetNativeHandler(0x1E09C32048FEFD1C);
	rage::scrEngine::RegisterNativeHandler(0x1E09C32048FEFD1C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E09C32048FEFD1C(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_MISSION
	static auto nh_0x659427E0EF36BCDE = rage::scrEngine::GetNativeHandler(0x659427E0EF36BCDE);
	rage::scrEngine::RegisterNativeHandler(0x659427E0EF36BCDE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x659427E0EF36BCDE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_MISSION_COORS_TARGET
	static auto nh_0xF0AF20AA7731F8C3 = rage::scrEngine::GetNativeHandler(0xF0AF20AA7731F8C3);
	rage::scrEngine::RegisterNativeHandler(0xF0AF20AA7731F8C3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF0AF20AA7731F8C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_MISSION_PED_TARGET
	static auto nh_0x9454528DF15D657A = rage::scrEngine::GetNativeHandler(0x9454528DF15D657A);
	rage::scrEngine::RegisterNativeHandler(0x9454528DF15D657A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9454528DF15D657A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_PARK
	static auto nh_0x0F3E34E968EA374E = rage::scrEngine::GetNativeHandler(0x0F3E34E968EA374E);
	rage::scrEngine::RegisterNativeHandler(0x0F3E34E968EA374E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F3E34E968EA374E(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_PLAY_ANIM
	static auto nh_0x69F5C3BD0F3EBD89 = rage::scrEngine::GetNativeHandler(0x69F5C3BD0F3EBD89);
	rage::scrEngine::RegisterNativeHandler(0x69F5C3BD0F3EBD89, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x69F5C3BD0F3EBD89(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_SHOOT_AT_COORD
	static auto nh_0x5190796ED39C9B6D = rage::scrEngine::GetNativeHandler(0x5190796ED39C9B6D);
	rage::scrEngine::RegisterNativeHandler(0x5190796ED39C9B6D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5190796ED39C9B6D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_SHOOT_AT_PED
	static auto nh_0x10AB107B887214D8 = rage::scrEngine::GetNativeHandler(0x10AB107B887214D8);
	rage::scrEngine::RegisterNativeHandler(0x10AB107B887214D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x10AB107B887214D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_VEHICLE_TEMP_ACTION
	static auto nh_0xC429DCEEB339E129 = rage::scrEngine::GetNativeHandler(0xC429DCEEB339E129);
	rage::scrEngine::RegisterNativeHandler(0xC429DCEEB339E129, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC429DCEEB339E129(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_WANDER_IN_AREA
	static auto nh_0xE054346CA3A0F315 = rage::scrEngine::GetNativeHandler(0xE054346CA3A0F315);
	rage::scrEngine::RegisterNativeHandler(0xE054346CA3A0F315, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE054346CA3A0F315(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_WANDER_STANDARD
	static auto nh_0xBB9CE077274F6A1B = rage::scrEngine::GetNativeHandler(0xBB9CE077274F6A1B);
	rage::scrEngine::RegisterNativeHandler(0xBB9CE077274F6A1B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBB9CE077274F6A1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_WARP_PED_INTO_VEHICLE
	static auto nh_0x9A7D091411C5F684 = rage::scrEngine::GetNativeHandler(0x9A7D091411C5F684);
	rage::scrEngine::RegisterNativeHandler(0x9A7D091411C5F684, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9A7D091411C5F684(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/TASK_WRITHE
	static auto nh_0xCDDC2B77CE54AC6E = rage::scrEngine::GetNativeHandler(0xCDDC2B77CE54AC6E);
	rage::scrEngine::RegisterNativeHandler(0xCDDC2B77CE54AC6E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCDDC2B77CE54AC6E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME
	static auto nh_0x9DC711BC69C548DF = rage::scrEngine::GetNativeHandler(0x9DC711BC69C548DF);
	rage::scrEngine::RegisterNativeHandler(0x9DC711BC69C548DF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9DC711BC69C548DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/TERMINATE_THIS_THREAD
	static auto nh_0x1090044AD1DA76FA = rage::scrEngine::GetNativeHandler(0x1090044AD1DA76FA);
	rage::scrEngine::RegisterNativeHandler(0x1090044AD1DA76FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1090044AD1DA76FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// SCRIPT/TERMINATE_THREAD
	static auto nh_0xC8B189ED9138BCD4 = rage::scrEngine::GetNativeHandler(0xC8B189ED9138BCD4);
	rage::scrEngine::RegisterNativeHandler(0xC8B189ED9138BCD4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8B189ED9138BCD4(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/TERRAINGRID_ACTIVATE
	static auto nh_0xA356990E161C9E65 = rage::scrEngine::GetNativeHandler(0xA356990E161C9E65);
	rage::scrEngine::RegisterNativeHandler(0xA356990E161C9E65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA356990E161C9E65(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/TERRAINGRID_SET_COLOURS
	static auto nh_0x5CE62918F8D703C7 = rage::scrEngine::GetNativeHandler(0x5CE62918F8D703C7);
	rage::scrEngine::RegisterNativeHandler(0x5CE62918F8D703C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5CE62918F8D703C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/TERRAINGRID_SET_PARAMS
	static auto nh_0x1C4FC5752BCD8E48 = rage::scrEngine::GetNativeHandler(0x1C4FC5752BCD8E48);
	rage::scrEngine::RegisterNativeHandler(0x1C4FC5752BCD8E48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1C4FC5752BCD8E48(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/TEST_PROBE_AGAINST_ALL_WATER
	static auto nh_0x8974647ED222EA5F = rage::scrEngine::GetNativeHandler(0x8974647ED222EA5F);
	rage::scrEngine::RegisterNativeHandler(0x8974647ED222EA5F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		nh_0x8974647ED222EA5F(cxt);
	});
	        
	AddResultCleaner(0x8974647ED222EA5F, ResultCleaner<bool>);

	// WATER/TEST_PROBE_AGAINST_WATER
	static auto nh_0xFFA5D878809819DB = rage::scrEngine::GetNativeHandler(0xFFA5D878809819DB);
	rage::scrEngine::RegisterNativeHandler(0xFFA5D878809819DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xFFA5D878809819DB(cxt);
	});
	        
	AddResultCleaner(0xFFA5D878809819DB, ResultCleaner<bool>);

	// WATER/TEST_VERTICAL_PROBE_AGAINST_ALL_WATER
	static auto nh_0x2B3451FA1E3142E2 = rage::scrEngine::GetNativeHandler(0x2B3451FA1E3142E2);
	rage::scrEngine::RegisterNativeHandler(0x2B3451FA1E3142E2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2B3451FA1E3142E2(cxt);
	});
	        
	AddResultCleaner(0x2B3451FA1E3142E2, ResultCleaner<bool>);

	// NETWORK/TEXTURE_DOWNLOAD_GET_NAME (result cleaner only)
	AddResultCleaner(0x3448505B6E35262D, ResultCleaner<char*>);

	// NETWORK/TEXTURE_DOWNLOAD_HAS_FAILED (result cleaner only)
	AddResultCleaner(0x5776ED562C134687, ResultCleaner<bool>);

	// NETWORK/TEXTURE_DOWNLOAD_RELEASE
	static auto nh_0x487EB90B98E9FB19 = rage::scrEngine::GetNativeHandler(0x487EB90B98E9FB19);
	rage::scrEngine::RegisterNativeHandler(0x487EB90B98E9FB19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x487EB90B98E9FB19(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/TEXTURE_DOWNLOAD_REQUEST
	static auto nh_0x16160DA74A8E74A2 = rage::scrEngine::GetNativeHandler(0x16160DA74A8E74A2);
	rage::scrEngine::RegisterNativeHandler(0x16160DA74A8E74A2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x16160DA74A8E74A2(cxt);
	});
	        
	AddResultCleaner(0x16160DA74A8E74A2, ResultCleaner<int>);

	// HUD/THEFEED_CLEAR_FROZEN_POST
	static auto nh_0x80FE4F3AB4E1B62A = rage::scrEngine::GetNativeHandler(0x80FE4F3AB4E1B62A);
	rage::scrEngine::RegisterNativeHandler(0x80FE4F3AB4E1B62A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80FE4F3AB4E1B62A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_COMMENT_TELEPORT_POOL_OFF
	static auto nh_0xADED7F5748ACAFE6 = rage::scrEngine::GetNativeHandler(0xADED7F5748ACAFE6);
	rage::scrEngine::RegisterNativeHandler(0xADED7F5748ACAFE6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xADED7F5748ACAFE6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_COMMENT_TELEPORT_POOL_ON
	static auto nh_0x56C8B608CFD49854 = rage::scrEngine::GetNativeHandler(0x56C8B608CFD49854);
	rage::scrEngine::RegisterNativeHandler(0x56C8B608CFD49854, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x56C8B608CFD49854(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_FLUSH_QUEUE
	static auto nh_0xA8FDB297A8D25FBA = rage::scrEngine::GetNativeHandler(0xA8FDB297A8D25FBA);
	rage::scrEngine::RegisterNativeHandler(0xA8FDB297A8D25FBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA8FDB297A8D25FBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_FORCE_RENDER_OFF
	static auto nh_0x583049884A2EEE3C = rage::scrEngine::GetNativeHandler(0x583049884A2EEE3C);
	rage::scrEngine::RegisterNativeHandler(0x583049884A2EEE3C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x583049884A2EEE3C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_FORCE_RENDER_ON
	static auto nh_0xA13C11E1B5C06BFC = rage::scrEngine::GetNativeHandler(0xA13C11E1B5C06BFC);
	rage::scrEngine::RegisterNativeHandler(0xA13C11E1B5C06BFC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA13C11E1B5C06BFC(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_FREEZE_NEXT_POST
	static auto nh_0xFDEC055AB549E328 = rage::scrEngine::GetNativeHandler(0xFDEC055AB549E328);
	rage::scrEngine::RegisterNativeHandler(0xFDEC055AB549E328, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDEC055AB549E328(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_GET_FIRST_VISIBLE_DELETE_REMAINING (result cleaner only)
	AddResultCleaner(0x82352748437638CA, ResultCleaner<int>);

	// HUD/THEFEED_HIDE_THIS_FRAME
	static auto nh_0x25F87B30C382FCA7 = rage::scrEngine::GetNativeHandler(0x25F87B30C382FCA7);
	rage::scrEngine::RegisterNativeHandler(0x25F87B30C382FCA7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x25F87B30C382FCA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_IS_PAUSED (result cleaner only)
	AddResultCleaner(0xA9CBFD40B3FA3010, ResultCleaner<bool>);

	// HUD/THEFEED_ONLY_SHOW_TOOLTIPS
	static auto nh_0x6F1554B0CC2089FA = rage::scrEngine::GetNativeHandler(0x6F1554B0CC2089FA);
	rage::scrEngine::RegisterNativeHandler(0x6F1554B0CC2089FA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F1554B0CC2089FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_PAUSE
	static auto nh_0xFDB423997FA30340 = rage::scrEngine::GetNativeHandler(0xFDB423997FA30340);
	rage::scrEngine::RegisterNativeHandler(0xFDB423997FA30340, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDB423997FA30340(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_REMOVE_ITEM
	static auto nh_0xBE4390CB40B3E627 = rage::scrEngine::GetNativeHandler(0xBE4390CB40B3E627);
	rage::scrEngine::RegisterNativeHandler(0xBE4390CB40B3E627, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE4390CB40B3E627(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_RESET_ALL_PARAMETERS
	static auto nh_0xFDD85225B2DEA55E = rage::scrEngine::GetNativeHandler(0xFDD85225B2DEA55E);
	rage::scrEngine::RegisterNativeHandler(0xFDD85225B2DEA55E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDD85225B2DEA55E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_RESUME
	static auto nh_0xE1CD1E48E025E661 = rage::scrEngine::GetNativeHandler(0xE1CD1E48E025E661);
	rage::scrEngine::RegisterNativeHandler(0xE1CD1E48E025E661, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE1CD1E48E025E661(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_SET_SCRIPTED_MENU_HEIGHT
	static auto nh_0x55598D21339CB998 = rage::scrEngine::GetNativeHandler(0x55598D21339CB998);
	rage::scrEngine::RegisterNativeHandler(0x55598D21339CB998, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x55598D21339CB998(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_SPS_EXTEND_WIDESCREEN_OFF
	static auto nh_0xB695E2CD0A2DA9EE = rage::scrEngine::GetNativeHandler(0xB695E2CD0A2DA9EE);
	rage::scrEngine::RegisterNativeHandler(0xB695E2CD0A2DA9EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB695E2CD0A2DA9EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_SPS_EXTEND_WIDESCREEN_ON
	static auto nh_0xD4438C0564490E63 = rage::scrEngine::GetNativeHandler(0xD4438C0564490E63);
	rage::scrEngine::RegisterNativeHandler(0xD4438C0564490E63, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD4438C0564490E63(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/THEFEED_UPDATE_ITEM_TEXTURE
	static auto nh_0x317EBA71D7543F52 = rage::scrEngine::GetNativeHandler(0x317EBA71D7543F52);
	rage::scrEngine::RegisterNativeHandler(0x317EBA71D7543F52, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x317EBA71D7543F52(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/TIMERA (result cleaner only)
	AddResultCleaner(0x83666F9FB8FEBD4B, ResultCleaner<int>);

	// SYSTEM/TIMERB (result cleaner only)
	AddResultCleaner(0xC9D9444186B5A374, ResultCleaner<int>);

	// SYSTEM/TIMESTEP (result cleaner only)
	AddResultCleaner(0x0000000050597EE2, ResultCleaner<float>);

	// NETWORK/TITLE_TEXTURE_DOWNLOAD_REQUEST
	static auto nh_0x0B203B4AFDE53A4F = rage::scrEngine::GetNativeHandler(0x0B203B4AFDE53A4F);
	rage::scrEngine::RegisterNativeHandler(0x0B203B4AFDE53A4F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0B203B4AFDE53A4F(cxt);
	});
	        
	AddResultCleaner(0x0B203B4AFDE53A4F, ResultCleaner<int>);

	// GRAPHICS/TOGGLE_PAUSED_RENDERPHASES
	static auto nh_0xDFC252D8A3E15AB7 = rage::scrEngine::GetNativeHandler(0xDFC252D8A3E15AB7);
	rage::scrEngine::RegisterNativeHandler(0xDFC252D8A3E15AB7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDFC252D8A3E15AB7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA
	static auto nh_0xFB80AB299D2EE1BD = rage::scrEngine::GetNativeHandler(0xFB80AB299D2EE1BD);
	rage::scrEngine::RegisterNativeHandler(0xFB80AB299D2EE1BD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFB80AB299D2EE1BD(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/TOGGLE_STEALTH_RADAR
	static auto nh_0x6AFDFB93754950C7 = rage::scrEngine::GetNativeHandler(0x6AFDFB93754950C7);
	rage::scrEngine::RegisterNativeHandler(0x6AFDFB93754950C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6AFDFB93754950C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/TOGGLE_VEHICLE_MOD
	static auto nh_0x2A1F4F37F95BAD08 = rage::scrEngine::GetNativeHandler(0x2A1F4F37F95BAD08);
	rage::scrEngine::RegisterNativeHandler(0x2A1F4F37F95BAD08, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A1F4F37F95BAD08(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/TO_FLOAT (result cleaner only)
	AddResultCleaner(0xBBDA792448DB5A89, ResultCleaner<float>);

	// OBJECT/TRACK_OBJECT_VISIBILITY
	static auto nh_0xB252BC036B525623 = rage::scrEngine::GetNativeHandler(0xB252BC036B525623);
	rage::scrEngine::RegisterNativeHandler(0xB252BC036B525623, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB252BC036B525623(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/TRACK_VEHICLE_VISIBILITY
	static auto nh_0x64473AEFDCF47DCA = rage::scrEngine::GetNativeHandler(0x64473AEFDCF47DCA);
	rage::scrEngine::RegisterNativeHandler(0x64473AEFDCF47DCA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x64473AEFDCF47DCA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/TRANSFORM_TO_CAR
	static auto nh_0x2A69FFD1B42BFF9E = rage::scrEngine::GetNativeHandler(0x2A69FFD1B42BFF9E);
	rage::scrEngine::RegisterNativeHandler(0x2A69FFD1B42BFF9E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A69FFD1B42BFF9E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/TRANSFORM_TO_SUBMARINE
	static auto nh_0xBE4C854FFDB6EEBE = rage::scrEngine::GetNativeHandler(0xBE4C854FFDB6EEBE);
	rage::scrEngine::RegisterNativeHandler(0xBE4C854FFDB6EEBE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE4C854FFDB6EEBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/TRIGGER_EVENT_INTERNAL
	static auto nh_0x91310870 = rage::scrEngine::GetNativeHandler(0x91310870);
	rage::scrEngine::RegisterNativeHandler(0x91310870, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x91310870(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/TRIGGER_LATENT_SERVER_EVENT_INTERNAL
	static auto nh_0x128737ea = rage::scrEngine::GetNativeHandler(0x128737ea);
	rage::scrEngine::RegisterNativeHandler(0x128737ea, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x128737ea(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/TRIGGER_MUSIC_EVENT
	static auto nh_0x706D57B0F50DA710 = rage::scrEngine::GetNativeHandler(0x706D57B0F50DA710);
	rage::scrEngine::RegisterNativeHandler(0x706D57B0F50DA710, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x706D57B0F50DA710(cxt);
	});
	        
	AddResultCleaner(0x706D57B0F50DA710, ResultCleaner<bool>);

	// GRAPHICS/TRIGGER_SCREENBLUR_FADE_IN (result cleaner only)
	AddResultCleaner(0xA328A24AAA6B7FDC, ResultCleaner<bool>);

	// GRAPHICS/TRIGGER_SCREENBLUR_FADE_OUT (result cleaner only)
	AddResultCleaner(0xEFACC8AEF94430D5, ResultCleaner<bool>);

	// SCRIPT/TRIGGER_SCRIPT_EVENT
	static auto nh_0x5AE99C571D5BBE5D = rage::scrEngine::GetNativeHandler(0x5AE99C571D5BBE5D);
	rage::scrEngine::RegisterNativeHandler(0x5AE99C571D5BBE5D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5AE99C571D5BBE5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/TRIGGER_SERVER_EVENT_INTERNAL
	static auto nh_0x7fdd1128 = rage::scrEngine::GetNativeHandler(0x7fdd1128);
	rage::scrEngine::RegisterNativeHandler(0x7fdd1128, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7fdd1128(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/TRIGGER_SONAR_BLIP
	static auto nh_0x72DD432F3CDFC0EE = rage::scrEngine::GetNativeHandler(0x72DD432F3CDFC0EE);
	rage::scrEngine::RegisterNativeHandler(0x72DD432F3CDFC0EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x72DD432F3CDFC0EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_CANCEL_QUERY
	static auto nh_0xE9B99B6853181409 = rage::scrEngine::GetNativeHandler(0xE9B99B6853181409);
	rage::scrEngine::RegisterNativeHandler(0xE9B99B6853181409, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE9B99B6853181409(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_CLEAR_CREATE_RESULT
	static auto nh_0x17440AA15D1D3739 = rage::scrEngine::GetNativeHandler(0x17440AA15D1D3739);
	rage::scrEngine::RegisterNativeHandler(0x17440AA15D1D3739, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17440AA15D1D3739(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_CLEAR_MODIFY_RESULT
	static auto nh_0xA1E5E0204A6FCC70 = rage::scrEngine::GetNativeHandler(0xA1E5E0204A6FCC70);
	rage::scrEngine::RegisterNativeHandler(0xA1E5E0204A6FCC70, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA1E5E0204A6FCC70(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_CLEAR_OFFLINE_QUERY
	static auto nh_0x61A885D3F7CFEE9A = rage::scrEngine::GetNativeHandler(0x61A885D3F7CFEE9A);
	rage::scrEngine::RegisterNativeHandler(0x61A885D3F7CFEE9A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x61A885D3F7CFEE9A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_CLEAR_QUERY_RESULTS
	static auto nh_0xBA96394A0EECFA65 = rage::scrEngine::GetNativeHandler(0xBA96394A0EECFA65);
	rage::scrEngine::RegisterNativeHandler(0xBA96394A0EECFA65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBA96394A0EECFA65(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_COPY_CONTENT
	static auto nh_0x152D90E4C1B4738A = rage::scrEngine::GetNativeHandler(0x152D90E4C1B4738A);
	rage::scrEngine::RegisterNativeHandler(0x152D90E4C1B4738A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x152D90E4C1B4738A(cxt);
	});
	        
	AddResultCleaner(0x152D90E4C1B4738A, ResultCleaner<bool>);

	// DATAFILE/UGC_CREATE_CONTENT
	static auto nh_0xC84527E235FCA219 = rage::scrEngine::GetNativeHandler(0xC84527E235FCA219);
	rage::scrEngine::RegisterNativeHandler(0xC84527E235FCA219, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xC84527E235FCA219(cxt);
	});
	        
	AddResultCleaner(0xC84527E235FCA219, ResultCleaner<bool>);

	// DATAFILE/UGC_CREATE_MISSION
	static auto nh_0xA5EFC3E847D60507 = rage::scrEngine::GetNativeHandler(0xA5EFC3E847D60507);
	rage::scrEngine::RegisterNativeHandler(0xA5EFC3E847D60507, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xA5EFC3E847D60507(cxt);
	});
	        
	AddResultCleaner(0xA5EFC3E847D60507, ResultCleaner<bool>);

	// NETWORK/UGC_DID_GET_SUCCEED (result cleaner only)
	AddResultCleaner(0x941E5306BCD7C2C7, ResultCleaner<int>);

	// NETWORK/UGC_GET_BOOKMARKED_CONTENT
	static auto nh_0xD5A4B59980401588 = rage::scrEngine::GetNativeHandler(0xD5A4B59980401588);
	rage::scrEngine::RegisterNativeHandler(0xD5A4B59980401588, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xD5A4B59980401588(cxt);
	});
	        
	AddResultCleaner(0xD5A4B59980401588, ResultCleaner<bool>);

	// NETWORK/UGC_GET_CACHED_DESCRIPTION
	static auto nh_0x40F7E66472DF3E5C = rage::scrEngine::GetNativeHandler(0x40F7E66472DF3E5C);
	rage::scrEngine::RegisterNativeHandler(0x40F7E66472DF3E5C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x40F7E66472DF3E5C(cxt);
	});
	        
	AddResultCleaner(0x40F7E66472DF3E5C, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CONTENT_CATEGORY (result cleaner only)
	AddResultCleaner(0xA7BAB11E7C9C6C5A, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_DESCRIPTION_HASH
	static auto nh_0x7CF0448787B23758 = rage::scrEngine::GetNativeHandler(0x7CF0448787B23758);
	rage::scrEngine::RegisterNativeHandler(0x7CF0448787B23758, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7CF0448787B23758(cxt);
	});
	        
	AddResultCleaner(0x7CF0448787B23758, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_FILE_VERSION
	static auto nh_0x37025B27D9B658B1 = rage::scrEngine::GetNativeHandler(0x37025B27D9B658B1);
	rage::scrEngine::RegisterNativeHandler(0x37025B27D9B658B1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x37025B27D9B658B1(cxt);
	});
	        
	AddResultCleaner(0x37025B27D9B658B1, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_HASH (result cleaner only)
	AddResultCleaner(0x3A17A27D75C74887, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED
	static auto nh_0x993CBE59D350D225 = rage::scrEngine::GetNativeHandler(0x993CBE59D350D225);
	rage::scrEngine::RegisterNativeHandler(0x993CBE59D350D225, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x993CBE59D350D225(cxt);
	});
	        
	AddResultCleaner(0x993CBE59D350D225, ResultCleaner<bool>);

	// NETWORK/UGC_GET_CONTENT_HAS_PLAYER_RECORD
	static auto nh_0x70EA8DA57840F9BE = rage::scrEngine::GetNativeHandler(0x70EA8DA57840F9BE);
	rage::scrEngine::RegisterNativeHandler(0x70EA8DA57840F9BE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x70EA8DA57840F9BE(cxt);
	});
	        
	AddResultCleaner(0x70EA8DA57840F9BE, ResultCleaner<bool>);

	// NETWORK/UGC_GET_CONTENT_ID (result cleaner only)
	AddResultCleaner(0x55AA95F481D694D2, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CONTENT_IS_PUBLISHED
	static auto nh_0x3054F114121C21EA = rage::scrEngine::GetNativeHandler(0x3054F114121C21EA);
	rage::scrEngine::RegisterNativeHandler(0x3054F114121C21EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3054F114121C21EA(cxt);
	});
	        
	AddResultCleaner(0x3054F114121C21EA, ResultCleaner<bool>);

	// NETWORK/UGC_GET_CONTENT_IS_VERIFIED
	static auto nh_0xA9240A96C74CCA13 = rage::scrEngine::GetNativeHandler(0xA9240A96C74CCA13);
	rage::scrEngine::RegisterNativeHandler(0xA9240A96C74CCA13, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA9240A96C74CCA13(cxt);
	});
	        
	AddResultCleaner(0xA9240A96C74CCA13, ResultCleaner<bool>);

	// NETWORK/UGC_GET_CONTENT_LANGUAGE
	static auto nh_0x32DD916F3F7C9672 = rage::scrEngine::GetNativeHandler(0x32DD916F3F7C9672);
	rage::scrEngine::RegisterNativeHandler(0x32DD916F3F7C9672, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x32DD916F3F7C9672(cxt);
	});
	        
	AddResultCleaner(0x32DD916F3F7C9672, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_NAME
	static auto nh_0xBF09786A7FCAB582 = rage::scrEngine::GetNativeHandler(0xBF09786A7FCAB582);
	rage::scrEngine::RegisterNativeHandler(0xBF09786A7FCAB582, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBF09786A7FCAB582(cxt);
	});
	        
	AddResultCleaner(0xBF09786A7FCAB582, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CONTENT_NUM (result cleaner only)
	AddResultCleaner(0xE0A6138401BCB837, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_PATH (result cleaner only)
	AddResultCleaner(0xBAF6BABF9E7CCC13, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CONTENT_RATING
	static auto nh_0x1ACCFBA3D8DAB2EE = rage::scrEngine::GetNativeHandler(0x1ACCFBA3D8DAB2EE);
	rage::scrEngine::RegisterNativeHandler(0x1ACCFBA3D8DAB2EE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1ACCFBA3D8DAB2EE(cxt);
	});
	        
	AddResultCleaner(0x1ACCFBA3D8DAB2EE, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_RATING_COUNT
	static auto nh_0x759299C5BB31D2A9 = rage::scrEngine::GetNativeHandler(0x759299C5BB31D2A9);
	rage::scrEngine::RegisterNativeHandler(0x759299C5BB31D2A9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x759299C5BB31D2A9(cxt);
	});
	        
	AddResultCleaner(0x759299C5BB31D2A9, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_RATING_NEGATIVE_COUNT
	static auto nh_0x4E548C0D7AE39FF9 = rage::scrEngine::GetNativeHandler(0x4E548C0D7AE39FF9);
	rage::scrEngine::RegisterNativeHandler(0x4E548C0D7AE39FF9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x4E548C0D7AE39FF9(cxt);
	});
	        
	AddResultCleaner(0x4E548C0D7AE39FF9, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_RATING_POSITIVE_COUNT
	static auto nh_0x87E5C46C187FE0AE = rage::scrEngine::GetNativeHandler(0x87E5C46C187FE0AE);
	rage::scrEngine::RegisterNativeHandler(0x87E5C46C187FE0AE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x87E5C46C187FE0AE(cxt);
	});
	        
	AddResultCleaner(0x87E5C46C187FE0AE, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_TOTAL (result cleaner only)
	AddResultCleaner(0x769951E2455E2EB5, ResultCleaner<int>);

	// NETWORK/UGC_GET_CONTENT_UPDATED_DATE
	static auto nh_0xCFD115B373C0DF63 = rage::scrEngine::GetNativeHandler(0xCFD115B373C0DF63);
	rage::scrEngine::RegisterNativeHandler(0xCFD115B373C0DF63, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCFD115B373C0DF63(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_GET_CONTENT_USER_ID (result cleaner only)
	AddResultCleaner(0xCD67AD041A394C9C, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CONTENT_USER_NAME
	static auto nh_0x703F12425ECA8BF5 = rage::scrEngine::GetNativeHandler(0x703F12425ECA8BF5);
	rage::scrEngine::RegisterNativeHandler(0x703F12425ECA8BF5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x703F12425ECA8BF5(cxt);
	});
	        
	AddResultCleaner(0x703F12425ECA8BF5, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CREATE_CONTENT_ID (result cleaner only)
	AddResultCleaner(0xC55A0B40FFB1ED23, ResultCleaner<char*>);

	// NETWORK/UGC_GET_CREATE_RESULT (result cleaner only)
	AddResultCleaner(0xFBC5E768C7A77A6A, ResultCleaner<int>);

	// NETWORK/UGC_GET_CREATOR_NUM (result cleaner only)
	AddResultCleaner(0x597F8DBA9B206FC7, ResultCleaner<int>);

	// NETWORK/UGC_GET_CREW_CONTENT
	static auto nh_0x9F6E2821885CAEE2 = rage::scrEngine::GetNativeHandler(0x9F6E2821885CAEE2);
	rage::scrEngine::RegisterNativeHandler(0x9F6E2821885CAEE2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x9F6E2821885CAEE2(cxt);
	});
	        
	AddResultCleaner(0x9F6E2821885CAEE2, ResultCleaner<bool>);

	// NETWORK/UGC_GET_FRIEND_CONTENT
	static auto nh_0xF9E1CCAE8BA4C281 = rage::scrEngine::GetNativeHandler(0xF9E1CCAE8BA4C281);
	rage::scrEngine::RegisterNativeHandler(0xF9E1CCAE8BA4C281, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xF9E1CCAE8BA4C281(cxt);
	});
	        
	AddResultCleaner(0xF9E1CCAE8BA4C281, ResultCleaner<bool>);

	// NETWORK/UGC_GET_GET_BY_CATEGORY
	static auto nh_0x678BB03C1A3BD51E = rage::scrEngine::GetNativeHandler(0x678BB03C1A3BD51E);
	rage::scrEngine::RegisterNativeHandler(0x678BB03C1A3BD51E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x678BB03C1A3BD51E(cxt);
	});
	        
	AddResultCleaner(0x678BB03C1A3BD51E, ResultCleaner<bool>);

	// NETWORK/UGC_GET_MODIFY_RESULT (result cleaner only)
	AddResultCleaner(0x5A0A3D1A186A5508, ResultCleaner<int>);

	// NETWORK/UGC_GET_MY_CONTENT
	static auto nh_0x3195F8DD0D531052 = rage::scrEngine::GetNativeHandler(0x3195F8DD0D531052);
	rage::scrEngine::RegisterNativeHandler(0x3195F8DD0D531052, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* p3
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x3195F8DD0D531052(cxt);
	});
	        
	AddResultCleaner(0x3195F8DD0D531052, ResultCleaner<bool>);

	// NETWORK/UGC_GET_QUERY_RESULT (result cleaner only)
	AddResultCleaner(0xEDF7F927136C224B, ResultCleaner<int>);

	// NETWORK/UGC_GET_ROOT_CONTENT_ID (result cleaner only)
	AddResultCleaner(0xC0173D6BFF4E0348, ResultCleaner<char*>);

	// NETWORK/UGC_HAS_CREATE_FINISHED (result cleaner only)
	AddResultCleaner(0x5E24341A7F92A74B, ResultCleaner<bool>);

	// NETWORK/UGC_HAS_GET_FINISHED (result cleaner only)
	AddResultCleaner(0x02ADA21EA2F6918F, ResultCleaner<bool>);

	// NETWORK/UGC_HAS_MODIFY_FINISHED (result cleaner only)
	AddResultCleaner(0x299EF3C576773506, ResultCleaner<bool>);

	// NETWORK/UGC_IS_GETTING (result cleaner only)
	AddResultCleaner(0xD53ACDBEF24A46E8, ResultCleaner<bool>);

	// NETWORK/UGC_IS_LANGUAGE_SUPPORTED
	static auto nh_0xF53E48461B71EECB = rage::scrEngine::GetNativeHandler(0xF53E48461B71EECB);
	rage::scrEngine::RegisterNativeHandler(0xF53E48461B71EECB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF53E48461B71EECB(cxt);
	});
	        
	AddResultCleaner(0xF53E48461B71EECB, ResultCleaner<bool>);

	// NETWORK/UGC_POLICIES_MAKE_PRIVATE
	static auto nh_0x5CAE833B0EE0C500 = rage::scrEngine::GetNativeHandler(0x5CAE833B0EE0C500);
	rage::scrEngine::RegisterNativeHandler(0x5CAE833B0EE0C500, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5CAE833B0EE0C500(cxt);
	});
	        
	AddResultCleaner(0x5CAE833B0EE0C500, ResultCleaner<bool>);

	// NETWORK/UGC_PUBLISH
	static auto nh_0x1DE0F5F50D723CAA = rage::scrEngine::GetNativeHandler(0x1DE0F5F50D723CAA);
	rage::scrEngine::RegisterNativeHandler(0x1DE0F5F50D723CAA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x1DE0F5F50D723CAA(cxt);
	});
	        
	AddResultCleaner(0x1DE0F5F50D723CAA, ResultCleaner<bool>);

	// NETWORK/UGC_QUERY_BY_CONTENT_ID
	static auto nh_0x158EC424F35EC469 = rage::scrEngine::GetNativeHandler(0x158EC424F35EC469);
	rage::scrEngine::RegisterNativeHandler(0x158EC424F35EC469, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x158EC424F35EC469(cxt);
	});
	        
	AddResultCleaner(0x158EC424F35EC469, ResultCleaner<bool>);

	// NETWORK/UGC_QUERY_BY_CONTENT_IDS
	static auto nh_0xC7397A83F7A2A462 = rage::scrEngine::GetNativeHandler(0xC7397A83F7A2A462);
	rage::scrEngine::RegisterNativeHandler(0xC7397A83F7A2A462, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xC7397A83F7A2A462(cxt);
	});
	        
	AddResultCleaner(0xC7397A83F7A2A462, ResultCleaner<bool>);

	// NETWORK/UGC_QUERY_MY_CONTENT
	static auto nh_0x9BF438815F5D96EA = rage::scrEngine::GetNativeHandler(0x9BF438815F5D96EA);
	rage::scrEngine::RegisterNativeHandler(0x9BF438815F5D96EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x9BF438815F5D96EA(cxt);
	});
	        
	AddResultCleaner(0x9BF438815F5D96EA, ResultCleaner<bool>);

	// NETWORK/UGC_REQUEST_CACHED_DESCRIPTION (result cleaner only)
	AddResultCleaner(0x5E0165278F6339EE, ResultCleaner<int>);

	// NETWORK/UGC_REQUEST_CONTENT_DATA_FROM_INDEX (result cleaner only)
	AddResultCleaner(0x171DF6A0C07FB3DC, ResultCleaner<int>);

	// NETWORK/UGC_REQUEST_CONTENT_DATA_FROM_PARAMS
	static auto nh_0x7FD2990AF016795E = rage::scrEngine::GetNativeHandler(0x7FD2990AF016795E);
	rage::scrEngine::RegisterNativeHandler(0x7FD2990AF016795E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7FD2990AF016795E(cxt);
	});
	        
	AddResultCleaner(0x7FD2990AF016795E, ResultCleaner<int>);

	// NETWORK/UGC_SET_BOOKMARKED
	static auto nh_0x274A1519DFC1094F = rage::scrEngine::GetNativeHandler(0x274A1519DFC1094F);
	rage::scrEngine::RegisterNativeHandler(0x274A1519DFC1094F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x274A1519DFC1094F(cxt);
	});
	        
	AddResultCleaner(0x274A1519DFC1094F, ResultCleaner<bool>);

	// NETWORK/UGC_SET_DELETED
	static auto nh_0xD05D1A6C74DA3498 = rage::scrEngine::GetNativeHandler(0xD05D1A6C74DA3498);
	rage::scrEngine::RegisterNativeHandler(0xD05D1A6C74DA3498, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* p2
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD05D1A6C74DA3498(cxt);
	});
	        
	AddResultCleaner(0xD05D1A6C74DA3498, ResultCleaner<bool>);

	// DATAFILE/UGC_SET_PLAYER_DATA
	static auto nh_0x692D808C34A82143 = rage::scrEngine::GetNativeHandler(0x692D808C34A82143);
	rage::scrEngine::RegisterNativeHandler(0x692D808C34A82143, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x692D808C34A82143(cxt);
	});
	        
	AddResultCleaner(0x692D808C34A82143, ResultCleaner<bool>);

	// NETWORK/UGC_SET_QUERY_DATA_FROM_OFFLINE
	static auto nh_0xF98DDE0A8ED09323 = rage::scrEngine::GetNativeHandler(0xF98DDE0A8ED09323);
	rage::scrEngine::RegisterNativeHandler(0xF98DDE0A8ED09323, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF98DDE0A8ED09323(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/UGC_TEXTURE_DOWNLOAD_REQUEST
	static auto nh_0x308F96458B7087CC = rage::scrEngine::GetNativeHandler(0x308F96458B7087CC);
	rage::scrEngine::RegisterNativeHandler(0x308F96458B7087CC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x308F96458B7087CC(cxt);
	});
	        
	AddResultCleaner(0x308F96458B7087CC, ResultCleaner<int>);

	// DATAFILE/UGC_UPDATE_CONTENT
	static auto nh_0x648E7A5434AF7969 = rage::scrEngine::GetNativeHandler(0x648E7A5434AF7969);
	rage::scrEngine::RegisterNativeHandler(0x648E7A5434AF7969, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x648E7A5434AF7969(cxt);
	});
	        
	AddResultCleaner(0x648E7A5434AF7969, ResultCleaner<bool>);

	// DATAFILE/UGC_UPDATE_MISSION
	static auto nh_0x4645DE9980999E93 = rage::scrEngine::GetNativeHandler(0x4645DE9980999E93);
	rage::scrEngine::RegisterNativeHandler(0x4645DE9980999E93, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x4645DE9980999E93(cxt);
	});
	        
	AddResultCleaner(0x4645DE9980999E93, ResultCleaner<bool>);

	// GRAPHICS/UI3DSCENE_IS_AVAILABLE (result cleaner only)
	AddResultCleaner(0xD3A10FC7FD8D98CD, ResultCleaner<bool>);

	// GRAPHICS/UI3DSCENE_PUSH_PRESET
	static auto nh_0xF1CEA8A4198D8E9A = rage::scrEngine::GetNativeHandler(0xF1CEA8A4198D8E9A);
	rage::scrEngine::RegisterNativeHandler(0xF1CEA8A4198D8E9A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF1CEA8A4198D8E9A(cxt);
	});
	        
	AddResultCleaner(0xF1CEA8A4198D8E9A, ResultCleaner<bool>);

	// EVENT/UNBLOCK_DECISION_MAKER_EVENT
	static auto nh_0xD7CD9CF34F2C99E8 = rage::scrEngine::GetNativeHandler(0xD7CD9CF34F2C99E8);
	rage::scrEngine::RegisterNativeHandler(0xD7CD9CF34F2C99E8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD7CD9CF34F2C99E8(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/UNCUFF_PED
	static auto nh_0x67406F2C8F87FC4F = rage::scrEngine::GetNativeHandler(0x67406F2C8F87FC4F);
	rage::scrEngine::RegisterNativeHandler(0x67406F2C8F87FC4F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x67406F2C8F87FC4F(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UNFREEZE_RADIO_STATION
	static auto nh_0xFC00454CF60B91DD = rage::scrEngine::GetNativeHandler(0xFC00454CF60B91DD);
	rage::scrEngine::RegisterNativeHandler(0xFC00454CF60B91DD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFC00454CF60B91DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/UNLOAD_CLOUD_HAT
	static auto nh_0xA74802FB8D0B7814 = rage::scrEngine::GetNativeHandler(0xA74802FB8D0B7814);
	rage::scrEngine::RegisterNativeHandler(0xA74802FB8D0B7814, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA74802FB8D0B7814(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/UNLOCK_MINIMAP_ANGLE
	static auto nh_0x8183455E16C42E3A = rage::scrEngine::GetNativeHandler(0x8183455E16C42E3A);
	rage::scrEngine::RegisterNativeHandler(0x8183455E16C42E3A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8183455E16C42E3A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/UNLOCK_MINIMAP_POSITION
	static auto nh_0x3E93E06DB8EF1F30 = rage::scrEngine::GetNativeHandler(0x3E93E06DB8EF1F30);
	rage::scrEngine::RegisterNativeHandler(0x3E93E06DB8EF1F30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3E93E06DB8EF1F30(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UNLOCK_MISSION_NEWS_STORY
	static auto nh_0xB165AB7C248B2DC1 = rage::scrEngine::GetNativeHandler(0xB165AB7C248B2DC1);
	rage::scrEngine::RegisterNativeHandler(0xB165AB7C248B2DC1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB165AB7C248B2DC1(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UNLOCK_RADIO_STATION_TRACK_LIST
	static auto nh_0x031ACB6ABA18C729 = rage::scrEngine::GetNativeHandler(0x031ACB6ABA18C729);
	rage::scrEngine::RegisterNativeHandler(0x031ACB6ABA18C729, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x031ACB6ABA18C729(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/UNPATCH_DECAL_DIFFUSE_MAP
	static auto nh_0xB7ED70C49521A61D = rage::scrEngine::GetNativeHandler(0xB7ED70C49521A61D);
	rage::scrEngine::RegisterNativeHandler(0xB7ED70C49521A61D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB7ED70C49521A61D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/UNPAUSE_PLAYBACK_RECORDED_VEHICLE
	static auto nh_0x8879EE09268305D5 = rage::scrEngine::GetNativeHandler(0x8879EE09268305D5);
	rage::scrEngine::RegisterNativeHandler(0x8879EE09268305D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8879EE09268305D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/UNPIN_INTERIOR
	static auto nh_0x261CCE7EED010641 = rage::scrEngine::GetNativeHandler(0x261CCE7EED010641);
	rage::scrEngine::RegisterNativeHandler(0x261CCE7EED010641, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x261CCE7EED010641(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/UNPIN_ROPE_VERTEX
	static auto nh_0x4B5AE2EEE4A8F180 = rage::scrEngine::GetNativeHandler(0x4B5AE2EEE4A8F180);
	rage::scrEngine::RegisterNativeHandler(0x4B5AE2EEE4A8F180, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4B5AE2EEE4A8F180(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/UNREGISTER_PEDHEADSHOT
	static auto nh_0x96B1361D9B24C2FF = rage::scrEngine::GetNativeHandler(0x96B1361D9B24C2FF);
	rage::scrEngine::RegisterNativeHandler(0x96B1361D9B24C2FF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x96B1361D9B24C2FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/UNREGISTER_RAW_NUI_CALLBACK
	static auto nh_0x7fb46432 = rage::scrEngine::GetNativeHandler(0x7fb46432);
	rage::scrEngine::RegisterNativeHandler(0x7fb46432, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7fb46432(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UNREGISTER_SCRIPT_WITH_AUDIO
	static auto nh_0xA8638BE228D4751A = rage::scrEngine::GetNativeHandler(0xA8638BE228D4751A);
	rage::scrEngine::RegisterNativeHandler(0xA8638BE228D4751A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA8638BE228D4751A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/UPDATE_LIGHTS_ON_ENTITY
	static auto nh_0xDEADC0DEDEADC0DE = rage::scrEngine::GetNativeHandler(0xDEADC0DEDEADC0DE);
	rage::scrEngine::RegisterNativeHandler(0xDEADC0DEDEADC0DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDEADC0DEDEADC0DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CFX/UPDATE_MAPDATA_ENTITY
	static auto nh_0xfc52cb91 = rage::scrEngine::GetNativeHandler(0xfc52cb91);
	rage::scrEngine::RegisterNativeHandler(0xfc52cb91, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xfc52cb91(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/UPDATE_NAVMESH_BLOCKING_OBJECT
	static auto nh_0x109E99373F290687 = rage::scrEngine::GetNativeHandler(0x109E99373F290687);
	rage::scrEngine::RegisterNativeHandler(0x109E99373F290687, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x109E99373F290687(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/UPDATE_ONSCREEN_KEYBOARD (result cleaner only)
	AddResultCleaner(0x0CF2B696BBF945AE, ResultCleaner<int>);

	// PED/UPDATE_PED_HEAD_BLEND_DATA
	static auto nh_0x723538F61C647C5A = rage::scrEngine::GetNativeHandler(0x723538F61C647C5A);
	rage::scrEngine::RegisterNativeHandler(0x723538F61C647C5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x723538F61C647C5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UPDATE_SOUND_COORD
	static auto nh_0x7EC3C679D0E7E46B = rage::scrEngine::GetNativeHandler(0x7EC3C679D0E7E46B);
	rage::scrEngine::RegisterNativeHandler(0x7EC3C679D0E7E46B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7EC3C679D0E7E46B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET
	static auto nh_0x9724FB59A3E72AD0 = rage::scrEngine::GetNativeHandler(0x9724FB59A3E72AD0);
	rage::scrEngine::RegisterNativeHandler(0x9724FB59A3E72AD0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9724FB59A3E72AD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/UPDATE_TASK_HANDS_UP_DURATION
	static auto nh_0xA98FCAFD7893C834 = rage::scrEngine::GetNativeHandler(0xA98FCAFD7893C834);
	rage::scrEngine::RegisterNativeHandler(0xA98FCAFD7893C834, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA98FCAFD7893C834(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/UPDATE_TASK_SWEEP_AIM_ENTITY
	static auto nh_0xE4973DBDBE6E44B3 = rage::scrEngine::GetNativeHandler(0xE4973DBDBE6E44B3);
	rage::scrEngine::RegisterNativeHandler(0xE4973DBDBE6E44B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE4973DBDBE6E44B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/UPDATE_TASK_SWEEP_AIM_POSITION
	static auto nh_0xBB106883F5201FC4 = rage::scrEngine::GetNativeHandler(0xBB106883F5201FC4);
	rage::scrEngine::RegisterNativeHandler(0xBB106883F5201FC4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBB106883F5201FC4(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS
	static auto nh_0x47AED84213A47510 = rage::scrEngine::GetNativeHandler(0x47AED84213A47510);
	rage::scrEngine::RegisterNativeHandler(0x47AED84213A47510, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x47AED84213A47510(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/USE_FAKE_MP_CASH
	static auto nh_0x170F541E1CADD1DE = rage::scrEngine::GetNativeHandler(0x170F541E1CADD1DE);
	rage::scrEngine::RegisterNativeHandler(0x170F541E1CADD1DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x170F541E1CADD1DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/USE_FOOTSTEP_SCRIPT_SWEETENERS
	static auto nh_0xBF4DC1784BE94DFA = rage::scrEngine::GetNativeHandler(0xBF4DC1784BE94DFA);
	rage::scrEngine::RegisterNativeHandler(0xBF4DC1784BE94DFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBF4DC1784BE94DFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/USE_PARTICLE_FX_ASSET
	static auto nh_0x6C38AF3693A69A91 = rage::scrEngine::GetNativeHandler(0x6C38AF3693A69A91);
	rage::scrEngine::RegisterNativeHandler(0x6C38AF3693A69A91, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6C38AF3693A69A91(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR
	static auto nh_0x77758139EC9B66C7 = rage::scrEngine::GetNativeHandler(0x77758139EC9B66C7);
	rage::scrEngine::RegisterNativeHandler(0x77758139EC9B66C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x77758139EC9B66C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/USE_SIREN_AS_HORN
	static auto nh_0xFA932DE350266EF8 = rage::scrEngine::GetNativeHandler(0xFA932DE350266EF8);
	rage::scrEngine::RegisterNativeHandler(0xFA932DE350266EF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA932DE350266EF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE
	static auto nh_0x6493CF69859B116A = rage::scrEngine::GetNativeHandler(0x6493CF69859B116A);
	rage::scrEngine::RegisterNativeHandler(0x6493CF69859B116A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6493CF69859B116A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE
	static auto nh_0x5A353B8E6B1095B5 = rage::scrEngine::GetNativeHandler(0x5A353B8E6B1095B5);
	rage::scrEngine::RegisterNativeHandler(0x5A353B8E6B1095B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5A353B8E6B1095B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/USING_MISSION_CREATOR
	static auto nh_0xF14878FC50BEC6EE = rage::scrEngine::GetNativeHandler(0xF14878FC50BEC6EE);
	rage::scrEngine::RegisterNativeHandler(0xF14878FC50BEC6EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF14878FC50BEC6EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/VDIST (result cleaner only)
	AddResultCleaner(0x2A488C176D52CCA5, ResultCleaner<float>);

	// SYSTEM/VDIST2 (result cleaner only)
	AddResultCleaner(0xB7A628320EFF8E47, ResultCleaner<float>);

	// TASK/VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
	static auto nh_0x121F0593E0A431D7 = rage::scrEngine::GetNativeHandler(0x121F0593E0A431D7);
	rage::scrEngine::RegisterNativeHandler(0x121F0593E0A431D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x121F0593E0A431D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/VEHICLE_WAYPOINT_PLAYBACK_PAUSE
	static auto nh_0x8A4E6AC373666BC5 = rage::scrEngine::GetNativeHandler(0x8A4E6AC373666BC5);
	rage::scrEngine::RegisterNativeHandler(0x8A4E6AC373666BC5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8A4E6AC373666BC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/VEHICLE_WAYPOINT_PLAYBACK_RESUME
	static auto nh_0xDC04FCAA7839D492 = rage::scrEngine::GetNativeHandler(0xDC04FCAA7839D492);
	rage::scrEngine::RegisterNativeHandler(0xDC04FCAA7839D492, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDC04FCAA7839D492(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
	static auto nh_0x5CEB25A7D2848963 = rage::scrEngine::GetNativeHandler(0x5CEB25A7D2848963);
	rage::scrEngine::RegisterNativeHandler(0x5CEB25A7D2848963, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5CEB25A7D2848963(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/VEH_TO_NET (result cleaner only)
	AddResultCleaner(0xB4C94523F023419C, ResultCleaner<int>);

	// SYSTEM/VMAG (result cleaner only)
	AddResultCleaner(0x652D2EEEF1D3E62C, ResultCleaner<float>);

	// SYSTEM/VMAG2 (result cleaner only)
	AddResultCleaner(0xA8CEACB4F35AE058, ResultCleaner<float>);

	// SYSTEM/WAIT
	static auto nh_0x4EDE34FBADD967A6 = rage::scrEngine::GetNativeHandler(0x4EDE34FBADD967A6);
	rage::scrEngine::RegisterNativeHandler(0x4EDE34FBADD967A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4EDE34FBADD967A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/WASH_DECALS_FROM_VEHICLE
	static auto nh_0x5B712761429DBC14 = rage::scrEngine::GetNativeHandler(0x5B712761429DBC14);
	rage::scrEngine::RegisterNativeHandler(0x5B712761429DBC14, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B712761429DBC14(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/WASH_DECALS_IN_RANGE
	static auto nh_0x9C30613D50A6ADEF = rage::scrEngine::GetNativeHandler(0x9C30613D50A6ADEF);
	rage::scrEngine::RegisterNativeHandler(0x9C30613D50A6ADEF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x9C30613D50A6ADEF(cxt);
		NullifyVoid(cxt);
	});
	        
	// CUTSCENE/WAS_CUTSCENE_SKIPPED (result cleaner only)
	AddResultCleaner(0x40C8656EDAEDD569, ResultCleaner<bool>);

	// CFX/WAS_EVENT_CANCELED (result cleaner only)
	AddResultCleaner(0x58382a19, ResultCleaner<bool>);

	// PED/WAS_PED_KILLED_BY_STEALTH (result cleaner only)
	AddResultCleaner(0xF9800AA1A771B000, ResultCleaner<bool>);

	// PED/WAS_PED_KILLED_BY_TAKEDOWN (result cleaner only)
	AddResultCleaner(0x7F08E26039C7347C, ResultCleaner<bool>);

	// PED/WAS_PED_KNOCKED_OUT (result cleaner only)
	AddResultCleaner(0x61767F73EACEED21, ResultCleaner<bool>);

	// PED/WAS_PED_SKELETON_UPDATED (result cleaner only)
	AddResultCleaner(0x11B499C1E0FF8559, ResultCleaner<bool>);

	// MISC/WATER_OVERRIDE_FADE_IN
	static auto nh_0xA8434F1DFF41D6E7 = rage::scrEngine::GetNativeHandler(0xA8434F1DFF41D6E7);
	rage::scrEngine::RegisterNativeHandler(0xA8434F1DFF41D6E7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA8434F1DFF41D6E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_FADE_OUT
	static auto nh_0xC3C221ADDDE31A11 = rage::scrEngine::GetNativeHandler(0xC3C221ADDDE31A11);
	rage::scrEngine::RegisterNativeHandler(0xC3C221ADDDE31A11, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3C221ADDDE31A11(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE
	static auto nh_0x31727907B2C43C55 = rage::scrEngine::GetNativeHandler(0x31727907B2C43C55);
	rage::scrEngine::RegisterNativeHandler(0x31727907B2C43C55, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x31727907B2C43C55(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE
	static auto nh_0x405591EC8FD9096D = rage::scrEngine::GetNativeHandler(0x405591EC8FD9096D);
	rage::scrEngine::RegisterNativeHandler(0x405591EC8FD9096D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x405591EC8FD9096D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE
	static auto nh_0xB3E6360DDE733E82 = rage::scrEngine::GetNativeHandler(0xB3E6360DDE733E82);
	rage::scrEngine::RegisterNativeHandler(0xB3E6360DDE733E82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3E6360DDE733E82(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE
	static auto nh_0xF751B16FB32ABC1D = rage::scrEngine::GetNativeHandler(0xF751B16FB32ABC1D);
	rage::scrEngine::RegisterNativeHandler(0xF751B16FB32ABC1D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF751B16FB32ABC1D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_RIPPLEBUMPINESS
	static auto nh_0x7C9C0B1EEB1F9072 = rage::scrEngine::GetNativeHandler(0x7C9C0B1EEB1F9072);
	rage::scrEngine::RegisterNativeHandler(0x7C9C0B1EEB1F9072, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7C9C0B1EEB1F9072(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_RIPPLEDISTURB
	static auto nh_0xB9854DFDE0D833D6 = rage::scrEngine::GetNativeHandler(0xB9854DFDE0D833D6);
	rage::scrEngine::RegisterNativeHandler(0xB9854DFDE0D833D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB9854DFDE0D833D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS
	static auto nh_0x9F5E6BB6B34540DA = rage::scrEngine::GetNativeHandler(0x9F5E6BB6B34540DA);
	rage::scrEngine::RegisterNativeHandler(0x9F5E6BB6B34540DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9F5E6BB6B34540DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS
	static auto nh_0x6216B116083A7CB4 = rage::scrEngine::GetNativeHandler(0x6216B116083A7CB4);
	rage::scrEngine::RegisterNativeHandler(0x6216B116083A7CB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6216B116083A7CB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE
	static auto nh_0xB8F87EAD7533B176 = rage::scrEngine::GetNativeHandler(0xB8F87EAD7533B176);
	rage::scrEngine::RegisterNativeHandler(0xB8F87EAD7533B176, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8F87EAD7533B176(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE
	static auto nh_0xA7A1127490312C36 = rage::scrEngine::GetNativeHandler(0xA7A1127490312C36);
	rage::scrEngine::RegisterNativeHandler(0xA7A1127490312C36, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7A1127490312C36(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE
	static auto nh_0xC3EAD29AB273ECE8 = rage::scrEngine::GetNativeHandler(0xC3EAD29AB273ECE8);
	rage::scrEngine::RegisterNativeHandler(0xC3EAD29AB273ECE8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3EAD29AB273ECE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/WATER_OVERRIDE_SET_STRENGTH
	static auto nh_0xC54A08C85AE4D410 = rage::scrEngine::GetNativeHandler(0xC54A08C85AE4D410);
	rage::scrEngine::RegisterNativeHandler(0xC54A08C85AE4D410, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC54A08C85AE4D410(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_GET_IS_PAUSED
	static auto nh_0x701375A7D43F01CB = rage::scrEngine::GetNativeHandler(0x701375A7D43F01CB);
	rage::scrEngine::RegisterNativeHandler(0x701375A7D43F01CB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x701375A7D43F01CB(cxt);
	});
	        
	AddResultCleaner(0x701375A7D43F01CB, ResultCleaner<bool>);

	// TASK/WAYPOINT_PLAYBACK_OVERRIDE_SPEED
	static auto nh_0x7D7D2B47FA788E85 = rage::scrEngine::GetNativeHandler(0x7D7D2B47FA788E85);
	rage::scrEngine::RegisterNativeHandler(0x7D7D2B47FA788E85, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7D7D2B47FA788E85(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_PAUSE
	static auto nh_0x0F342546AA06FED5 = rage::scrEngine::GetNativeHandler(0x0F342546AA06FED5);
	rage::scrEngine::RegisterNativeHandler(0x0F342546AA06FED5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0F342546AA06FED5(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_RESUME
	static auto nh_0x244F70C84C547D2D = rage::scrEngine::GetNativeHandler(0x244F70C84C547D2D);
	rage::scrEngine::RegisterNativeHandler(0x244F70C84C547D2D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x244F70C84C547D2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_START_AIMING_AT_COORD
	static auto nh_0x8968400D900ED8B3 = rage::scrEngine::GetNativeHandler(0x8968400D900ED8B3);
	rage::scrEngine::RegisterNativeHandler(0x8968400D900ED8B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8968400D900ED8B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_START_AIMING_AT_PED
	static auto nh_0x20E330937C399D29 = rage::scrEngine::GetNativeHandler(0x20E330937C399D29);
	rage::scrEngine::RegisterNativeHandler(0x20E330937C399D29, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x20E330937C399D29(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD
	static auto nh_0x057A25CFCC9DB671 = rage::scrEngine::GetNativeHandler(0x057A25CFCC9DB671);
	rage::scrEngine::RegisterNativeHandler(0x057A25CFCC9DB671, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x057A25CFCC9DB671(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED
	static auto nh_0xE70BA7B90F8390DC = rage::scrEngine::GetNativeHandler(0xE70BA7B90F8390DC);
	rage::scrEngine::RegisterNativeHandler(0xE70BA7B90F8390DC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE70BA7B90F8390DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING
	static auto nh_0x47EFA040EBB8E2EA = rage::scrEngine::GetNativeHandler(0x47EFA040EBB8E2EA);
	rage::scrEngine::RegisterNativeHandler(0x47EFA040EBB8E2EA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x47EFA040EBB8E2EA(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
	static auto nh_0x6599D834B12D0800 = rage::scrEngine::GetNativeHandler(0x6599D834B12D0800);
	rage::scrEngine::RegisterNativeHandler(0x6599D834B12D0800, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6599D834B12D0800(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT
	static auto nh_0xB629A298081F876F = rage::scrEngine::GetNativeHandler(0xB629A298081F876F);
	rage::scrEngine::RegisterNativeHandler(0xB629A298081F876F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xB629A298081F876F(cxt);
	});
	        
	AddResultCleaner(0xB629A298081F876F, ResultCleaner<bool>);

	// TASK/WAYPOINT_RECORDING_GET_COORD
	static auto nh_0x2FB897405C90B361 = rage::scrEngine::GetNativeHandler(0x2FB897405C90B361);
	rage::scrEngine::RegisterNativeHandler(0x2FB897405C90B361, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x2FB897405C90B361(cxt);
	});
	        
	AddResultCleaner(0x2FB897405C90B361, ResultCleaner<bool>);

	// TASK/WAYPOINT_RECORDING_GET_NUM_POINTS
	static auto nh_0x5343532C01A07234 = rage::scrEngine::GetNativeHandler(0x5343532C01A07234);
	rage::scrEngine::RegisterNativeHandler(0x5343532C01A07234, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5343532C01A07234(cxt);
	});
	        
	AddResultCleaner(0x5343532C01A07234, ResultCleaner<bool>);

	// TASK/WAYPOINT_RECORDING_GET_SPEED_AT_POINT
	static auto nh_0x005622AEBC33ACA9 = rage::scrEngine::GetNativeHandler(0x005622AEBC33ACA9);
	rage::scrEngine::RegisterNativeHandler(0x005622AEBC33ACA9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x005622AEBC33ACA9(cxt);
	});
	        
	AddResultCleaner(0x005622AEBC33ACA9, ResultCleaner<float>);

	// MONEY/WITHDRAW_VC (result cleaner only)
	AddResultCleaner(0xF70EFA14FE091429, ResultCleaner<int>);

	// ENTITY/WOULD_ENTITY_BE_OCCLUDED (result cleaner only)
	AddResultCleaner(0xEE5D2A122E09EC42, ResultCleaner<bool>);

	// NETWORK/_ACTIVATE_DAMAGE_TRACKER_ON_PLAYER
	static auto nh_0xBEC0816FF5ACBCDA = rage::scrEngine::GetNativeHandler(0xBEC0816FF5ACBCDA);
	rage::scrEngine::RegisterNativeHandler(0xBEC0816FF5ACBCDA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBEC0816FF5ACBCDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// REPLAY/_ACTIVATE_ROCKSTAR_EDITOR
	static auto nh_0x49DA8145672B2725 = rage::scrEngine::GetNativeHandler(0x49DA8145672B2725);
	rage::scrEngine::RegisterNativeHandler(0x49DA8145672B2725, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x49DA8145672B2725(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_ADD_AMMO_TO_PED_BY_TYPE
	static auto nh_0x2472622CE1F2D45F = rage::scrEngine::GetNativeHandler(0x2472622CE1F2D45F);
	rage::scrEngine::RegisterNativeHandler(0x2472622CE1F2D45F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2472622CE1F2D45F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_ADD_BLIP_FOR_AREA (result cleaner only)
	AddResultCleaner(0xCE5D0E5E315DB238, ResultCleaner<int>);

	// MISC/_ADD_DISPATCH_SPAWN_BLOCKING_ANGLED_AREA (result cleaner only)
	AddResultCleaner(0x918C7B2D2FF3928B, ResultCleaner<int>);

	// MISC/_ADD_DISPATCH_SPAWN_BLOCKING_AREA (result cleaner only)
	AddResultCleaner(0x2D4259F1FEB81DA9, ResultCleaner<int>);

	// GRAPHICS/_ADD_OIL_DECAL (result cleaner only)
	AddResultCleaner(0x126D7F89FE859A5E, ResultCleaner<int>);

	// MISC/_ADD_TACTICAL_ANALYSIS_POINT
	static auto nh_0xB8721407EE9C3FF6 = rage::scrEngine::GetNativeHandler(0xB8721407EE9C3FF6);
	rage::scrEngine::RegisterNativeHandler(0xB8721407EE9C3FF6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB8721407EE9C3FF6(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
	static auto nh_0xCC3FDDED67BCFC63 = rage::scrEngine::GetNativeHandler(0xCC3FDDED67BCFC63);
	rage::scrEngine::RegisterNativeHandler(0xCC3FDDED67BCFC63, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCC3FDDED67BCFC63(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_ANIMATE_GAMEPLAY_CAM_ZOOM
	static auto nh_0xDF2E1F7742402E81 = rage::scrEngine::GetNativeHandler(0xDF2E1F7742402E81);
	rage::scrEngine::RegisterNativeHandler(0xDF2E1F7742402E81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF2E1F7742402E81(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_ANIMPOSTFX_GET_UNK
	static auto nh_0xE35B38A27E8E7179 = rage::scrEngine::GetNativeHandler(0xE35B38A27E8E7179);
	rage::scrEngine::RegisterNativeHandler(0xE35B38A27E8E7179, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE35B38A27E8E7179(cxt);
	});
	        
	AddResultCleaner(0xE35B38A27E8E7179, ResultCleaner<float>);

	// GRAPHICS/_ANIMPOSTFX_STOP_AND_DO_UNK
	static auto nh_0xD2209BE128B5418C = rage::scrEngine::GetNativeHandler(0xD2209BE128B5418C);
	rage::scrEngine::RegisterNativeHandler(0xD2209BE128B5418C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD2209BE128B5418C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_ARE_BOMB_BAY_DOORS_OPEN (result cleaner only)
	AddResultCleaner(0xD0917A423314BBA8, ResultCleaner<bool>);

	// VEHICLE/_ARE_HELI_STUB_WINGS_DEPLOYED (result cleaner only)
	AddResultCleaner(0xAEF12960FA943792, ResultCleaner<bool>);

	// VEHICLE/_ARE_OUTRIGGER_LEGS_DEPLOYED (result cleaner only)
	AddResultCleaner(0x3A9128352EAC9E85, ResultCleaner<bool>);

	// VEHICLE/_ARE_PLANE_WINGS_INTACT (result cleaner only)
	AddResultCleaner(0x5991A01434CE9677, ResultCleaner<bool>);

	// CAM/_ATTACH_CAM_TO_PED_BONE_2
	static auto nh_0x149916F50C34A40D = rage::scrEngine::GetNativeHandler(0x149916F50C34A40D);
	rage::scrEngine::RegisterNativeHandler(0x149916F50C34A40D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x149916F50C34A40D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_ATTACH_CAM_TO_VEHICLE_BONE
	static auto nh_0x8DB3F12A02CAEF72 = rage::scrEngine::GetNativeHandler(0x8DB3F12A02CAEF72);
	rage::scrEngine::RegisterNativeHandler(0x8DB3F12A02CAEF72, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8DB3F12A02CAEF72(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_ATTACH_CONTAINER_TO_HANDLER_FRAME
	static auto nh_0x6A98C2ECF57FA5D4 = rage::scrEngine::GetNativeHandler(0x6A98C2ECF57FA5D4);
	rage::scrEngine::RegisterNativeHandler(0x6A98C2ECF57FA5D4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A98C2ECF57FA5D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_ATTACH_ENTITY_BONE_TO_ENTITY_BONE
	static auto nh_0x5C48B75732C8456C = rage::scrEngine::GetNativeHandler(0x5C48B75732C8456C);
	rage::scrEngine::RegisterNativeHandler(0x5C48B75732C8456C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C48B75732C8456C(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY
	static auto nh_0xFD1695C5D3B05439 = rage::scrEngine::GetNativeHandler(0xFD1695C5D3B05439);
	rage::scrEngine::RegisterNativeHandler(0xFD1695C5D3B05439, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFD1695C5D3B05439(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_BEGIN_TEXT_COMMAND_GET_WIDTH
	static auto nh_0x54CE8AC98E120CAB = rage::scrEngine::GetNativeHandler(0x54CE8AC98E120CAB);
	rage::scrEngine::RegisterNativeHandler(0x54CE8AC98E120CAB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x54CE8AC98E120CAB(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_BEGIN_TEXT_COMMAND_LINE_COUNT
	static auto nh_0x521FB041D93DD0E4 = rage::scrEngine::GetNativeHandler(0x521FB041D93DD0E4);
	rage::scrEngine::RegisterNativeHandler(0x521FB041D93DD0E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x521FB041D93DD0E4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_BEGIN_TEXT_COMMAND_OBJECTIVE
	static auto nh_0x23D69E0465570028 = rage::scrEngine::GetNativeHandler(0x23D69E0465570028);
	rage::scrEngine::RegisterNativeHandler(0x23D69E0465570028, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x23D69E0465570028(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS
	static auto nh_0xE43A13C9E4CCCBCF = rage::scrEngine::GetNativeHandler(0xE43A13C9E4CCCBCF);
	rage::scrEngine::RegisterNativeHandler(0xE43A13C9E4CCCBCF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE43A13C9E4CCCBCF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_CANCEL_ONSCREEN_KEYBOARD
	static auto nh_0x58A39BE597CE99CD = rage::scrEngine::GetNativeHandler(0x58A39BE597CE99CD);
	rage::scrEngine::RegisterNativeHandler(0x58A39BE597CE99CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x58A39BE597CE99CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_CAN_ANCHOR_BOAT_HERE_2 (result cleaner only)
	AddResultCleaner(0x24F4121D07579880, ResultCleaner<bool>);

	// MONEY/_CAN_PAY_GOON (result cleaner only)
	AddResultCleaner(0x9777734DAD16992F, ResultCleaner<bool>);

	// NETWORK/_CAN_REGISTER_MISSION_PICKUPS (result cleaner only)
	AddResultCleaner(0x0A49D1CB6E34AF72, ResultCleaner<bool>);

	// GRAPHICS/_CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE
	static auto nh_0x27CB772218215325 = rage::scrEngine::GetNativeHandler(0x27CB772218215325);
	rage::scrEngine::RegisterNativeHandler(0x27CB772218215325, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x27CB772218215325(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_MOVE_FINGER
	static auto nh_0x95C9E72F3D7DEC9B = rage::scrEngine::GetNativeHandler(0x95C9E72F3D7DEC9B);
	rage::scrEngine::RegisterNativeHandler(0x95C9E72F3D7DEC9B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x95C9E72F3D7DEC9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_DISTANCE
	static auto nh_0x53F4892D18EC90A4 = rage::scrEngine::GetNativeHandler(0x53F4892D18EC90A4);
	rage::scrEngine::RegisterNativeHandler(0x53F4892D18EC90A4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x53F4892D18EC90A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_HEAD_HEIGHT
	static auto nh_0x466DA42C89865553 = rage::scrEngine::GetNativeHandler(0x466DA42C89865553);
	rage::scrEngine::RegisterNativeHandler(0x466DA42C89865553, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x466DA42C89865553(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_HEAD_PITCH
	static auto nh_0xD6ADE981781FCA09 = rage::scrEngine::GetNativeHandler(0xD6ADE981781FCA09);
	rage::scrEngine::RegisterNativeHandler(0xD6ADE981781FCA09, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD6ADE981781FCA09(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_HEAD_ROLL
	static auto nh_0xF1E22DC13F5EEBAD = rage::scrEngine::GetNativeHandler(0xF1E22DC13F5EEBAD);
	rage::scrEngine::RegisterNativeHandler(0xF1E22DC13F5EEBAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1E22DC13F5EEBAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_HORIZONTAL_OFFSET
	static auto nh_0x1B0B4AEED5B9B41C = rage::scrEngine::GetNativeHandler(0x1B0B4AEED5B9B41C);
	rage::scrEngine::RegisterNativeHandler(0x1B0B4AEED5B9B41C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B0B4AEED5B9B41C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_LEAN
	static auto nh_0x44E44169EF70138E = rage::scrEngine::GetNativeHandler(0x44E44169EF70138E);
	rage::scrEngine::RegisterNativeHandler(0x44E44169EF70138E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44E44169EF70138E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_ROLL
	static auto nh_0x15E69E2802C24B8D = rage::scrEngine::GetNativeHandler(0x15E69E2802C24B8D);
	rage::scrEngine::RegisterNativeHandler(0x15E69E2802C24B8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x15E69E2802C24B8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MOBILE/_CELL_CAM_SET_VERTICAL_OFFSET
	static auto nh_0x3117D84EFA60F77B = rage::scrEngine::GetNativeHandler(0x3117D84EFA60F77B);
	rage::scrEngine::RegisterNativeHandler(0x3117D84EFA60F77B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3117D84EFA60F77B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_CLAMP_GAMEPLAY_CAM_PITCH
	static auto nh_0xA516C198B7DCA1E1 = rage::scrEngine::GetNativeHandler(0xA516C198B7DCA1E1);
	rage::scrEngine::RegisterNativeHandler(0xA516C198B7DCA1E1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA516C198B7DCA1E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_CLAMP_GAMEPLAY_CAM_YAW
	static auto nh_0x8F993D26E0CA5E8E = rage::scrEngine::GetNativeHandler(0x8F993D26E0CA5E8E);
	rage::scrEngine::RegisterNativeHandler(0x8F993D26E0CA5E8E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F993D26E0CA5E8E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_CLEANUP_ASYNC_INSTALL
	static auto nh_0xC79AE21974B01FB2 = rage::scrEngine::GetNativeHandler(0xC79AE21974B01FB2);
	rage::scrEngine::RegisterNativeHandler(0xC79AE21974B01FB2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC79AE21974B01FB2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_CLEAR_ALL_BLIP_ROUTES
	static auto nh_0xD12882D3FF82BF11 = rage::scrEngine::GetNativeHandler(0xD12882D3FF82BF11);
	rage::scrEngine::RegisterNativeHandler(0xD12882D3FF82BF11, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD12882D3FF82BF11(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_CLEAR_CLOUD_HAT
	static auto nh_0x957E790EA1727B64 = rage::scrEngine::GetNativeHandler(0x957E790EA1727B64);
	rage::scrEngine::RegisterNativeHandler(0x957E790EA1727B64, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x957E790EA1727B64(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_CLEAR_EXTRA_TIMECYCLE_MODIFIER
	static auto nh_0x92CCC17A7A2285DA = rage::scrEngine::GetNativeHandler(0x92CCC17A7A2285DA);
	rage::scrEngine::RegisterNativeHandler(0x92CCC17A7A2285DA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92CCC17A7A2285DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_CLEAR_FACIAL_CLIPSET_OVERRIDE
	static auto nh_0x637822DC2AFEEBF8 = rage::scrEngine::GetNativeHandler(0x637822DC2AFEEBF8);
	rage::scrEngine::RegisterNativeHandler(0x637822DC2AFEEBF8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x637822DC2AFEEBF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_CLEAR_GARAGE_AREA
	static auto nh_0xDA05194260CDCDF9 = rage::scrEngine::GetNativeHandler(0xDA05194260CDCDF9);
	rage::scrEngine::RegisterNativeHandler(0xDA05194260CDCDF9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA05194260CDCDF9(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/_CLEAR_INTERIOR_FOR_ENTITY
	static auto nh_0x85D5422B2039A70D = rage::scrEngine::GetNativeHandler(0x85D5422B2039A70D);
	rage::scrEngine::RegisterNativeHandler(0x85D5422B2039A70D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x85D5422B2039A70D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_CLEAR_LAUNCH_PARAMS
	static auto nh_0x966DD84FB6A46017 = rage::scrEngine::GetNativeHandler(0x966DD84FB6A46017);
	rage::scrEngine::RegisterNativeHandler(0x966DD84FB6A46017, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x966DD84FB6A46017(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_CLEAR_PED_COVER_CLIPSET_OVERRIDE
	static auto nh_0xC79196DCB36F6121 = rage::scrEngine::GetNativeHandler(0xC79196DCB36F6121);
	rage::scrEngine::RegisterNativeHandler(0xC79196DCB36F6121, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC79196DCB36F6121(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE
	static auto nh_0x290D248E25815AE8 = rage::scrEngine::GetNativeHandler(0x290D248E25815AE8);
	rage::scrEngine::RegisterNativeHandler(0x290D248E25815AE8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x290D248E25815AE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_CLEAR_RACE_GALLERY_BLIPS
	static auto nh_0x2708FC083123F9FF = rage::scrEngine::GetNativeHandler(0x2708FC083123F9FF);
	rage::scrEngine::RegisterNativeHandler(0x2708FC083123F9FF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2708FC083123F9FF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_CLEAR_RESTART_CUSTOM_POSITION
	static auto nh_0xA2716D40842EAF79 = rage::scrEngine::GetNativeHandler(0xA2716D40842EAF79);
	rage::scrEngine::RegisterNativeHandler(0xA2716D40842EAF79, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2716D40842EAF79(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_CLEAR_TACTICAL_ANALYSIS_POINTS
	static auto nh_0xB3CD58CCA6CDA852 = rage::scrEngine::GetNativeHandler(0xB3CD58CCA6CDA852);
	rage::scrEngine::RegisterNativeHandler(0xB3CD58CCA6CDA852, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB3CD58CCA6CDA852(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE
	static auto nh_0xAA3F739ABDDCF21F = rage::scrEngine::GetNativeHandler(0xAA3F739ABDDCF21F);
	rage::scrEngine::RegisterNativeHandler(0xAA3F739ABDDCF21F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA3F739ABDDCF21F(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_CLEAR_VEHICLE_TASKS
	static auto nh_0xDBBC7A2432524127 = rage::scrEngine::GetNativeHandler(0xDBBC7A2432524127);
	rage::scrEngine::RegisterNativeHandler(0xDBBC7A2432524127, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBBC7A2432524127(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_CLONE_PED_EX
	static auto nh_0x668FD40BCBA5DE48 = rage::scrEngine::GetNativeHandler(0x668FD40BCBA5DE48);
	rage::scrEngine::RegisterNativeHandler(0x668FD40BCBA5DE48, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x668FD40BCBA5DE48(cxt);
	});
	        
	AddResultCleaner(0x668FD40BCBA5DE48, ResultCleaner<int>);

	// PED/_CLONE_PED_TO_TARGET_EX
	static auto nh_0x148B08C2D2ACB884 = rage::scrEngine::GetNativeHandler(0x148B08C2D2ACB884);
	rage::scrEngine::RegisterNativeHandler(0x148B08C2D2ACB884, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x148B08C2D2ACB884(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_CLOSE_MULTIPLAYER_CHAT
	static auto nh_0x1AC8F4AD40E22127 = rage::scrEngine::GetNativeHandler(0x1AC8F4AD40E22127);
	rage::scrEngine::RegisterNativeHandler(0x1AC8F4AD40E22127, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1AC8F4AD40E22127(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_COPY_MEMORY
	static auto nh_0x213AEB2B90CBA7AC = rage::scrEngine::GetNativeHandler(0x213AEB2B90CBA7AC);
	rage::scrEngine::RegisterNativeHandler(0x213AEB2B90CBA7AC, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* dst
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x213AEB2B90CBA7AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_CREATE_AIR_DEFENSE_AREA (result cleaner only)
	AddResultCleaner(0x9DA58CDBF6BDBC08, ResultCleaner<int>);

	// WEAPON/_CREATE_AIR_DEFENSE_SPHERE (result cleaner only)
	AddResultCleaner(0x91EF34584710BE99, ResultCleaner<int>);

	// OBJECT/_CREATE_NON_NETWORKED_AMBIENT_PICKUP
	static auto nh_0x9C93764223E29C50 = rage::scrEngine::GetNativeHandler(0x9C93764223E29C50);
	rage::scrEngine::RegisterNativeHandler(0x9C93764223E29C50, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x9C93764223E29C50(cxt);
	});
	        
	AddResultCleaner(0x9C93764223E29C50, ResultCleaner<int>);

	// PED/_CREATE_SYNCHRONIZED_SCENE_2 (result cleaner only)
	AddResultCleaner(0x62EC273D00187DCA, ResultCleaner<int>);

	// HUD/_DELETE_WAYPOINT
	static auto nh_0xD8E694757BCEA8E9 = rage::scrEngine::GetNativeHandler(0xD8E694757BCEA8E9);
	rage::scrEngine::RegisterNativeHandler(0xD8E694757BCEA8E9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD8E694757BCEA8E9(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_DISABLE_CAM_COLLISION_FOR_ENTITY
	static auto nh_0x2AED6301F67007D5 = rage::scrEngine::GetNativeHandler(0x2AED6301F67007D5);
	rage::scrEngine::RegisterNativeHandler(0x2AED6301F67007D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2AED6301F67007D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_DISABLE_FIRST_PERSON_CAM_THIS_FRAME
	static auto nh_0xDE2EF5DA284CC8DF = rage::scrEngine::GetNativeHandler(0xDE2EF5DA284CC8DF);
	rage::scrEngine::RegisterNativeHandler(0xDE2EF5DA284CC8DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDE2EF5DA284CC8DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_DISABLE_INPUT_GROUP
	static auto nh_0x7F4724035FDCA1DD = rage::scrEngine::GetNativeHandler(0x7F4724035FDCA1DD);
	rage::scrEngine::RegisterNativeHandler(0x7F4724035FDCA1DD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F4724035FDCA1DD(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_DISABLE_MULTIPLAYER_CHAT
	static auto nh_0x1DB21A44B09E8BA3 = rage::scrEngine::GetNativeHandler(0x1DB21A44B09E8BA3);
	rage::scrEngine::RegisterNativeHandler(0x1DB21A44B09E8BA3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DB21A44B09E8BA3(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/_DISABLE_ROCKSTAR_EDITOR_CAMERA_CHANGES
	static auto nh_0xAF66DCEE6609B148 = rage::scrEngine::GetNativeHandler(0xAF66DCEE6609B148);
	rage::scrEngine::RegisterNativeHandler(0xAF66DCEE6609B148, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAF66DCEE6609B148(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DISABLE_SCRIPT_AMBIENT_EFFECTS
	static auto nh_0xEFD97FF47B745B8D = rage::scrEngine::GetNativeHandler(0xEFD97FF47B745B8D);
	rage::scrEngine::RegisterNativeHandler(0xEFD97FF47B745B8D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEFD97FF47B745B8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
	static auto nh_0xADFF1B2A555F5FBA = rage::scrEngine::GetNativeHandler(0xADFF1B2A555F5FBA);
	rage::scrEngine::RegisterNativeHandler(0xADFF1B2A555F5FBA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xADFF1B2A555F5FBA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_DISABLE_VEHICLE_NEON_LIGHTS
	static auto nh_0x83F813570FF519DE = rage::scrEngine::GetNativeHandler(0x83F813570FF519DE);
	rage::scrEngine::RegisterNativeHandler(0x83F813570FF519DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x83F813570FF519DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME
	static auto nh_0x32CAEDF24A583345 = rage::scrEngine::GetNativeHandler(0x32CAEDF24A583345);
	rage::scrEngine::RegisterNativeHandler(0x32CAEDF24A583345, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x32CAEDF24A583345(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_DISABLE_VEHICLE_WORLD_COLLISION
	static auto nh_0x75627043C6AA90AD = rage::scrEngine::GetNativeHandler(0x75627043C6AA90AD);
	rage::scrEngine::RegisterNativeHandler(0x75627043C6AA90AD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x75627043C6AA90AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_DISPLAY_HUD_WHEN_DEAD_THIS_FRAME
	static auto nh_0x7669F9E39DC17063 = rage::scrEngine::GetNativeHandler(0x7669F9E39DC17063);
	rage::scrEngine::RegisterNativeHandler(0x7669F9E39DC17063, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7669F9E39DC17063(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_DOES_AIR_DEFENSE_ZONE_EXIST (result cleaner only)
	AddResultCleaner(0xCD79A550999D7D4F, ResultCleaner<bool>);

	// ENTITY/_DOES_ENTITY_HAVE_ANIM_DIRECTOR (result cleaner only)
	AddResultCleaner(0x2158E81A6AF65EA9, ResultCleaner<bool>);

	// ENTITY/_DOES_ENTITY_HAVE_SKELETON_DATA (result cleaner only)
	AddResultCleaner(0x764EB96874EFFDC1, ResultCleaner<bool>);

	// PED/_DOES_RELATIONSHIP_GROUP_EXIST (result cleaner only)
	AddResultCleaner(0xCC6E3B6BB69501F1, ResultCleaner<bool>);

	// PHYSICS/_DOES_ROPE_BELONG_TO_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0x271C9D3ACA5D6409, ResultCleaner<bool>);

	// PED/_DOES_SCENARIO_BLOCKING_AREA_EXIST (result cleaner only)
	AddResultCleaner(0x8A24B067D175A7BD, ResultCleaner<bool>);

	// VEHICLE/_DOES_VEHICLE_ALLOW_RAPPEL (result cleaner only)
	AddResultCleaner(0x4E417C547182C84D, ResultCleaner<bool>);

	// VEHICLE/_DOES_VEHICLE_HAVE_LANDING_GEAR (result cleaner only)
	AddResultCleaner(0xE43701C36CAFF1A4, ResultCleaner<bool>);

	// VEHICLE/_DOES_VEHICLE_TYRE_EXIST (result cleaner only)
	AddResultCleaner(0x534E36D4DB9ECC5D, ResultCleaner<bool>);

	// OBJECT/_DOOR_CONTROL
	static auto nh_0x9B12F9A24FABEDB0 = rage::scrEngine::GetNativeHandler(0x9B12F9A24FABEDB0);
	rage::scrEngine::RegisterNativeHandler(0x9B12F9A24FABEDB0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9B12F9A24FABEDB0(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE (result cleaner only)
	AddResultCleaner(0xE851471AEFC3374F, ResultCleaner<float>);

	// GRAPHICS/_DRAW_BINK_MOVIE
	static auto nh_0x7118E83EEB9F7238 = rage::scrEngine::GetNativeHandler(0x7118E83EEB9F7238);
	rage::scrEngine::RegisterNativeHandler(0x7118E83EEB9F7238, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7118E83EEB9F7238(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_INTERACTIVE_SPRITE
	static auto nh_0x2BC54A8188768488 = rage::scrEngine::GetNativeHandler(0x2BC54A8188768488);
	rage::scrEngine::RegisterNativeHandler(0x2BC54A8188768488, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2BC54A8188768488(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_LIGHT_WITH_RANGE_AND_SHADOW
	static auto nh_0xF49E9A9716A04595 = rage::scrEngine::GetNativeHandler(0xF49E9A9716A04595);
	rage::scrEngine::RegisterNativeHandler(0xF49E9A9716A04595, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF49E9A9716A04595(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_MARKER_2
	static auto nh_0xE82728F0DE75D13A = rage::scrEngine::GetNativeHandler(0xE82728F0DE75D13A);
	rage::scrEngine::RegisterNativeHandler(0xE82728F0DE75D13A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(21))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(22))) { return; }
		nh_0xE82728F0DE75D13A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_SHOWROOM
	static auto nh_0x98C4FE6EC34154CA = rage::scrEngine::GetNativeHandler(0x98C4FE6EC34154CA);
	rage::scrEngine::RegisterNativeHandler(0x98C4FE6EC34154CA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x98C4FE6EC34154CA(cxt);
	});
	        
	AddResultCleaner(0x98C4FE6EC34154CA, ResultCleaner<bool>);

	// GRAPHICS/_DRAW_SPHERE
	static auto nh_0x799017F9E3B10112 = rage::scrEngine::GetNativeHandler(0x799017F9E3B10112);
	rage::scrEngine::RegisterNativeHandler(0x799017F9E3B10112, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x799017F9E3B10112(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_SPOT_LIGHT_WITH_SHADOW
	static auto nh_0x5BCA583A583194DB = rage::scrEngine::GetNativeHandler(0x5BCA583A583194DB);
	rage::scrEngine::RegisterNativeHandler(0x5BCA583A583194DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5BCA583A583194DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_SPRITE_POLY
	static auto nh_0x29280002282F1928 = rage::scrEngine::GetNativeHandler(0x29280002282F1928);
	rage::scrEngine::RegisterNativeHandler(0x29280002282F1928, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(13))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(14))) { return; }
		nh_0x29280002282F1928(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_SPRITE_POLY_2
	static auto nh_0x736D7AA1B750856B = rage::scrEngine::GetNativeHandler(0x736D7AA1B750856B);
	rage::scrEngine::RegisterNativeHandler(0x736D7AA1B750856B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(21))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(22))) { return; }
		nh_0x736D7AA1B750856B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_DRAW_SPRITE_UV
	static auto nh_0x95812F9B26074726 = rage::scrEngine::GetNativeHandler(0x95812F9B26074726);
	rage::scrEngine::RegisterNativeHandler(0x95812F9B26074726, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x95812F9B26074726(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_EJECT_JB700_ROOF
	static auto nh_0xE38CB9D7D39FDBCC = rage::scrEngine::GetNativeHandler(0xE38CB9D7D39FDBCC);
	rage::scrEngine::RegisterNativeHandler(0xE38CB9D7D39FDBCC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE38CB9D7D39FDBCC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_ENABLE_AIRCRAFT_OBSTACLE_AVOIDANCE
	static auto nh_0x8AA9180DE2FEDD45 = rage::scrEngine::GetNativeHandler(0x8AA9180DE2FEDD45);
	rage::scrEngine::RegisterNativeHandler(0x8AA9180DE2FEDD45, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8AA9180DE2FEDD45(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_ENABLE_CROSSHAIR_THIS_FRAME
	static auto nh_0xEA7F0AD7E9BA676F = rage::scrEngine::GetNativeHandler(0xEA7F0AD7E9BA676F);
	rage::scrEngine::RegisterNativeHandler(0xEA7F0AD7E9BA676F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEA7F0AD7E9BA676F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_ENABLE_ENTITY_UNK
	static auto nh_0x6CE177D014502E8A = rage::scrEngine::GetNativeHandler(0x6CE177D014502E8A);
	rage::scrEngine::RegisterNativeHandler(0x6CE177D014502E8A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6CE177D014502E8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/_ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME
	static auto nh_0x50C375537449F369 = rage::scrEngine::GetNativeHandler(0x50C375537449F369);
	rage::scrEngine::RegisterNativeHandler(0x50C375537449F369, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50C375537449F369(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_END_TEXT_COMMAND_GET_WIDTH (result cleaner only)
	AddResultCleaner(0x85F061DA64ED2F67, ResultCleaner<float>);

	// HUD/_END_TEXT_COMMAND_LINE_COUNT (result cleaner only)
	AddResultCleaner(0x9040DFB09BE75706, ResultCleaner<int>);

	// HUD/_END_TEXT_COMMAND_OBJECTIVE
	static auto nh_0xCFDBDF5AE59BA0F4 = rage::scrEngine::GetNativeHandler(0xCFDBDF5AE59BA0F4);
	rage::scrEngine::RegisterNativeHandler(0xCFDBDF5AE59BA0F4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCFDBDF5AE59BA0F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_END_TEXT_COMMAND_SCALEFORM_STRING_2
	static auto nh_0xAE4E8157D9ECF087 = rage::scrEngine::GetNativeHandler(0xAE4E8157D9ECF087);
	rage::scrEngine::RegisterNativeHandler(0xAE4E8157D9ECF087, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE4E8157D9ECF087(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_GXT_ENTRY
	static auto nh_0xC6F580E4C94926AC = rage::scrEngine::GetNativeHandler(0xC6F580E4C94926AC);
	rage::scrEngine::RegisterNativeHandler(0xC6F580E4C94926AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xC6F580E4C94926AC(cxt);
	});
	        
	AddResultCleaner(0xC6F580E4C94926AC, ResultCleaner<int>);

	// HUD/_END_TEXT_COMMAND_THEFEED_POST_REPLAY_ICON
	static auto nh_0xD202B92CBF1D816F = rage::scrEngine::GetNativeHandler(0xD202B92CBF1D816F);
	rage::scrEngine::RegisterNativeHandler(0xD202B92CBF1D816F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD202B92CBF1D816F(cxt);
	});
	        
	AddResultCleaner(0xD202B92CBF1D816F, ResultCleaner<int>);

	// HUD/_END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT
	static auto nh_0xDD6CB2CCE7C2735C = rage::scrEngine::GetNativeHandler(0xDD6CB2CCE7C2735C);
	rage::scrEngine::RegisterNativeHandler(0xDD6CB2CCE7C2735C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xDD6CB2CCE7C2735C(cxt);
	});
	        
	AddResultCleaner(0xDD6CB2CCE7C2735C, ResultCleaner<int>);

	// NETWORK/_FACEBOOK_DO_UNK_CHECK (result cleaner only)
	AddResultCleaner(0xA75E2B6733DA5142, ResultCleaner<bool>);

	// NETWORK/_FACEBOOK_IS_AVAILABLE (result cleaner only)
	AddResultCleaner(0x43865688AE10F0D7, ResultCleaner<bool>);

	// NETWORK/_FACEBOOK_IS_SENDING_DATA (result cleaner only)
	AddResultCleaner(0x62B9FEC9A11F10EF, ResultCleaner<bool>);

	// NETWORK/_FACEBOOK_SET_CREATE_CHARACTER_COMPLETE (result cleaner only)
	AddResultCleaner(0xDC48473142545431, ResultCleaner<bool>);

	// NETWORK/_FACEBOOK_SET_HEIST_COMPLETE
	static auto nh_0x098AB65B9ED9A9EC = rage::scrEngine::GetNativeHandler(0x098AB65B9ED9A9EC);
	rage::scrEngine::RegisterNativeHandler(0x098AB65B9ED9A9EC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x098AB65B9ED9A9EC(cxt);
	});
	        
	AddResultCleaner(0x098AB65B9ED9A9EC, ResultCleaner<bool>);

	// NETWORK/_FACEBOOK_SET_MILESTONE_COMPLETE (result cleaner only)
	AddResultCleaner(0x0AE1F1653B554AB9, ResultCleaner<bool>);

	// VEHICLE/_FIND_VEHICLE_CARRYING_THIS_ENTITY (result cleaner only)
	AddResultCleaner(0x375E7FC44F21C8AB, ResultCleaner<int>);

	// WEAPON/_FIRE_AIR_DEFENSE_WEAPON
	static auto nh_0x44F1012B69313374 = rage::scrEngine::GetNativeHandler(0x44F1012B69313374);
	rage::scrEngine::RegisterNativeHandler(0x44F1012B69313374, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44F1012B69313374(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_FORCE_CLOSE_TEXT_INPUT_BOX
	static auto nh_0x8817605C2BA76200 = rage::scrEngine::GetNativeHandler(0x8817605C2BA76200);
	rage::scrEngine::RegisterNativeHandler(0x8817605C2BA76200, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8817605C2BA76200(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_FORCE_PICKUP_REGENERATE
	static auto nh_0x758A5C1B3B1E1990 = rage::scrEngine::GetNativeHandler(0x758A5C1B3B1E1990);
	rage::scrEngine::RegisterNativeHandler(0x758A5C1B3B1E1990, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x758A5C1B3B1E1990(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_FREEZE_PED_CAMERA_ROTATION
	static auto nh_0xFF287323B0E2C69A = rage::scrEngine::GetNativeHandler(0xFF287323B0E2C69A);
	rage::scrEngine::RegisterNativeHandler(0xFF287323B0E2C69A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF287323B0E2C69A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_GET_ACHIEVEMENT_PROGRESS (result cleaner only)
	AddResultCleaner(0x1C186837D0619335, ResultCleaner<int>);

	// GRAPHICS/_GET_ACTIVE_SCREEN_RESOLUTION
	static auto nh_0x873C9F3104101DD3 = rage::scrEngine::GetNativeHandler(0x873C9F3104101DD3);
	rage::scrEngine::RegisterNativeHandler(0x873C9F3104101DD3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x873C9F3104101DD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_GET_AI_BLIP (result cleaner only)
	AddResultCleaner(0x56176892826A4FE8, ResultCleaner<int>);

	// HUD/_GET_AI_BLIP_2 (result cleaner only)
	AddResultCleaner(0x7CD934010E115C2C, ResultCleaner<int>);

	// VEHICLE/_GET_ALL_VEHICLES
	static auto nh_0x9B8E1BF04B51F2E8 = rage::scrEngine::GetNativeHandler(0x9B8E1BF04B51F2E8);
	rage::scrEngine::RegisterNativeHandler(0x9B8E1BF04B51F2E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x9B8E1BF04B51F2E8(cxt);
	});
	        
	AddResultCleaner(0x9B8E1BF04B51F2E8, ResultCleaner<int>);

	// GRAPHICS/_GET_ASPECT_RATIO (result cleaner only)
	AddResultCleaner(0xF1307EF624A80D87, ResultCleaner<float>);

	// MISC/_GET_BASE_ELEMENT_METADATA
	static auto nh_0xB335F761606DB47C = rage::scrEngine::GetNativeHandler(0xB335F761606DB47C);
	rage::scrEngine::RegisterNativeHandler(0xB335F761606DB47C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB335F761606DB47C(cxt);
	});
	        
	AddResultCleaner(0xB335F761606DB47C, ResultCleaner<bool>);

	// MISC/_GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE (result cleaner only)
	AddResultCleaner(0x4750FC27570311EC, ResultCleaner<int>);

	// MISC/_GET_BENCHMARK_PASS_FROM_COMMAND_LINE (result cleaner only)
	AddResultCleaner(0x1B2366C3F2A5C8DF, ResultCleaner<int>);

	// MISC/_GET_BENCHMARK_TIME (result cleaner only)
	AddResultCleaner(0xE599A503B3837E1B, ResultCleaner<float>);

	// GRAPHICS/_GET_BINK_MOVIE_TIME (result cleaner only)
	AddResultCleaner(0x8E17DDD6B9D5BF29, ResultCleaner<float>);

	// HUD/_GET_BLIP_ROTATION (result cleaner only)
	AddResultCleaner(0x003E92BA477F9D7F, ResultCleaner<int>);

	// VEHICLE/_GET_BOAT_BOOM_POSITION_RATIO_2
	static auto nh_0xC1F981A6F74F0C23 = rage::scrEngine::GetNativeHandler(0xC1F981A6F74F0C23);
	rage::scrEngine::RegisterNativeHandler(0xC1F981A6F74F0C23, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC1F981A6F74F0C23(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_BOAT_BOOM_POSITION_RATIO_3
	static auto nh_0x0F3B4D4E43177236 = rage::scrEngine::GetNativeHandler(0x0F3B4D4E43177236);
	rage::scrEngine::RegisterNativeHandler(0x0F3B4D4E43177236, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0F3B4D4E43177236(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT (result cleaner only)
	AddResultCleaner(0x19CAFA3C87F7C2FF, ResultCleaner<int>);

	// CAM/_GET_CAM_DOF_STRENGTH (result cleaner only)
	AddResultCleaner(0x06D153C0B99B6128, ResultCleaner<float>);

	// CAM/_GET_CAM_NEAR_DOF (result cleaner only)
	AddResultCleaner(0xC2612D223D915A1C, ResultCleaner<float>);

	// VEHICLE/_GET_CAN_VEHICLE_JUMP (result cleaner only)
	AddResultCleaner(0x9078C0C5EF8C19E9, ResultCleaner<bool>);

	// HUD/_GET_CLOSEST_BLIP_OF_TYPE (result cleaner only)
	AddResultCleaner(0xD484BF71050CA1EE, ResultCleaner<int>);

	// MISC/_GET_CLOUD_HAT_OPACITY (result cleaner only)
	AddResultCleaner(0x20AC25E781AE4A84, ResultCleaner<float>);

	// NETWORK/_GET_CLOUD_TIME_AS_STRING (result cleaner only)
	AddResultCleaner(0xF12E6CD06C73D69E, ResultCleaner<char*>);

	// AUDIO/_GET_CURRENT_RADIO_TRACK_PLAYBACK_TIME
	static auto nh_0x3E65CDE5215832C1 = rage::scrEngine::GetNativeHandler(0x3E65CDE5215832C1);
	rage::scrEngine::RegisterNativeHandler(0x3E65CDE5215832C1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3E65CDE5215832C1(cxt);
	});
	        
	AddResultCleaner(0x3E65CDE5215832C1, ResultCleaner<int>);

	// CUTSCENE/_GET_CUTSCENE_END_TIME (result cleaner only)
	AddResultCleaner(0x011883f41211432a, ResultCleaner<int>);

	// CUTSCENE/_GET_CUT_FILE_NUM_SECTIONS
	static auto nh_0x0ABC54DE641DC0FC = rage::scrEngine::GetNativeHandler(0x0ABC54DE641DC0FC);
	rage::scrEngine::RegisterNativeHandler(0x0ABC54DE641DC0FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0ABC54DE641DC0FC(cxt);
	});
	        
	AddResultCleaner(0x0ABC54DE641DC0FC, ResultCleaner<int>);

	// CAM/_GET_DEBUG_CAMERA (result cleaner only)
	AddResultCleaner(0x77C3CEC46BE286F6, ResultCleaner<int>);

	// FILES/_GET_DLC_WEAPON_COMPONENT_DATA_SP
	static auto nh_0x31D5E073B6F93CDC = rage::scrEngine::GetNativeHandler(0x31D5E073B6F93CDC);
	rage::scrEngine::RegisterNativeHandler(0x31D5E073B6F93CDC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x31D5E073B6F93CDC(cxt);
	});
	        
	AddResultCleaner(0x31D5E073B6F93CDC, ResultCleaner<bool>);

	// FILES/_GET_DLC_WEAPON_DATA_SP
	static auto nh_0x310836EE7129BA33 = rage::scrEngine::GetNativeHandler(0x310836EE7129BA33);
	rage::scrEngine::RegisterNativeHandler(0x310836EE7129BA33, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x310836EE7129BA33(cxt);
	});
	        
	AddResultCleaner(0x310836EE7129BA33, ResultCleaner<bool>);

	// VEHICLE/_GET_DOES_VEHICLE_HAVE_TOMBSTONE (result cleaner only)
	AddResultCleaner(0x71AFB258CCED3A27, ResultCleaner<bool>);

	// VEHICLE/_GET_DRIFT_TYRES_ENABLED (result cleaner only)
	AddResultCleaner(0x2F5A72430E78C8D3, ResultCleaner<bool>);

	// VEHICLE/_GET_ENTITY_ATTACHED_TO_CARGOBOB (result cleaner only)
	AddResultCleaner(0x99093F60746708CA, ResultCleaner<int>);

	// ENTITY/_GET_ENTITY_BONE_COUNT (result cleaner only)
	AddResultCleaner(0xB328DCC3A3AA401B, ResultCleaner<int>);

	// FIRE/_GET_ENTITY_INSIDE_EXPLOSION_AREA (result cleaner only)
	AddResultCleaner(0x14BA4BA137AF6CEC, ResultCleaner<int>);

	// FIRE/_GET_ENTITY_INSIDE_EXPLOSION_SPHERE (result cleaner only)
	AddResultCleaner(0xB3CD51E3DB86F176, ResultCleaner<int>);

	// ENTITY/_GET_ENTITY_PHYSICS_HEADING (result cleaner only)
	AddResultCleaner(0x846BF6291198A71E, ResultCleaner<float>);

	// ENTITY/_GET_ENTITY_PICKUP (result cleaner only)
	AddResultCleaner(0x1F922734E259BD26, ResultCleaner<int>);

	// ENTITY/_GET_ENTITY_PROOFS
	static auto nh_0xBE8CD9BE829BBEBF = rage::scrEngine::GetNativeHandler(0xBE8CD9BE829BBEBF);
	rage::scrEngine::RegisterNativeHandler(0xBE8CD9BE829BBEBF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xBE8CD9BE829BBEBF(cxt);
	});
	        
	AddResultCleaner(0xBE8CD9BE829BBEBF, ResultCleaner<bool>);

	// DLC/_GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED (result cleaner only)
	AddResultCleaner(0x8D30F648014A92B5, ResultCleaner<bool>);

	// GRAPHICS/_GET_EXTRA_TIMECYCLE_MODIFIER_INDEX (result cleaner only)
	AddResultCleaner(0xBB0527EC6341496D, ResultCleaner<int>);

	// MISC/_GET_GLOBAL_CHAR_BUFFER (result cleaner only)
	AddResultCleaner(0x24DA7D7667FD7B09, ResultCleaner<char*>);

	// STREAMING/_GET_GLOBAL_WATER_TYPE (result cleaner only)
	AddResultCleaner(0xF741BD853611592D, ResultCleaner<int>);

	// PHYSICS/_GET_HAS_OBJECT_FRAG_INST (result cleaner only)
	AddResultCleaner(0x0C112765300C7E1E, ResultCleaner<bool>);

	// VEHICLE/_GET_HAS_RETRACTABLE_WHEELS (result cleaner only)
	AddResultCleaner(0xDCA174A42133F08C, ResultCleaner<bool>);

	// VEHICLE/_GET_HAS_ROCKET_BOOST (result cleaner only)
	AddResultCleaner(0x36D782F68B309BDA, ResultCleaner<bool>);

	// PATHFIND/_GET_HEIGHTMAP_BOTTOM_Z_FOR_AREA (result cleaner only)
	AddResultCleaner(0x3599D741C9AC6310, ResultCleaner<float>);

	// PATHFIND/_GET_HEIGHTMAP_BOTTOM_Z_FOR_POSITION (result cleaner only)
	AddResultCleaner(0x336511A34F2E5185, ResultCleaner<float>);

	// PATHFIND/_GET_HEIGHTMAP_TOP_Z_FOR_AREA (result cleaner only)
	AddResultCleaner(0x8ABE8608576D9CE3, ResultCleaner<float>);

	// PATHFIND/_GET_HEIGHTMAP_TOP_Z_FOR_POSITION (result cleaner only)
	AddResultCleaner(0x29C24BFBED8AB8FB, ResultCleaner<float>);

	// VEHICLE/_GET_HYDRAULIC_WHEEL_VALUE (result cleaner only)
	AddResultCleaner(0x0BB5CBDDD0F25AE3, ResultCleaner<float>);

	// OBJECT/_GET_IS_ARENA_PROP_PHYSICS_DISABLED
	static auto nh_0x43C677F1E1158005 = rage::scrEngine::GetNativeHandler(0x43C677F1E1158005);
	rage::scrEngine::RegisterNativeHandler(0x43C677F1E1158005, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x43C677F1E1158005(cxt);
	});
	        
	AddResultCleaner(0x43C677F1E1158005, ResultCleaner<bool>);

	// VEHICLE/_GET_IS_DOOR_VALID (result cleaner only)
	AddResultCleaner(0x645F4B6E8499F632, ResultCleaner<bool>);

	// MISC/_GET_IS_PLAYER_IN_ANIMAL_FORM (result cleaner only)
	AddResultCleaner(0x9689123E3F213AA5, ResultCleaner<bool>);

	// VEHICLE/_GET_IS_VEHICLE_EMP_DISABLED (result cleaner only)
	AddResultCleaner(0x0506ED94363AD905, ResultCleaner<bool>);

	// VEHICLE/_GET_IS_VEHICLE_SHUNT_BOOST_ACTIVE (result cleaner only)
	AddResultCleaner(0xA2459F72C14E2E8D, ResultCleaner<bool>);

	// VEHICLE/_GET_IS_WHEELS_LOWERED_STATE_ACTIVE (result cleaner only)
	AddResultCleaner(0x1DA0DA9CB3F0C8BF, ResultCleaner<bool>);

	// HUD/_GET_LABEL_TEXT
	static auto nh_0x7B5280EBA9840C72 = rage::scrEngine::GetNativeHandler(0x7B5280EBA9840C72);
	rage::scrEngine::RegisterNativeHandler(0x7B5280EBA9840C72, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x7B5280EBA9840C72(cxt);
	});
	        
	AddResultCleaner(0x7B5280EBA9840C72, ResultCleaner<char*>);

	// VEHICLE/_GET_LAST_RAMMED_VEHICLE (result cleaner only)
	AddResultCleaner(0x04F2FA6E234162F7, ResultCleaner<int>);

	// PAD/_GET_LOCAL_PLAYER_AIM_STATE_2 (result cleaner only)
	AddResultCleaner(0x59B9A7AF4C95133C, ResultCleaner<int>);

	// WEAPON/_GET_MAX_AMMO_BY_TYPE
	static auto nh_0x585847C5E4E11709 = rage::scrEngine::GetNativeHandler(0x585847C5E4E11709);
	rage::scrEngine::RegisterNativeHandler(0x585847C5E4E11709, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x585847C5E4E11709(cxt);
	});
	        
	AddResultCleaner(0x585847C5E4E11709, ResultCleaner<bool>);

	// SCRIPT/_GET_NAME_OF_THREAD (result cleaner only)
	AddResultCleaner(0x05A42BA9FC8DA96B, ResultCleaner<char*>);

	// STATS/_GET_NGSTAT_BOOL_HASH
	static auto nh_0xBA52FF538ED2BC71 = rage::scrEngine::GetNativeHandler(0xBA52FF538ED2BC71);
	rage::scrEngine::RegisterNativeHandler(0xBA52FF538ED2BC71, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xBA52FF538ED2BC71(cxt);
	});
	        
	AddResultCleaner(0xBA52FF538ED2BC71, ResultCleaner<int>);

	// STATS/_GET_NGSTAT_INT_HASH
	static auto nh_0x2B4CDCA6F07FF3DA = rage::scrEngine::GetNativeHandler(0x2B4CDCA6F07FF3DA);
	rage::scrEngine::RegisterNativeHandler(0x2B4CDCA6F07FF3DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x2B4CDCA6F07FF3DA(cxt);
	});
	        
	AddResultCleaner(0x2B4CDCA6F07FF3DA, ResultCleaner<int>);

	// HUD/_GET_NORTH_RADAR_BLIP (result cleaner only)
	AddResultCleaner(0x3F0CF9CB7E589B88, ResultCleaner<int>);

	// PLAYER/_GET_NUMBER_OF_PLAYERS_IN_TEAM (result cleaner only)
	AddResultCleaner(0x1FC200409F10E6F1, ResultCleaner<int>);

	// SCRIPT/_GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH (result cleaner only)
	AddResultCleaner(0x2C83A9DA6BFFC4F9, ResultCleaner<int>);

	// VEHICLE/_GET_NUMBER_OF_VEHICLE_DOORS (result cleaner only)
	AddResultCleaner(0x92922A607497B14D, ResultCleaner<int>);

	// MISC/_GET_NUM_DISPATCHED_UNITS_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0xEB4A0C2D56441717, ResultCleaner<int>);

	// FILES/_GET_NUM_DLC_WEAPONS_SP (result cleaner only)
	AddResultCleaner(0x4160B65AE085B5A9, ResultCleaner<int>);

	// FILES/_GET_NUM_DLC_WEAPON_COMPONENTS_SP (result cleaner only)
	AddResultCleaner(0xAD2A7A6DFF55841B, ResultCleaner<int>);

	// PED/_GET_NUM_HAIR_COLORS (result cleaner only)
	AddResultCleaner(0xE5C0CF872C2AD150, ResultCleaner<int>);

	// PED/_GET_NUM_MAKEUP_COLORS (result cleaner only)
	AddResultCleaner(0xD1F7CA1535D22818, ResultCleaner<int>);

	// OBJECT/_GET_OBJECT_TEXTURE_VARIATION (result cleaner only)
	AddResultCleaner(0xE84EB93729C5F36A, ResultCleaner<int>);

	// NETWORK/_GET_ONLINE_VERSION (result cleaner only)
	AddResultCleaner(0xFCA9373EF340AC0A, ResultCleaner<char*>);

	// HUD/_GET_PAUSE_MENU_SELECTION
	static auto nh_0x36C1451A88A09630 = rage::scrEngine::GetNativeHandler(0x36C1451A88A09630);
	rage::scrEngine::RegisterNativeHandler(0x36C1451A88A09630, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x36C1451A88A09630(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_GET_PAUSE_MENU_SELECTION_DATA
	static auto nh_0x7E17BE53E1AAABAF = rage::scrEngine::GetNativeHandler(0x7E17BE53E1AAABAF);
	rage::scrEngine::RegisterNativeHandler(0x7E17BE53E1AAABAF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x7E17BE53E1AAABAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_GET_PED_AMMO_TYPE_FROM_WEAPON_2 (result cleaner only)
	AddResultCleaner(0xF489B44DD5AF4BD9, ResultCleaner<int>);

	// PED/_GET_PED_CURRENT_MOVEMENT_SPEED
	static auto nh_0xF60165E1D2C5370B = rage::scrEngine::GetNativeHandler(0xF60165E1D2C5370B);
	rage::scrEngine::RegisterNativeHandler(0xF60165E1D2C5370B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF60165E1D2C5370B(cxt);
	});
	        
	AddResultCleaner(0xF60165E1D2C5370B, ResultCleaner<bool>);

	// PED/_GET_PED_DIES_IN_WATER (result cleaner only)
	AddResultCleaner(0x65671A4FB8218930, ResultCleaner<bool>);

	// PED/_GET_PED_EMISSIVE_INTENSITY (result cleaner only)
	AddResultCleaner(0x1461B28A06717D68, ResultCleaner<float>);

	// PED/_GET_PED_EVENT_DATA
	static auto nh_0xBA656A3BB01BDEA3 = rage::scrEngine::GetNativeHandler(0xBA656A3BB01BDEA3);
	rage::scrEngine::RegisterNativeHandler(0xBA656A3BB01BDEA3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xBA656A3BB01BDEA3(cxt);
	});
	        
	AddResultCleaner(0xBA656A3BB01BDEA3, ResultCleaner<bool>);

	// PED/_GET_PED_EYE_COLOR (result cleaner only)
	AddResultCleaner(0x76BBA2CEE66D47E9, ResultCleaner<int>);

	// PED/_GET_PED_HAIR_RGB_COLOR
	static auto nh_0x4852FC386E2E1BB5 = rage::scrEngine::GetNativeHandler(0x4852FC386E2E1BB5);
	rage::scrEngine::RegisterNativeHandler(0x4852FC386E2E1BB5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x4852FC386E2E1BB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_GET_PED_HEAD_OVERLAY_VALUE (result cleaner only)
	AddResultCleaner(0xA60EF3B6461A4D43, ResultCleaner<int>);

	// PED/_GET_PED_MAKEUP_RGB_COLOR
	static auto nh_0x013E5CFC38CD5387 = rage::scrEngine::GetNativeHandler(0x013E5CFC38CD5387);
	rage::scrEngine::RegisterNativeHandler(0x013E5CFC38CD5387, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x013E5CFC38CD5387(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_GET_PED_TASK_COMBAT_TARGET
	static auto nh_0x32C27A11307B01CC = rage::scrEngine::GetNativeHandler(0x32C27A11307B01CC);
	rage::scrEngine::RegisterNativeHandler(0x32C27A11307B01CC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x32C27A11307B01CC(cxt);
	});
	        
	AddResultCleaner(0x32C27A11307B01CC, ResultCleaner<int>);

	// PED/_GET_PED_VISUAL_FIELD_CENTER_ANGLE (result cleaner only)
	AddResultCleaner(0xEF2C71A32CAD5FBD, ResultCleaner<float>);

	// WEAPON/_GET_PED_WEAPON_LIVERY_COLOR (result cleaner only)
	AddResultCleaner(0xF0A60040BE558F2D, ResultCleaner<int>);

	// OBJECT/_GET_PICKUP_GENERATION_RANGE_MULTIPLIER (result cleaner only)
	AddResultCleaner(0xB3ECA65C7317F174, ResultCleaner<float>);

	// OBJECT/_GET_PICKUP_HASH (result cleaner only)
	AddResultCleaner(0x5EAAD83F8CFB4575, ResultCleaner<int>);

	// OBJECT/_GET_PICKUP_HASH_FROM_WEAPON (result cleaner only)
	AddResultCleaner(0xD6429A016084F1A5, ResultCleaner<int>);

	// PLAYER/_GET_PLAYER_HEALTH_RECHARGE_LIMIT (result cleaner only)
	AddResultCleaner(0x8BC515BAE4AAF8FF, ResultCleaner<float>);

	// PLAYER/_GET_PLAYER_PARACHUTE_MODEL_OVERRIDE (result cleaner only)
	AddResultCleaner(0xC219887CA3E65C41, ResultCleaner<int>);

	// PLAYER/_GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE (result cleaner only)
	AddResultCleaner(0x37FAAA68DCA9D08D, ResultCleaner<int>);

	// PATHFIND/_GET_POINT_ON_ROAD_SIDE
	static auto nh_0x16F46FB18C8009E4 = rage::scrEngine::GetNativeHandler(0x16F46FB18C8009E4);
	rage::scrEngine::RegisterNativeHandler(0x16F46FB18C8009E4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x16F46FB18C8009E4(cxt);
	});
	        
	AddResultCleaner(0x16F46FB18C8009E4, ResultCleaner<bool>);

	// MISC/_GET_POWER_SAVING_MODE_DURATION (result cleaner only)
	AddResultCleaner(0xABB2FA71C83A1B72, ResultCleaner<int>);

	// MISC/_GET_PROJECTILE_NEAR_PED
	static auto nh_0x82FDE6A57EE4EE44 = rage::scrEngine::GetNativeHandler(0x82FDE6A57EE4EE44);
	rage::scrEngine::RegisterNativeHandler(0x82FDE6A57EE4EE44, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x82FDE6A57EE4EE44(cxt);
	});
	        
	AddResultCleaner(0x82FDE6A57EE4EE44, ResultCleaner<bool>);

	// MISC/_GET_RANDOM_INT_IN_RANGE_2 (result cleaner only)
	AddResultCleaner(0xF2D49816A804D134, ResultCleaner<int>);

	// HUD/_GET_SCALEFORM_MOVIE_CURSOR_SELECTION
	static auto nh_0x632B2940C67F4EA9 = rage::scrEngine::GetNativeHandler(0x632B2940C67F4EA9);
	rage::scrEngine::RegisterNativeHandler(0x632B2940C67F4EA9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x632B2940C67F4EA9(cxt);
	});
	        
	AddResultCleaner(0x632B2940C67F4EA9, ResultCleaner<bool>);

	// GRAPHICS/_GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL (result cleaner only)
	AddResultCleaner(0xD80A80346A45D761, ResultCleaner<bool>);

	// GRAPHICS/_GET_SCRIPT_GFX_POSITION
	static auto nh_0x6DD8F5AA635EB4B2 = rage::scrEngine::GetNativeHandler(0x6DD8F5AA635EB4B2);
	rage::scrEngine::RegisterNativeHandler(0x6DD8F5AA635EB4B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x6DD8F5AA635EB4B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/_GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT (result cleaner only)
	AddResultCleaner(0xD40AAC51E8E4C663, ResultCleaner<int>);

	// TASK/_GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
	static auto nh_0x44AB0B3AFECCE242 = rage::scrEngine::GetNativeHandler(0x44AB0B3AFECCE242);
	rage::scrEngine::RegisterNativeHandler(0x44AB0B3AFECCE242, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x44AB0B3AFECCE242(cxt);
	});
	        
	AddResultCleaner(0x44AB0B3AFECCE242, ResultCleaner<float>);

	// HUD/_GET_TEXT_SUBSTRING
	static auto nh_0x169BD9382084C8C0 = rage::scrEngine::GetNativeHandler(0x169BD9382084C8C0);
	rage::scrEngine::RegisterNativeHandler(0x169BD9382084C8C0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x169BD9382084C8C0(cxt);
	});
	        
	AddResultCleaner(0x169BD9382084C8C0, ResultCleaner<char*>);

	// HUD/_GET_TEXT_SUBSTRING_SAFE
	static auto nh_0xB2798643312205C5 = rage::scrEngine::GetNativeHandler(0xB2798643312205C5);
	rage::scrEngine::RegisterNativeHandler(0xB2798643312205C5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB2798643312205C5(cxt);
	});
	        
	AddResultCleaner(0xB2798643312205C5, ResultCleaner<char*>);

	// HUD/_GET_TEXT_SUBSTRING_SLICE
	static auto nh_0xCE94AEBA5D82908A = rage::scrEngine::GetNativeHandler(0xCE94AEBA5D82908A);
	rage::scrEngine::RegisterNativeHandler(0xCE94AEBA5D82908A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCE94AEBA5D82908A(cxt);
	});
	        
	AddResultCleaner(0xCE94AEBA5D82908A, ResultCleaner<char*>);

	// PED/_GET_TIME_OF_LAST_PED_WEAPON_DAMAGE (result cleaner only)
	AddResultCleaner(0x36B77BB84687C318, ResultCleaner<int>);

	// PAD/_GET_TIME_SINCE_LAST_INPUT (result cleaner only)
	AddResultCleaner(0xD7D22F5592AED8BA, ResultCleaner<int>);

	// VEHICLE/_GET_TYRE_HEALTH (result cleaner only)
	AddResultCleaner(0x55EAB010FAEE9380, ResultCleaner<float>);

	// VEHICLE/_GET_TYRE_WEAR_MULTIPLIER (result cleaner only)
	AddResultCleaner(0x6E387895952F4F71, ResultCleaner<float>);

	// STREAMING/_GET_USED_CREATOR_MODEL_MEMORY_PERCENTAGE (result cleaner only)
	AddResultCleaner(0x3D3D8B3BE5A83D35, ResultCleaner<float>);

	// FILES/_GET_VARIANT_PROP
	static auto nh_0xD81B7F27BC773E66 = rage::scrEngine::GetNativeHandler(0xD81B7F27BC773E66);
	rage::scrEngine::RegisterNativeHandler(0xD81B7F27BC773E66, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xD81B7F27BC773E66(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_VEHICLE_BOMB_COUNT (result cleaner only)
	AddResultCleaner(0xEA12BD130D7569A1, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_CAN_ACTIVATE_PARACHUTE (result cleaner only)
	AddResultCleaner(0xA916396DF4154EE3, ResultCleaner<bool>);

	// VEHICLE/_GET_VEHICLE_COUNTERMEASURE_COUNT (result cleaner only)
	AddResultCleaner(0xF846AA63DF56B804, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_CURRENT_SLIPSTREAM_DRAFT (result cleaner only)
	AddResultCleaner(0x36492C2F0D134C56, ResultCleaner<float>);

	// VEHICLE/_GET_VEHICLE_DASHBOARD_COLOR
	static auto nh_0xB7635E80A5C31BFF = rage::scrEngine::GetNativeHandler(0xB7635E80A5C31BFF);
	rage::scrEngine::RegisterNativeHandler(0xB7635E80A5C31BFF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xB7635E80A5C31BFF(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_VEHICLE_HAS_PARACHUTE (result cleaner only)
	AddResultCleaner(0xBC9CFF381338CB4F, ResultCleaner<bool>);

	// VEHICLE/_GET_VEHICLE_INTERIOR_COLOR
	static auto nh_0x7D1464D472D32136 = rage::scrEngine::GetNativeHandler(0x7D1464D472D32136);
	rage::scrEngine::RegisterNativeHandler(0x7D1464D472D32136, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7D1464D472D32136(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_VEHICLE_MODEL_ESTIMATED_AGILITY (result cleaner only)
	AddResultCleaner(0x53409B5163D5B846, ResultCleaner<float>);

	// VEHICLE/_GET_VEHICLE_MODEL_MAX_KNOTS (result cleaner only)
	AddResultCleaner(0xC6AD107DDC9054CC, ResultCleaner<float>);

	// VEHICLE/_GET_VEHICLE_NEON_LIGHTS_COLOUR
	static auto nh_0x7619EEE8C886757F = rage::scrEngine::GetNativeHandler(0x7619EEE8C886757F);
	rage::scrEngine::RegisterNativeHandler(0x7619EEE8C886757F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x7619EEE8C886757F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_VEHICLE_NUMBER_OF_BROKEN_BONES (result cleaner only)
	AddResultCleaner(0x2C8CBFE1EA5FC631, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_NUMBER_OF_BROKEN_OFF_BONES (result cleaner only)
	AddResultCleaner(0x42A4BEB35D372407, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_ROOF_LIVERY (result cleaner only)
	AddResultCleaner(0x60190048C0764A26, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_ROOF_LIVERY_COUNT (result cleaner only)
	AddResultCleaner(0x5ECB40269053C0D4, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_SUSPENSION_BOUNDS
	static auto nh_0xDF7E3EEB29642C38 = rage::scrEngine::GetNativeHandler(0xDF7E3EEB29642C38);
	rage::scrEngine::RegisterNativeHandler(0xDF7E3EEB29642C38, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xDF7E3EEB29642C38(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_GET_VEHICLE_SUSPENSION_HEIGHT (result cleaner only)
	AddResultCleaner(0x53952FD2BAA19F17, ResultCleaner<float>);

	// VEHICLE/_GET_VEHICLE_WEAPON_CAPACITY (result cleaner only)
	AddResultCleaner(0x8181CE2F25CB9BB7, ResultCleaner<int>);

	// VEHICLE/_GET_VEHICLE_XENON_LIGHTS_COLOR (result cleaner only)
	AddResultCleaner(0x3DFF319A831E0CDB, ResultCleaner<int>);

	// PLAYER/_GET_WANTED_LEVEL_PAROLE_DURATION (result cleaner only)
	AddResultCleaner(0xA72200F51875FEA4, ResultCleaner<int>);

	// HUD/_GET_WARNING_MESSAGE_TITLE_HASH (result cleaner only)
	AddResultCleaner(0x81DF9ABA6C83DFF9, ResultCleaner<int>);

	// WEAPON/_GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT (result cleaner only)
	AddResultCleaner(0x6558AC7C17BFEF58, ResultCleaner<int>);

	// WEAPON/_GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL (result cleaner only)
	AddResultCleaner(0x4D1CB8DC40208A17, ResultCleaner<int>);

	// WEAPON/_GET_WEAPON_OBJECT_LIVERY_COLOR (result cleaner only)
	AddResultCleaner(0xB3EA4FEABF41464B, ResultCleaner<int>);

	// WEAPON/_GET_WEAPON_TIME_BETWEEN_SHOTS (result cleaner only)
	AddResultCleaner(0x065D2AACAD8CF7A4, ResultCleaner<float>);

	// MISC/_GET_WEATHER_TYPE_TRANSITION
	static auto nh_0xF3BBE884A14BB413 = rage::scrEngine::GetNativeHandler(0xF3BBE884A14BB413);
	rage::scrEngine::RegisterNativeHandler(0xF3BBE884A14BB413, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF3BBE884A14BB413(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_GIVE_LOADOUT_TO_PED
	static auto nh_0x68F8BE6AF5CDF8A6 = rage::scrEngine::GetNativeHandler(0x68F8BE6AF5CDF8A6);
	rage::scrEngine::RegisterNativeHandler(0x68F8BE6AF5CDF8A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x68F8BE6AF5CDF8A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_GRASS_LOD_RESET_SCRIPT_AREAS
	static auto nh_0x302C91AB2D477F7E = rage::scrEngine::GetNativeHandler(0x302C91AB2D477F7E);
	rage::scrEngine::RegisterNativeHandler(0x302C91AB2D477F7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x302C91AB2D477F7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_GRASS_LOD_SHRINK_SCRIPT_AREAS
	static auto nh_0x6D955F6A9E0295B1 = rage::scrEngine::GetNativeHandler(0x6D955F6A9E0295B1);
	rage::scrEngine::RegisterNativeHandler(0x6D955F6A9E0295B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6D955F6A9E0295B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_HAS_ASYNC_INSTALL_FINISHED (result cleaner only)
	AddResultCleaner(0x14832BF2ABA53FC5, ResultCleaner<bool>);

	// MISC/_HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED (result cleaner only)
	AddResultCleaner(0x071E2A839DE82D90, ResultCleaner<bool>);

	// MISC/_HAS_CHEAT_STRING_JUST_BEEN_ENTERED (result cleaner only)
	AddResultCleaner(0x557E43C447E700A8, ResultCleaner<bool>);

	// HUD/_HAS_DIRECTOR_MODE_BEEN_TRIGGERED (result cleaner only)
	AddResultCleaner(0xA277800A9EAE340E, ResultCleaner<bool>);

	// ENTITY/_HAS_ENTITY_CLEAR_LOS_TO_ENTITY_2 (result cleaner only)
	AddResultCleaner(0x394BDE2A7BBA031E, ResultCleaner<int>);

	// VEHICLE/_HAS_FILLED_VEHICLE_POPULATION (result cleaner only)
	AddResultCleaner(0x91D6DD290888CBAB, ResultCleaner<bool>);

	// PLAYER/_HAS_PLAYER_BEEN_SHOT_BY_COP (result cleaner only)
	AddResultCleaner(0xBC0753C9CA14B506, ResultCleaner<bool>);

	// MISC/_HAS_RESUMED_FROM_SUSPEND (result cleaner only)
	AddResultCleaner(0xE8B9C0EC9E183F35, ResultCleaner<bool>);

	// HUD/_HIDE_AREA_AND_VEHICLE_NAME_THIS_FRAME
	static auto nh_0xA4DEDE28B1814289 = rage::scrEngine::GetNativeHandler(0xA4DEDE28B1814289);
	rage::scrEngine::RegisterNativeHandler(0xA4DEDE28B1814289, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA4DEDE28B1814289(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_HIDE_VEHICLE_TOMBSTONE
	static auto nh_0xAE71FB656C600587 = rage::scrEngine::GetNativeHandler(0xAE71FB656C600587);
	rage::scrEngine::RegisterNativeHandler(0xAE71FB656C600587, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAE71FB656C600587(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_HIRED_LIMO
	static auto nh_0x792271AB35C356A4 = rage::scrEngine::GetNativeHandler(0x792271AB35C356A4);
	rage::scrEngine::RegisterNativeHandler(0x792271AB35C356A4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x792271AB35C356A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_HUD_DISPLAY_LOADING_SCREEN_TIPS
	static auto nh_0x488043841BBE156F = rage::scrEngine::GetNativeHandler(0x488043841BBE156F);
	rage::scrEngine::RegisterNativeHandler(0x488043841BBE156F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x488043841BBE156F(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_HUD_WEAPON_WHEEL_GET_SELECTED_HASH (result cleaner only)
	AddResultCleaner(0xA48931185F0536FE, ResultCleaner<int>);

	// HUD/_HUD_WEAPON_WHEEL_GET_SLOT_HASH (result cleaner only)
	AddResultCleaner(0xA13E93403F26C812, ResultCleaner<int>);

	// HUD/_HUD_WEAPON_WHEEL_IGNORE_CONTROL_INPUT
	static auto nh_0x14C9FDCC41F81F63 = rage::scrEngine::GetNativeHandler(0x14C9FDCC41F81F63);
	rage::scrEngine::RegisterNativeHandler(0x14C9FDCC41F81F63, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x14C9FDCC41F81F63(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_HUD_WEAPON_WHEEL_IGNORE_SELECTION
	static auto nh_0x0AFC4AF510774B47 = rage::scrEngine::GetNativeHandler(0x0AFC4AF510774B47);
	rage::scrEngine::RegisterNativeHandler(0x0AFC4AF510774B47, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0AFC4AF510774B47(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_INVALIDATE_VEHICLE_IDLE_CAM
	static auto nh_0x9E4CFFF989258472 = rage::scrEngine::GetNativeHandler(0x9E4CFFF989258472);
	rage::scrEngine::RegisterNativeHandler(0x9E4CFFF989258472, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9E4CFFF989258472(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_IS_AIM_CAM_THIRD_PERSON_ACTIVE (result cleaner only)
	AddResultCleaner(0x74BD83EA840F6BC9, ResultCleaner<bool>);

	// WEAPON/_IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE
	static auto nh_0xDAB963831DBFD3F4 = rage::scrEngine::GetNativeHandler(0xDAB963831DBFD3F4);
	rage::scrEngine::RegisterNativeHandler(0xDAB963831DBFD3F4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xDAB963831DBFD3F4(cxt);
	});
	        
	AddResultCleaner(0xDAB963831DBFD3F4, ResultCleaner<bool>);

	// VEHICLE/_IS_BOAT_ANCHORED_AND_FROZEN (result cleaner only)
	AddResultCleaner(0xB0AD1238A709B1A2, ResultCleaner<bool>);

	// MISC/_IS_COMMAND_LINE_BENCHMARK_VALUE_SET (result cleaner only)
	AddResultCleaner(0xA049A5BE0F04F2F8, ResultCleaner<bool>);

	// NETWORK/_IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER (result cleaner only)
	AddResultCleaner(0xB2092A1EAA7FD45F, ResultCleaner<bool>);

	// PAD/_IS_DISABLED_CONTROL_RELEASED (result cleaner only)
	AddResultCleaner(0xFB6C4072E9A32E92, ResultCleaner<bool>);

	// NETWORK/_IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER (result cleaner only)
	AddResultCleaner(0x21D04D7BC538C146, ResultCleaner<bool>);

	// VEHICLE/_IS_HANDLER_FRAME_ABOVE_CONTAINER (result cleaner only)
	AddResultCleaner(0x89D630CF5EA96D23, ResultCleaner<bool>);

	// REPLAY/_IS_INTERIOR_RENDERING_DISABLED (result cleaner only)
	AddResultCleaner(0x95AB8B5C992C7B58, ResultCleaner<bool>);

	// MISC/_IS_IN_POWER_SAVING_MODE (result cleaner only)
	AddResultCleaner(0x684A41975F077262, ResultCleaner<bool>);

	// CAM/_IS_IN_VEHICLE_CAM_DISABLED (result cleaner only)
	AddResultCleaner(0x4F32C0D5A90A9B40, ResultCleaner<bool>);

	// VEHICLE/_IS_MISSION_TRAIN (result cleaner only)
	AddResultCleaner(0xAD464F2E18836BFC, ResultCleaner<bool>);

	// STREAMING/_IS_MODEL_A_PED (result cleaner only)
	AddResultCleaner(0x75816577FEA6DAD5, ResultCleaner<bool>);

	// HUD/_IS_MOUSE_CURSOR_ABOVE_INSTRUCTIONAL_BUTTONS (result cleaner only)
	AddResultCleaner(0x3D9ACB1EB139E702, ResultCleaner<bool>);

	// HUD/_IS_MULTIPLAYER_CHAT_ACTIVE (result cleaner only)
	AddResultCleaner(0xB118AF58B5F332A1, ResultCleaner<bool>);

	// PATHFIND/_IS_NAVMESH_REQUIRED_REGION_OWNED_BY_ANY_THREAD (result cleaner only)
	AddResultCleaner(0x705A844002B39DC0, ResultCleaner<bool>);

	// PED/_IS_PED_BLUSH_COLOR_VALID (result cleaner only)
	AddResultCleaner(0x604E810189EE3A59, ResultCleaner<bool>);

	// PED/_IS_PED_BLUSH_COLOR_VALID_2 (result cleaner only)
	AddResultCleaner(0xF41B5D290C99A3D6, ResultCleaner<bool>);

	// PED/_IS_PED_BODY_BLEMISH_VALID (result cleaner only)
	AddResultCleaner(0x09E7ECA981D9B210, ResultCleaner<bool>);

	// PED/_IS_PED_DOING_BEAST_JUMP (result cleaner only)
	AddResultCleaner(0x451D05012CCEC234, ResultCleaner<bool>);

	// VEHICLE/_IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE
	static auto nh_0xB09D25E77C33EB3F = rage::scrEngine::GetNativeHandler(0xB09D25E77C33EB3F);
	rage::scrEngine::RegisterNativeHandler(0xB09D25E77C33EB3F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB09D25E77C33EB3F(cxt);
	});
	        
	AddResultCleaner(0xB09D25E77C33EB3F, ResultCleaner<bool>);

	// PED/_IS_PED_HAIR_COLOR_VALID (result cleaner only)
	AddResultCleaner(0xE0D36E5D9E99CC21, ResultCleaner<bool>);

	// PED/_IS_PED_HAIR_COLOR_VALID_2 (result cleaner only)
	AddResultCleaner(0xED6D8E27A43B8CDE, ResultCleaner<bool>);

	// PED/_IS_PED_HELMET_UNK (result cleaner only)
	AddResultCleaner(0xB9496CE47546DB2C, ResultCleaner<bool>);

	// PED/_IS_PED_LIPSTICK_COLOR_VALID (result cleaner only)
	AddResultCleaner(0x0525A2C2562F3CD4, ResultCleaner<bool>);

	// PED/_IS_PED_LIPSTICK_COLOR_VALID_2 (result cleaner only)
	AddResultCleaner(0x3E802F11FBE27674, ResultCleaner<bool>);

	// PED/_IS_PED_OPENING_A_DOOR (result cleaner only)
	AddResultCleaner(0x26AF0E8E30BD2A2C, ResultCleaner<bool>);

	// PED/_IS_PED_SHADER_EFFECT_VALID (result cleaner only)
	AddResultCleaner(0x81AA517FBBA05D39, ResultCleaner<bool>);

	// PED/_IS_PED_SWAPPING_WEAPON (result cleaner only)
	AddResultCleaner(0x3795688A307E1EB6, ResultCleaner<bool>);

	// PLAYER/_IS_PLAYER_CAM_CONTROL_DISABLED (result cleaner only)
	AddResultCleaner(0x7C814D2FB49F40C0, ResultCleaner<bool>);

	// PLAYER/_IS_PLAYER_DRIVING_DANGEROUSLY (result cleaner only)
	AddResultCleaner(0xF10B44FD479D69F3, ResultCleaner<bool>);

	// GRAPHICS/_IS_PLAYLIST_UNK
	static auto nh_0x1F710BFF7DAE6261 = rage::scrEngine::GetNativeHandler(0x1F710BFF7DAE6261);
	rage::scrEngine::RegisterNativeHandler(0x1F710BFF7DAE6261, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1F710BFF7DAE6261(cxt);
	});
	        
	AddResultCleaner(0x1F710BFF7DAE6261, ResultCleaner<bool>);

	// MISC/_IS_POP_MULTIPLIER_AREA_UNK (result cleaner only)
	AddResultCleaner(0x1312F4B242609CE3, ResultCleaner<bool>);

	// RECORDING/_IS_RECORDING (result cleaner only)
	AddResultCleaner(0x1897CA71995A90B4, ResultCleaner<bool>);

	// SOCIALCLUB/_IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT (result cleaner only)
	AddResultCleaner(0xBC1CC91205EC8D6E, ResultCleaner<bool>);

	// PED/_IS_SCUBA_GEAR_LIGHT_ENABLED (result cleaner only)
	AddResultCleaner(0x88274C11CF0D866D, ResultCleaner<bool>);

	// VEHICLE/_IS_THIS_MODEL_AN_AMPHIBIOUS_CAR (result cleaner only)
	AddResultCleaner(0x633F6F44A537EBB6, ResultCleaner<bool>);

	// VEHICLE/_IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE (result cleaner only)
	AddResultCleaner(0xA1A9FC1C76A6730D, ResultCleaner<bool>);

	// VEHICLE/_IS_THIS_MODEL_A_JETSKI (result cleaner only)
	AddResultCleaner(0x9537097412CF75FE, ResultCleaner<bool>);

	// GRAPHICS/_IS_TV_PLAYLIST_ITEM_PLAYING (result cleaner only)
	AddResultCleaner(0x0AD973CA1E077B60, ResultCleaner<bool>);

	// PAD/_IS_USING_KEYBOARD (result cleaner only)
	AddResultCleaner(0xA571D46727E2B718, ResultCleaner<bool>);

	// PAD/_IS_USING_KEYBOARD_2 (result cleaner only)
	AddResultCleaner(0x13337B38DB572509, ResultCleaner<bool>);

	// HUD/_IS_VALID_MP_GAMER_TAG_MOVIE (result cleaner only)
	AddResultCleaner(0xEB709A36958ABE0D, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_BEING_HALTED (result cleaner only)
	AddResultCleaner(0xC69BB1D832A710EF, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_DAMAGED (result cleaner only)
	AddResultCleaner(0xBCDC5017D3CE1E9E, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_ENGINE_ON_FIRE (result cleaner only)
	AddResultCleaner(0xEC69ADF931AAE0C3, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_MOD_HSW_EXCLUSIVE (result cleaner only)
	AddResultCleaner(0x00834EAC4A96E010, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_NEON_LIGHT_ENABLED (result cleaner only)
	AddResultCleaner(0x8C4B92553E4766A5, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_PARACHUTE_ACTIVE (result cleaner only)
	AddResultCleaner(0x3DE51E9C80B116CF, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_ROCKET_BOOST_ACTIVE (result cleaner only)
	AddResultCleaner(0x3D34E80EED4AE3BE, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_SEAT_ACCESSIBLE (result cleaner only)
	AddResultCleaner(0x639431E895B9AA57, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_SLIPSTREAM_LEADER (result cleaner only)
	AddResultCleaner(0x48C633E94A8142A7, ResultCleaner<bool>);

	// VEHICLE/_IS_VEHICLE_WEAPON_DISABLED (result cleaner only)
	AddResultCleaner(0x563B65A643ED072E, ResultCleaner<bool>);

	// HUD/_IS_WARNING_MESSAGE_ACTIVE_2 (result cleaner only)
	AddResultCleaner(0xAF42195A42C63BBA, ResultCleaner<bool>);

	// MISC/_LANDING_MENU_IS_ACTIVE (result cleaner only)
	AddResultCleaner(0x3BBBD13E5041A79E, ResultCleaner<bool>);

	// STATS/_LEADERBOARDS2_READ_BY_PLATFORM
	static auto nh_0xF1AE5DCDBFCA2721 = rage::scrEngine::GetNativeHandler(0xF1AE5DCDBFCA2721);
	rage::scrEngine::RegisterNativeHandler(0xF1AE5DCDBFCA2721, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xF1AE5DCDBFCA2721(cxt);
	});
	        
	AddResultCleaner(0xF1AE5DCDBFCA2721, ResultCleaner<bool>);

	// STATS/_LEADERBOARDS_DEATHS
	static auto nh_0x428EAF89E24F6C36 = rage::scrEngine::GetNativeHandler(0x428EAF89E24F6C36);
	rage::scrEngine::RegisterNativeHandler(0x428EAF89E24F6C36, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x428EAF89E24F6C36(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOADINGSCREEN/_LOADINGSCREEN_GET_LOAD_FREEMODE (result cleaner only)
	AddResultCleaner(0xEF7D17BC6C85264C, ResultCleaner<bool>);

	// LOADINGSCREEN/_LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME (result cleaner only)
	AddResultCleaner(0x8AA464D4E0F6ACCD, ResultCleaner<bool>);

	// LOADINGSCREEN/_LOADINGSCREEN_IS_LOADING_FREEMODE (result cleaner only)
	AddResultCleaner(0xC6DC823253FBB366, ResultCleaner<bool>);

	// LOADINGSCREEN/_LOADINGSCREEN_SET_IS_LOADING_FREEMODE
	static auto nh_0xC7E7181C09F33B69 = rage::scrEngine::GetNativeHandler(0xC7E7181C09F33B69);
	rage::scrEngine::RegisterNativeHandler(0xC7E7181C09F33B69, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7E7181C09F33B69(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOADINGSCREEN/_LOADINGSCREEN_SET_LOAD_FREEMODE
	static auto nh_0xB0C56BD3D808D863 = rage::scrEngine::GetNativeHandler(0xB0C56BD3D808D863);
	rage::scrEngine::RegisterNativeHandler(0xB0C56BD3D808D863, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB0C56BD3D808D863(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOADINGSCREEN/_LOADINGSCREEN_SET_LOAD_FREEMODE_WITH_EVENT_NAME
	static auto nh_0xFC309E94546FCDB5 = rage::scrEngine::GetNativeHandler(0xFC309E94546FCDB5);
	rage::scrEngine::RegisterNativeHandler(0xFC309E94546FCDB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFC309E94546FCDB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// FILES/_LOAD_CONTENT_CHANGE_SET_GROUP
	static auto nh_0x6BEDF5769AC2DC07 = rage::scrEngine::GetNativeHandler(0x6BEDF5769AC2DC07);
	rage::scrEngine::RegisterNativeHandler(0x6BEDF5769AC2DC07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6BEDF5769AC2DC07(cxt);
		NullifyVoid(cxt);
	});
	        
	// STREAMING/_LOAD_GLOBAL_WATER_TYPE
	static auto nh_0x7E3F55ED251B76D3 = rage::scrEngine::GetNativeHandler(0x7E3F55ED251B76D3);
	rage::scrEngine::RegisterNativeHandler(0x7E3F55ED251B76D3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7E3F55ED251B76D3(cxt);
		NullifyVoid(cxt);
	});
	        
	// LOCALIZATION/_LOCALIZATION_GET_SYSTEM_DATE_FORMAT (result cleaner only)
	AddResultCleaner(0xA8AE43AEC1A61314, ResultCleaner<int>);

	// LOCALIZATION/_LOCALIZATION_GET_SYSTEM_LANGUAGE (result cleaner only)
	AddResultCleaner(0x497420E022796B3F, ResultCleaner<int>);

	// SCRIPT/_LOCK_LOADING_SCREEN_BUTTONS
	static auto nh_0xB1577667C3708F9B = rage::scrEngine::GetNativeHandler(0xB1577667C3708F9B);
	rage::scrEngine::RegisterNativeHandler(0xB1577667C3708F9B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1577667C3708F9B(cxt);
		NullifyVoid(cxt);
	});
	        
	// SYSTEM/_LOG10 (result cleaner only)
	AddResultCleaner(0xE816E655DE37FE20, ResultCleaner<float>);

	// HUD/_LOG_DEBUG_INFO
	static auto nh_0x2162C446DFDF38FD = rage::scrEngine::GetNativeHandler(0x2162C446DFDF38FD);
	rage::scrEngine::RegisterNativeHandler(0x2162C446DFDF38FD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2162C446DFDF38FD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_LOWER_RETRACTABLE_WHEELS
	static auto nh_0x5335BE58C083E74E = rage::scrEngine::GetNativeHandler(0x5335BE58C083E74E);
	rage::scrEngine::RegisterNativeHandler(0x5335BE58C083E74E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5335BE58C083E74E(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_MARK_OBJECT_FOR_DELETION
	static auto nh_0xADBE4809F19F927A = rage::scrEngine::GetNativeHandler(0xADBE4809F19F927A);
	rage::scrEngine::RegisterNativeHandler(0xADBE4809F19F927A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xADBE4809F19F927A(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_ACCEPT_INVITE (result cleaner only)
	AddResultCleaner(0x62A0296C1BB1CEB3, ResultCleaner<bool>);

	// NETWORK/_NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP (result cleaner only)
	AddResultCleaner(0xFAFC23AEE23868DB, ResultCleaner<bool>);

	// NETWORK/_NETWORK_ARE_CUTSCENE_ENTITIES (result cleaner only)
	AddResultCleaner(0x66D6A5E9C511214A, ResultCleaner<bool>);

	// NETWORK/_NETWORK_BAIL_TRANSITION_QUICKMATCH
	static auto nh_0x023782EFC70585EE = rage::scrEngine::GetNativeHandler(0x023782EFC70585EE);
	rage::scrEngine::RegisterNativeHandler(0x023782EFC70585EE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x023782EFC70585EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_BLOCK_KICKED_PLAYERS
	static auto nh_0x6B07B9CE4D390375 = rage::scrEngine::GetNativeHandler(0x6B07B9CE4D390375);
	rage::scrEngine::RegisterNativeHandler(0x6B07B9CE4D390375, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6B07B9CE4D390375(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_BUY_CONTRABAND
	static auto nh_0x30FD873ECE50E9F6 = rage::scrEngine::GetNativeHandler(0x30FD873ECE50E9F6);
	rage::scrEngine::RegisterNativeHandler(0x30FD873ECE50E9F6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x30FD873ECE50E9F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_CAN_COMMUNICATE_WITH_GAMER_2
	static auto nh_0x8F5D1AD832AEB06C = rage::scrEngine::GetNativeHandler(0x8F5D1AD832AEB06C);
	rage::scrEngine::RegisterNativeHandler(0x8F5D1AD832AEB06C, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x8F5D1AD832AEB06C(cxt);
	});
	        
	AddResultCleaner(0x8F5D1AD832AEB06C, ResultCleaner<bool>);

	// NETWORK/_NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME
	static auto nh_0x135F9B7B7ADD2185 = rage::scrEngine::GetNativeHandler(0x135F9B7B7ADD2185);
	rage::scrEngine::RegisterNativeHandler(0x135F9B7B7ADD2185, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x135F9B7B7ADD2185(cxt);
	});
	        
	AddResultCleaner(0x135F9B7B7ADD2185, ResultCleaner<bool>);

	// NETWORK/_NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER
	static auto nh_0x07DD29D5E22763F1 = rage::scrEngine::GetNativeHandler(0x07DD29D5E22763F1);
	rage::scrEngine::RegisterNativeHandler(0x07DD29D5E22763F1, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x07DD29D5E22763F1(cxt);
	});
	        
	AddResultCleaner(0x07DD29D5E22763F1, ResultCleaner<bool>);

	// MONEY/_NETWORK_CAN_SPEND_MONEY_2
	static auto nh_0x7303E27CC6532080 = rage::scrEngine::GetNativeHandler(0x7303E27CC6532080);
	rage::scrEngine::RegisterNativeHandler(0x7303E27CC6532080, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(4)); // Any* p4
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x7303E27CC6532080(cxt);
	});
	        
	AddResultCleaner(0x7303E27CC6532080, ResultCleaner<bool>);

	// NETWORK/_NETWORK_CAN_VIEW_GAMER_USER_CONTENT
	static auto nh_0xB57A49545BA53CE7 = rage::scrEngine::GetNativeHandler(0xB57A49545BA53CE7);
	rage::scrEngine::RegisterNativeHandler(0xB57A49545BA53CE7, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB57A49545BA53CE7(cxt);
	});
	        
	AddResultCleaner(0xB57A49545BA53CE7, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_CAN_GAMBLE
	static auto nh_0xF62F6D9528358FE4 = rage::scrEngine::GetNativeHandler(0xF62F6D9528358FE4);
	rage::scrEngine::RegisterNativeHandler(0xF62F6D9528358FE4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF62F6D9528358FE4(cxt);
	});
	        
	AddResultCleaner(0xF62F6D9528358FE4, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC (result cleaner only)
	AddResultCleaner(0x394DCDB9E836B7A9, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_2 (result cleaner only)
	AddResultCleaner(0x8968D4D8C6C40C11, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_CAN_USE_GAMBLING_TYPE (result cleaner only)
	AddResultCleaner(0x158C16F5E4CF41F8, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_PURCHASE_CHIPS (result cleaner only)
	AddResultCleaner(0x3BD101471C7F9EEC, ResultCleaner<bool>);

	// MONEY/_NETWORK_CASINO_SELL_CHIPS (result cleaner only)
	AddResultCleaner(0xED44897CB336F480, ResultCleaner<bool>);

	// NETWORK/_NETWORK_CLAN_ANIMATION
	static auto nh_0x729E3401F0430686 = rage::scrEngine::GetNativeHandler(0x729E3401F0430686);
	rage::scrEngine::RegisterNativeHandler(0x729E3401F0430686, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x729E3401F0430686(cxt);
	});
	        
	AddResultCleaner(0x729E3401F0430686, ResultCleaner<bool>);

	// NETWORK/_NETWORK_CONCEAL_ENTITY
	static auto nh_0x1632BE0AC1E62876 = rage::scrEngine::GetNativeHandler(0x1632BE0AC1E62876);
	rage::scrEngine::RegisterNativeHandler(0x1632BE0AC1E62876, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1632BE0AC1E62876(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_DEDUCT_CASH
	static auto nh_0x18B7AE224B087E26 = rage::scrEngine::GetNativeHandler(0x18B7AE224B087E26);
	rage::scrEngine::RegisterNativeHandler(0x18B7AE224B087E26, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x18B7AE224B087E26(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_DISPLAYNAMES_FROM_HANDLES_START
	static auto nh_0xD66C9E72B3CC4982 = rage::scrEngine::GetNativeHandler(0xD66C9E72B3CC4982);
	rage::scrEngine::RegisterNativeHandler(0xD66C9E72B3CC4982, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD66C9E72B3CC4982(cxt);
	});
	        
	AddResultCleaner(0xD66C9E72B3CC4982, ResultCleaner<int>);

	// MONEY/_NETWORK_EARN_BOSS
	static auto nh_0x08B0CA7A6AB3AC32 = rage::scrEngine::GetNativeHandler(0x08B0CA7A6AB3AC32);
	rage::scrEngine::RegisterNativeHandler(0x08B0CA7A6AB3AC32, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x08B0CA7A6AB3AC32(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_BOSS_AGENCY
	static auto nh_0x0CB1BE0633C024A8 = rage::scrEngine::GetNativeHandler(0x0CB1BE0633C024A8);
	rage::scrEngine::RegisterNativeHandler(0x0CB1BE0633C024A8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0CB1BE0633C024A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_BOUNTY_HUNTER_REWARD
	static auto nh_0xF6B170F9A02E9E87 = rage::scrEngine::GetNativeHandler(0xF6B170F9A02E9E87);
	rage::scrEngine::RegisterNativeHandler(0xF6B170F9A02E9E87, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF6B170F9A02E9E87(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_CASINO_HEIST
	static auto nh_0x72E7C7B9615FA3C3 = rage::scrEngine::GetNativeHandler(0x72E7C7B9615FA3C3);
	rage::scrEngine::RegisterNativeHandler(0x72E7C7B9615FA3C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0x72E7C7B9615FA3C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_CASINO_HEIST_BONUS
	static auto nh_0x3EC7471E6909798A = rage::scrEngine::GetNativeHandler(0x3EC7471E6909798A);
	rage::scrEngine::RegisterNativeHandler(0x3EC7471E6909798A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x3EC7471E6909798A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION
	static auto nh_0x5C9B198AF5A54FA6 = rage::scrEngine::GetNativeHandler(0x5C9B198AF5A54FA6);
	rage::scrEngine::RegisterNativeHandler(0x5C9B198AF5A54FA6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5C9B198AF5A54FA6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FMBB_WAGE_BONUS
	static auto nh_0xFFFBA1B1F7C0B6F4 = rage::scrEngine::GetNativeHandler(0xFFFBA1B1F7C0B6F4);
	rage::scrEngine::RegisterNativeHandler(0xFFFBA1B1F7C0B6F4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFFFBA1B1F7C0B6F4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ARENA_CAREER_PROGRESSION
	static auto nh_0x0F99F70C61F14619 = rage::scrEngine::GetNativeHandler(0x0F99F70C61F14619);
	rage::scrEngine::RegisterNativeHandler(0x0F99F70C61F14619, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0F99F70C61F14619(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ARENA_SKILL_LEVEL_PROGRESSION
	static auto nh_0xE08256F972C7BB2C = rage::scrEngine::GetNativeHandler(0xE08256F972C7BB2C);
	rage::scrEngine::RegisterNativeHandler(0xE08256F972C7BB2C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE08256F972C7BB2C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ARENA_WAR
	static auto nh_0x631F1CB8FB4130AA = rage::scrEngine::GetNativeHandler(0x631F1CB8FB4130AA);
	rage::scrEngine::RegisterNativeHandler(0x631F1CB8FB4130AA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x631F1CB8FB4130AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ARMOUR_TRUCK
	static auto nh_0xF514621E8EA463D0 = rage::scrEngine::GetNativeHandler(0xF514621E8EA463D0);
	rage::scrEngine::RegisterNativeHandler(0xF514621E8EA463D0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF514621E8EA463D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED
	static auto nh_0xFA700D8A9905F78A = rage::scrEngine::GetNativeHandler(0xFA700D8A9905F78A);
	rage::scrEngine::RegisterNativeHandler(0xFA700D8A9905F78A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFA700D8A9905F78A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_2
	static auto nh_0x5E7AE8AABE8B7C0D = rage::scrEngine::GetNativeHandler(0x5E7AE8AABE8B7C0D);
	rage::scrEngine::RegisterNativeHandler(0x5E7AE8AABE8B7C0D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5E7AE8AABE8B7C0D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_AUTOSHOP_BUSINESS
	static auto nh_0x36A7FD5A7194B03E = rage::scrEngine::GetNativeHandler(0x36A7FD5A7194B03E);
	rage::scrEngine::RegisterNativeHandler(0x36A7FD5A7194B03E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x36A7FD5A7194B03E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_AUTOSHOP_INCOME
	static auto nh_0xC66D1CF99ED7FE25 = rage::scrEngine::GetNativeHandler(0xC66D1CF99ED7FE25);
	rage::scrEngine::RegisterNativeHandler(0xC66D1CF99ED7FE25, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC66D1CF99ED7FE25(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BB_EVENT_BONUS
	static auto nh_0xFDD8D2440DAF1590 = rage::scrEngine::GetNativeHandler(0xFDD8D2440DAF1590);
	rage::scrEngine::RegisterNativeHandler(0xFDD8D2440DAF1590, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFDD8D2440DAF1590(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BB_EVENT_CARGO
	static auto nh_0xA82959062361B259 = rage::scrEngine::GetNativeHandler(0xA82959062361B259);
	rage::scrEngine::RegisterNativeHandler(0xA82959062361B259, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA82959062361B259(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BIKER_INCOME
	static auto nh_0x71BEC32FA466E105 = rage::scrEngine::GetNativeHandler(0x71BEC32FA466E105);
	rage::scrEngine::RegisterNativeHandler(0x71BEC32FA466E105, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x71BEC32FA466E105(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BIKE_SHOP_BUSINESS
	static auto nh_0x2C5809EB9DF57257 = rage::scrEngine::GetNativeHandler(0x2C5809EB9DF57257);
	rage::scrEngine::RegisterNativeHandler(0x2C5809EB9DF57257, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2C5809EB9DF57257(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BUSINESS_BATTLE
	static auto nh_0x42FCE14F50F27291 = rage::scrEngine::GetNativeHandler(0x42FCE14F50F27291);
	rage::scrEngine::RegisterNativeHandler(0x42FCE14F50F27291, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x42FCE14F50F27291(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BUSINESS_HUB_SELL
	static auto nh_0x0B39CF0D53F1C883 = rage::scrEngine::GetNativeHandler(0x0B39CF0D53F1C883);
	rage::scrEngine::RegisterNativeHandler(0x0B39CF0D53F1C883, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x0B39CF0D53F1C883(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BUSINESS_HUB_SOURCE
	static auto nh_0x59498BC8B1C8B15C = rage::scrEngine::GetNativeHandler(0x59498BC8B1C8B15C);
	rage::scrEngine::RegisterNativeHandler(0x59498BC8B1C8B15C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x59498BC8B1C8B15C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_BUSINESS_PRODUCT
	static auto nh_0x8586789730B10CAF = rage::scrEngine::GetNativeHandler(0x8586789730B10CAF);
	rage::scrEngine::RegisterNativeHandler(0x8586789730B10CAF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x8586789730B10CAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CARCLUB_MEMBERSHIP
	static auto nh_0xBC6227792A188E2E = rage::scrEngine::GetNativeHandler(0xBC6227792A188E2E);
	rage::scrEngine::RegisterNativeHandler(0xBC6227792A188E2E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBC6227792A188E2E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CASHING_OUT
	static auto nh_0xEFE9C9A1651B81E6 = rage::scrEngine::GetNativeHandler(0xEFE9C9A1651B81E6);
	rage::scrEngine::RegisterNativeHandler(0xEFE9C9A1651B81E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFE9C9A1651B81E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CASINO_AWARD
	static auto nh_0x973A9781A34F8DEB = rage::scrEngine::GetNativeHandler(0x973A9781A34F8DEB);
	rage::scrEngine::RegisterNativeHandler(0x973A9781A34F8DEB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x973A9781A34F8DEB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CASINO_MISSION_PARTICIPATION
	static auto nh_0x09E8F18641BE2575 = rage::scrEngine::GetNativeHandler(0x09E8F18641BE2575);
	rage::scrEngine::RegisterNativeHandler(0x09E8F18641BE2575, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x09E8F18641BE2575(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CASINO_MISSION_REWARD
	static auto nh_0x566FD402B25787DE = rage::scrEngine::GetNativeHandler(0x566FD402B25787DE);
	rage::scrEngine::RegisterNativeHandler(0x566FD402B25787DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x566FD402B25787DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CASINO_STORY_MISSION_REWARD
	static auto nh_0xAC95ED552157E092 = rage::scrEngine::GetNativeHandler(0xAC95ED552157E092);
	rage::scrEngine::RegisterNativeHandler(0xAC95ED552157E092, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAC95ED552157E092(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION
	static auto nh_0xA75EAC69F59E96E7 = rage::scrEngine::GetNativeHandler(0xA75EAC69F59E96E7);
	rage::scrEngine::RegisterNativeHandler(0xA75EAC69F59E96E7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA75EAC69F59E96E7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_COLLECTABLES_ACTION_FIGURES
	static auto nh_0x5517F90043466049 = rage::scrEngine::GetNativeHandler(0x5517F90043466049);
	rage::scrEngine::RegisterNativeHandler(0x5517F90043466049, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5517F90043466049(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_COLLECTION_ITEM
	static auto nh_0x84FF63BD4966F33D = rage::scrEngine::GetNativeHandler(0x84FF63BD4966F33D);
	rage::scrEngine::RegisterNativeHandler(0x84FF63BD4966F33D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x84FF63BD4966F33D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_COMPLETE_COLLECTION
	static auto nh_0x83AD64F53F4E9483 = rage::scrEngine::GetNativeHandler(0x83AD64F53F4E9483);
	rage::scrEngine::RegisterNativeHandler(0x83AD64F53F4E9483, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x83AD64F53F4E9483(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CONTRABAND
	static auto nh_0xECA658CE2A4E5A72 = rage::scrEngine::GetNativeHandler(0xECA658CE2A4E5A72);
	rage::scrEngine::RegisterNativeHandler(0xECA658CE2A4E5A72, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xECA658CE2A4E5A72(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_BONUS
	static auto nh_0xFA009A62990671D4 = rage::scrEngine::GetNativeHandler(0xFA009A62990671D4);
	rage::scrEngine::RegisterNativeHandler(0xFA009A62990671D4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xFA009A62990671D4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_DAILY_OBJECTIVE_EVENT
	static auto nh_0x5128DF14A5BB86FC = rage::scrEngine::GetNativeHandler(0x5128DF14A5BB86FC);
	rage::scrEngine::RegisterNativeHandler(0x5128DF14A5BB86FC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5128DF14A5BB86FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_DAR_CHALLENGE
	static auto nh_0xCAC672087B4A24AB = rage::scrEngine::GetNativeHandler(0xCAC672087B4A24AB);
	rage::scrEngine::RegisterNativeHandler(0xCAC672087B4A24AB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCAC672087B4A24AB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_DESTROYING_CONTRABAND
	static auto nh_0x84C0116D012E8FC2 = rage::scrEngine::GetNativeHandler(0x84C0116D012E8FC2);
	rage::scrEngine::RegisterNativeHandler(0x84C0116D012E8FC2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x84C0116D012E8FC2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_DOOMSDAY_FINALE_BONUS
	static auto nh_0x128A747F4A230952 = rage::scrEngine::GetNativeHandler(0x128A747F4A230952);
	rage::scrEngine::RegisterNativeHandler(0x128A747F4A230952, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x128A747F4A230952(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_FMBB_BOSS_WORK
	static auto nh_0x1FDA0AA679C9919B = rage::scrEngine::GetNativeHandler(0x1FDA0AA679C9919B);
	rage::scrEngine::RegisterNativeHandler(0x1FDA0AA679C9919B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1FDA0AA679C9919B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION
	static auto nh_0xC5156361F26E2212 = rage::scrEngine::GetNativeHandler(0xC5156361F26E2212);
	rage::scrEngine::RegisterNativeHandler(0xC5156361F26E2212, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC5156361F26E2212(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_AWARDS
	static auto nh_0xA9A31475F530DFDA = rage::scrEngine::GetNativeHandler(0xA9A31475F530DFDA);
	rage::scrEngine::RegisterNativeHandler(0xA9A31475F530DFDA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xA9A31475F530DFDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_ELITE
	static auto nh_0x2597A0D4A4FC2C77 = rage::scrEngine::GetNativeHandler(0x2597A0D4A4FC2C77);
	rage::scrEngine::RegisterNativeHandler(0x2597A0D4A4FC2C77, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2597A0D4A4FC2C77(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_JOBS_FINALE
	static auto nh_0x1C121FC9545E0D52 = rage::scrEngine::GetNativeHandler(0x1C121FC9545E0D52);
	rage::scrEngine::RegisterNativeHandler(0x1C121FC9545E0D52, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1C121FC9545E0D52(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_JOBS_PREP_PARTICIPATION
	static auto nh_0xED26584F6BDCBBFD = rage::scrEngine::GetNativeHandler(0xED26584F6BDCBBFD);
	rage::scrEngine::RegisterNativeHandler(0xED26584F6BDCBBFD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xED26584F6BDCBBFD(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_JOBS_SETUP
	static auto nh_0xA9160796D47A2CF8 = rage::scrEngine::GetNativeHandler(0xA9160796D47A2CF8);
	rage::scrEngine::RegisterNativeHandler(0xA9160796D47A2CF8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA9160796D47A2CF8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_WAGES
	static auto nh_0x2DCB19ABAB0380A8 = rage::scrEngine::GetNativeHandler(0x2DCB19ABAB0380A8);
	rage::scrEngine::RegisterNativeHandler(0x2DCB19ABAB0380A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2DCB19ABAB0380A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANGOPS_WAGES_BONUS
	static auto nh_0x15BB2A5C757EB91F = rage::scrEngine::GetNativeHandler(0x15BB2A5C757EB91F);
	rage::scrEngine::RegisterNativeHandler(0x15BB2A5C757EB91F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x15BB2A5C757EB91F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_GANG_PICKUP
	static auto nh_0xA03D4ACE0A3284CE = rage::scrEngine::GetNativeHandler(0xA03D4ACE0A3284CE);
	rage::scrEngine::RegisterNativeHandler(0xA03D4ACE0A3284CE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA03D4ACE0A3284CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_HACKER_TRUCK_MISSION
	static auto nh_0xE8815FE993896AD3 = rage::scrEngine::GetNativeHandler(0xE8815FE993896AD3);
	rage::scrEngine::RegisterNativeHandler(0xE8815FE993896AD3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE8815FE993896AD3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_JOB_X2
	static auto nh_0xDEBBF584665411D0 = rage::scrEngine::GetNativeHandler(0xDEBBF584665411D0);
	rage::scrEngine::RegisterNativeHandler(0xDEBBF584665411D0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDEBBF584665411D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_PREMIUM_JOB
	static auto nh_0xC8407624CEF2354B = rage::scrEngine::GetNativeHandler(0xC8407624CEF2354B);
	rage::scrEngine::RegisterNativeHandler(0xC8407624CEF2354B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC8407624CEF2354B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_RC_TIME_TRIAL
	static auto nh_0xDFF49EE984E7AAE8 = rage::scrEngine::GetNativeHandler(0xDFF49EE984E7AAE8);
	rage::scrEngine::RegisterNativeHandler(0xDFF49EE984E7AAE8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDFF49EE984E7AAE8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_RDR_BONUS
	static auto nh_0x7A5349B773584675 = rage::scrEngine::GetNativeHandler(0x7A5349B773584675);
	rage::scrEngine::RegisterNativeHandler(0x7A5349B773584675, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7A5349B773584675(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SELLING_VEHICLE
	static auto nh_0x8BCB27A057DF7B7F = rage::scrEngine::GetNativeHandler(0x8BCB27A057DF7B7F);
	rage::scrEngine::RegisterNativeHandler(0x8BCB27A057DF7B7F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8BCB27A057DF7B7F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SELL_BASE
	static auto nh_0x0E1E2FF3F4EC11AA = rage::scrEngine::GetNativeHandler(0x0E1E2FF3F4EC11AA);
	rage::scrEngine::RegisterNativeHandler(0x0E1E2FF3F4EC11AA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0E1E2FF3F4EC11AA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SELL_BUNKER
	static auto nh_0x9251B6ABF2D0A5B4 = rage::scrEngine::GetNativeHandler(0x9251B6ABF2D0A5B4);
	rage::scrEngine::RegisterNativeHandler(0x9251B6ABF2D0A5B4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9251B6ABF2D0A5B4(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SIGHTSEEING
	static auto nh_0x45087AE480B233AC = rage::scrEngine::GetNativeHandler(0x45087AE480B233AC);
	rage::scrEngine::RegisterNativeHandler(0x45087AE480B233AC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x45087AE480B233AC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SMUGGLING
	static auto nh_0xDEE612F2D71B0308 = rage::scrEngine::GetNativeHandler(0xDEE612F2D71B0308);
	rage::scrEngine::RegisterNativeHandler(0xDEE612F2D71B0308, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xDEE612F2D71B0308(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_SPIN_THE_WHEEL_CASH
	static auto nh_0x676C48776CACBB5A = rage::scrEngine::GetNativeHandler(0x676C48776CACBB5A);
	rage::scrEngine::RegisterNativeHandler(0x676C48776CACBB5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x676C48776CACBB5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_TARGET_REFUND
	static auto nh_0x5B669CF2299A271F = rage::scrEngine::GetNativeHandler(0x5B669CF2299A271F);
	rage::scrEngine::RegisterNativeHandler(0x5B669CF2299A271F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B669CF2299A271F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_TIME_TRIAL_WIN
	static auto nh_0x0819DB99FD2FBBD8 = rage::scrEngine::GetNativeHandler(0x0819DB99FD2FBBD8);
	rage::scrEngine::RegisterNativeHandler(0x0819DB99FD2FBBD8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0819DB99FD2FBBD8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_TUNER_AWARD
	static auto nh_0xB846F547D3792DF6 = rage::scrEngine::GetNativeHandler(0xB846F547D3792DF6);
	rage::scrEngine::RegisterNativeHandler(0xB846F547D3792DF6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB846F547D3792DF6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_TUNER_FINALE
	static auto nh_0xBCB266247193AC61 = rage::scrEngine::GetNativeHandler(0xBCB266247193AC61);
	rage::scrEngine::RegisterNativeHandler(0xBCB266247193AC61, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xBCB266247193AC61(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_UPGRADE_AUTOSHOP_LOCATION
	static auto nh_0xC10322A8D3E061EE = rage::scrEngine::GetNativeHandler(0xC10322A8D3E061EE);
	rage::scrEngine::RegisterNativeHandler(0xC10322A8D3E061EE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC10322A8D3E061EE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_VEHICLE_AUTOSHOP
	static auto nh_0x533073E8A596008C = rage::scrEngine::GetNativeHandler(0x533073E8A596008C);
	rage::scrEngine::RegisterNativeHandler(0x533073E8A596008C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x533073E8A596008C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_BONUS
	static auto nh_0xFE65AFE7308E32B2 = rage::scrEngine::GetNativeHandler(0xFE65AFE7308E32B2);
	rage::scrEngine::RegisterNativeHandler(0xFE65AFE7308E32B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFE65AFE7308E32B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_VEHICLE_EXPORT
	static auto nh_0xEDEAD9A91EC768B3 = rage::scrEngine::GetNativeHandler(0xEDEAD9A91EC768B3);
	rage::scrEngine::RegisterNativeHandler(0xEDEAD9A91EC768B3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xEDEAD9A91EC768B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_WAGE_PAYMENT
	static auto nh_0x35F8DA0E8A31EF1B = rage::scrEngine::GetNativeHandler(0x35F8DA0E8A31EF1B);
	rage::scrEngine::RegisterNativeHandler(0x35F8DA0E8A31EF1B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35F8DA0E8A31EF1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_WAGE_PAYMENT_BONUS
	static auto nh_0x005ACA7100BD101D = rage::scrEngine::GetNativeHandler(0x005ACA7100BD101D);
	rage::scrEngine::RegisterNativeHandler(0x005ACA7100BD101D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x005ACA7100BD101D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_FROM_WAREHOUSE
	static auto nh_0x3E4ADAFF1830F146 = rage::scrEngine::GetNativeHandler(0x3E4ADAFF1830F146);
	rage::scrEngine::RegisterNativeHandler(0x3E4ADAFF1830F146, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3E4ADAFF1830F146(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_GOON
	static auto nh_0xCDA1C62BE2777802 = rage::scrEngine::GetNativeHandler(0xCDA1C62BE2777802);
	rage::scrEngine::RegisterNativeHandler(0xCDA1C62BE2777802, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xCDA1C62BE2777802(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_ISLAND_HEIST
	static auto nh_0xD21D111C46BA9F15 = rage::scrEngine::GetNativeHandler(0xD21D111C46BA9F15);
	rage::scrEngine::RegisterNativeHandler(0xD21D111C46BA9F15, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xD21D111C46BA9F15(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_JOB_BONUS_FIRST_TIME_BONUS
	static auto nh_0x11B0A20C493F7E36 = rage::scrEngine::GetNativeHandler(0x11B0A20C493F7E36);
	rage::scrEngine::RegisterNativeHandler(0x11B0A20C493F7E36, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x11B0A20C493F7E36(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_EARN_JOB_BONUS_HEIST_AWARD
	static auto nh_0x9D4FDBB035229669 = rage::scrEngine::GetNativeHandler(0x9D4FDBB035229669);
	rage::scrEngine::RegisterNativeHandler(0x9D4FDBB035229669, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x9D4FDBB035229669(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0xD414BE129BB81B32, ResultCleaner<float>);

	// NETWORK/_NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2 (result cleaner only)
	AddResultCleaner(0x0E3A041ED6AC2B45, ResultCleaner<float>);

	// NETWORK/_NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0x350C23949E43686C, ResultCleaner<float>);

	// NETWORK/_NETWORK_GET_DESTROYER_OF_ENTITY
	static auto nh_0x4CACA84440FA26F6 = rage::scrEngine::GetNativeHandler(0x4CACA84440FA26F6);
	rage::scrEngine::RegisterNativeHandler(0x4CACA84440FA26F6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x4CACA84440FA26F6(cxt);
	});
	        
	AddResultCleaner(0x4CACA84440FA26F6, ResultCleaner<bool>);

	// NETWORK/_NETWORK_GET_DISPLAYNAMES_FROM_HANDLES
	static auto nh_0x58CC181719256197 = rage::scrEngine::GetNativeHandler(0x58CC181719256197);
	rage::scrEngine::RegisterNativeHandler(0x58CC181719256197, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x58CC181719256197(cxt);
	});
	        
	AddResultCleaner(0x58CC181719256197, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_ENTITY_NET_SCRIPT_ID (result cleaner only)
	AddResultCleaner(0x815F18AD865F057F, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_FRIEND_NAME_FROM_INDEX (result cleaner only)
	AddResultCleaner(0x4164F227D052E293, ResultCleaner<char*>);

	// MONEY/_NETWORK_GET_IS_HIGH_EARNER (result cleaner only)
	AddResultCleaner(0xFB2456B2040A6A67, ResultCleaner<bool>);

	// NETWORK/_NETWORK_GET_NUM_BODY_TRACKERS (result cleaner only)
	AddResultCleaner(0xD38C4A6D047C019D, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_NUM_UNACKED_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0xFF8FCF9FFC458A1C, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0x52C1EADAF7B10302, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_PLATFORM_PARTY_UNK (result cleaner only)
	AddResultCleaner(0x01ABCE5E7CBDA196, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT (result cleaner only)
	AddResultCleaner(0x257ED0FADF750BCF, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_ROS_PRIVILEGE_24 (result cleaner only)
	AddResultCleaner(0x593570C289A77688, ResultCleaner<bool>);

	// NETWORK/_NETWORK_GET_ROS_PRIVILEGE_25 (result cleaner only)
	AddResultCleaner(0x91B87C55093DE351, ResultCleaner<bool>);

	// NETWORK/_NETWORK_GET_ROS_PRIVILEGE_9 (result cleaner only)
	AddResultCleaner(0x66B59CFFD78467AF, ResultCleaner<bool>);

	// NETWORK/_NETWORK_GET_TARGETING_MODE (result cleaner only)
	AddResultCleaner(0xDFFA5BE8381C3314, ResultCleaner<int>);

	// NETWORK/_NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER (result cleaner only)
	AddResultCleaner(0x3765C3A3E8192E10, ResultCleaner<int>);

	// MONEY/_NETWORK_GET_VC_BANK_BALANCE_IS_NOT_LESS_THAN (result cleaner only)
	AddResultCleaner(0xA31FD6A0865B6D14, ResultCleaner<bool>);

	// MONEY/_NETWORK_GET_VC_BANK_WALLET_BALANCE_IS_NOT_LESS_THAN (result cleaner only)
	AddResultCleaner(0xDC18531D7019A535, ResultCleaner<bool>);

	// MONEY/_NETWORK_GET_VC_WALLET_BALANCE_IS_NOT_LESS_THAN (result cleaner only)
	AddResultCleaner(0xED5AB8860415BABA, ResultCleaner<bool>);

	// NETWORK/_NETWORK_HAS_AGE_RESTRICTED_PROFILE (result cleaner only)
	AddResultCleaner(0x1353F87E89946207, ResultCleaner<bool>);

	// NETWORK/_NETWORK_HAS_GAME_BEEN_ALTERED (result cleaner only)
	AddResultCleaner(0x659CF2EF7F550C4F, ResultCleaner<bool>);

	// NETWORK/_NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT
	static auto nh_0xCCA4318E1AB03F1F = rage::scrEngine::GetNativeHandler(0xCCA4318E1AB03F1F);
	rage::scrEngine::RegisterNativeHandler(0xCCA4318E1AB03F1F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* networkHandle
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCCA4318E1AB03F1F(cxt);
	});
	        
	AddResultCleaner(0xCCA4318E1AB03F1F, ResultCleaner<bool>);

	// NETWORK/_NETWORK_HAVE_ONLINE_PRIVILEGE_2 (result cleaner only)
	AddResultCleaner(0x5EA784D197556507, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER (result cleaner only)
	AddResultCleaner(0x16D3D49902F697BB, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_ENTITY_CONCEALED (result cleaner only)
	AddResultCleaner(0x71302EC70689052A, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_FRIEND_HANDLE_ONLINE
	static auto nh_0x87EB7A3FFCB314DB = rage::scrEngine::GetNativeHandler(0x87EB7A3FFCB314DB);
	rage::scrEngine::RegisterNativeHandler(0x87EB7A3FFCB314DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x87EB7A3FFCB314DB(cxt);
	});
	        
	AddResultCleaner(0x87EB7A3FFCB314DB, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_NETWORK_ID_A_CLONE (result cleaner only)
	AddResultCleaner(0x7242F8B741CE1086, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_PLAYER_EQUAL_TO_INDEX (result cleaner only)
	AddResultCleaner(0x9DE986FC9A87C474, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_PSN_AVAILABLE (result cleaner only)
	AddResultCleaner(0x8D11E61A4ABF49CC, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_SCRIPT_ACTIVE_BY_HASH (result cleaner only)
	AddResultCleaner(0xDA7DE67F5FE5EE13, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_TEXT_CHAT_ACTIVE (result cleaner only)
	AddResultCleaner(0x5FCF4D7069B09026, ResultCleaner<bool>);

	// NETWORK/_NETWORK_IS_THIS_SCRIPT_MARKED
	static auto nh_0xD1110739EEADB592 = rage::scrEngine::GetNativeHandler(0xD1110739EEADB592);
	rage::scrEngine::RegisterNativeHandler(0xD1110739EEADB592, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xD1110739EEADB592(cxt);
	});
	        
	AddResultCleaner(0xD1110739EEADB592, ResultCleaner<bool>);

	// MONEY/_NETWORK_MANUAL_DELETE_CHARACTER
	static auto nh_0x821418C727FCACD7 = rage::scrEngine::GetNativeHandler(0x821418C727FCACD7);
	rage::scrEngine::RegisterNativeHandler(0x821418C727FCACD7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x821418C727FCACD7(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_OVERRIDE_CLOCK_MILLISECONDS_PER_GAME_MINUTE
	static auto nh_0x42BF1D2E723B6D7E = rage::scrEngine::GetNativeHandler(0x42BF1D2E723B6D7E);
	rage::scrEngine::RegisterNativeHandler(0x42BF1D2E723B6D7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42BF1D2E723B6D7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_PED_FORCE_GAME_STATE_UPDATE
	static auto nh_0xF0BC9BCD24A511D5 = rage::scrEngine::GetNativeHandler(0xF0BC9BCD24A511D5);
	rage::scrEngine::RegisterNativeHandler(0xF0BC9BCD24A511D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF0BC9BCD24A511D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_REGISTER_TUNABLE_BOOL_HASH
	static auto nh_0x697F508861875B42 = rage::scrEngine::GetNativeHandler(0x697F508861875B42);
	rage::scrEngine::RegisterNativeHandler(0x697F508861875B42, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x697F508861875B42(cxt);
	});
	        
	AddResultCleaner(0x697F508861875B42, ResultCleaner<bool>);

	// NETWORK/_NETWORK_REGISTER_TUNABLE_FLOAT_HASH
	static auto nh_0x1950DAE9848A4739 = rage::scrEngine::GetNativeHandler(0x1950DAE9848A4739);
	rage::scrEngine::RegisterNativeHandler(0x1950DAE9848A4739, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x1950DAE9848A4739(cxt);
	});
	        
	AddResultCleaner(0x1950DAE9848A4739, ResultCleaner<bool>);

	// NETWORK/_NETWORK_REGISTER_TUNABLE_INT_HASH
	static auto nh_0x3A8B55FDA4C8DDEF = rage::scrEngine::GetNativeHandler(0x3A8B55FDA4C8DDEF);
	rage::scrEngine::RegisterNativeHandler(0x3A8B55FDA4C8DDEF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3A8B55FDA4C8DDEF(cxt);
	});
	        
	AddResultCleaner(0x3A8B55FDA4C8DDEF, ResultCleaner<bool>);

	// NETWORK/_NETWORK_REPORT_MYSELF
	static auto nh_0x5626D9D6810730D5 = rage::scrEngine::GetNativeHandler(0x5626D9D6810730D5);
	rage::scrEngine::RegisterNativeHandler(0x5626D9D6810730D5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5626D9D6810730D5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_RESPAWN_COORDS
	static auto nh_0x9769F811D1785B03 = rage::scrEngine::GetNativeHandler(0x9769F811D1785B03);
	rage::scrEngine::RegisterNativeHandler(0x9769F811D1785B03, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9769F811D1785B03(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_RIVAL_DELIVERY_COMPLETED
	static auto nh_0x1B882107C23A9022 = rage::scrEngine::GetNativeHandler(0x1B882107C23A9022);
	rage::scrEngine::RegisterNativeHandler(0x1B882107C23A9022, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1B882107C23A9022(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SEND_PRESENCE_TRANSITION_INVITE
	static auto nh_0xC116FF9B4D488291 = rage::scrEngine::GetNativeHandler(0xC116FF9B4D488291);
	rage::scrEngine::RegisterNativeHandler(0xC116FF9B4D488291, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xC116FF9B4D488291(cxt);
	});
	        
	AddResultCleaner(0xC116FF9B4D488291, ResultCleaner<bool>);

	// NETWORK/_NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE
	static auto nh_0x796A87B3B68D1F3D = rage::scrEngine::GetNativeHandler(0x796A87B3B68D1F3D);
	rage::scrEngine::RegisterNativeHandler(0x796A87B3B68D1F3D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x796A87B3B68D1F3D(cxt);
	});
	        
	AddResultCleaner(0x796A87B3B68D1F3D, ResultCleaner<bool>);

	// NETWORK/_NETWORK_SET_CURRENT_MISSION_ID
	static auto nh_0x2C863ACDCD12B3DB = rage::scrEngine::GetNativeHandler(0x2C863ACDCD12B3DB);
	rage::scrEngine::RegisterNativeHandler(0x2C863ACDCD12B3DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2C863ACDCD12B3DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_CURRENT_SPAWN_SETTING
	static auto nh_0xAA6D5451DC3448B6 = rage::scrEngine::GetNativeHandler(0xAA6D5451DC3448B6);
	rage::scrEngine::RegisterNativeHandler(0xAA6D5451DC3448B6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA6D5451DC3448B6(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER
	static auto nh_0x4BA166079D658ED4 = rage::scrEngine::GetNativeHandler(0x4BA166079D658ED4);
	rage::scrEngine::RegisterNativeHandler(0x4BA166079D658ED4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4BA166079D658ED4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
	static auto nh_0xF1CA12B18AEF5298 = rage::scrEngine::GetNativeHandler(0xF1CA12B18AEF5298);
	rage::scrEngine::RegisterNativeHandler(0xF1CA12B18AEF5298, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF1CA12B18AEF5298(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_OBJECT_FORCE_STATIC_BLEND
	static auto nh_0x0379DAF89BA09AA5 = rage::scrEngine::GetNativeHandler(0x0379DAF89BA09AA5);
	rage::scrEngine::RegisterNativeHandler(0x0379DAF89BA09AA5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0379DAF89BA09AA5(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_VEHICLE_TEST_DRIVE
	static auto nh_0x8C70252FC40F320B = rage::scrEngine::GetNativeHandler(0x8C70252FC40F320B);
	rage::scrEngine::RegisterNativeHandler(0x8C70252FC40F320B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8C70252FC40F320B(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
	static auto nh_0x890E2C5ABED7236D = rage::scrEngine::GetNativeHandler(0x890E2C5ABED7236D);
	rage::scrEngine::RegisterNativeHandler(0x890E2C5ABED7236D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x890E2C5ABED7236D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_SHOULD_SHOW_CONNECTIVITY_TROUBLESHOOTING (result cleaner only)
	AddResultCleaner(0x82A2B386716608F1, ResultCleaner<bool>);

	// MONEY/_NETWORK_SPENT_ARCADE_GAME
	static auto nh_0xEAD3D81F2C3A1458 = rage::scrEngine::GetNativeHandler(0xEAD3D81F2C3A1458);
	rage::scrEngine::RegisterNativeHandler(0xEAD3D81F2C3A1458, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xEAD3D81F2C3A1458(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ARCADE_GENERIC
	static auto nh_0x43AA7FAC4E6D6687 = rage::scrEngine::GetNativeHandler(0x43AA7FAC4E6D6687);
	rage::scrEngine::RegisterNativeHandler(0x43AA7FAC4E6D6687, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x43AA7FAC4E6D6687(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ARENA_JOIN_SPECTATOR
	static auto nh_0x14EAEA58F93B55AF = rage::scrEngine::GetNativeHandler(0x14EAEA58F93B55AF);
	rage::scrEngine::RegisterNativeHandler(0x14EAEA58F93B55AF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x14EAEA58F93B55AF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ARENA_PREMIUM
	static auto nh_0x619496D837EFD920 = rage::scrEngine::GetNativeHandler(0x619496D837EFD920);
	rage::scrEngine::RegisterNativeHandler(0x619496D837EFD920, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x619496D837EFD920(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ARENA_SPECTATOR_BOX
	static auto nh_0x7049BF858601DC0F = rage::scrEngine::GetNativeHandler(0x7049BF858601DC0F);
	rage::scrEngine::RegisterNativeHandler(0x7049BF858601DC0F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x7049BF858601DC0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_AUTOSHOP_MODIFICATIONS
	static auto nh_0x9BEA350D7C48061B = rage::scrEngine::GetNativeHandler(0x9BEA350D7C48061B);
	rage::scrEngine::RegisterNativeHandler(0x9BEA350D7C48061B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x9BEA350D7C48061B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_AUTOSHOP_PROPERTY_UTILITY_FEE
	static auto nh_0xB40F96D6D252839B = rage::scrEngine::GetNativeHandler(0xB40F96D6D252839B);
	rage::scrEngine::RegisterNativeHandler(0xB40F96D6D252839B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xB40F96D6D252839B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BALLISTIC_EQUIPMENT
	static auto nh_0x5D97630A8A0EF123 = rage::scrEngine::GetNativeHandler(0x5D97630A8A0EF123);
	rage::scrEngine::RegisterNativeHandler(0x5D97630A8A0EF123, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D97630A8A0EF123(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BA_SERVICE
	static auto nh_0xD7CCCBA28C4ECAF0 = rage::scrEngine::GetNativeHandler(0xD7CCCBA28C4ECAF0);
	rage::scrEngine::RegisterNativeHandler(0xD7CCCBA28C4ECAF0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0xD7CCCBA28C4ECAF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BEACH_PARTY_GENERIC
	static auto nh_0x54ABA22FA6371249 = rage::scrEngine::GetNativeHandler(0x54ABA22FA6371249);
	rage::scrEngine::RegisterNativeHandler(0x54ABA22FA6371249, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x54ABA22FA6371249(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BIKE_SHOP_MODIFY
	static auto nh_0x923AEA8E78F8DF0B = rage::scrEngine::GetNativeHandler(0x923AEA8E78F8DF0B);
	rage::scrEngine::RegisterNativeHandler(0x923AEA8E78F8DF0B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x923AEA8E78F8DF0B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BOSS (result cleaner only)
	AddResultCleaner(0xFFBE02CD385356BD, ResultCleaner<bool>);

	// MONEY/_NETWORK_SPENT_BOUNTY_HUNTER_MISSION
	static auto nh_0x1BEA0CD93470BB1F = rage::scrEngine::GetNativeHandler(0x1BEA0CD93470BB1F);
	rage::scrEngine::RegisterNativeHandler(0x1BEA0CD93470BB1F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1BEA0CD93470BB1F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUSINESS
	static auto nh_0x0035BB914316F1E3 = rage::scrEngine::GetNativeHandler(0x0035BB914316F1E3);
	rage::scrEngine::RegisterNativeHandler(0x0035BB914316F1E3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0035BB914316F1E3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_ARENA
	static auto nh_0x40D5DA9550B7CB46 = rage::scrEngine::GetNativeHandler(0x40D5DA9550B7CB46);
	rage::scrEngine::RegisterNativeHandler(0x40D5DA9550B7CB46, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x40D5DA9550B7CB46(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_AUTOSHOP
	static auto nh_0xEEB7E5D1FEB20869 = rage::scrEngine::GetNativeHandler(0xEEB7E5D1FEB20869);
	rage::scrEngine::RegisterNativeHandler(0xEEB7E5D1FEB20869, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xEEB7E5D1FEB20869(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_BASE
	static auto nh_0x4EA3F425C7744D21 = rage::scrEngine::GetNativeHandler(0x4EA3F425C7744D21);
	rage::scrEngine::RegisterNativeHandler(0x4EA3F425C7744D21, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x4EA3F425C7744D21(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_BUNKER
	static auto nh_0x12D148D26538D0F9 = rage::scrEngine::GetNativeHandler(0x12D148D26538D0F9);
	rage::scrEngine::RegisterNativeHandler(0x12D148D26538D0F9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x12D148D26538D0F9(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_CASINO
	static auto nh_0x34A6FC4D06C4DA0F = rage::scrEngine::GetNativeHandler(0x34A6FC4D06C4DA0F);
	rage::scrEngine::RegisterNativeHandler(0x34A6FC4D06C4DA0F, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x34A6FC4D06C4DA0F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_TILTROTOR
	static auto nh_0x0CCE73BC7A11E885 = rage::scrEngine::GetNativeHandler(0x0CCE73BC7A11E885);
	rage::scrEngine::RegisterNativeHandler(0x0CCE73BC7A11E885, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0CCE73BC7A11E885(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_BUY_TRUCK
	static auto nh_0xAC272C0AE01B4BD8 = rage::scrEngine::GetNativeHandler(0xAC272C0AE01B4BD8);
	rage::scrEngine::RegisterNativeHandler(0xAC272C0AE01B4BD8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xAC272C0AE01B4BD8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CARCLUB
	static auto nh_0x925227803A0EAA1B = rage::scrEngine::GetNativeHandler(0x925227803A0EAA1B);
	rage::scrEngine::RegisterNativeHandler(0x925227803A0EAA1B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x925227803A0EAA1B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CARCLUB_MEMBERSHIP
	static auto nh_0x1464E17207CD36E2 = rage::scrEngine::GetNativeHandler(0x1464E17207CD36E2);
	rage::scrEngine::RegisterNativeHandler(0x1464E17207CD36E2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x1464E17207CD36E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CARCLUB_TAKEOVER
	static auto nh_0xD1E46824E6FB92B5 = rage::scrEngine::GetNativeHandler(0xD1E46824E6FB92B5);
	rage::scrEngine::RegisterNativeHandler(0xD1E46824E6FB92B5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xD1E46824E6FB92B5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CARGO_SOURCING
	static auto nh_0x948705F6F9C50824 = rage::scrEngine::GetNativeHandler(0x948705F6F9C50824);
	rage::scrEngine::RegisterNativeHandler(0x948705F6F9C50824, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x948705F6F9C50824(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CASINO_CLUB_GENERIC
	static auto nh_0xC991C255AA6D90B2 = rage::scrEngine::GetNativeHandler(0xC991C255AA6D90B2);
	rage::scrEngine::RegisterNativeHandler(0xC991C255AA6D90B2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		nh_0xC991C255AA6D90B2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CASINO_GENERIC
	static auto nh_0x88BF9B612B84D3C3 = rage::scrEngine::GetNativeHandler(0x88BF9B612B84D3C3);
	rage::scrEngine::RegisterNativeHandler(0x88BF9B612B84D3C3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x88BF9B612B84D3C3(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CASINO_HEIST
	static auto nh_0xD30E8392F407C328 = rage::scrEngine::GetNativeHandler(0xD30E8392F407C328);
	rage::scrEngine::RegisterNativeHandler(0xD30E8392F407C328, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0xD30E8392F407C328(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CASINO_HEIST_SKIP_MISSION
	static auto nh_0x487009DD91D93429 = rage::scrEngine::GetNativeHandler(0x487009DD91D93429);
	rage::scrEngine::RegisterNativeHandler(0x487009DD91D93429, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x487009DD91D93429(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_CASINO_MEMBERSHIP
	static auto nh_0xFBBE0570EDF39D46 = rage::scrEngine::GetNativeHandler(0xFBBE0570EDF39D46);
	rage::scrEngine::RegisterNativeHandler(0xFBBE0570EDF39D46, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFBBE0570EDF39D46(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_EMPLOY_ASSASSINS
	static auto nh_0x5BBBD92186E1F1C5 = rage::scrEngine::GetNativeHandler(0x5BBBD92186E1F1C5);
	rage::scrEngine::RegisterNativeHandler(0x5BBBD92186E1F1C5, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x5BBBD92186E1F1C5(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_FROM_BANK
	static auto nh_0xB9F7A469460E7A4A = rage::scrEngine::GetNativeHandler(0xB9F7A469460E7A4A);
	rage::scrEngine::RegisterNativeHandler(0xB9F7A469460E7A4A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xB9F7A469460E7A4A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_GANGOPS_CANNON
	static auto nh_0x771ADB0E7635B7BF = rage::scrEngine::GetNativeHandler(0x771ADB0E7635B7BF);
	rage::scrEngine::RegisterNativeHandler(0x771ADB0E7635B7BF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x771ADB0E7635B7BF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_GANGOPS_START_MISSION
	static auto nh_0xDA947AE8880D5C18 = rage::scrEngine::GetNativeHandler(0xDA947AE8880D5C18);
	rage::scrEngine::RegisterNativeHandler(0xDA947AE8880D5C18, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xDA947AE8880D5C18(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_GANGOPS_START_STRAND
	static auto nh_0xA19EC0786E326E06 = rage::scrEngine::GetNativeHandler(0xA19EC0786E326E06);
	rage::scrEngine::RegisterNativeHandler(0xA19EC0786E326E06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA19EC0786E326E06(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_GANGOPS_TRIP_SKIP
	static auto nh_0x5ECE6FD7B4EC8D6A = rage::scrEngine::GetNativeHandler(0x5ECE6FD7B4EC8D6A);
	rage::scrEngine::RegisterNativeHandler(0x5ECE6FD7B4EC8D6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5ECE6FD7B4EC8D6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_GUNRUNNING_CONTACT_SERVICE
	static auto nh_0x2CEB0E0BC2A77C05 = rage::scrEngine::GetNativeHandler(0x2CEB0E0BC2A77C05);
	rage::scrEngine::RegisterNativeHandler(0x2CEB0E0BC2A77C05, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x2CEB0E0BC2A77C05(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_HANGAR_STAFF_CHARGES
	static auto nh_0xB1F1346FD57685D7 = rage::scrEngine::GetNativeHandler(0xB1F1346FD57685D7);
	rage::scrEngine::RegisterNativeHandler(0xB1F1346FD57685D7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1F1346FD57685D7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_HANGAR_UTILITY_CHARGES
	static auto nh_0xB18AC2ECBB15CB6A = rage::scrEngine::GetNativeHandler(0xB18AC2ECBB15CB6A);
	rage::scrEngine::RegisterNativeHandler(0xB18AC2ECBB15CB6A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB18AC2ECBB15CB6A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_IMPORT_EXPORT_REPAIR
	static auto nh_0xC1952F3773BA18FE = rage::scrEngine::GetNativeHandler(0xC1952F3773BA18FE);
	rage::scrEngine::RegisterNativeHandler(0xC1952F3773BA18FE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xC1952F3773BA18FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_IM_ABILITY
	static auto nh_0x93AA4165CB67E925 = rage::scrEngine::GetNativeHandler(0x93AA4165CB67E925);
	rage::scrEngine::RegisterNativeHandler(0x93AA4165CB67E925, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x93AA4165CB67E925(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ISLAND_HEIST
	static auto nh_0xE86689E5F82DE429 = rage::scrEngine::GetNativeHandler(0xE86689E5F82DE429);
	rage::scrEngine::RegisterNativeHandler(0xE86689E5F82DE429, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE86689E5F82DE429(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_JOB_SKIP
	static auto nh_0x28F174A67B8D0C2F = rage::scrEngine::GetNativeHandler(0x28F174A67B8D0C2F);
	rage::scrEngine::RegisterNativeHandler(0x28F174A67B8D0C2F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x28F174A67B8D0C2F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_JUKEBOX
	static auto nh_0x5BCDE0F640C773D2 = rage::scrEngine::GetNativeHandler(0x5BCDE0F640C773D2);
	rage::scrEngine::RegisterNativeHandler(0x5BCDE0F640C773D2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x5BCDE0F640C773D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_MAKE_IT_RAIN
	static auto nh_0xE5F5A060439C2F5D = rage::scrEngine::GetNativeHandler(0xE5F5A060439C2F5D);
	rage::scrEngine::RegisterNativeHandler(0xE5F5A060439C2F5D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE5F5A060439C2F5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_MOVE_YACHT
	static auto nh_0xE7DF4E0545DFB56E = rage::scrEngine::GetNativeHandler(0xE7DF4E0545DFB56E);
	rage::scrEngine::RegisterNativeHandler(0xE7DF4E0545DFB56E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE7DF4E0545DFB56E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_NIGHTCLUB_BAR_DRINK
	static auto nh_0xDD21B016E4289465 = rage::scrEngine::GetNativeHandler(0xDD21B016E4289465);
	rage::scrEngine::RegisterNativeHandler(0xDD21B016E4289465, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xDD21B016E4289465(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE
	static auto nh_0x876056684281655D = rage::scrEngine::GetNativeHandler(0x876056684281655D);
	rage::scrEngine::RegisterNativeHandler(0x876056684281655D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x876056684281655D(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE
	static auto nh_0xE8B0B270B6E7C76E = rage::scrEngine::GetNativeHandler(0xE8B0B270B6E7C76E);
	rage::scrEngine::RegisterNativeHandler(0xE8B0B270B6E7C76E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xE8B0B270B6E7C76E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE
	static auto nh_0x05F04155A226FBBF = rage::scrEngine::GetNativeHandler(0x05F04155A226FBBF);
	rage::scrEngine::RegisterNativeHandler(0x05F04155A226FBBF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x05F04155A226FBBF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PAY_BOSS
	static auto nh_0xDBC966A01C02BCA7 = rage::scrEngine::GetNativeHandler(0xDBC966A01C02BCA7);
	rage::scrEngine::RegisterNativeHandler(0xDBC966A01C02BCA7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xDBC966A01C02BCA7(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PAY_GOON
	static auto nh_0x08A1B82B91900682 = rage::scrEngine::GetNativeHandler(0x08A1B82B91900682);
	rage::scrEngine::RegisterNativeHandler(0x08A1B82B91900682, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x08A1B82B91900682(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PA_SERVICE_DANCER
	static auto nh_0xB49ECA122467D05F = rage::scrEngine::GetNativeHandler(0xB49ECA122467D05F);
	rage::scrEngine::RegisterNativeHandler(0xB49ECA122467D05F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xB49ECA122467D05F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PA_SERVICE_HELI_PICKUP
	static auto nh_0x0FE8E1FCD2B86B33 = rage::scrEngine::GetNativeHandler(0x0FE8E1FCD2B86B33);
	rage::scrEngine::RegisterNativeHandler(0x0FE8E1FCD2B86B33, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0FE8E1FCD2B86B33(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PURCHASE_HANGAR
	static auto nh_0xCCB339CC970452DA = rage::scrEngine::GetNativeHandler(0xCCB339CC970452DA);
	rage::scrEngine::RegisterNativeHandler(0xCCB339CC970452DA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xCCB339CC970452DA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_PURCHASE_WAREHOUSE
	static auto nh_0x33981D6804E62F49 = rage::scrEngine::GetNativeHandler(0x33981D6804E62F49);
	rage::scrEngine::RegisterNativeHandler(0x33981D6804E62F49, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x33981D6804E62F49(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_RDRHATCHET_BONUS
	static auto nh_0xE284D46FFDB82E36 = rage::scrEngine::GetNativeHandler(0xE284D46FFDB82E36);
	rage::scrEngine::RegisterNativeHandler(0xE284D46FFDB82E36, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE284D46FFDB82E36(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_REHIRE_DJ
	static auto nh_0xF6C8A544E4CF14FC = rage::scrEngine::GetNativeHandler(0xF6C8A544E4CF14FC);
	rage::scrEngine::RegisterNativeHandler(0xF6C8A544E4CF14FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xF6C8A544E4CF14FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_RENAME_ORGANIZATION
	static auto nh_0xFC4EE00A7B3BFB76 = rage::scrEngine::GetNativeHandler(0xFC4EE00A7B3BFB76);
	rage::scrEngine::RegisterNativeHandler(0xFC4EE00A7B3BFB76, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0xFC4EE00A7B3BFB76(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_SALES_DISPLAY
	static auto nh_0x7E2F4E8F44CAF4E0 = rage::scrEngine::GetNativeHandler(0x7E2F4E8F44CAF4E0);
	rage::scrEngine::RegisterNativeHandler(0x7E2F4E8F44CAF4E0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7E2F4E8F44CAF4E0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_SPIN_THE_WHEEL_PAYMENT
	static auto nh_0x9A5BD1D0000B339C = rage::scrEngine::GetNativeHandler(0x9A5BD1D0000B339C);
	rage::scrEngine::RegisterNativeHandler(0x9A5BD1D0000B339C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9A5BD1D0000B339C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_SUBMARINE
	static auto nh_0x6C8BC1488527AAAB = rage::scrEngine::GetNativeHandler(0x6C8BC1488527AAAB);
	rage::scrEngine::RegisterNativeHandler(0x6C8BC1488527AAAB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x6C8BC1488527AAAB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_ARENA
	static auto nh_0x037ABB06825D7AB1 = rage::scrEngine::GetNativeHandler(0x037ABB06825D7AB1);
	rage::scrEngine::RegisterNativeHandler(0x037ABB06825D7AB1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x037ABB06825D7AB1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_AUTOSHOP
	static auto nh_0xDD829AA198FDC46C = rage::scrEngine::GetNativeHandler(0xDD829AA198FDC46C);
	rage::scrEngine::RegisterNativeHandler(0xDD829AA198FDC46C, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0xDD829AA198FDC46C(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_BASE
	static auto nh_0x3DD3F33A5D55EA6F = rage::scrEngine::GetNativeHandler(0x3DD3F33A5D55EA6F);
	rage::scrEngine::RegisterNativeHandler(0x3DD3F33A5D55EA6F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x3DD3F33A5D55EA6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_BUNKER
	static auto nh_0x0C82D21A77C22D49 = rage::scrEngine::GetNativeHandler(0x0C82D21A77C22D49);
	rage::scrEngine::RegisterNativeHandler(0x0C82D21A77C22D49, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x0C82D21A77C22D49(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_CASINO
	static auto nh_0x4740D62BC1B4EBEA = rage::scrEngine::GetNativeHandler(0x4740D62BC1B4EBEA);
	rage::scrEngine::RegisterNativeHandler(0x4740D62BC1B4EBEA, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(3)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x4740D62BC1B4EBEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_HANGAR
	static auto nh_0x615EB504B0788DAF = rage::scrEngine::GetNativeHandler(0x615EB504B0788DAF);
	rage::scrEngine::RegisterNativeHandler(0x615EB504B0788DAF, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x615EB504B0788DAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_SUB
	static auto nh_0x89049A84065CE68E = rage::scrEngine::GetNativeHandler(0x89049A84065CE68E);
	rage::scrEngine::RegisterNativeHandler(0x89049A84065CE68E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x89049A84065CE68E(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_TILTROTOR
	static auto nh_0x165E135D6DFA2907 = rage::scrEngine::GetNativeHandler(0x165E135D6DFA2907);
	rage::scrEngine::RegisterNativeHandler(0x165E135D6DFA2907, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x165E135D6DFA2907(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_UPGRADE_TRUCK
	static auto nh_0x365E877C61D6988B = rage::scrEngine::GetNativeHandler(0x365E877C61D6988B);
	rage::scrEngine::RegisterNativeHandler(0x365E877C61D6988B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x365E877C61D6988B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_VEHICLE_EXPORT_MODS
	static auto nh_0xA75CCF58A60A5FD1 = rage::scrEngine::GetNativeHandler(0xA75CCF58A60A5FD1);
	rage::scrEngine::RegisterNativeHandler(0xA75CCF58A60A5FD1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0xA75CCF58A60A5FD1(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_VEHICLE_REQUESTED
	static auto nh_0x02D24A35A9CC3503 = rage::scrEngine::GetNativeHandler(0x02D24A35A9CC3503);
	rage::scrEngine::RegisterNativeHandler(0x02D24A35A9CC3503, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x02D24A35A9CC3503(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_VIP_UTILITY_CHARGES
	static auto nh_0x5182A339A3474510 = rage::scrEngine::GetNativeHandler(0x5182A339A3474510);
	rage::scrEngine::RegisterNativeHandler(0x5182A339A3474510, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x5182A339A3474510(cxt);
		NullifyVoid(cxt);
	});
	        
	// MONEY/_NETWORK_SPENT_WAGER
	static auto nh_0xD99DB210089617FE = rage::scrEngine::GetNativeHandler(0xD99DB210089617FE);
	rage::scrEngine::RegisterNativeHandler(0xD99DB210089617FE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xD99DB210089617FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK
	static auto nh_0xDEB2B99A1AF1A2A6 = rage::scrEngine::GetNativeHandler(0xDEB2B99A1AF1A2A6);
	rage::scrEngine::RegisterNativeHandler(0xDEB2B99A1AF1A2A6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDEB2B99A1AF1A2A6(cxt);
	});
	        
	AddResultCleaner(0xDEB2B99A1AF1A2A6, ResultCleaner<int>);

	// NETWORK/_NETWORK_TRANSITION_TRACK
	static auto nh_0xC3BFED92026A2AAD = rage::scrEngine::GetNativeHandler(0xC3BFED92026A2AAD);
	rage::scrEngine::RegisterNativeHandler(0xC3BFED92026A2AAD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3BFED92026A2AAD(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_UGC_NAV
	static auto nh_0xC1447451DDB512F0 = rage::scrEngine::GetNativeHandler(0xC1447451DDB512F0);
	rage::scrEngine::RegisterNativeHandler(0xC1447451DDB512F0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC1447451DDB512F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_NETWORK_UPDATE_PLAYER_SCARS
	static auto nh_0xB7C7F6AD6424304B = rage::scrEngine::GetNativeHandler(0xB7C7F6AD6424304B);
	rage::scrEngine::RegisterNativeHandler(0xB7C7F6AD6424304B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB7C7F6AD6424304B(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_NETWORK_USE_HIGH_PRECISION_VEHICLE_BLENDING
	static auto nh_0xEC0C1D4922AF9754 = rage::scrEngine::GetNativeHandler(0xEC0C1D4922AF9754);
	rage::scrEngine::RegisterNativeHandler(0xEC0C1D4922AF9754, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEC0C1D4922AF9754(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETSHOPPING/_NET_GAMESERVER_BASKET_ADD_ITEM
	static auto nh_0xF30980718C8ED876 = rage::scrEngine::GetNativeHandler(0xF30980718C8ED876);
	rage::scrEngine::RegisterNativeHandler(0xF30980718C8ED876, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* itemData
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF30980718C8ED876(cxt);
	});
	        
	AddResultCleaner(0xF30980718C8ED876, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BASKET_APPLY_SERVER_DATA
	static auto nh_0xE1A0450ED46A7812 = rage::scrEngine::GetNativeHandler(0xE1A0450ED46A7812);
	rage::scrEngine::RegisterNativeHandler(0xE1A0450ED46A7812, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		NullifyAny(cxt->GetArgument<void*>(1)); // Any* p1
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE1A0450ED46A7812(cxt);
	});
	        
	AddResultCleaner(0xE1A0450ED46A7812, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BASKET_DELETE (result cleaner only)
	AddResultCleaner(0xFA336E7F40C0A0D0, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BASKET_END (result cleaner only)
	AddResultCleaner(0xA65568121DF2EA26, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BASKET_IS_FULL (result cleaner only)
	AddResultCleaner(0x27F76CC6C55AD30E, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BASKET_START
	static auto nh_0x279F08B1A4B29B7E = rage::scrEngine::GetNativeHandler(0x279F08B1A4B29B7E);
	rage::scrEngine::RegisterNativeHandler(0x279F08B1A4B29B7E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x279F08B1A4B29B7E(cxt);
	});
	        
	AddResultCleaner(0x279F08B1A4B29B7E, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_BEGIN_SERVICE
	static auto nh_0x3C5FD37B5499582E = rage::scrEngine::GetNativeHandler(0x3C5FD37B5499582E);
	rage::scrEngine::RegisterNativeHandler(0x3C5FD37B5499582E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3C5FD37B5499582E(cxt);
	});
	        
	AddResultCleaner(0x3C5FD37B5499582E, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_CATALOG_IS_READY (result cleaner only)
	AddResultCleaner(0x3C4487461E9B0DCB, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_CATALOG_ITEM_EXISTS
	static auto nh_0xBD4D7EAF8A30F637 = rage::scrEngine::GetNativeHandler(0xBD4D7EAF8A30F637);
	rage::scrEngine::RegisterNativeHandler(0xBD4D7EAF8A30F637, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBD4D7EAF8A30F637(cxt);
	});
	        
	AddResultCleaner(0xBD4D7EAF8A30F637, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH (result cleaner only)
	AddResultCleaner(0x247F0F73A182EA0B, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_CHECKOUT_START (result cleaner only)
	AddResultCleaner(0x39BE7CEA8D9CC8E6, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_DELETE_CHARACTER_SLOT (result cleaner only)
	AddResultCleaner(0x51F1A8E48C3D2F6D, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS (result cleaner only)
	AddResultCleaner(0x0A6D923DFFC9BD89, ResultCleaner<int>);

	// NETSHOPPING/_NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED (result cleaner only)
	AddResultCleaner(0x112CEF1615A1139F, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_END_SERVICE (result cleaner only)
	AddResultCleaner(0xE2A99A9B524BEFFF, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_GET_BALANCE (result cleaner only)
	AddResultCleaner(0x35A1B3E1D1315CFA, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_GET_CATALOG_STATE
	static auto nh_0xCF38DAFBB49EDE5E = rage::scrEngine::GetNativeHandler(0xCF38DAFBB49EDE5E);
	rage::scrEngine::RegisterNativeHandler(0xCF38DAFBB49EDE5E, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCF38DAFBB49EDE5E(cxt);
	});
	        
	AddResultCleaner(0xCF38DAFBB49EDE5E, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_GET_PRICE (result cleaner only)
	AddResultCleaner(0xC27009422FCCA88D, ResultCleaner<int>);

	// NETSHOPPING/_NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA
	static auto nh_0x897433D292B44130 = rage::scrEngine::GetNativeHandler(0x897433D292B44130);
	rage::scrEngine::RegisterNativeHandler(0x897433D292B44130, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x897433D292B44130(cxt);
	});
	        
	AddResultCleaner(0x897433D292B44130, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_IS_CATALOG_VALID (result cleaner only)
	AddResultCleaner(0x2B949A1E6AEC8F6A, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_IS_SESSION_REFRESH_PENDING (result cleaner only)
	AddResultCleaner(0x810E8431C0614BF9, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_IS_SESSION_VALID (result cleaner only)
	AddResultCleaner(0xB24F0944DA203D9E, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA (result cleaner only)
	AddResultCleaner(0x2F41D51BA3BCD1F1, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED (result cleaner only)
	AddResultCleaner(0x9507D4271988E1AE, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_START_SESSION (result cleaner only)
	AddResultCleaner(0xA135AC892A58FC07, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_TRANSFER_BANK_TO_WALLET (result cleaner only)
	AddResultCleaner(0xD47A2C1BA117471D, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_TRANSFER_CASH_GET_STATUS (result cleaner only)
	AddResultCleaner(0x23789E777D14CE44, ResultCleaner<int>);

	// NETSHOPPING/_NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_2 (result cleaner only)
	AddResultCleaner(0x350AA5EBC03D3BD2, ResultCleaner<int>);

	// NETSHOPPING/_NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED (result cleaner only)
	AddResultCleaner(0x498C1E05CE5F7877, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_TRANSFER_WALLET_TO_BANK (result cleaner only)
	AddResultCleaner(0xC2F7FE5309181C7D, ResultCleaner<bool>);

	// NETSHOPPING/_NET_GAMESERVER_USE_SERVER_TRANSACTIONS (result cleaner only)
	AddResultCleaner(0x7D2708796355B20B, ResultCleaner<bool>);

	// STATS/_ORDERED_BOSS_VEHICLE
	static auto nh_0xCEA553E35C2246E1 = rage::scrEngine::GetNativeHandler(0xCEA553E35C2246E1);
	rage::scrEngine::RegisterNativeHandler(0xCEA553E35C2246E1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xCEA553E35C2246E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_OVERRIDE_MULTIPLAYER_CHAT_COLOUR
	static auto nh_0xF47E567B3630DD12 = rage::scrEngine::GetNativeHandler(0xF47E567B3630DD12);
	rage::scrEngine::RegisterNativeHandler(0xF47E567B3630DD12, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF47E567B3630DD12(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_OVERRIDE_MULTIPLAYER_CHAT_PREFIX
	static auto nh_0x6A1738B4323FE2D9 = rage::scrEngine::GetNativeHandler(0x6A1738B4323FE2D9);
	rage::scrEngine::RegisterNativeHandler(0x6A1738B4323FE2D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6A1738B4323FE2D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_OVERRIDE_PED_BADGE_TEXTURE
	static auto nh_0x95EB5E34F821BABE = rage::scrEngine::GetNativeHandler(0x95EB5E34F821BABE);
	rage::scrEngine::RegisterNativeHandler(0x95EB5E34F821BABE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x95EB5E34F821BABE(cxt);
	});
	        
	AddResultCleaner(0x95EB5E34F821BABE, ResultCleaner<bool>);

	// HUD/_PAUSE_MENU_DISABLE_BUSYSPINNER
	static auto nh_0x9245E81072704B8A = rage::scrEngine::GetNativeHandler(0x9245E81072704B8A);
	rage::scrEngine::RegisterNativeHandler(0x9245E81072704B8A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9245E81072704B8A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_PAUSE_MENU_GET_INDEX_OF_MOUSE_HOVERED_SLOT (result cleaner only)
	AddResultCleaner(0x359AF31A4B52F5ED, ResultCleaner<int>);

	// HUD/_PAUSE_MENU_GET_UNIQUE_ID_OF_MOUSE_HOVERED_SLOT (result cleaner only)
	AddResultCleaner(0x13C4B962653A5280, ResultCleaner<int>);

	// OBJECT/_PLACE_OBJECT_ON_GROUND_PROPERLY_2 (result cleaner only)
	AddResultCleaner(0xD76EEEF746057FD6, ResultCleaner<bool>);

	// STATS/_PLAYSTATS_ARCADEGAME
	static auto nh_0x533A7D1EA58DF958 = rage::scrEngine::GetNativeHandler(0x533A7D1EA58DF958);
	rage::scrEngine::RegisterNativeHandler(0x533A7D1EA58DF958, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x533A7D1EA58DF958(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_ARENA_WARS_ENDED
	static auto nh_0xB479D9F0D48A1BC5 = rage::scrEngine::GetNativeHandler(0xB479D9F0D48A1BC5);
	rage::scrEngine::RegisterNativeHandler(0xB479D9F0D48A1BC5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xB479D9F0D48A1BC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_ARENA_WAR_SPECTATOR
	static auto nh_0x6F4F599753F8200A = rage::scrEngine::GetNativeHandler(0x6F4F599753F8200A);
	rage::scrEngine::RegisterNativeHandler(0x6F4F599753F8200A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6F4F599753F8200A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_AWARD_BADSPORT
	static auto nh_0x47B32F5611E6E483 = rage::scrEngine::GetNativeHandler(0x47B32F5611E6E483);
	rage::scrEngine::RegisterNativeHandler(0x47B32F5611E6E483, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x47B32F5611E6E483(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_BAN_ALERT
	static auto nh_0x516FC96EB88EEFE5 = rage::scrEngine::GetNativeHandler(0x516FC96EB88EEFE5);
	rage::scrEngine::RegisterNativeHandler(0x516FC96EB88EEFE5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x516FC96EB88EEFE5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_BUY_CONTRABAND
	static auto nh_0xD6781E42755531F7 = rage::scrEngine::GetNativeHandler(0xD6781E42755531F7);
	rage::scrEngine::RegisterNativeHandler(0xD6781E42755531F7, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD6781E42755531F7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CARCLUB_CHALLENGE
	static auto nh_0x1187CB58D7F3BED7 = rage::scrEngine::GetNativeHandler(0x1187CB58D7F3BED7);
	rage::scrEngine::RegisterNativeHandler(0x1187CB58D7F3BED7, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x1187CB58D7F3BED7(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CARCLUB_POINTS
	static auto nh_0xFF14D6FEEC507BBE = rage::scrEngine::GetNativeHandler(0xFF14D6FEEC507BBE);
	rage::scrEngine::RegisterNativeHandler(0xFF14D6FEEC507BBE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFF14D6FEEC507BBE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CARCLUB_PRIZE
	static auto nh_0x69C922B677621428 = rage::scrEngine::GetNativeHandler(0x69C922B677621428);
	rage::scrEngine::RegisterNativeHandler(0x69C922B677621428, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x69C922B677621428(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_BLACKJACK
	static auto nh_0x3EAE97309727E7AD = rage::scrEngine::GetNativeHandler(0x3EAE97309727E7AD);
	rage::scrEngine::RegisterNativeHandler(0x3EAE97309727E7AD, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3EAE97309727E7AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_BLACKJACK_LIGHT
	static auto nh_0xD5451C7BF151EB6F = rage::scrEngine::GetNativeHandler(0xD5451C7BF151EB6F);
	rage::scrEngine::RegisterNativeHandler(0xD5451C7BF151EB6F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD5451C7BF151EB6F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_CHIP
	static auto nh_0x0999F3F090EC5012 = rage::scrEngine::GetNativeHandler(0x0999F3F090EC5012);
	rage::scrEngine::RegisterNativeHandler(0x0999F3F090EC5012, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0999F3F090EC5012(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_INSIDETRACK
	static auto nh_0x049F059625058A86 = rage::scrEngine::GetNativeHandler(0x049F059625058A86);
	rage::scrEngine::RegisterNativeHandler(0x049F059625058A86, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x049F059625058A86(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_INSIDETRACK_LIGHT
	static auto nh_0x23A3CBCD50D54E47 = rage::scrEngine::GetNativeHandler(0x23A3CBCD50D54E47);
	rage::scrEngine::RegisterNativeHandler(0x23A3CBCD50D54E47, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x23A3CBCD50D54E47(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_LUCKYSEVEN
	static auto nh_0x0C432C1435F5E4FA = rage::scrEngine::GetNativeHandler(0x0C432C1435F5E4FA);
	rage::scrEngine::RegisterNativeHandler(0x0C432C1435F5E4FA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0C432C1435F5E4FA(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_MISSION_ENDED
	static auto nh_0x1A0D4A6C336B7BC5 = rage::scrEngine::GetNativeHandler(0x1A0D4A6C336B7BC5);
	rage::scrEngine::RegisterNativeHandler(0x1A0D4A6C336B7BC5, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A0D4A6C336B7BC5(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_ROULETTE
	static auto nh_0x95101C443A84E7F1 = rage::scrEngine::GetNativeHandler(0x95101C443A84E7F1);
	rage::scrEngine::RegisterNativeHandler(0x95101C443A84E7F1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x95101C443A84E7F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_ROULETTE_LIGHT
	static auto nh_0x6572ABA3DE1197FC = rage::scrEngine::GetNativeHandler(0x6572ABA3DE1197FC);
	rage::scrEngine::RegisterNativeHandler(0x6572ABA3DE1197FC, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6572ABA3DE1197FC(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_SLOTMACHINE
	static auto nh_0xEF5EC67D392B830A = rage::scrEngine::GetNativeHandler(0xEF5EC67D392B830A);
	rage::scrEngine::RegisterNativeHandler(0xEF5EC67D392B830A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xEF5EC67D392B830A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_SLOTMACHINE_LIGHT
	static auto nh_0xE60054A0FAE8227F = rage::scrEngine::GetNativeHandler(0xE60054A0FAE8227F);
	rage::scrEngine::RegisterNativeHandler(0xE60054A0FAE8227F, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xE60054A0FAE8227F(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_STORY_MISSION_ENDED
	static auto nh_0xFCCCAC2BD3C1F180 = rage::scrEngine::GetNativeHandler(0xFCCCAC2BD3C1F180);
	rage::scrEngine::RegisterNativeHandler(0xFCCCAC2BD3C1F180, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFCCCAC2BD3C1F180(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_THREECARDPOKER
	static auto nh_0xF740FB339D471C35 = rage::scrEngine::GetNativeHandler(0xF740FB339D471C35);
	rage::scrEngine::RegisterNativeHandler(0xF740FB339D471C35, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xF740FB339D471C35(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CASINO_THREECARDPOKER_LIGHT
	static auto nh_0xC9001364B4388F22 = rage::scrEngine::GetNativeHandler(0xC9001364B4388F22);
	rage::scrEngine::RegisterNativeHandler(0xC9001364B4388F22, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC9001364B4388F22(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_CHANGE_MC_EMBLEM
	static auto nh_0x0A50D2604E05CB94 = rage::scrEngine::GetNativeHandler(0x0A50D2604E05CB94);
	rage::scrEngine::RegisterNativeHandler(0x0A50D2604E05CB94, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		nh_0x0A50D2604E05CB94(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_COLLECTIBLE
	static auto nh_0xCD0A8A9338681CF2 = rage::scrEngine::GetNativeHandler(0xCD0A8A9338681CF2);
	rage::scrEngine::RegisterNativeHandler(0xCD0A8A9338681CF2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0xCD0A8A9338681CF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_COPY_RANK_INTO_NEW_SLOT
	static auto nh_0xB7257BA2550EA10A = rage::scrEngine::GetNativeHandler(0xB7257BA2550EA10A);
	rage::scrEngine::RegisterNativeHandler(0xB7257BA2550EA10A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		nh_0xB7257BA2550EA10A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_DAR_MISSION_END
	static auto nh_0x0BC254FF3A911501 = rage::scrEngine::GetNativeHandler(0x0BC254FF3A911501);
	rage::scrEngine::RegisterNativeHandler(0x0BC254FF3A911501, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0BC254FF3A911501(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_DEFEND_CONTRABAND
	static auto nh_0x2605663BD4F23B5D = rage::scrEngine::GetNativeHandler(0x2605663BD4F23B5D);
	rage::scrEngine::RegisterNativeHandler(0x2605663BD4F23B5D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x2605663BD4F23B5D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_DIRECTOR_MODE
	static auto nh_0x46326E13DA4E0546 = rage::scrEngine::GetNativeHandler(0x46326E13DA4E0546);
	rage::scrEngine::RegisterNativeHandler(0x46326E13DA4E0546, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x46326E13DA4E0546(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_DRONE_USAGE
	static auto nh_0x66C7BB2416ED3FCE = rage::scrEngine::GetNativeHandler(0x66C7BB2416ED3FCE);
	rage::scrEngine::RegisterNativeHandler(0x66C7BB2416ED3FCE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66C7BB2416ED3FCE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_DUPE_DETECTION
	static auto nh_0x848B66100EE33B05 = rage::scrEngine::GetNativeHandler(0x848B66100EE33B05);
	rage::scrEngine::RegisterNativeHandler(0x848B66100EE33B05, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x848B66100EE33B05(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_EARNED_MC_POINTS
	static auto nh_0x501478855A6074CE = rage::scrEngine::GetNativeHandler(0x501478855A6074CE);
	rage::scrEngine::RegisterNativeHandler(0x501478855A6074CE, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x501478855A6074CE(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_ENTER_SESSION_PACK
	static auto nh_0x878FF156D36E9956 = rage::scrEngine::GetNativeHandler(0x878FF156D36E9956);
	rage::scrEngine::RegisterNativeHandler(0x878FF156D36E9956, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x878FF156D36E9956(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_EXTRA_EVENT
	static auto nh_0xFA5B74BAB8A7EF99 = rage::scrEngine::GetNativeHandler(0xFA5B74BAB8A7EF99);
	rage::scrEngine::RegisterNativeHandler(0xFA5B74BAB8A7EF99, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xFA5B74BAB8A7EF99(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_GUNRUN_MISSION_ENDED
	static auto nh_0x0EACDF8487D5155A = rage::scrEngine::GetNativeHandler(0x0EACDF8487D5155A);
	rage::scrEngine::RegisterNativeHandler(0x0EACDF8487D5155A, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x0EACDF8487D5155A(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_H2_FMPREP_END
	static auto nh_0xD8AFB345A9C5CCBB = rage::scrEngine::GetNativeHandler(0xD8AFB345A9C5CCBB);
	rage::scrEngine::RegisterNativeHandler(0xD8AFB345A9C5CCBB, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xD8AFB345A9C5CCBB(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_H2_INSTANCE_END
	static auto nh_0x1E1497D0D2108115 = rage::scrEngine::GetNativeHandler(0x1E1497D0D2108115);
	rage::scrEngine::RegisterNativeHandler(0x1E1497D0D2108115, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x1E1497D0D2108115(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_INVENTORY
	static auto nh_0x887DAD63CF5B7908 = rage::scrEngine::GetNativeHandler(0x887DAD63CF5B7908);
	rage::scrEngine::RegisterNativeHandler(0x887DAD63CF5B7908, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x887DAD63CF5B7908(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_PASSIVE_MODE
	static auto nh_0x35EEC6C2BC821A71 = rage::scrEngine::GetNativeHandler(0x35EEC6C2BC821A71);
	rage::scrEngine::RegisterNativeHandler(0x35EEC6C2BC821A71, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x35EEC6C2BC821A71(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_PEGASAIRCRAFT
	static auto nh_0x9572BD4DD6B72122 = rage::scrEngine::GetNativeHandler(0x9572BD4DD6B72122);
	rage::scrEngine::RegisterNativeHandler(0x9572BD4DD6B72122, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9572BD4DD6B72122(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_PI_MENU_HIDE_SETTINGS
	static auto nh_0x203B381133817079 = rage::scrEngine::GetNativeHandler(0x203B381133817079);
	rage::scrEngine::RegisterNativeHandler(0x203B381133817079, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x203B381133817079(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_RECOVER_CONTRABAND
	static auto nh_0x04D90BA8207ADA2D = rage::scrEngine::GetNativeHandler(0x04D90BA8207ADA2D);
	rage::scrEngine::RegisterNativeHandler(0x04D90BA8207ADA2D, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x04D90BA8207ADA2D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_ROBBERY_FINALE
	static auto nh_0xBBA55BE9AAAABF44 = rage::scrEngine::GetNativeHandler(0xBBA55BE9AAAABF44);
	rage::scrEngine::RegisterNativeHandler(0xBBA55BE9AAAABF44, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBBA55BE9AAAABF44(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_ROBBERY_PREP
	static auto nh_0x1A67DFBF1F5C3835 = rage::scrEngine::GetNativeHandler(0x1A67DFBF1F5C3835);
	rage::scrEngine::RegisterNativeHandler(0x1A67DFBF1F5C3835, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x1A67DFBF1F5C3835(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_SELL_CONTRABAND
	static auto nh_0xC729991A9065376E = rage::scrEngine::GetNativeHandler(0xC729991A9065376E);
	rage::scrEngine::RegisterNativeHandler(0xC729991A9065376E, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xC729991A9065376E(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_SMUG_MISSION_ENDED
	static auto nh_0x320C35147D5B5DDD = rage::scrEngine::GetNativeHandler(0x320C35147D5B5DDD);
	rage::scrEngine::RegisterNativeHandler(0x320C35147D5B5DDD, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x320C35147D5B5DDD(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_SPECTATOR_WHEEL_SPIN
	static auto nh_0x6731DE84A38BFAD0 = rage::scrEngine::GetNativeHandler(0x6731DE84A38BFAD0);
	rage::scrEngine::RegisterNativeHandler(0x6731DE84A38BFAD0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6731DE84A38BFAD0(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT
	static auto nh_0xBE509B0A3693DE8B = rage::scrEngine::GetNativeHandler(0xBE509B0A3693DE8B);
	rage::scrEngine::RegisterNativeHandler(0xBE509B0A3693DE8B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBE509B0A3693DE8B(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_START_OFFLINE_MODE
	static auto nh_0x098760C7461724CD = rage::scrEngine::GetNativeHandler(0x098760C7461724CD);
	rage::scrEngine::RegisterNativeHandler(0x098760C7461724CD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x098760C7461724CD(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_STONE_HATCHET_END
	static auto nh_0x35E39E5570358630 = rage::scrEngine::GetNativeHandler(0x35E39E5570358630);
	rage::scrEngine::RegisterNativeHandler(0x35E39E5570358630, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x35E39E5570358630(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_STUNT_PERFORMED_EVENT_ALLOW_TRIGGER
	static auto nh_0x928DBFB892638EF3 = rage::scrEngine::GetNativeHandler(0x928DBFB892638EF3);
	rage::scrEngine::RegisterNativeHandler(0x928DBFB892638EF3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x928DBFB892638EF3(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_PLAYSTATS_STUNT_PERFORMED_EVENT_DISALLOW_TRIGGER
	static auto nh_0x8A800DACCC0DA55D = rage::scrEngine::GetNativeHandler(0x8A800DACCC0DA55D);
	rage::scrEngine::RegisterNativeHandler(0x8A800DACCC0DA55D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8A800DACCC0DA55D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_PLAY_BINK_MOVIE
	static auto nh_0x70D2CC8A542A973C = rage::scrEngine::GetNativeHandler(0x70D2CC8A542A973C);
	rage::scrEngine::RegisterNativeHandler(0x70D2CC8A542A973C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x70D2CC8A542A973C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_RACE_GALLERY_ADD_BLIP (result cleaner only)
	AddResultCleaner(0x551DF99658DB6EE8, ResultCleaner<int>);

	// HUD/_RACE_GALLERY_FULLSCREEN
	static auto nh_0x5354C5BA2EA868A4 = rage::scrEngine::GetNativeHandler(0x5354C5BA2EA868A4);
	rage::scrEngine::RegisterNativeHandler(0x5354C5BA2EA868A4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5354C5BA2EA868A4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_RACE_GALLERY_NEXT_BLIP_SPRITE
	static auto nh_0x1EAE6DD17B7A5EFA = rage::scrEngine::GetNativeHandler(0x1EAE6DD17B7A5EFA);
	rage::scrEngine::RegisterNativeHandler(0x1EAE6DD17B7A5EFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1EAE6DD17B7A5EFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_RAISE_RETRACTABLE_WHEELS
	static auto nh_0xF660602546D27BA8 = rage::scrEngine::GetNativeHandler(0xF660602546D27BA8);
	rage::scrEngine::RegisterNativeHandler(0xF660602546D27BA8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF660602546D27BA8(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_REGISTER_INT64_TO_SAVE
	static auto nh_0xA735353C77334EA0 = rage::scrEngine::GetNativeHandler(0xA735353C77334EA0);
	rage::scrEngine::RegisterNativeHandler(0xA735353C77334EA0, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA735353C77334EA0(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_REGISTER_NOIR_SCREEN_EFFECT_THIS_FRAME
	static auto nh_0xA44FF770DFBC5DAE = rage::scrEngine::GetNativeHandler(0xA44FF770DFBC5DAE);
	rage::scrEngine::RegisterNativeHandler(0xA44FF770DFBC5DAE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA44FF770DFBC5DAE(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_REGISTER_PEDHEADSHOT_3 (result cleaner only)
	AddResultCleaner(0xBA8805A1108A2515, ResultCleaner<int>);

	// MISC/_REGISTER_TEXT_LABEL_TO_SAVE_2
	static auto nh_0x6F7794F28C6B2535 = rage::scrEngine::GetNativeHandler(0x6F7794F28C6B2535);
	rage::scrEngine::RegisterNativeHandler(0x6F7794F28C6B2535, [](rage::scrNativeCallContext* cxt)
	{
		NullifyAny(cxt->GetArgument<void*>(0)); // Any* p0
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x6F7794F28C6B2535(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_RELEASE_BINK_MOVIE
	static auto nh_0x04D950EEFA4EED8C = rage::scrEngine::GetNativeHandler(0x04D950EEFA4EED8C);
	rage::scrEngine::RegisterNativeHandler(0x04D950EEFA4EED8C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x04D950EEFA4EED8C(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_REMOTE_CHEAT_DETECTED (result cleaner only)
	AddResultCleaner(0x472841A026D26D8B, ResultCleaner<bool>);

	// WEAPON/_REMOVE_AIR_DEFENSE_ZONE (result cleaner only)
	AddResultCleaner(0x0ABF535877897560, ResultCleaner<bool>);

	// WEAPON/_REMOVE_ALL_AIR_DEFENSE_ZONES
	static auto nh_0x1E45B34ADEBEE48E = rage::scrEngine::GetNativeHandler(0x1E45B34ADEBEE48E);
	rage::scrEngine::RegisterNativeHandler(0x1E45B34ADEBEE48E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E45B34ADEBEE48E(cxt);
		NullifyVoid(cxt);
	});
	        
	// WATER/_REMOVE_CURRENT_RISE
	static auto nh_0xB1252E3E59A82AAF = rage::scrEngine::GetNativeHandler(0xB1252E3E59A82AAF);
	rage::scrEngine::RegisterNativeHandler(0xB1252E3E59A82AAF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB1252E3E59A82AAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_REMOVE_STEALTH_KILL
	static auto nh_0xA6A12939F16D85BE = rage::scrEngine::GetNativeHandler(0xA6A12939F16D85BE);
	rage::scrEngine::RegisterNativeHandler(0xA6A12939F16D85BE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6A12939F16D85BE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_REMOVE_VEHICLE_SHADOW_EFFECT
	static auto nh_0xF87D9F2301F7D206 = rage::scrEngine::GetNativeHandler(0xF87D9F2301F7D206);
	rage::scrEngine::RegisterNativeHandler(0xF87D9F2301F7D206, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF87D9F2301F7D206(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_REMOVE_WARNING_MESSAGE_LIST_ITEMS
	static auto nh_0x6EF54AB721DC6242 = rage::scrEngine::GetNativeHandler(0x6EF54AB721DC6242);
	rage::scrEngine::RegisterNativeHandler(0x6EF54AB721DC6242, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6EF54AB721DC6242(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_REPLAY_FREE_CAM_GET_MAX_RANGE (result cleaner only)
	AddResultCleaner(0x8BFCEB5EA1B161B6, ResultCleaner<float>);

	// PATHFIND/_REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT (result cleaner only)
	AddResultCleaner(0x07FB139B592FA687, ResultCleaner<bool>);

	// VEHICLE/_REQUEST_VEHICLE_DASHBOARD_SCALEFORM_MOVIE
	static auto nh_0xDBA3C090E3D74690 = rage::scrEngine::GetNativeHandler(0xDBA3C090E3D74690);
	rage::scrEngine::RegisterNativeHandler(0xDBA3C090E3D74690, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDBA3C090E3D74690(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_RESERVE_NETWORK_LOCAL_OBJECTS
	static auto nh_0x797F9C5E661D920E = rage::scrEngine::GetNativeHandler(0x797F9C5E661D920E);
	rage::scrEngine::RegisterNativeHandler(0x797F9C5E661D920E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x797F9C5E661D920E(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_RESERVE_NETWORK_LOCAL_PEDS
	static auto nh_0x2C8DF5D129595281 = rage::scrEngine::GetNativeHandler(0x2C8DF5D129595281);
	rage::scrEngine::RegisterNativeHandler(0x2C8DF5D129595281, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C8DF5D129595281(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_RESERVE_NETWORK_LOCAL_VEHICLES
	static auto nh_0x42613035157E4208 = rage::scrEngine::GetNativeHandler(0x42613035157E4208);
	rage::scrEngine::RegisterNativeHandler(0x42613035157E4208, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42613035157E4208(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_RESET_BENCHMARK_RECORDING
	static auto nh_0x437138B6A830166A = rage::scrEngine::GetNativeHandler(0x437138B6A830166A);
	rage::scrEngine::RegisterNativeHandler(0x437138B6A830166A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x437138B6A830166A(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_RESET_DISPATCH_SPAWN_LOCATION
	static auto nh_0x5896F2BD5683A4E1 = rage::scrEngine::GetNativeHandler(0x5896F2BD5683A4E1);
	rage::scrEngine::RegisterNativeHandler(0x5896F2BD5683A4E1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5896F2BD5683A4E1(cxt);
		NullifyVoid(cxt);
	});
	        
	// REPLAY/_RESET_EDITOR_VALUES
	static auto nh_0x3353D13F09307691 = rage::scrEngine::GetNativeHandler(0x3353D13F09307691);
	rage::scrEngine::RegisterNativeHandler(0x3353D13F09307691, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3353D13F09307691(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_RESET_GHOSTED_ENTITY_ALPHA
	static auto nh_0x17330EBF2F2124A8 = rage::scrEngine::GetNativeHandler(0x17330EBF2F2124A8);
	rage::scrEngine::RegisterNativeHandler(0x17330EBF2F2124A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17330EBF2F2124A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_RESET_INPUT_MAPPING_SCHEME
	static auto nh_0x643ED62D5EA3BEBD = rage::scrEngine::GetNativeHandler(0x643ED62D5EA3BEBD);
	rage::scrEngine::RegisterNativeHandler(0x643ED62D5EA3BEBD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x643ED62D5EA3BEBD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_RETURN_TWO (result cleaner only)
	AddResultCleaner(0x40AFB081F8ADD4EE, ResultCleaner<int>);

	// SOCIALCLUB/_ROCKSTAR_MESSAGE_GET_STRING (result cleaner only)
	AddResultCleaner(0xDF649C4E9AFDD788, ResultCleaner<char*>);

	// MISC/_SAVE_BENCHMARK_RECORDING
	static auto nh_0x37DEB0AA183FB6D8 = rage::scrEngine::GetNativeHandler(0x37DEB0AA183FB6D8);
	rage::scrEngine::RegisterNativeHandler(0x37DEB0AA183FB6D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x37DEB0AA183FB6D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/_SAVE_RECORDING_CLIP (result cleaner only)
	AddResultCleaner(0x644546EC5287471B, ResultCleaner<bool>);

	// GRAPHICS/_SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2
	static auto nh_0x77FE3402004CD1B0 = rage::scrEngine::GetNativeHandler(0x77FE3402004CD1B0);
	rage::scrEngine::RegisterNativeHandler(0x77FE3402004CD1B0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x77FE3402004CD1B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/_SC_GET_HAS_ACHIEVEMENT_BEEN_PASSED (result cleaner only)
	AddResultCleaner(0x418DC16FAE452C1C, ResultCleaner<bool>);

	// SOCIALCLUB/_SC_GET_NICKNAME (result cleaner only)
	AddResultCleaner(0x198D161F458ECC7F, ResultCleaner<char*>);

	// SOCIALCLUB/_SC_INBOX_GET_EMAILS
	static auto nh_0x040ADDCBAFA1018A = rage::scrEngine::GetNativeHandler(0x040ADDCBAFA1018A);
	rage::scrEngine::RegisterNativeHandler(0x040ADDCBAFA1018A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x040ADDCBAFA1018A(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/_SC_INBOX_MESSAGE_GET_BOUNTY_DATA
	static auto nh_0x87E0052F08BD64E6 = rage::scrEngine::GetNativeHandler(0x87E0052F08BD64E6);
	rage::scrEngine::RegisterNativeHandler(0x87E0052F08BD64E6, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x87E0052F08BD64E6(cxt);
	});
	        
	AddResultCleaner(0x87E0052F08BD64E6, ResultCleaner<bool>);

	// SOCIALCLUB/_SC_INBOX_MESSAGE_GET_DATA_BOOL
	static auto nh_0xFFE5C16F402D851D = rage::scrEngine::GetNativeHandler(0xFFE5C16F402D851D);
	rage::scrEngine::RegisterNativeHandler(0xFFE5C16F402D851D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFFE5C16F402D851D(cxt);
	});
	        
	AddResultCleaner(0xFFE5C16F402D851D, ResultCleaner<bool>);

	// SOCIALCLUB/_SC_INBOX_MESSAGE_GET_STRING (result cleaner only)
	AddResultCleaner(0xF3E31D16CBDCB304, ResultCleaner<char*>);

	// SOCIALCLUB/_SC_INBOX_MESSAGE_POP (result cleaner only)
	AddResultCleaner(0x2C015348CF19CA1D, ResultCleaner<bool>);

	// SOCIALCLUB/_SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST
	static auto nh_0xDA024BDBD600F44A = rage::scrEngine::GetNativeHandler(0xDA024BDBD600F44A);
	rage::scrEngine::RegisterNativeHandler(0xDA024BDBD600F44A, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xDA024BDBD600F44A(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/_SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT
	static auto nh_0x6AFD2CD753FEEF83 = rage::scrEngine::GetNativeHandler(0x6AFD2CD753FEEF83);
	rage::scrEngine::RegisterNativeHandler(0x6AFD2CD753FEEF83, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x6AFD2CD753FEEF83(cxt);
	});
	        
	AddResultCleaner(0x6AFD2CD753FEEF83, ResultCleaner<bool>);

	// SOCIALCLUB/_SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT
	static auto nh_0xA68D3D229F4F3B06 = rage::scrEngine::GetNativeHandler(0xA68D3D229F4F3B06);
	rage::scrEngine::RegisterNativeHandler(0xA68D3D229F4F3B06, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA68D3D229F4F3B06(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/_SC_PROFANITY_CHECK_UGC_STRING
	static auto nh_0xEB2BF817463DFA28 = rage::scrEngine::GetNativeHandler(0xEB2BF817463DFA28);
	rage::scrEngine::RegisterNativeHandler(0xEB2BF817463DFA28, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xEB2BF817463DFA28(cxt);
	});
	        
	AddResultCleaner(0xEB2BF817463DFA28, ResultCleaner<bool>);

	// GRAPHICS/_SEETHROUGH_GET_MAX_THICKNESS (result cleaner only)
	AddResultCleaner(0x43DBAE39626CE83F, ResultCleaner<float>);

	// GRAPHICS/_SEETHROUGH_SET_FADE_END_DISTANCE
	static auto nh_0x9D75795B9DC6EBBF = rage::scrEngine::GetNativeHandler(0x9D75795B9DC6EBBF);
	rage::scrEngine::RegisterNativeHandler(0x9D75795B9DC6EBBF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D75795B9DC6EBBF(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_FADE_START_DISTANCE
	static auto nh_0xA78DE25577300BA1 = rage::scrEngine::GetNativeHandler(0xA78DE25577300BA1);
	rage::scrEngine::RegisterNativeHandler(0xA78DE25577300BA1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA78DE25577300BA1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_HI_LIGHT_INTENSITY
	static auto nh_0x19E50EB6E33E1D28 = rage::scrEngine::GetNativeHandler(0x19E50EB6E33E1D28);
	rage::scrEngine::RegisterNativeHandler(0x19E50EB6E33E1D28, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19E50EB6E33E1D28(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_HI_LIGHT_NOISE
	static auto nh_0x1636D7FC127B10D2 = rage::scrEngine::GetNativeHandler(0x1636D7FC127B10D2);
	rage::scrEngine::RegisterNativeHandler(0x1636D7FC127B10D2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1636D7FC127B10D2(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_MAX_THICKNESS
	static auto nh_0x0C8FAC83902A62DF = rage::scrEngine::GetNativeHandler(0x0C8FAC83902A62DF);
	rage::scrEngine::RegisterNativeHandler(0x0C8FAC83902A62DF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0C8FAC83902A62DF(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_NOISE_AMOUNT_MAX
	static auto nh_0xFEBFBFDFB66039DE = rage::scrEngine::GetNativeHandler(0xFEBFBFDFB66039DE);
	rage::scrEngine::RegisterNativeHandler(0xFEBFBFDFB66039DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFEBFBFDFB66039DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SEETHROUGH_SET_NOISE_AMOUNT_MIN
	static auto nh_0xFF5992E1C9E65D05 = rage::scrEngine::GetNativeHandler(0xFF5992E1C9E65D05);
	rage::scrEngine::RegisterNativeHandler(0xFF5992E1C9E65D05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFF5992E1C9E65D05(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_ABILITY_BAR_VISIBILITY_IN_MULTIPLAYER
	static auto nh_0x1DFEDD15019315A9 = rage::scrEngine::GetNativeHandler(0x1DFEDD15019315A9);
	rage::scrEngine::RegisterNativeHandler(0x1DFEDD15019315A9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DFEDD15019315A9(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_ACHIEVEMENT_PROGRESS (result cleaner only)
	AddResultCleaner(0xC2AFFFDABBDC2C5C, ResultCleaner<bool>);

	// PATHFIND/_SET_AI_GLOBAL_PATH_NODES_TYPE
	static auto nh_0xF74B1FFA4A15FBEA = rage::scrEngine::GetNativeHandler(0xF74B1FFA4A15FBEA);
	rage::scrEngine::RegisterNativeHandler(0xF74B1FFA4A15FBEA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF74B1FFA4A15FBEA(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_ALLOW_ABILITY_BAR_IN_MULTIPLAYER
	static auto nh_0x889329C80FE5963C = rage::scrEngine::GetNativeHandler(0x889329C80FE5963C);
	rage::scrEngine::RegisterNativeHandler(0x889329C80FE5963C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x889329C80FE5963C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/_SET_ALL_PATHS_CACHE_BOUNDINGSTRUCT
	static auto nh_0x228E5C6AD4D74BFD = rage::scrEngine::GetNativeHandler(0x228E5C6AD4D74BFD);
	rage::scrEngine::RegisterNativeHandler(0x228E5C6AD4D74BFD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x228E5C6AD4D74BFD(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_ARTIFICIAL_LIGHTS_STATE_AFFECTS_VEHICLES
	static auto nh_0xE2B187C0939B3D32 = rage::scrEngine::GetNativeHandler(0xE2B187C0939B3D32);
	rage::scrEngine::RegisterNativeHandler(0xE2B187C0939B3D32, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE2B187C0939B3D32(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_BEAST_MODE_ACTIVE
	static auto nh_0x438822C279B73B93 = rage::scrEngine::GetNativeHandler(0x438822C279B73B93);
	rage::scrEngine::RegisterNativeHandler(0x438822C279B73B93, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x438822C279B73B93(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_BINK_MOVIE
	static auto nh_0x338D9F609FD632DB = rage::scrEngine::GetNativeHandler(0x338D9F609FD632DB);
	rage::scrEngine::RegisterNativeHandler(0x338D9F609FD632DB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x338D9F609FD632DB(cxt);
	});
	        
	AddResultCleaner(0x338D9F609FD632DB, ResultCleaner<int>);

	// GRAPHICS/_SET_BINK_MOVIE_TIME
	static auto nh_0x0CB6B3446855B57A = rage::scrEngine::GetNativeHandler(0x0CB6B3446855B57A);
	rage::scrEngine::RegisterNativeHandler(0x0CB6B3446855B57A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0CB6B3446855B57A(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_BINK_MOVIE_UNK_2
	static auto nh_0xF816F2933752322D = rage::scrEngine::GetNativeHandler(0xF816F2933752322D);
	rage::scrEngine::RegisterNativeHandler(0xF816F2933752322D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF816F2933752322D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_BINK_MOVIE_VOLUME
	static auto nh_0xAFF33B1178172223 = rage::scrEngine::GetNativeHandler(0xAFF33B1178172223);
	rage::scrEngine::RegisterNativeHandler(0xAFF33B1178172223, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAFF33B1178172223(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_BINK_SHOULD_SKIP
	static auto nh_0x6805D58CAA427B72 = rage::scrEngine::GetNativeHandler(0x6805D58CAA427B72);
	rage::scrEngine::RegisterNativeHandler(0x6805D58CAA427B72, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6805D58CAA427B72(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_BLIP_DISPLAY_INDICATOR_ON_BLIP
	static auto nh_0xC4278F70131BAA6D = rage::scrEngine::GetNativeHandler(0xC4278F70131BAA6D);
	rage::scrEngine::RegisterNativeHandler(0xC4278F70131BAA6D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC4278F70131BAA6D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_BLIP_SCALE_TRANSFORMATION
	static auto nh_0xCD6524439909C979 = rage::scrEngine::GetNativeHandler(0xCD6524439909C979);
	rage::scrEngine::RegisterNativeHandler(0xCD6524439909C979, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCD6524439909C979(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_BLIP_SHRINK
	static auto nh_0x2B6D467DAB714E8D = rage::scrEngine::GetNativeHandler(0x2B6D467DAB714E8D);
	rage::scrEngine::RegisterNativeHandler(0x2B6D467DAB714E8D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2B6D467DAB714E8D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_BLIP_SQUARED_ROTATION
	static auto nh_0xA8B6AFDAC320AC87 = rage::scrEngine::GetNativeHandler(0xA8B6AFDAC320AC87);
	rage::scrEngine::RegisterNativeHandler(0xA8B6AFDAC320AC87, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA8B6AFDAC320AC87(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_BOAT_BOOM_POSITION_RATIO
	static auto nh_0xF488C566413B4232 = rage::scrEngine::GetNativeHandler(0xF488C566413B4232);
	rage::scrEngine::RegisterNativeHandler(0xF488C566413B4232, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF488C566413B4232(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_BOAT_FROZEN_WHEN_ANCHORED
	static auto nh_0xE3EBAAE484798530 = rage::scrEngine::GetNativeHandler(0xE3EBAAE484798530);
	rage::scrEngine::RegisterNativeHandler(0xE3EBAAE484798530, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3EBAAE484798530(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_BOAT_IS_SINKING
	static auto nh_0xBD32E46AA95C1DD2 = rage::scrEngine::GetNativeHandler(0xBD32E46AA95C1DD2);
	rage::scrEngine::RegisterNativeHandler(0xBD32E46AA95C1DD2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBD32E46AA95C1DD2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_BOAT_MOVEMENT_RESISTANCE
	static auto nh_0xE842A9398079BD82 = rage::scrEngine::GetNativeHandler(0xE842A9398079BD82);
	rage::scrEngine::RegisterNativeHandler(0xE842A9398079BD82, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE842A9398079BD82(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_CAMBERED_WHEELS_DISABLED
	static auto nh_0x1201E8A3290A3B98 = rage::scrEngine::GetNativeHandler(0x1201E8A3290A3B98);
	rage::scrEngine::RegisterNativeHandler(0x1201E8A3290A3B98, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1201E8A3290A3B98(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_DOF_FNUMBER_OF_LENS
	static auto nh_0x7DD234D6F3914C5B = rage::scrEngine::GetNativeHandler(0x7DD234D6F3914C5B);
	rage::scrEngine::RegisterNativeHandler(0x7DD234D6F3914C5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7DD234D6F3914C5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER
	static auto nh_0x47B595D60664CFFA = rage::scrEngine::GetNativeHandler(0x47B595D60664CFFA);
	rage::scrEngine::RegisterNativeHandler(0x47B595D60664CFFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x47B595D60664CFFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_DOF_FOCUS_DISTANCE_BIAS
	static auto nh_0xC669EEA5D031B7DE = rage::scrEngine::GetNativeHandler(0xC669EEA5D031B7DE);
	rage::scrEngine::RegisterNativeHandler(0xC669EEA5D031B7DE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC669EEA5D031B7DE(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE
	static auto nh_0xC3654A441402562D = rage::scrEngine::GetNativeHandler(0xC3654A441402562D);
	rage::scrEngine::RegisterNativeHandler(0xC3654A441402562D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3654A441402562D(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL
	static auto nh_0x2C654B4943BDDF7C = rage::scrEngine::GetNativeHandler(0x2C654B4943BDDF7C);
	rage::scrEngine::RegisterNativeHandler(0x2C654B4943BDDF7C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C654B4943BDDF7C(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_CAM_EFFECT
	static auto nh_0x80C8B1846639BB19 = rage::scrEngine::GetNativeHandler(0x80C8B1846639BB19);
	rage::scrEngine::RegisterNativeHandler(0x80C8B1846639BB19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x80C8B1846639BB19(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_CAN_PED_EQUIP_ALL_WEAPONS
	static auto nh_0xEFF296097FF1E509 = rage::scrEngine::GetNativeHandler(0xEFF296097FF1E509);
	rage::scrEngine::RegisterNativeHandler(0xEFF296097FF1E509, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFF296097FF1E509(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_CAN_PED_EQUIP_WEAPON
	static auto nh_0xB4771B9AAF4E68E4 = rage::scrEngine::GetNativeHandler(0xB4771B9AAF4E68E4);
	rage::scrEngine::RegisterNativeHandler(0xB4771B9AAF4E68E4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB4771B9AAF4E68E4(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_CARGOBOB_HOOK_CAN_ATTACH
	static auto nh_0x94A68DA412C4007D = rage::scrEngine::GetNativeHandler(0x94A68DA412C4007D);
	rage::scrEngine::RegisterNativeHandler(0x94A68DA412C4007D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x94A68DA412C4007D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER
	static auto nh_0x84FD40F56075E816 = rage::scrEngine::GetNativeHandler(0x84FD40F56075E816);
	rage::scrEngine::RegisterNativeHandler(0x84FD40F56075E816, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x84FD40F56075E816(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_CHECKPOINT_ICON_HEIGHT
	static auto nh_0x4B5B4DA5D79F1943 = rage::scrEngine::GetNativeHandler(0x4B5B4DA5D79F1943);
	rage::scrEngine::RegisterNativeHandler(0x4B5B4DA5D79F1943, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4B5B4DA5D79F1943(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_CHECKPOINT_ICON_SCALE
	static auto nh_0x44621483FF966526 = rage::scrEngine::GetNativeHandler(0x44621483FF966526);
	rage::scrEngine::RegisterNativeHandler(0x44621483FF966526, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44621483FF966526(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_SET_CONTROL_LIGHT_EFFECT_COLOR
	static auto nh_0x8290252FFF36ACB5 = rage::scrEngine::GetNativeHandler(0x8290252FFF36ACB5);
	rage::scrEngine::RegisterNativeHandler(0x8290252FFF36ACB5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8290252FFF36ACB5(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_SET_CONTROL_NORMAL (result cleaner only)
	AddResultCleaner(0xE8A25867FBA3B05E, ResultCleaner<bool>);

	// OBJECT/_SET_CREATE_WEAPON_OBJECT_LIGHT_SOURCE
	static auto nh_0xBCE595371A5FBAAF = rage::scrEngine::GetNativeHandler(0xBCE595371A5FBAAF);
	rage::scrEngine::RegisterNativeHandler(0xBCE595371A5FBAAF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCE595371A5FBAAF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_SET_CURSOR_LOCATION (result cleaner only)
	AddResultCleaner(0xFC695459D4D0E219, ResultCleaner<bool>);

	// VEHICLE/_SET_DEPLOY_HELI_STUB_WINGS
	static auto nh_0xB251E0B33E58B424 = rage::scrEngine::GetNativeHandler(0xB251E0B33E58B424);
	rage::scrEngine::RegisterNativeHandler(0xB251E0B33E58B424, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB251E0B33E58B424(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_DIRECTOR_MODE_CLEAR_TRIGGERED_FLAG
	static auto nh_0x2632482FD6B9AB87 = rage::scrEngine::GetNativeHandler(0x2632482FD6B9AB87);
	rage::scrEngine::RegisterNativeHandler(0x2632482FD6B9AB87, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2632482FD6B9AB87(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_SUPERDUMMY_MODE
	static auto nh_0xB088E9A47AE6EDD5 = rage::scrEngine::GetNativeHandler(0xB088E9A47AE6EDD5);
	rage::scrEngine::RegisterNativeHandler(0xB088E9A47AE6EDD5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB088E9A47AE6EDD5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_TURRET_MOVEMENT_THIS_FRAME
	static auto nh_0xE615BB7A7752C76A = rage::scrEngine::GetNativeHandler(0xE615BB7A7752C76A);
	rage::scrEngine::RegisterNativeHandler(0xE615BB7A7752C76A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE615BB7A7752C76A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_VEHICLE_FLIGHT_NOZZLE_POSITION
	static auto nh_0xCE2B43770B655F8F = rage::scrEngine::GetNativeHandler(0xCE2B43770B655F8F);
	rage::scrEngine::RegisterNativeHandler(0xCE2B43770B655F8F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCE2B43770B655F8F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_VEHICLE_UNK
	static auto nh_0x143921E45EC44D62 = rage::scrEngine::GetNativeHandler(0x143921E45EC44D62);
	rage::scrEngine::RegisterNativeHandler(0x143921E45EC44D62, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x143921E45EC44D62(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_VEHICLE_UNK_2
	static auto nh_0x211E95CE9903940C = rage::scrEngine::GetNativeHandler(0x211E95CE9903940C);
	rage::scrEngine::RegisterNativeHandler(0x211E95CE9903940C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x211E95CE9903940C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DISABLE_VEHICLE_WINDOW_COLLISIONS
	static auto nh_0x1087BC8EC540DAEB = rage::scrEngine::GetNativeHandler(0x1087BC8EC540DAEB);
	rage::scrEngine::RegisterNativeHandler(0x1087BC8EC540DAEB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1087BC8EC540DAEB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_DRIFT_TYRES_ENABLED
	static auto nh_0x5AC79C98C5C17F05 = rage::scrEngine::GetNativeHandler(0x5AC79C98C5C17F05);
	rage::scrEngine::RegisterNativeHandler(0x5AC79C98C5C17F05, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5AC79C98C5C17F05(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_ENABLE_ARENA_PROP_PHYSICS
	static auto nh_0x911024442F4898F0 = rage::scrEngine::GetNativeHandler(0x911024442F4898F0);
	rage::scrEngine::RegisterNativeHandler(0x911024442F4898F0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x911024442F4898F0(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_ENABLE_ARENA_PROP_PHYSICS_ON_PED
	static auto nh_0xB20834A7DD3D8896 = rage::scrEngine::GetNativeHandler(0xB20834A7DD3D8896);
	rage::scrEngine::RegisterNativeHandler(0xB20834A7DD3D8896, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB20834A7DD3D8896(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_ENABLE_SCUBA_GEAR_LIGHT
	static auto nh_0xEE2476B9EE4A094F = rage::scrEngine::GetNativeHandler(0xEE2476B9EE4A094F);
	rage::scrEngine::RegisterNativeHandler(0xEE2476B9EE4A094F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE2476B9EE4A094F(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_SET_ENTITY_ANGULAR_VELOCITY
	static auto nh_0x8339643499D1222E = rage::scrEngine::GetNativeHandler(0x8339643499D1222E);
	rage::scrEngine::RegisterNativeHandler(0x8339643499D1222E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8339643499D1222E(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_SET_ENTITY_CLEANUP_BY_ENGINE
	static auto nh_0x3910051CCECDB00C = rage::scrEngine::GetNativeHandler(0x3910051CCECDB00C);
	rage::scrEngine::RegisterNativeHandler(0x3910051CCECDB00C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3910051CCECDB00C(cxt);
		NullifyVoid(cxt);
	});
	        
	// ENTITY/_SET_ENTITY_DECALS_DISABLED
	static auto nh_0x2C2E3DC128F44309 = rage::scrEngine::GetNativeHandler(0x2C2E3DC128F44309);
	rage::scrEngine::RegisterNativeHandler(0x2C2E3DC128F44309, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2C2E3DC128F44309(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/_SET_ENTITY_PROOF_UNK
	static auto nh_0x15F944730C832252 = rage::scrEngine::GetNativeHandler(0x15F944730C832252);
	rage::scrEngine::RegisterNativeHandler(0x15F944730C832252, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x15F944730C832252(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_EXTRA_TIMECYCLE_MODIFIER
	static auto nh_0x5096FD9CCB49056D = rage::scrEngine::GetNativeHandler(0x5096FD9CCB49056D);
	rage::scrEngine::RegisterNativeHandler(0x5096FD9CCB49056D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x5096FD9CCB49056D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_FACIAL_CLIPSET_OVERRIDE
	static auto nh_0x5687C7F05B39E401 = rage::scrEngine::GetNativeHandler(0x5687C7F05B39E401);
	rage::scrEngine::RegisterNativeHandler(0x5687C7F05B39E401, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x5687C7F05B39E401(cxt);
		NullifyVoid(cxt);
	});
	        
	// FIRE/_SET_FIRE_SPREAD_RATE
	static auto nh_0x8F390AC4155099BA = rage::scrEngine::GetNativeHandler(0x8F390AC4155099BA);
	rage::scrEngine::RegisterNativeHandler(0x8F390AC4155099BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8F390AC4155099BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_FIRST_PERSON_CAM_PITCH_RANGE
	static auto nh_0xBCFC632DB7673BF0 = rage::scrEngine::GetNativeHandler(0xBCFC632DB7673BF0);
	rage::scrEngine::RegisterNativeHandler(0xBCFC632DB7673BF0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCFC632DB7673BF0(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_FLASH_LIGHT_ENABLED
	static auto nh_0x988DB6FE9B3AC000 = rage::scrEngine::GetNativeHandler(0x988DB6FE9B3AC000);
	rage::scrEngine::RegisterNativeHandler(0x988DB6FE9B3AC000, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x988DB6FE9B3AC000(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER
	static auto nh_0xE827B9382CFB41BA = rage::scrEngine::GetNativeHandler(0xE827B9382CFB41BA);
	rage::scrEngine::RegisterNativeHandler(0xE827B9382CFB41BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE827B9382CFB41BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_FOLLOW_TURRET_SEAT_CAM
	static auto nh_0x5C90CAB09951A12F = rage::scrEngine::GetNativeHandler(0x5C90CAB09951A12F);
	rage::scrEngine::RegisterNativeHandler(0x5C90CAB09951A12F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5C90CAB09951A12F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_FORCED_BOAT_LOCATION_WHEN_ANCHORED
	static auto nh_0xB28B1FE5BFADD7F5 = rage::scrEngine::GetNativeHandler(0xB28B1FE5BFADD7F5);
	rage::scrEngine::RegisterNativeHandler(0xB28B1FE5BFADD7F5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB28B1FE5BFADD7F5(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_FORCE_PED_FOOTSTEPS_TRACKS
	static auto nh_0xAEEDAD1420C65CC0 = rage::scrEngine::GetNativeHandler(0xAEEDAD1420C65CC0);
	rage::scrEngine::RegisterNativeHandler(0xAEEDAD1420C65CC0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAEEDAD1420C65CC0(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_FORCE_PLAYER_TO_JUMP
	static auto nh_0xA1183BCFEE0F93D1 = rage::scrEngine::GetNativeHandler(0xA1183BCFEE0F93D1);
	rage::scrEngine::RegisterNativeHandler(0xA1183BCFEE0F93D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA1183BCFEE0F93D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_FORCE_VEHICLE_TRAILS
	static auto nh_0x4CC7F0FEA5283FE0 = rage::scrEngine::GetNativeHandler(0x4CC7F0FEA5283FE0);
	rage::scrEngine::RegisterNativeHandler(0x4CC7F0FEA5283FE0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4CC7F0FEA5283FE0(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_HASH
	static auto nh_0x425A920FDB9A0DDA = rage::scrEngine::GetNativeHandler(0x425A920FDB9A0DDA);
	rage::scrEngine::RegisterNativeHandler(0x425A920FDB9A0DDA, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x425A920FDB9A0DDA(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_RAW_PITCH
	static auto nh_0x759E13EBC1C15C5A = rage::scrEngine::GetNativeHandler(0x759E13EBC1C15C5A);
	rage::scrEngine::RegisterNativeHandler(0x759E13EBC1C15C5A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x759E13EBC1C15C5A(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_RAW_YAW
	static auto nh_0x103991D4A307D472 = rage::scrEngine::GetNativeHandler(0x103991D4A307D472);
	rage::scrEngine::RegisterNativeHandler(0x103991D4A307D472, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x103991D4A307D472(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_RELATIVE_ROTATION
	static auto nh_0x48608C3464F58AB4 = rage::scrEngine::GetNativeHandler(0x48608C3464F58AB4);
	rage::scrEngine::RegisterNativeHandler(0x48608C3464F58AB4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x48608C3464F58AB4(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_VEHICLE_CAMERA
	static auto nh_0x21E253A7F8DA5DFB = rage::scrEngine::GetNativeHandler(0x21E253A7F8DA5DFB);
	rage::scrEngine::RegisterNativeHandler(0x21E253A7F8DA5DFB, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x21E253A7F8DA5DFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME
	static auto nh_0x11FA5D3479C7DD47 = rage::scrEngine::GetNativeHandler(0x11FA5D3479C7DD47);
	rage::scrEngine::RegisterNativeHandler(0x11FA5D3479C7DD47, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x11FA5D3479C7DD47(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_HINT_ANIM_CLOSEUP
	static auto nh_0xE3433EADAAF7EE40 = rage::scrEngine::GetNativeHandler(0xE3433EADAAF7EE40);
	rage::scrEngine::RegisterNativeHandler(0xE3433EADAAF7EE40, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE3433EADAAF7EE40(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_HINT_ANIM_OFFSETX
	static auto nh_0x5D7B620DAE436138 = rage::scrEngine::GetNativeHandler(0x5D7B620DAE436138);
	rage::scrEngine::RegisterNativeHandler(0x5D7B620DAE436138, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5D7B620DAE436138(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_GAMEPLAY_HINT_ANIM_OFFSETY
	static auto nh_0xC92717EF615B6704 = rage::scrEngine::GetNativeHandler(0xC92717EF615B6704);
	rage::scrEngine::RegisterNativeHandler(0xC92717EF615B6704, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC92717EF615B6704(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SET_GHOSTED_ENTITY_ALPHA
	static auto nh_0x658500AE6D723A7E = rage::scrEngine::GetNativeHandler(0x658500AE6D723A7E);
	rage::scrEngine::RegisterNativeHandler(0x658500AE6D723A7E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x658500AE6D723A7E(cxt);
		NullifyVoid(cxt);
	});
	        
	// SOCIALCLUB/_SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT
	static auto nh_0xBFA0A56A817C6C7D = rage::scrEngine::GetNativeHandler(0xBFA0A56A817C6C7D);
	rage::scrEngine::RegisterNativeHandler(0xBFA0A56A817C6C7D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBFA0A56A817C6C7D(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_SET_HAS_CONTENT_UNLOCKS_FLAGS
	static auto nh_0xDAC073C7901F9E15 = rage::scrEngine::GetNativeHandler(0xDAC073C7901F9E15);
	rage::scrEngine::RegisterNativeHandler(0xDAC073C7901F9E15, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDAC073C7901F9E15(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HELICOPTER_ROLL_PITCH_YAW_MULT
	static auto nh_0x6E0859B530A365CC = rage::scrEngine::GetNativeHandler(0x6E0859B530A365CC);
	rage::scrEngine::RegisterNativeHandler(0x6E0859B530A365CC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6E0859B530A365CC(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HELI_MAIN_ROTOR_HEALTH
	static auto nh_0x4056EA1105F5ABD7 = rage::scrEngine::GetNativeHandler(0x4056EA1105F5ABD7);
	rage::scrEngine::RegisterNativeHandler(0x4056EA1105F5ABD7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4056EA1105F5ABD7(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HELI_TAIL_ROTOR_HEALTH
	static auto nh_0xFE205F38AAA58E5B = rage::scrEngine::GetNativeHandler(0xFE205F38AAA58E5B);
	rage::scrEngine::RegisterNativeHandler(0xFE205F38AAA58E5B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFE205F38AAA58E5B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_HELP_MESSAGE_TEXT_STYLE
	static auto nh_0xB9C362BABECDDC7A = rage::scrEngine::GetNativeHandler(0xB9C362BABECDDC7A);
	rage::scrEngine::RegisterNativeHandler(0xB9C362BABECDDC7A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB9C362BABECDDC7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HYDRAULIC_RAISED
	static auto nh_0x28B18377EB6E25F6 = rage::scrEngine::GetNativeHandler(0x28B18377EB6E25F6);
	rage::scrEngine::RegisterNativeHandler(0x28B18377EB6E25F6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x28B18377EB6E25F6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HYDRAULIC_WHEEL_STATE
	static auto nh_0x8EA86DF356801C7D = rage::scrEngine::GetNativeHandler(0x8EA86DF356801C7D);
	rage::scrEngine::RegisterNativeHandler(0x8EA86DF356801C7D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8EA86DF356801C7D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HYDRAULIC_WHEEL_STATE_TRANSITION
	static auto nh_0xC24075310A8B9CD1 = rage::scrEngine::GetNativeHandler(0xC24075310A8B9CD1);
	rage::scrEngine::RegisterNativeHandler(0xC24075310A8B9CD1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC24075310A8B9CD1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_HYDRAULIC_WHEEL_VALUE
	static auto nh_0x84EA99C62CB3EF0C = rage::scrEngine::GetNativeHandler(0x84EA99C62CB3EF0C);
	rage::scrEngine::RegisterNativeHandler(0x84EA99C62CB3EF0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x84EA99C62CB3EF0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PATHFIND/_SET_IGNORE_SECONDARY_ROUTE_NODES
	static auto nh_0x1FC289A0C3FF470F = rage::scrEngine::GetNativeHandler(0x1FC289A0C3FF470F);
	rage::scrEngine::RegisterNativeHandler(0x1FC289A0C3FF470F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1FC289A0C3FF470F(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_INCIDENT_UNK
	static auto nh_0xD261BA3E7E998072 = rage::scrEngine::GetNativeHandler(0xD261BA3E7E998072);
	rage::scrEngine::RegisterNativeHandler(0xD261BA3E7E998072, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD261BA3E7E998072(cxt);
		NullifyVoid(cxt);
	});
	        
	// INTERIOR/_SET_INTERIOR_ENTITY_SET_COLOR
	static auto nh_0xC1F1920BAF281317 = rage::scrEngine::GetNativeHandler(0xC1F1920BAF281317);
	rage::scrEngine::RegisterNativeHandler(0xC1F1920BAF281317, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xC1F1920BAF281317(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_INTERIOR_ZOOM_LEVEL_DECREASED
	static auto nh_0x7EC8ABA5E74B3D7A = rage::scrEngine::GetNativeHandler(0x7EC8ABA5E74B3D7A);
	rage::scrEngine::RegisterNativeHandler(0x7EC8ABA5E74B3D7A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7EC8ABA5E74B3D7A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_INTERIOR_ZOOM_LEVEL_INCREASED
	static auto nh_0x504DFE62A1692296 = rage::scrEngine::GetNativeHandler(0x504DFE62A1692296);
	rage::scrEngine::RegisterNativeHandler(0x504DFE62A1692296, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x504DFE62A1692296(cxt);
		NullifyVoid(cxt);
	});
	        
	// PHYSICS/_SET_LAUNCH_CONTROL_ENABLED
	static auto nh_0xAA6A6098851C396F = rage::scrEngine::GetNativeHandler(0xAA6A6098851C396F);
	rage::scrEngine::RegisterNativeHandler(0xAA6A6098851C396F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAA6A6098851C396F(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SET_LOCAL_PLAYER_AS_GHOST
	static auto nh_0x5FFE9B4144F9712F = rage::scrEngine::GetNativeHandler(0x5FFE9B4144F9712F);
	rage::scrEngine::RegisterNativeHandler(0x5FFE9B4144F9712F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5FFE9B4144F9712F(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
	static auto nh_0x88EAEC617CD26926 = rage::scrEngine::GetNativeHandler(0x88EAEC617CD26926);
	rage::scrEngine::RegisterNativeHandler(0x88EAEC617CD26926, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88EAEC617CD26926(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MAIN_PLAYER_BLIP_COLOUR
	static auto nh_0x7B21E0BB01E8224A = rage::scrEngine::GetNativeHandler(0x7B21E0BB01E8224A);
	rage::scrEngine::RegisterNativeHandler(0x7B21E0BB01E8224A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7B21E0BB01E8224A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MINIMAP_ALTITUDE_INDICATOR_LEVEL
	static auto nh_0xD201F3FF917A506D = rage::scrEngine::GetNativeHandler(0xD201F3FF917A506D);
	rage::scrEngine::RegisterNativeHandler(0xD201F3FF917A506D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD201F3FF917A506D(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MISSION_NAME_2
	static auto nh_0xE45087D85F468BC2 = rage::scrEngine::GetNativeHandler(0xE45087D85F468BC2);
	rage::scrEngine::RegisterNativeHandler(0xE45087D85F468BC2, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xE45087D85F468BC2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
	static auto nh_0xAAE7CE1D63167423 = rage::scrEngine::GetNativeHandler(0xAAE7CE1D63167423);
	rage::scrEngine::RegisterNativeHandler(0xAAE7CE1D63167423, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xAAE7CE1D63167423(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MOUSE_CURSOR_SPRITE
	static auto nh_0x8DB8CFFD58B62552 = rage::scrEngine::GetNativeHandler(0x8DB8CFFD58B62552);
	rage::scrEngine::RegisterNativeHandler(0x8DB8CFFD58B62552, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8DB8CFFD58B62552(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MOUSE_CURSOR_VISIBLE_IN_MENUS
	static auto nh_0x98215325A695E78A = rage::scrEngine::GetNativeHandler(0x98215325A695E78A);
	rage::scrEngine::RegisterNativeHandler(0x98215325A695E78A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x98215325A695E78A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC
	static auto nh_0xD29EC58C2F6B5014 = rage::scrEngine::GetNativeHandler(0xD29EC58C2F6B5014);
	rage::scrEngine::RegisterNativeHandler(0xD29EC58C2F6B5014, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xD29EC58C2F6B5014(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MP_GAMER_TAG_MP_BAG_LARGE_COUNT
	static auto nh_0x9C16459B2324B2CF = rage::scrEngine::GetNativeHandler(0x9C16459B2324B2CF);
	rage::scrEngine::RegisterNativeHandler(0x9C16459B2324B2CF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C16459B2324B2CF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH
	static auto nh_0x1563FE35E9928E67 = rage::scrEngine::GetNativeHandler(0x1563FE35E9928E67);
	rage::scrEngine::RegisterNativeHandler(0x1563FE35E9928E67, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1563FE35E9928E67(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MP_GAMER_TAG_USE_VEHICLE_HEALTH
	static auto nh_0xA67F9C46D612B6F1 = rage::scrEngine::GetNativeHandler(0xA67F9C46D612B6F1);
	rage::scrEngine::RegisterNativeHandler(0xA67F9C46D612B6F1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA67F9C46D612B6F1(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_MP_GAMER_TAG_VISIBILITY_ALL
	static auto nh_0xEE76FF7E6A0166B0 = rage::scrEngine::GetNativeHandler(0xEE76FF7E6A0166B0);
	rage::scrEngine::RegisterNativeHandler(0xEE76FF7E6A0166B0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE76FF7E6A0166B0(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SET_NETWORK_ENABLE_VEHICLE_POSITION_CORRECTION
	static auto nh_0x838DA0936A24ED4D = rage::scrEngine::GetNativeHandler(0x838DA0936A24ED4D);
	rage::scrEngine::RegisterNativeHandler(0x838DA0936A24ED4D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x838DA0936A24ED4D(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SET_NETWORK_VEHICLE_POSITION_UPDATE_MULTIPLIER
	static auto nh_0xA2A707979FE754DC = rage::scrEngine::GetNativeHandler(0xA2A707979FE754DC);
	rage::scrEngine::RegisterNativeHandler(0xA2A707979FE754DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA2A707979FE754DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_OBJECT_LIGHT_COLOR (result cleaner only)
	AddResultCleaner(0x5F048334B4A4E774, ResultCleaner<int>);

	// OBJECT/_SET_OBJECT_STUNT_PROP_DURATION
	static auto nh_0xDF6CA0330F2E737B = rage::scrEngine::GetNativeHandler(0xDF6CA0330F2E737B);
	rage::scrEngine::RegisterNativeHandler(0xDF6CA0330F2E737B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDF6CA0330F2E737B(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_OBJECT_STUNT_PROP_SPEEDUP
	static auto nh_0x96EE0EBA0163DF80 = rage::scrEngine::GetNativeHandler(0x96EE0EBA0163DF80);
	rage::scrEngine::RegisterNativeHandler(0x96EE0EBA0163DF80, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x96EE0EBA0163DF80(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_OBJECT_TEXTURE_VARIATION
	static auto nh_0x971DA0055324D033 = rage::scrEngine::GetNativeHandler(0x971DA0055324D033);
	rage::scrEngine::RegisterNativeHandler(0x971DA0055324D033, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x971DA0055324D033(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_OPPRESSOR_TRANSFORM_STATE
	static auto nh_0x544996C0081ABDEB = rage::scrEngine::GetNativeHandler(0x544996C0081ABDEB);
	rage::scrEngine::RegisterNativeHandler(0x544996C0081ABDEB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x544996C0081ABDEB(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE
	static auto nh_0x1E2E01C00837D26E = rage::scrEngine::GetNativeHandler(0x1E2E01C00837D26E);
	rage::scrEngine::RegisterNativeHandler(0x1E2E01C00837D26E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1E2E01C00837D26E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_PED_AI_BLIP_SPRITE
	static auto nh_0xFCFACD0DB9D7A57D = rage::scrEngine::GetNativeHandler(0xFCFACD0DB9D7A57D);
	rage::scrEngine::RegisterNativeHandler(0xFCFACD0DB9D7A57D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFCFACD0DB9D7A57D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_PED_AUDIO_FOOTSTEP_LOUD
	static auto nh_0x0653B735BFBDFE87 = rage::scrEngine::GetNativeHandler(0x0653B735BFBDFE87);
	rage::scrEngine::RegisterNativeHandler(0x0653B735BFBDFE87, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0653B735BFBDFE87(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_PED_AUDIO_GENDER
	static auto nh_0xA5342D390CDA41D6 = rage::scrEngine::GetNativeHandler(0xA5342D390CDA41D6);
	rage::scrEngine::RegisterNativeHandler(0xA5342D390CDA41D6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA5342D390CDA41D6(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_CAN_PLAY_INJURED_ANIMS
	static auto nh_0x33A60D8BDD6E508C = rage::scrEngine::GetNativeHandler(0x33A60D8BDD6E508C);
	rage::scrEngine::RegisterNativeHandler(0x33A60D8BDD6E508C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x33A60D8BDD6E508C(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_COVER_CLIPSET_OVERRIDE
	static auto nh_0x9DBA107B4937F809 = rage::scrEngine::GetNativeHandler(0x9DBA107B4937F809);
	rage::scrEngine::RegisterNativeHandler(0x9DBA107B4937F809, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x9DBA107B4937F809(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_EMISSIVE_INTENSITY
	static auto nh_0x4E90D746056E273D = rage::scrEngine::GetNativeHandler(0x4E90D746056E273D);
	rage::scrEngine::RegisterNativeHandler(0x4E90D746056E273D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4E90D746056E273D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_EYE_COLOR
	static auto nh_0x50B56988B170AFDF = rage::scrEngine::GetNativeHandler(0x50B56988B170AFDF);
	rage::scrEngine::RegisterNativeHandler(0x50B56988B170AFDF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x50B56988B170AFDF(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_FACE_FEATURE
	static auto nh_0x71A5C1DBA060049E = rage::scrEngine::GetNativeHandler(0x71A5C1DBA060049E);
	rage::scrEngine::RegisterNativeHandler(0x71A5C1DBA060049E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x71A5C1DBA060049E(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_PED_HAS_AI_BLIP_WITH_COLOR
	static auto nh_0xB13DCB4C6FAAD238 = rage::scrEngine::GetNativeHandler(0xB13DCB4C6FAAD238);
	rage::scrEngine::RegisterNativeHandler(0xB13DCB4C6FAAD238, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB13DCB4C6FAAD238(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_HEAD_OVERLAY_COLOR
	static auto nh_0x497BF74A7B9CB952 = rage::scrEngine::GetNativeHandler(0x497BF74A7B9CB952);
	rage::scrEngine::RegisterNativeHandler(0x497BF74A7B9CB952, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x497BF74A7B9CB952(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_HELMET_UNK
	static auto nh_0x3F7325574E41B44D = rage::scrEngine::GetNativeHandler(0x3F7325574E41B44D);
	rage::scrEngine::RegisterNativeHandler(0x3F7325574E41B44D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3F7325574E41B44D(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_SCUBA_GEAR_VARIATION
	static auto nh_0x36C6984C3ED0C911 = rage::scrEngine::GetNativeHandler(0x36C6984C3ED0C911);
	rage::scrEngine::RegisterNativeHandler(0x36C6984C3ED0C911, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x36C6984C3ED0C911(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT (result cleaner only)
	AddResultCleaner(0xEC6935EBE0847B90, ResultCleaner<bool>);

	// AUDIO/_SET_PED_VOICE_GROUP
	static auto nh_0x7CDC8C3B89F661B3 = rage::scrEngine::GetNativeHandler(0x7CDC8C3B89F661B3);
	rage::scrEngine::RegisterNativeHandler(0x7CDC8C3B89F661B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7CDC8C3B89F661B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_PED_VOICE_GROUP_RACE
	static auto nh_0x0BABC1345ABBFB16 = rage::scrEngine::GetNativeHandler(0x0BABC1345ABBFB16);
	rage::scrEngine::RegisterNativeHandler(0x0BABC1345ABBFB16, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0BABC1345ABBFB16(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_PED_WEAPON_LIVERY_COLOR
	static auto nh_0x9FE5633880ECD8ED = rage::scrEngine::GetNativeHandler(0x9FE5633880ECD8ED);
	rage::scrEngine::RegisterNativeHandler(0x9FE5633880ECD8ED, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9FE5633880ECD8ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE
	static auto nh_0x3ED2B83AB2E82799 = rage::scrEngine::GetNativeHandler(0x3ED2B83AB2E82799);
	rage::scrEngine::RegisterNativeHandler(0x3ED2B83AB2E82799, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x3ED2B83AB2E82799(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_PICKUP_UNCOLLECTABLE
	static auto nh_0x1C1B69FAE509BA97 = rage::scrEngine::GetNativeHandler(0x1C1B69FAE509BA97);
	rage::scrEngine::RegisterNativeHandler(0x1C1B69FAE509BA97, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x1C1B69FAE509BA97(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_PLANE_ENGINE_HEALTH
	static auto nh_0x2A86A0475B6A1434 = rage::scrEngine::GetNativeHandler(0x2A86A0475B6A1434);
	rage::scrEngine::RegisterNativeHandler(0x2A86A0475B6A1434, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2A86A0475B6A1434(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_PLANE_PROPELLERS_HEALTH
	static auto nh_0x4C815EB175086F84 = rage::scrEngine::GetNativeHandler(0x4C815EB175086F84);
	rage::scrEngine::RegisterNativeHandler(0x4C815EB175086F84, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4C815EB175086F84(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_PLAYER_AIR_DEFENSE_ZONE_FLAG
	static auto nh_0xECDC202B25E5CF48 = rage::scrEngine::GetNativeHandler(0xECDC202B25E5CF48);
	rage::scrEngine::RegisterNativeHandler(0xECDC202B25E5CF48, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xECDC202B25E5CF48(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_FALL_DISTANCE
	static auto nh_0xEFD79FA81DFBA9CB = rage::scrEngine::GetNativeHandler(0xEFD79FA81DFBA9CB);
	rage::scrEngine::RegisterNativeHandler(0xEFD79FA81DFBA9CB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFD79FA81DFBA9CB(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_HEALTH_RECHARGE_LIMIT
	static auto nh_0xC388A0F065F5BC34 = rage::scrEngine::GetNativeHandler(0xC388A0F065F5BC34);
	rage::scrEngine::RegisterNativeHandler(0xC388A0F065F5BC34, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC388A0F065F5BC34(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_HOMING_ROCKET_DISABLED
	static auto nh_0xEE4EBDD2593BA844 = rage::scrEngine::GetNativeHandler(0xEE4EBDD2593BA844);
	rage::scrEngine::RegisterNativeHandler(0xEE4EBDD2593BA844, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEE4EBDD2593BA844(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED
	static auto nh_0x6BC97F4F4BB3C04B = rage::scrEngine::GetNativeHandler(0x6BC97F4F4BB3C04B);
	rage::scrEngine::RegisterNativeHandler(0x6BC97F4F4BB3C04B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6BC97F4F4BB3C04B(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_PLAYER_IS_IN_ANIMAL_FORM
	static auto nh_0x4EBB7E87AA0DBED4 = rage::scrEngine::GetNativeHandler(0x4EBB7E87AA0DBED4);
	rage::scrEngine::RegisterNativeHandler(0x4EBB7E87AA0DBED4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4EBB7E87AA0DBED4(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_PLAYER_IS_IN_DIRECTOR_MODE
	static auto nh_0x808519373FD336A3 = rage::scrEngine::GetNativeHandler(0x808519373FD336A3);
	rage::scrEngine::RegisterNativeHandler(0x808519373FD336A3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x808519373FD336A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE
	static auto nh_0x0764486AEDE748DB = rage::scrEngine::GetNativeHandler(0x0764486AEDE748DB);
	rage::scrEngine::RegisterNativeHandler(0x0764486AEDE748DB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0764486AEDE748DB(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_PLAYER_ROCKSTAR_EDITOR_DISABLED
	static auto nh_0x9D8D44ADBBA61EF2 = rage::scrEngine::GetNativeHandler(0x9D8D44ADBBA61EF2);
	rage::scrEngine::RegisterNativeHandler(0x9D8D44ADBBA61EF2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D8D44ADBBA61EF2(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_PLAYER_UNDERWATER_TIME_REMAINING (result cleaner only)
	AddResultCleaner(0xA0D3E4F7AAFB7E78, ResultCleaner<int>);

	// PLAYER/_SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2
	static auto nh_0xBCFDE9EDE4CF27DC = rage::scrEngine::GetNativeHandler(0xBCFDE9EDE4CF27DC);
	rage::scrEngine::RegisterNativeHandler(0xBCFDE9EDE4CF27DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBCFDE9EDE4CF27DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_RADIO_STATION_IS_VISIBLE
	static auto nh_0x4CAFEBFA21EC188D = rage::scrEngine::GetNativeHandler(0x4CAFEBFA21EC188D);
	rage::scrEngine::RegisterNativeHandler(0x4CAFEBFA21EC188D, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4CAFEBFA21EC188D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_RADIO_TRACK_MIX
	static auto nh_0x2CB0075110BE1E56 = rage::scrEngine::GetNativeHandler(0x2CB0075110BE1E56);
	rage::scrEngine::RegisterNativeHandler(0x2CB0075110BE1E56, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x2CB0075110BE1E56(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_RAIN_LEVEL
	static auto nh_0x643E26EA6E024D92 = rage::scrEngine::GetNativeHandler(0x643E26EA6E024D92);
	rage::scrEngine::RegisterNativeHandler(0x643E26EA6E024D92, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x643E26EA6E024D92(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_RANDOM_BOATS_IN_MP
	static auto nh_0xDA5E12F728DB30CA = rage::scrEngine::GetNativeHandler(0xDA5E12F728DB30CA);
	rage::scrEngine::RegisterNativeHandler(0xDA5E12F728DB30CA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xDA5E12F728DB30CA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_REDUCE_DRIFT_VEHICLE_SUSPENSION
	static auto nh_0x3A375167F5782A65 = rage::scrEngine::GetNativeHandler(0x3A375167F5782A65);
	rage::scrEngine::RegisterNativeHandler(0x3A375167F5782A65, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3A375167F5782A65(cxt);
		NullifyVoid(cxt);
	});
	        
	// PED/_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL
	static auto nh_0x5615E0C5EB2BC6E2 = rage::scrEngine::GetNativeHandler(0x5615E0C5EB2BC6E2);
	rage::scrEngine::RegisterNativeHandler(0x5615E0C5EB2BC6E2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5615E0C5EB2BC6E2(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SET_RELATIONSHIP_TO_PLAYER
	static auto nh_0xA7C511FA1C5BDA38 = rage::scrEngine::GetNativeHandler(0xA7C511FA1C5BDA38);
	rage::scrEngine::RegisterNativeHandler(0xA7C511FA1C5BDA38, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA7C511FA1C5BDA38(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_RESTART_CUSTOM_POSITION
	static auto nh_0x706B5EDCAA7FA663 = rage::scrEngine::GetNativeHandler(0x706B5EDCAA7FA663);
	rage::scrEngine::RegisterNativeHandler(0x706B5EDCAA7FA663, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x706B5EDCAA7FA663(cxt);
		NullifyVoid(cxt);
	});
	        
	// STATS/_SET_SAVE_MIGRATION_TRANSACTION_ID
	static auto nh_0xF6792800AC95350D = rage::scrEngine::GetNativeHandler(0xF6792800AC95350D);
	rage::scrEngine::RegisterNativeHandler(0xF6792800AC95350D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF6792800AC95350D(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_SET_SCALEFORM_FIT_RENDERTARGET
	static auto nh_0xE6A9F00D4240B519 = rage::scrEngine::GetNativeHandler(0xE6A9F00D4240B519);
	rage::scrEngine::RegisterNativeHandler(0xE6A9F00D4240B519, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE6A9F00D4240B519(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_SCRIPT_VARIABLE_2_HUD_COLOUR
	static auto nh_0x16A304E6CB2BFAB9 = rage::scrEngine::GetNativeHandler(0x16A304E6CB2BFAB9);
	rage::scrEngine::RegisterNativeHandler(0x16A304E6CB2BFAB9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x16A304E6CB2BFAB9(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_SIREN_KEEP_ON
	static auto nh_0xF584CF8529B51434 = rage::scrEngine::GetNativeHandler(0xF584CF8529B51434);
	rage::scrEngine::RegisterNativeHandler(0xF584CF8529B51434, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF584CF8529B51434(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_SNOW_LEVEL
	static auto nh_0x7F06937B0CDCBC1A = rage::scrEngine::GetNativeHandler(0x7F06937B0CDCBC1A);
	rage::scrEngine::RegisterNativeHandler(0x7F06937B0CDCBC1A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7F06937B0CDCBC1A(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_SPECIAL_ABILITY
	static auto nh_0xB214D570EAD7F81A = rage::scrEngine::GetNativeHandler(0xB214D570EAD7F81A);
	rage::scrEngine::RegisterNativeHandler(0xB214D570EAD7F81A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB214D570EAD7F81A(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2
	static auto nh_0x373EF409B82697A3 = rage::scrEngine::GetNativeHandler(0x373EF409B82697A3);
	rage::scrEngine::RegisterNativeHandler(0x373EF409B82697A3, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x373EF409B82697A3(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE (result cleaner only)
	AddResultCleaner(0xF12E33034D887F66, ResultCleaner<bool>);

	// SYSTEM/_SET_THREAD_PRIORITY
	static auto nh_0x42B65DEEF2EDF2A1 = rage::scrEngine::GetNativeHandler(0x42B65DEEF2EDF2A1);
	rage::scrEngine::RegisterNativeHandler(0x42B65DEEF2EDF2A1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x42B65DEEF2EDF2A1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_TRAILER_LEGS_LOWERED
	static auto nh_0x878C75C09FBDB942 = rage::scrEngine::GetNativeHandler(0x878C75C09FBDB942);
	rage::scrEngine::RegisterNativeHandler(0x878C75C09FBDB942, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x878C75C09FBDB942(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_TYRE_HEALTH
	static auto nh_0x74C68EF97645E79D = rage::scrEngine::GetNativeHandler(0x74C68EF97645E79D);
	rage::scrEngine::RegisterNativeHandler(0x74C68EF97645E79D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x74C68EF97645E79D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_TYRE_SOFTNESS_MULTIPLIER
	static auto nh_0x392183BB9EA57697 = rage::scrEngine::GetNativeHandler(0x392183BB9EA57697);
	rage::scrEngine::RegisterNativeHandler(0x392183BB9EA57697, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x392183BB9EA57697(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_TYRE_TRACTION_LOSS_MULTIPLIER
	static auto nh_0xC970D0E0FC31D768 = rage::scrEngine::GetNativeHandler(0xC970D0E0FC31D768);
	rage::scrEngine::RegisterNativeHandler(0xC970D0E0FC31D768, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC970D0E0FC31D768(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_TYRE_WEAR_MULTIPLIER
	static auto nh_0x01894E2EDE923CA2 = rage::scrEngine::GetNativeHandler(0x01894E2EDE923CA2);
	rage::scrEngine::RegisterNativeHandler(0x01894E2EDE923CA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x01894E2EDE923CA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_UNK_BOOL_0x102_FOR_SUBMARINE_VEHICLE_TASK
	static auto nh_0x41B9FB92EDED32A6 = rage::scrEngine::GetNativeHandler(0x41B9FB92EDED32A6);
	rage::scrEngine::RegisterNativeHandler(0x41B9FB92EDED32A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x41B9FB92EDED32A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_UNK_FLOAT_0x104_FOR_SUBMARINE_VEHICLE_TASK
	static auto nh_0x498218259FB7C72D = rage::scrEngine::GetNativeHandler(0x498218259FB7C72D);
	rage::scrEngine::RegisterNativeHandler(0x498218259FB7C72D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x498218259FB7C72D(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_SET_UNK_GLOBAL_BOOL_RELATED_TO_DAMAGE
	static auto nh_0xABDABF4E1EDECBFA = rage::scrEngine::GetNativeHandler(0xABDABF4E1EDECBFA);
	rage::scrEngine::RegisterNativeHandler(0xABDABF4E1EDECBFA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xABDABF4E1EDECBFA(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_USE_HIGHER_VEHICLE_JUMP_FORCE
	static auto nh_0xF06A16CA55D138D8 = rage::scrEngine::GetNativeHandler(0xF06A16CA55D138D8);
	rage::scrEngine::RegisterNativeHandler(0xF06A16CA55D138D8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF06A16CA55D138D8(cxt);
		NullifyVoid(cxt);
	});
	        
	// CAM/_SET_USE_HI_DOF_IN_CUTSCENE
	static auto nh_0x731A880555DA3647 = rage::scrEngine::GetNativeHandler(0x731A880555DA3647);
	rage::scrEngine::RegisterNativeHandler(0x731A880555DA3647, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x731A880555DA3647(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_USE_WAYPOINT_AS_DESTINATION
	static auto nh_0x6CDD58146A436083 = rage::scrEngine::GetNativeHandler(0x6CDD58146A436083);
	rage::scrEngine::RegisterNativeHandler(0x6CDD58146A436083, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6CDD58146A436083(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_VARIABLE_ON_CUTSCENE_AUDIO
	static auto nh_0xBCC29F935ED07688 = rage::scrEngine::GetNativeHandler(0xBCC29F935ED07688);
	rage::scrEngine::RegisterNativeHandler(0xBCC29F935ED07688, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xBCC29F935ED07688(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_BOMB_COUNT
	static auto nh_0xF4B2ED59DEB5D774 = rage::scrEngine::GetNativeHandler(0xF4B2ED59DEB5D774);
	rage::scrEngine::RegisterNativeHandler(0xF4B2ED59DEB5D774, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF4B2ED59DEB5D774(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_CAN_BE_LOCKED_ON
	static auto nh_0x1DDA078D12879EEE = rage::scrEngine::GetNativeHandler(0x1DDA078D12879EEE);
	rage::scrEngine::RegisterNativeHandler(0x1DDA078D12879EEE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1DDA078D12879EEE(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE
	static auto nh_0x206BC5DC9D1AC70A = rage::scrEngine::GetNativeHandler(0x206BC5DC9D1AC70A);
	rage::scrEngine::RegisterNativeHandler(0x206BC5DC9D1AC70A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x206BC5DC9D1AC70A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_CONTROLS_INVERTED
	static auto nh_0x5B91B229243351A8 = rage::scrEngine::GetNativeHandler(0x5B91B229243351A8);
	rage::scrEngine::RegisterNativeHandler(0x5B91B229243351A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5B91B229243351A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_COUNTERMEASURE_COUNT
	static auto nh_0x9BDA23BF666F0855 = rage::scrEngine::GetNativeHandler(0x9BDA23BF666F0855);
	rage::scrEngine::RegisterNativeHandler(0x9BDA23BF666F0855, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9BDA23BF666F0855(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_DAMAGE_MODIFIER (result cleaner only)
	AddResultCleaner(0x4E20D2A627011E8E, ResultCleaner<int>);

	// VEHICLE/_SET_VEHICLE_DASHBOARD_COLOR
	static auto nh_0x6089CDF6A57F326C = rage::scrEngine::GetNativeHandler(0x6089CDF6A57F326C);
	rage::scrEngine::RegisterNativeHandler(0x6089CDF6A57F326C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6089CDF6A57F326C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_DOORS_LOCKED_FOR_UNK
	static auto nh_0x203B527D1B77904C = rage::scrEngine::GetNativeHandler(0x203B527D1B77904C);
	rage::scrEngine::RegisterNativeHandler(0x203B527D1B77904C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x203B527D1B77904C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_DOOR_CAN_BREAK
	static auto nh_0x2FA133A4A9D37ED8 = rage::scrEngine::GetNativeHandler(0x2FA133A4A9D37ED8);
	rage::scrEngine::RegisterNativeHandler(0x2FA133A4A9D37ED8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2FA133A4A9D37ED8(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_EXCLUSIVE_DRIVER_2
	static auto nh_0xB5C51B5502E85E83 = rage::scrEngine::GetNativeHandler(0xB5C51B5502E85E83);
	rage::scrEngine::RegisterNativeHandler(0xB5C51B5502E85E83, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB5C51B5502E85E83(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_HANDLING_HASH_FOR_AI
	static auto nh_0x10655FAB9915623D = rage::scrEngine::GetNativeHandler(0x10655FAB9915623D);
	rage::scrEngine::RegisterNativeHandler(0x10655FAB9915623D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x10655FAB9915623D(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_VEHICLE_HORN_VARIATION
	static auto nh_0x0350E7E17BA767D0 = rage::scrEngine::GetNativeHandler(0x0350E7E17BA767D0);
	rage::scrEngine::RegisterNativeHandler(0x0350E7E17BA767D0, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0350E7E17BA767D0(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_INTERIOR_COLOR
	static auto nh_0xF40DD601A65F7F19 = rage::scrEngine::GetNativeHandler(0xF40DD601A65F7F19);
	rage::scrEngine::RegisterNativeHandler(0xF40DD601A65F7F19, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF40DD601A65F7F19(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_LIGHTS_MODE
	static auto nh_0x1FD09E7390A74D54 = rage::scrEngine::GetNativeHandler(0x1FD09E7390A74D54);
	rage::scrEngine::RegisterNativeHandler(0x1FD09E7390A74D54, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1FD09E7390A74D54(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_MAX_SPEED
	static auto nh_0xBAA045B4E42F3C06 = rage::scrEngine::GetNativeHandler(0xBAA045B4E42F3C06);
	rage::scrEngine::RegisterNativeHandler(0xBAA045B4E42F3C06, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBAA045B4E42F3C06(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_NEON_LIGHTS_COLOR_2
	static auto nh_0xB93B2867F7B479D1 = rage::scrEngine::GetNativeHandler(0xB93B2867F7B479D1);
	rage::scrEngine::RegisterNativeHandler(0xB93B2867F7B479D1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB93B2867F7B479D1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_NEON_LIGHTS_COLOUR
	static auto nh_0x8E0A582209A62695 = rage::scrEngine::GetNativeHandler(0x8E0A582209A62695);
	rage::scrEngine::RegisterNativeHandler(0x8E0A582209A62695, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8E0A582209A62695(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_NEON_LIGHT_ENABLED
	static auto nh_0x2AA720E4287BF269 = rage::scrEngine::GetNativeHandler(0x2AA720E4287BF269);
	rage::scrEngine::RegisterNativeHandler(0x2AA720E4287BF269, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2AA720E4287BF269(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_NITRO_ENABLED
	static auto nh_0xC8E9B6B71B8E660D = rage::scrEngine::GetNativeHandler(0xC8E9B6B71B8E660D);
	rage::scrEngine::RegisterNativeHandler(0xC8E9B6B71B8E660D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC8E9B6B71B8E660D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_PARACHUTE_ACTIVE
	static auto nh_0x0BFFB028B3DD0A97 = rage::scrEngine::GetNativeHandler(0x0BFFB028B3DD0A97);
	rage::scrEngine::RegisterNativeHandler(0x0BFFB028B3DD0A97, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x0BFFB028B3DD0A97(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_PARACHUTE_MODEL
	static auto nh_0x4D610C6B56031351 = rage::scrEngine::GetNativeHandler(0x4D610C6B56031351);
	rage::scrEngine::RegisterNativeHandler(0x4D610C6B56031351, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4D610C6B56031351(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_PARACHUTE_TEXTURE_VARIATION
	static auto nh_0xA74AD2439468C883 = rage::scrEngine::GetNativeHandler(0xA74AD2439468C883);
	rage::scrEngine::RegisterNativeHandler(0xA74AD2439468C883, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA74AD2439468C883(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_RAMP_LAUNCH_MODIFIER
	static auto nh_0xEFC13B1CE30D755D = rage::scrEngine::GetNativeHandler(0xEFC13B1CE30D755D);
	rage::scrEngine::RegisterNativeHandler(0xEFC13B1CE30D755D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEFC13B1CE30D755D(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION
	static auto nh_0x1BBAC99C0BC53656 = rage::scrEngine::GetNativeHandler(0x1BBAC99C0BC53656);
	rage::scrEngine::RegisterNativeHandler(0x1BBAC99C0BC53656, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1BBAC99C0BC53656(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION
	static auto nh_0x756AE6E962168A04 = rage::scrEngine::GetNativeHandler(0x756AE6E962168A04);
	rage::scrEngine::RegisterNativeHandler(0x756AE6E962168A04, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x756AE6E962168A04(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_RECEIVES_RAMP_DAMAGE
	static auto nh_0x28D034A93FE31BF5 = rage::scrEngine::GetNativeHandler(0x28D034A93FE31BF5);
	rage::scrEngine::RegisterNativeHandler(0x28D034A93FE31BF5, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x28D034A93FE31BF5(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_REDUCE_TRACTION
	static auto nh_0x6DEE944E1EE90CFB = rage::scrEngine::GetNativeHandler(0x6DEE944E1EE90CFB);
	rage::scrEngine::RegisterNativeHandler(0x6DEE944E1EE90CFB, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x6DEE944E1EE90CFB(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_ROCKET_BOOST_ACTIVE
	static auto nh_0x81E1552E35DC3839 = rage::scrEngine::GetNativeHandler(0x81E1552E35DC3839);
	rage::scrEngine::RegisterNativeHandler(0x81E1552E35DC3839, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x81E1552E35DC3839(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_ROCKET_BOOST_PERCENTAGE
	static auto nh_0xFEB2DDED3509562E = rage::scrEngine::GetNativeHandler(0xFEB2DDED3509562E);
	rage::scrEngine::RegisterNativeHandler(0xFEB2DDED3509562E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xFEB2DDED3509562E(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_ROCKET_BOOST_REFILL_TIME
	static auto nh_0xE00F2AB100B76E89 = rage::scrEngine::GetNativeHandler(0xE00F2AB100B76E89);
	rage::scrEngine::RegisterNativeHandler(0xE00F2AB100B76E89, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE00F2AB100B76E89(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_ROOF_LIVERY
	static auto nh_0xA6D3A8750DC73270 = rage::scrEngine::GetNativeHandler(0xA6D3A8750DC73270);
	rage::scrEngine::RegisterNativeHandler(0xA6D3A8750DC73270, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xA6D3A8750DC73270(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_SHADOW_EFFECT
	static auto nh_0xF0E4BA16D1DB546C = rage::scrEngine::GetNativeHandler(0xF0E4BA16D1DB546C);
	rage::scrEngine::RegisterNativeHandler(0xF0E4BA16D1DB546C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xF0E4BA16D1DB546C(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_SILENT
	static auto nh_0x9D44FCCE98450843 = rage::scrEngine::GetNativeHandler(0x9D44FCCE98450843);
	rage::scrEngine::RegisterNativeHandler(0x9D44FCCE98450843, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9D44FCCE98450843(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_ST
	static auto nh_0x1CF38D529D7441D9 = rage::scrEngine::GetNativeHandler(0x1CF38D529D7441D9);
	rage::scrEngine::RegisterNativeHandler(0x1CF38D529D7441D9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x1CF38D529D7441D9(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_TURRET_UNK
	static auto nh_0xC60060EB0D8AC7B1 = rage::scrEngine::GetNativeHandler(0xC60060EB0D8AC7B1);
	rage::scrEngine::RegisterNativeHandler(0xC60060EB0D8AC7B1, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC60060EB0D8AC7B1(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_UNK_DAMAGE_MULTIPLIER
	static auto nh_0x45A561A9421AB6AD = rage::scrEngine::GetNativeHandler(0x45A561A9421AB6AD);
	rage::scrEngine::RegisterNativeHandler(0x45A561A9421AB6AD, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x45A561A9421AB6AD(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_WEAPONS_DISABLED
	static auto nh_0x86B4B6212CB8B627 = rage::scrEngine::GetNativeHandler(0x86B4B6212CB8B627);
	rage::scrEngine::RegisterNativeHandler(0x86B4B6212CB8B627, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x86B4B6212CB8B627(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_WEAPON_CAPACITY
	static auto nh_0x44CD1F493DB2A0A6 = rage::scrEngine::GetNativeHandler(0x44CD1F493DB2A0A6);
	rage::scrEngine::RegisterNativeHandler(0x44CD1F493DB2A0A6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x44CD1F493DB2A0A6(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_WHEELS_DEAL_DAMAGE
	static auto nh_0x2970EAA18FD5E42F = rage::scrEngine::GetNativeHandler(0x2970EAA18FD5E42F);
	rage::scrEngine::RegisterNativeHandler(0x2970EAA18FD5E42F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x2970EAA18FD5E42F(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_SET_VEHICLE_XENON_LIGHTS_COLOR
	static auto nh_0xE41033B25D003A07 = rage::scrEngine::GetNativeHandler(0xE41033B25D003A07);
	rage::scrEngine::RegisterNativeHandler(0xE41033B25D003A07, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xE41033B25D003A07(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_SET_VEH_HAS_RADIO_OVERRIDE
	static auto nh_0x3E45765F3FBB582F = rage::scrEngine::GetNativeHandler(0x3E45765F3FBB582F);
	rage::scrEngine::RegisterNativeHandler(0x3E45765F3FBB582F, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3E45765F3FBB582F(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SET_WANTED_LEVEL_HIDDEN_EVASION_TIME
	static auto nh_0x49B856B1360C47C7 = rage::scrEngine::GetNativeHandler(0x49B856B1360C47C7);
	rage::scrEngine::RegisterNativeHandler(0x49B856B1360C47C7, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x49B856B1360C47C7(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_WARNING_MESSAGE_LIST_ROW
	static auto nh_0x0C5A80A9E096D529 = rage::scrEngine::GetNativeHandler(0x0C5A80A9E096D529);
	rage::scrEngine::RegisterNativeHandler(0x0C5A80A9E096D529, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0x0C5A80A9E096D529(cxt);
	});
	        
	AddResultCleaner(0x0C5A80A9E096D529, ResultCleaner<bool>);

	// HUD/_SET_WARNING_MESSAGE_WITH_ALERT
	static auto nh_0x15803FEC3B9A872B = rage::scrEngine::GetNativeHandler(0x15803FEC3B9A872B);
	rage::scrEngine::RegisterNativeHandler(0x15803FEC3B9A872B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0x15803FEC3B9A872B(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SET_WARNING_MESSAGE_WITH_HEADER_UNK
	static auto nh_0x38B55259C2E078ED = rage::scrEngine::GetNativeHandler(0x38B55259C2E078ED);
	rage::scrEngine::RegisterNativeHandler(0x38B55259C2E078ED, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		NullifyAny(cxt->GetArgument<void*>(6)); // Any* p6
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		NullifyAny(cxt->GetArgument<void*>(7)); // Any* p7
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0x38B55259C2E078ED(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_WEAPON_DAMAGE_MODIFIER
	static auto nh_0x4757F00BC6323CFE = rage::scrEngine::GetNativeHandler(0x4757F00BC6323CFE);
	rage::scrEngine::RegisterNativeHandler(0x4757F00BC6323CFE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4757F00BC6323CFE(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_WEAPON_EXPLOSION_RADIUS_MULTIPLIER
	static auto nh_0x4AE5AC8B852D642C = rage::scrEngine::GetNativeHandler(0x4AE5AC8B852D642C);
	rage::scrEngine::RegisterNativeHandler(0x4AE5AC8B852D642C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4AE5AC8B852D642C(cxt);
		NullifyVoid(cxt);
	});
	        
	// WEAPON/_SET_WEAPON_OBJECT_LIVERY_COLOR
	static auto nh_0x5DA825A85D0EA6E6 = rage::scrEngine::GetNativeHandler(0x5DA825A85D0EA6E6);
	rage::scrEngine::RegisterNativeHandler(0x5DA825A85D0EA6E6, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x5DA825A85D0EA6E6(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_SET_WEATHER_TYPE_TRANSITION
	static auto nh_0x578C752848ECFA0C = rage::scrEngine::GetNativeHandler(0x578C752848ECFA0C);
	rage::scrEngine::RegisterNativeHandler(0x578C752848ECFA0C, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x578C752848ECFA0C(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SHOW_HAS_COMPLETED_INDICATOR_ON_BLIP
	static auto nh_0xCAC2031EBF79B1A8 = rage::scrEngine::GetNativeHandler(0xCAC2031EBF79B1A8);
	rage::scrEngine::RegisterNativeHandler(0xCAC2031EBF79B1A8, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xCAC2031EBF79B1A8(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME
	static auto nh_0x4F38DCA127DAAEA2 = rage::scrEngine::GetNativeHandler(0x4F38DCA127DAAEA2);
	rage::scrEngine::RegisterNativeHandler(0x4F38DCA127DAAEA2, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4F38DCA127DAAEA2(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_SHOW_SIGNIN_UI
	static auto nh_0x60E892BA4F5BDCA4 = rage::scrEngine::GetNativeHandler(0x60E892BA4F5BDCA4);
	rage::scrEngine::RegisterNativeHandler(0x60E892BA4F5BDCA4, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x60E892BA4F5BDCA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE (result cleaner only)
	AddResultCleaner(0x9ECA15ADFE141431, ResultCleaner<bool>);

	// AUDIO/_SOUND_VEHICLE_HORN_THIS_FRAME
	static auto nh_0x9C11908013EA4715 = rage::scrEngine::GetNativeHandler(0x9C11908013EA4715);
	rage::scrEngine::RegisterNativeHandler(0x9C11908013EA4715, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x9C11908013EA4715(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SPECIAL_ABILITY_ACTIVATE
	static auto nh_0x821FDC827D6F4090 = rage::scrEngine::GetNativeHandler(0x821FDC827D6F4090);
	rage::scrEngine::RegisterNativeHandler(0x821FDC827D6F4090, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x821FDC827D6F4090(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_SPECIAL_ABILITY_DEPLETE
	static auto nh_0x17F7471EACA78290 = rage::scrEngine::GetNativeHandler(0x17F7471EACA78290);
	rage::scrEngine::RegisterNativeHandler(0x17F7471EACA78290, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x17F7471EACA78290(cxt);
		NullifyVoid(cxt);
	});
	        
	// MISC/_START_BENCHMARK_RECORDING
	static auto nh_0x92790862E36C2ADA = rage::scrEngine::GetNativeHandler(0x92790862E36C2ADA);
	rage::scrEngine::RegisterNativeHandler(0x92790862E36C2ADA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92790862E36C2ADA(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE
	static auto nh_0x02B1F2A72E0F5325 = rage::scrEngine::GetNativeHandler(0x02B1F2A72E0F5325);
	rage::scrEngine::RegisterNativeHandler(0x02B1F2A72E0F5325, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x02B1F2A72E0F5325(cxt);
	});
	        
	AddResultCleaner(0x02B1F2A72E0F5325, ResultCleaner<bool>);

	// RECORDING/_START_RECORDING
	static auto nh_0xC3AC2FFF9612AC81 = rage::scrEngine::GetNativeHandler(0xC3AC2FFF9612AC81);
	rage::scrEngine::RegisterNativeHandler(0xC3AC2FFF9612AC81, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC3AC2FFF9612AC81(cxt);
		NullifyVoid(cxt);
	});
	        
	// SHAPETEST/_START_SHAPE_TEST_SURROUNDING_COORDS
	static auto nh_0xFF6BE494C7987F34 = rage::scrEngine::GetNativeHandler(0xFF6BE494C7987F34);
	rage::scrEngine::RegisterNativeHandler(0xFF6BE494C7987F34, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xFF6BE494C7987F34(cxt);
	});
	        
	AddResultCleaner(0xFF6BE494C7987F34, ResultCleaner<int>);

	// STATS/_STAT_GET_CANCEL_SAVE_MIGRATION_STATUS (result cleaner only)
	AddResultCleaner(0x567384DFA67029E6, ResultCleaner<int>);

	// STATS/_STAT_GET_PACKED_BOOL_MASK (result cleaner only)
	AddResultCleaner(0xF4D8E7AC2A27758C, ResultCleaner<int>);

	// STATS/_STAT_GET_PACKED_INT_MASK (result cleaner only)
	AddResultCleaner(0x94F12ABF9C79E339, ResultCleaner<int>);

	// STATS/_STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS
	static auto nh_0xCE5AA445ABA8DEE0 = rage::scrEngine::GetNativeHandler(0xCE5AA445ABA8DEE0);
	rage::scrEngine::RegisterNativeHandler(0xCE5AA445ABA8DEE0, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xCE5AA445ABA8DEE0(cxt);
	});
	        
	AddResultCleaner(0xCE5AA445ABA8DEE0, ResultCleaner<int>);

	// STATS/_STAT_MIGRATE_SAVE
	static auto nh_0xA5C80D8E768A9E66 = rage::scrEngine::GetNativeHandler(0xA5C80D8E768A9E66);
	rage::scrEngine::RegisterNativeHandler(0xA5C80D8E768A9E66, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0xA5C80D8E768A9E66(cxt);
	});
	        
	AddResultCleaner(0xA5C80D8E768A9E66, ResultCleaner<bool>);

	// STATS/_STAT_SAVE_MIGRATION_CANCEL (result cleaner only)
	AddResultCleaner(0x4FEF53183C3C6414, ResultCleaner<bool>);

	// STATS/_STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK
	static auto nh_0x3270F67EED31FBC1 = rage::scrEngine::GetNativeHandler(0x3270F67EED31FBC1);
	rage::scrEngine::RegisterNativeHandler(0x3270F67EED31FBC1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x3270F67EED31FBC1(cxt);
	});
	        
	AddResultCleaner(0x3270F67EED31FBC1, ResultCleaner<bool>);

	// MISC/_STOP_BENCHMARK_RECORDING
	static auto nh_0xC7DB36C24634F52B = rage::scrEngine::GetNativeHandler(0xC7DB36C24634F52B);
	rage::scrEngine::RegisterNativeHandler(0xC7DB36C24634F52B, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xC7DB36C24634F52B(cxt);
		NullifyVoid(cxt);
	});
	        
	// GRAPHICS/_STOP_BINK_MOVIE
	static auto nh_0x63606A61DE68898A = rage::scrEngine::GetNativeHandler(0x63606A61DE68898A);
	rage::scrEngine::RegisterNativeHandler(0x63606A61DE68898A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x63606A61DE68898A(cxt);
		NullifyVoid(cxt);
	});
	        
	// VEHICLE/_STOP_BRING_VEHICLE_TO_HALT
	static auto nh_0x7C06330BFDDA182E = rage::scrEngine::GetNativeHandler(0x7C06330BFDDA182E);
	rage::scrEngine::RegisterNativeHandler(0x7C06330BFDDA182E, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x7C06330BFDDA182E(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/_STOP_RECORDING_AND_DISCARD_CLIP
	static auto nh_0x88BB3507ED41A240 = rage::scrEngine::GetNativeHandler(0x88BB3507ED41A240);
	rage::scrEngine::RegisterNativeHandler(0x88BB3507ED41A240, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x88BB3507ED41A240(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/_STOP_RECORDING_AND_SAVE_CLIP
	static auto nh_0x071A5197D6AFC8B3 = rage::scrEngine::GetNativeHandler(0x071A5197D6AFC8B3);
	rage::scrEngine::RegisterNativeHandler(0x071A5197D6AFC8B3, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x071A5197D6AFC8B3(cxt);
		NullifyVoid(cxt);
	});
	        
	// RECORDING/_STOP_RECORDING_THIS_FRAME
	static auto nh_0xEB2D525B57F42B40 = rage::scrEngine::GetNativeHandler(0xEB2D525B57F42B40);
	rage::scrEngine::RegisterNativeHandler(0xEB2D525B57F42B40, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xEB2D525B57F42B40(cxt);
		NullifyVoid(cxt);
	});
	        
	// PAD/_SWITCH_TO_INPUT_MAPPING_SCHEME
	static auto nh_0x3D42B92563939375 = rage::scrEngine::GetNativeHandler(0x3D42B92563939375);
	rage::scrEngine::RegisterNativeHandler(0x3D42B92563939375, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x3D42B92563939375(cxt);
	});
	        
	AddResultCleaner(0x3D42B92563939375, ResultCleaner<bool>);

	// PAD/_SWITCH_TO_INPUT_MAPPING_SCHEME_2
	static auto nh_0x4683149ED1DDE7A1 = rage::scrEngine::GetNativeHandler(0x4683149ED1DDE7A1);
	rage::scrEngine::RegisterNativeHandler(0x4683149ED1DDE7A1, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		nh_0x4683149ED1DDE7A1(cxt);
	});
	        
	AddResultCleaner(0x4683149ED1DDE7A1, ResultCleaner<bool>);

	// TASK/_TASK_AGITATED_ACTION
	static auto nh_0x19D1B791CB3670FE = rage::scrEngine::GetNativeHandler(0x19D1B791CB3670FE);
	rage::scrEngine::RegisterNativeHandler(0x19D1B791CB3670FE, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x19D1B791CB3670FE(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_HELI_ESCORT_HELI
	static auto nh_0xB385523325077210 = rage::scrEngine::GetNativeHandler(0xB385523325077210);
	rage::scrEngine::RegisterNativeHandler(0xB385523325077210, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xB385523325077210(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS
	static auto nh_0x3D45B0B355C5E0C9 = rage::scrEngine::GetNativeHandler(0x3D45B0B355C5E0C9);
	rage::scrEngine::RegisterNativeHandler(0x3D45B0B355C5E0C9, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		NullifyAny(cxt->GetArgument<void*>(2)); // Any* data
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0x3D45B0B355C5E0C9(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_PERFORM_SEQUENCE_LOCALLY
	static auto nh_0x8C33220C8D78CA0D = rage::scrEngine::GetNativeHandler(0x8C33220C8D78CA0D);
	rage::scrEngine::RegisterNativeHandler(0x8C33220C8D78CA0D, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x8C33220C8D78CA0D(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_PLANE_GOTO_PRECISE_VTOL
	static auto nh_0xF7F9DCCA89E7505B = rage::scrEngine::GetNativeHandler(0xF7F9DCCA89E7505B);
	rage::scrEngine::RegisterNativeHandler(0xF7F9DCCA89E7505B, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(4))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(6))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(7))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(8))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		nh_0xF7F9DCCA89E7505B(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_RAPPEL_DOWN_WALL
	static auto nh_0xEAF66ACDDC794793 = rage::scrEngine::GetNativeHandler(0xEAF66ACDDC794793);
	rage::scrEngine::RegisterNativeHandler(0xEAF66ACDDC794793, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(9))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(10))) { return; }
		nh_0xEAF66ACDDC794793(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_SUBMARINE_GOTO_AND_STOP
	static auto nh_0xC22B40579A498CA4 = rage::scrEngine::GetNativeHandler(0xC22B40579A498CA4);
	rage::scrEngine::RegisterNativeHandler(0xC22B40579A498CA4, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(5))) { return; }
		nh_0xC22B40579A498CA4(cxt);
		NullifyVoid(cxt);
	});
	        
	// TASK/_TASK_WANDER_SPECIFIC
	static auto nh_0x6919A2F136426098 = rage::scrEngine::GetNativeHandler(0x6919A2F136426098);
	rage::scrEngine::RegisterNativeHandler(0x6919A2F136426098, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(0))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		if (!ValidateArg(cxt->GetArgument<void*>(3))) { return; }
		nh_0x6919A2F136426098(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_DISABLE_LOADING_SCREEN_TIPS
	static auto nh_0x32888337579A5970 = rage::scrEngine::GetNativeHandler(0x32888337579A5970);
	rage::scrEngine::RegisterNativeHandler(0x32888337579A5970, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x32888337579A5970(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_DISPLAY_LOADING_SCREEN_TIPS
	static auto nh_0x15CFA549788D35EF = rage::scrEngine::GetNativeHandler(0x15CFA549788D35EF);
	rage::scrEngine::RegisterNativeHandler(0x15CFA549788D35EF, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x15CFA549788D35EF(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_SET_ANIMPOSTFX_COLOR
	static auto nh_0x17430B918701C342 = rage::scrEngine::GetNativeHandler(0x17430B918701C342);
	rage::scrEngine::RegisterNativeHandler(0x17430B918701C342, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17430B918701C342(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_SET_ANIMPOSTFX_COUNT
	static auto nh_0x17AD8C9706BDD88A = rage::scrEngine::GetNativeHandler(0x17AD8C9706BDD88A);
	rage::scrEngine::RegisterNativeHandler(0x17AD8C9706BDD88A, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x17AD8C9706BDD88A(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_SET_ANIMPOSTFX_SOUND
	static auto nh_0x4A0C7C9BB10ABB36 = rage::scrEngine::GetNativeHandler(0x4A0C7C9BB10ABB36);
	rage::scrEngine::RegisterNativeHandler(0x4A0C7C9BB10ABB36, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x4A0C7C9BB10ABB36(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_SET_FLUSH_ANIMPOSTFX
	static auto nh_0xBAE4F9B97CD43B30 = rage::scrEngine::GetNativeHandler(0xBAE4F9B97CD43B30);
	rage::scrEngine::RegisterNativeHandler(0xBAE4F9B97CD43B30, [](rage::scrNativeCallContext* cxt)
	{
		nh_0xBAE4F9B97CD43B30(cxt);
		NullifyVoid(cxt);
	});
	        
	// HUD/_THEFEED_SET_NEXT_POST_BACKGROUND_COLOR
	static auto nh_0x92F0DA1E27DB96DC = rage::scrEngine::GetNativeHandler(0x92F0DA1E27DB96DC);
	rage::scrEngine::RegisterNativeHandler(0x92F0DA1E27DB96DC, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x92F0DA1E27DB96DC(cxt);
		NullifyVoid(cxt);
	});
	        
	// OBJECT/_TOGGLE_USE_PICKUPS_FOR_PLAYER
	static auto nh_0x616093EC6B139DD9 = rage::scrEngine::GetNativeHandler(0x616093EC6B139DD9);
	rage::scrEngine::RegisterNativeHandler(0x616093EC6B139DD9, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x616093EC6B139DD9(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_TRIGGER_SCRIPT_CRC_CHECK_ON_PLAYER (result cleaner only)
	AddResultCleaner(0x46FB3ED415C7641C, ResultCleaner<bool>);

	// SCRIPT/_TRIGGER_SCRIPT_EVENT_2
	static auto nh_0xA40CC53DF8E50837 = rage::scrEngine::GetNativeHandler(0xA40CC53DF8E50837);
	rage::scrEngine::RegisterNativeHandler(0xA40CC53DF8E50837, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(1))) { return; }
		nh_0xA40CC53DF8E50837(cxt);
		NullifyVoid(cxt);
	});
	        
	// AUDIO/_TRIGGER_SIREN
	static auto nh_0x66C3FB05206041BA = rage::scrEngine::GetNativeHandler(0x66C3FB05206041BA);
	rage::scrEngine::RegisterNativeHandler(0x66C3FB05206041BA, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x66C3FB05206041BA(cxt);
		NullifyVoid(cxt);
	});
	        
	// NETWORK/_UGC_QUERY_RECENTLY_CREATED_CONTENT
	static auto nh_0x6D4CB481FAC835E8 = rage::scrEngine::GetNativeHandler(0x6D4CB481FAC835E8);
	rage::scrEngine::RegisterNativeHandler(0x6D4CB481FAC835E8, [](rage::scrNativeCallContext* cxt)
	{
		if (!ValidateArg(cxt->GetArgument<void*>(2))) { return; }
		nh_0x6D4CB481FAC835E8(cxt);
	});
	        
	AddResultCleaner(0x6D4CB481FAC835E8, ResultCleaner<bool>);

	// MISC/_UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE (result cleaner only)
	AddResultCleaner(0xEA2F2061875EED90, ResultCleaner<bool>);

	// FILES/_UNLOAD_CONTENT_CHANGE_SET_GROUP
	static auto nh_0x3C1978285B036B25 = rage::scrEngine::GetNativeHandler(0x3C1978285B036B25);
	rage::scrEngine::RegisterNativeHandler(0x3C1978285B036B25, [](rage::scrNativeCallContext* cxt)
	{
		nh_0x3C1978285B036B25(cxt);
		NullifyVoid(cxt);
	});
	        
	// PLAYER/_UPDATE_PLAYER_TELEPORT (result cleaner only)
	AddResultCleaner(0xE23D5873C2394C61, ResultCleaner<bool>);

}
